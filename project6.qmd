---
title: "Project 6"
description: |
  Final updates
format: html
---


The plan for project 6 is to update your website (and projects within) so that it puts your best foot forward for anyone who might be looking at it. That is, you should remove all of the information about the class and make it a website about you and your work more generally.

## Tasks

Project 6 has three main tasks:

1. The first is to re-do all the previous projects. Not only should you address all the issues that have been previously brought to light (see comments on projects on Canvas), but you should also do things like removing the warnings & messages.  Make sure that all data and ideas have been properly cited.  Rewrite any code so that it is actually **your** work (instead of, for example, copied directly from ChatGPT). Give all graphs proper captions. Explain your work.  You will write up (and turn in, separate from your website) a document explaining what changes and updates you've made.

2. The second thing to do is to prepare a ~5 min presentation on some aspect of your project.  It can be about any aspect of the project (or all aspects of the project), and your presentation should be as if to a client about the work.  You'll create the presentation in Quarto (formatted as revealjs) rendered to html.  The presentation will be either on Thursday May 8th during reading days (9am-noon) or during our regularly scheduled final time, Tuesday May 13th 9am-noon (your choice).

3. Write up a document detailing the changes you have made to your website.

## Timeline

Project 6 must be submitted on Canvas (not Gradescope) by **11:59 PM on Tuesday, May 13, 2025**.  To Canvas submit two things:  1. the URL of your overall website, 2. a document detailing the changes you have made.

Additionally, you will give a ~5 min presentation to the class on some aspect(s) of your project.  You can describe one of the projects, the creation of the website, the entire project overall, or any other aspect of the project.  (You will present either on the Thursday May 8th during reading days (9am-noon) or during our regularly scheduled final time, Tuesday May 13th 9am-noon.)

## Presentation

Your slides should be created in Quarto (formatted as revealjs) and rendered to html.  They should be linked to the website. A new slide is created by a second level header: `##`.  The YAML for the presentation slides might look like this:

```
---
title: "title of presentation"
author: "your name"
subtitle: "date of presentation"
format:
  revealjs:
    scrollable: true
    slide-number: true
    show-slide-number: all
    embed-resources: true
execute:
  echo: true
  warning: false
  message: false
---
```

The presentation should be on the website (i.e., it should have a URL). Just like with each of the previous projects, open the .RProject from the appropriate folder, then from  the pull down menus click on `File -> New File -> Quarto Presentation`. Link the project from within "_quarto.yml".

## Hints

IMPORTANT: you want your website to represent **your** knowledge.  If all the code on the website is from ChatGPT, you should go back and re-write the code so that it actually represents what you have learned in the class.

  * clean up the entire website
     - no warnings or messages
     - all plots with good labeling
     - alt text on all plots (make your website accessible! <a href = "https://www.apreshill.com/blog/2022-04-we-dont-talk-about-quarto/#what-youll-like" target = "_blank">how to add alt text</a>)
     - good narrative descriptions 
     - adding a plot when you introduce the data to introduce the reader to the data / context  (e.g., if you are doing a permutation test, start by providing a visualization of the data / variables of interest before you do the test so that the reader understands your context.)
     - add comments within the code to help the reader navigate what you are doing.
     - making sure that all work, data sources, etc. are documented appropriately
     
  * create a corresponding document (text, Word, Google doc, pdf, etc.) describing (in enough detail to receive credit!) all of the changes you've made from the original set of projects.
  
  * on the navigation bar at the top of your website, don't call your analyses "my website" or "project 2", use descriptive names that will make sense after the semester is over (to someone looking at your website who doesn't know about our class).
  
  * make sure that your citations are full. A hyperlink is not sufficient. That is, provide more than the TidyTuesday URL (include authors, title, publication source, year, etc.). Who collected the data? Why? What is the original source of the information? To reference data, you are very likely to need **two** citations: one for where *you* got the data, and one for where *they* got the data.
  
  * provide a narrative setting up the analysis.  Don't just start with code.
  
  * use exploratory data analysis to set up the example.  That is, show a plot / table of the original data.  Explain the variables to your reader.
  
  * use the tidyverse.  If you have gotten code from a different place (which uses `$` for example), translate the code into a tidy pipeline.


## Extra credit

You may earn one extra credit point toward the projects for doing something new / expanding extensively on one of the previous projects. To earn extra credit, please give a full explanation for what you did.  Stating "I added regular expressions" is not sufficient for me to get a sense for what you did.  Feel free to include before and after images in your project write-up.

Some examples include:

   - add extensive regular expressions to the project on string data
   - add regular expressions to the SQL project (regular expressions in SQL are slightly different)
   - add a shiny or plotly example to the graphs from TidyTuesday
   - expand on the website extensively in new ways. For example, doing most of the following: adding a resume, including multiple new tabs to highlight other projects you've worked on, changing the format (colors, fonts) of the website, etc.

  
  

