[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Schedule",
    "section": "",
    "text": "Here’s your roadmap for the semester! Each day, follow the general process outlined below:\n\nEnjoy the notes / text \nAttend class, review the  worksheet and solutions if you have any questions after working on it during class.  Slides from class are linked below.\nDiscuss the reflection questions  and ethics considerations  (see the  class notes) with your classmates and professor.\nThe textbooks are  Modern Data Science with R (MDSR), 3rd edition by Baumer, Kaplan, and Horton and  R for Data Science (R4DS), 2nd edition by Wickham, Çetinkaya-Rundel, and Grolemund.\nHomework assignments are found at the GitHub course organization. Due dates are provided on each assignment (roughly every other week). See the course GitHub page for more information on how to find, complete, and submit assignments.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndate\ntopic\nclass materials\ndue dates\nresources\n\n\n\n\nWeek 1  8.25.25\nintro +  R + RStudio +  GitHub\n Introduction    MDSR Prologue   Why Git? + monsters    Introduction   WS 1 - DS project\n\n NSSD - Compromised Shoe Situation\n\n\nWeek 2  9.1.25\nData Viz\n  R4DS Visualize   graphics   ggplot    Data Viz   WS 2 - ggplot\n HW 1 - due 9.3.25\n Tufte. 1997. Visual and Statistical Thinking: Displays of Evidence for Making Decisions\n\n\nWeek 3  9.8.25\nData Viz\n  R4DS Visualize   graphics   ggplot    Data Viz    Data Verbs   WS 3 - Tufte   WS 4 - Data Verbs\n HW 2 - due 9.10.25\n\n\n\nWeek 4  9.15.25\nData Wrangling\n  R4DS Transform   wrangling    Pivot + Join   WS 5 - Join\n HW 3 - due 9.17.25   Quiz 1 9.17.25\n\n\n\nWeek 5  9.22.25\nData Types\n  R4DS Factors    R4DS Strings   Text analysis   Data Types   WS 6 - Strings   WS 7 - Factors\n Project 1 - due 9.24.25\n\n\n\nWeek 6  9.29.25\nRegular Expressions\n  R4DS Regular expressions   Regular expressions   Regular expressions\n HW 4 - due 10.1.25   Quiz 2 10.1.25\n\n\n\nWeek 7  10.6.25\nfunctions +  iteration\n  R4DS Fuctions    R4DS Iteration   Functions + Iteration   functions + iteration\n Project 2 - due 10.8.25\n\n\n\nWeek 8  10.13.25\ncode review +  reprex\n  reproducible examples    Tidyverse style guide   Reproducible examples   help me help you\n HW 5 - due 10.15.25\n\n\n\nWeek 9  10.20.25\niterations +  simulations\n  MDSR Simulations   Iterations   Iterations\n HW 6 - due 10.22.25   Quiz 3 10.22.25\n\n\n\nWeek 10  10.27.25\npermutation tests\n Permutation tests   Permutation tests   Data Science Ethics\n Project 3 - due 10.29.25\n\n\n\nWeek 11  11.3.25\nweb scraping\n R4DS Web scraping   Web scraping   Web scraping\n HW 7 - due 11.5.25   Quiz 4 11.5.25\n\n\n\nWeek 12  11.10.25\nSQL\n R4DS Databases   MDSR Database querying   SQL   SQL DBMS   SQL statements\n Project 4 - due 11.12.25\n\n\n\nWeek 13  11.17.25\nSQL\n R4DS Databases   MDSR Database querying   SQL joins   SQL joins\n HW 8 - due 11.19.25   Quiz 5 11.19.25\n\n\n\nWeek 14  11.24.25\nShiny\n Matering Shiny   MDSR Interactive web apps with Shiny   Shiny   Shiny\n Project 5 - due 11.26.25\n\n\n\nWeek 15  12.1.25\n\n Fin\n Quiz 6 12.3.25\npresentations (?) 12.5.25, 9am - noon\n\n\nWeek 16  12.10.25\n\n\n Project 6 - due 12.10.25\npresentations (?) 12.10.25, 9am - noon\n\n\n\n\n\n\n\n\n\n\nReuseCC-BY-SA-4.0"
  },
  {
    "objectID": "clicker_study.html",
    "href": "clicker_study.html",
    "title": "Clicker Questions for DS2 - Foundations of Data Science",
    "section": "",
    "text": "to go along with \nModern Data Science with R, 3rd edition by Baumer, Kaplan, and Horton\nR for Data Science, 2nd edition by Wickham, Çetinkaya-Rundel, and Grolemund\n\n\n\n\nR / R Studio / Quarto1\n\nall good\nstarted, progress is slow and steady\nstarted, very stuck\nhaven’t started yet\nwhat do you mean by “R”?\n\n\n\n\nGit / GitHub2\n\nall good\nstarted, progress is slow and steady\nstarted, very stuck\nhaven’t started yet\nwhat do you mean by “Git”?\n\n\n\n\nWhere can I get feedback on my HW assignments / quizzes?3\n\nprof will return paper versions\non Gradescope\non Canvas\non GitHub\n\n\n\n\nWhich of the following includes talking to the remote version of GitHub?4\n\nchanging your name (updating the YAML)\ncommitting the file(s)\npushing the file(s)\nsome of the above\nall of the above\n\n\n\n\nWhat is the error?5\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup2 &lt;-- \"Hello to you!\"\n\n\n\nWhat is the error?6\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\n3shup &lt;-  \"Hello to you!\"\n\n\n\nWhat is the error?7\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup4 &lt;-  \"Hello to you!\n\n\n\nWhat is the error?8\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup5 &lt;-  date()\n\n\n\nWhat is the error?9\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup6 &lt;-  sqrt 10\n\n\n\nDo you keep a calendar / schedule / planner?10\n\nYes\nNo\n\n\n\n\nDo you keep a calendar / schedule / planner? If you answered “Yes” …11\n\nYes, on Google Calendar\nYes, on Calendar for macOS\nYes, on Outlook for Windows\nYes, in some other app\nYes, by hand\n\n\n\n\nWhere should I put things I’ve created for the HW (e.g., data, .ics file, etc.)12\n\nUpload into remote GitHub directory\nIn the local folder which also has the R project\nIn my Downloads\nSomewhere on my Desktop\nIn my Home directory\n\n\n\n\nThe goal of making a figure is…13\n\nTo draw attention to your work.\nTo facilitate comparisons.\nTo provide as much information as possible.\n\n\n\n\nA good reason to make a particular choice of a graph is:14\n\nBecause the journal / field has particular expectations for how the data are presented.\nBecause some variables naturally fit better on some graphs (e.g., numbers on scatter plots).\nBecause that graphic displays the message you want as optimally as possible.\n\n\n\n\nWhat are the visual cues on this plot?15\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat are the visual cues on this plot?16\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat are the visual cues on this plot?17\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhy are the points orange?18\n\nR translates “navy” into orange.\ncolor must be specified in geom_point()\ncolor must be specified outside the aes() function\nthe default plot color is orange\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78, \n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point() +          \n  labs(title = \"US Births in 1978\")\n\n\n\n\n\nWhy are the dots blue and the lines colored?19\n\ndot color is given as “navy”, line color is given as wday.\nboth colors are specified in the ggplot() function.\ndot coloring takes precedence over line coloring.\nline coloring takes precedence over dot coloring.\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting vs. Mapping. If I want information to be passed to all data points (not variable):20\n\nmap the information inside the aes() function.\nset the information outside the aes() function\n\n\n\n\nThe Snow figure was most successful at:21\n\nmaking the data stand out\nfacilitating comparison\nputting the work in context\nsimplifying the story\n\n\n\n\nThe Challenger figure(s) was(were) least successful at:22\n\nmaking the data stand out\nfacilitating comparison\nputting the work in context\nsimplifying the story\n\n\n\n\nThe biggest difference between Snow and the Challenger was:23\n\nThe amount of information portrayed.\nOne was better at displaying cause.\nOne showed the relevant comparison better.\nOne was more artistic.\n\n\n\n\nCaffeine and Calories. What was the biggest concern over the average value axes?24\n\nIt isn’t at the origin.\nThey should have used all the data possible to find averages.\nThere wasn’t a random sample.\nThere wasn’t a label explaining why the axes were where they were.\n\n\n\n\nWhy is there no y designation in the aes() function for the geom_bar() geometry?25\n\nIt is outside the aes() function.\nThere is a default value for what y should be when not specified.\ny is specified in ggplot().\nThe job of a bar plot is to count the number of instances.\nThe y variable is the same as the x variable.\n\n\n\n\nWhat is the difference between fill = children and position = \"fill\"?26\n\nfill = children colors and position = \"fill\" changes the y-axis\nfill = children changes the y-axis and position = \"fill\" colors\nfill = children goes in the aes and position = \"fill\" goes outside the aes\nfill = children goes outside the aes and position = \"fill\" goes inside the aes\nfill = children and position = \"fill\" are two different ways to write the same thing.\n\n\n\n\nWhat is the difference between geom_bar() and geom_histogram()?27\n\nThey are the different names for the same function.\ngeom_bar() is for numbers and geom_histogram() is for categorical variables.\ngeom_bar() is for categorical variables and geom_histogram() is for nubmers.\ngeom_bar() produces counts and geom_histogram() produces percentages.\ngeom_bar() produces percentages and geom_histogram() produces counts.\n\n\n\n\nWhich data represents the ideal format for ggplot2 and dplyr?28\n\n\n\n\n\n\n\ntable a\n\n\nyear\nAlgeria\nBrazil\nColumbia\n\n\n\n\n2000\n7\n12\n16\n\n\n2001\n9\n14\n18\n\n\n\n\n\n\n\n\n\n\n\n\n\ntable b\n\n\ncountry\nY2000\nY2001\n\n\n\n\nAlgeria\n7\n9\n\n\nBrazil\n12\n14\n\n\nColumbia\n16\n18\n\n\n\n\n\n\n\n\n\n\n\n\n\ntable c\n\n\ncountry\nyear\nvalue\n\n\n\n\nAlgeria\n2000\n7\n\n\nAlgeria\n2001\n9\n\n\nBrazil\n2000\n12\n\n\nBrazil\n2001\n14\n\n\nColumbia\n2000\n16\n\n\nColumbia\n2001\n18\n\n\n\n\n\n\n\n\n\nWhat is wrong with the following code?29\n\nshould only be one =\nBakery should be upper case\ntype should not be in quotes\nuse mutate instead of filter\nstarbucks in wrong place\n\n\n\nResult &lt;- |&gt; filter(starbucks,\n        type == \"bakery\")\n\n\n\nEach of the statements except one will accomplish the same calculation. Which one does not match?30\n\n\n#(a) \nstarbucks |&gt; \n  group_by(type) |&gt; \n  summarize(average_fat = mean(fat))\n\n#(b) \ngroup_by(starbucks, type) |&gt; \n  summarize(average_fat = mean(fat))\n\n#(c)\ngroup_by(starbucks, type) |&gt; \n  summarize(average_fat = sum(fat))\n\n#(d)\ntemp &lt;- group_by(starbucks, type)\n\nsummarize(temp, average_fat = mean(fat))\n\n#(e)\nsummarize(group_by(starbucks, type), \n          average_fat = mean(fat))\n\n\n\nFill in Q1.31\n\nfilter()\narrange()\nselect()\nmutate()\ngroup_by()\n\n\n\nresult &lt;- lego_sample |&gt;\n  Q1(!is.na(minifigures)) |&gt; \n  # keep only those with minifigures\n  group_by(Q2, Q2) |&gt; \n  summarize(total = Q3)\n\n\n\nFill in Q2.32\n\n(theme, price)\n(theme, year)\n(year, price)\n(pieces, year)\n(pieces, price)\n\n\n\nresult &lt;- lego_sample |&gt;\n  Q1(!is.na(minifigures)) |&gt; \n  group_by(Q2, Q2) |&gt; \n  # for each theme and year\n  summarize(total = Q3)\n\n\n\nFill in Q3.33\n\nn_distinct(pieces)\nn_distinct(price)\nsum(pieces)\nsum(pages)\nmean(pieces)\n\n\n\nresult &lt;- lego_sample |&gt;\n  Q1(!is.na(minifigures)) |&gt; \n  group_by(Q2, Q2) |&gt; \n  summarize(ave_pieces = Q3)\n  # average number of pieces (each theme, each year)\n\n\n\nRunning the code.34\n\n\nlibrary(openintro)\nlego_sample |&gt;\n  filter(!is.na(minifigures)) |&gt; \n  # keep only those with minifigures\n  group_by(theme, year) |&gt; \n  # for each theme for each year\n  summarize(ave_pieces = mean(pieces))\n\n# A tibble: 9 × 3\n# Groups:   theme [3]\n  theme    year ave_pieces\n  &lt;chr&gt;   &lt;dbl&gt;      &lt;dbl&gt;\n1 City     2018      189. \n2 City     2019      257. \n3 City     2020      349  \n4 DUPLO®   2018       50.5\n5 DUPLO®   2019       32.5\n6 DUPLO®   2020       45.8\n7 Friends  2018      354. \n8 Friends  2019      259. \n9 Friends  2020      250. \n\n\n\n#(a)\nstarbucks |&gt; \n  group_by(type) |&gt; \n  summarize(average_fat = mean(fat))\n\n# A tibble: 7 × 2\n  type          average_fat\n  &lt;fct&gt;               &lt;dbl&gt;\n1 bakery              14.6 \n2 bistro box          18.4 \n3 hot breakfast       13.7 \n4 parfait              6.5 \n5 petite               9.33\n6 salad                0   \n7 sandwich            14.7 \n\n#(b) \ngroup_by(starbucks, type) |&gt; \n  summarize(average_fat = mean(fat))\n\n# A tibble: 7 × 2\n  type          average_fat\n  &lt;fct&gt;               &lt;dbl&gt;\n1 bakery              14.6 \n2 bistro box          18.4 \n3 hot breakfast       13.7 \n4 parfait              6.5 \n5 petite               9.33\n6 salad                0   \n7 sandwich            14.7 \n\n#(c)\ngroup_by(starbucks, type) |&gt; \n  summarize(average_fat = sum(fat))\n\n# A tibble: 7 × 2\n  type          average_fat\n  &lt;fct&gt;               &lt;dbl&gt;\n1 bakery              597  \n2 bistro box          147  \n3 hot breakfast       110. \n4 parfait              19.5\n5 petite               84  \n6 salad                 0  \n7 sandwich            103  \n\n#(d)\ntemp &lt;- group_by(starbucks, type)\n\nsummarize(temp, average_fat = mean(fat))\n\n# A tibble: 7 × 2\n  type          average_fat\n  &lt;fct&gt;               &lt;dbl&gt;\n1 bakery              14.6 \n2 bistro box          18.4 \n3 hot breakfast       13.7 \n4 parfait              6.5 \n5 petite               9.33\n6 salad                0   \n7 sandwich            14.7 \n\n#(e)\nsummarize(group_by(starbucks, type), \n          average_fat = mean(fat))\n\n# A tibble: 7 × 2\n  type          average_fat\n  &lt;fct&gt;               &lt;dbl&gt;\n1 bakery              14.6 \n2 bistro box          18.4 \n3 hot breakfast       13.7 \n4 parfait              6.5 \n5 petite               9.33\n6 salad                0   \n7 sandwich            14.7 \n\n\n\n\nWhere can I get feedback on my HW assignments / quizzes?35\n\nprof will return paper versions\non Gradescope\non Canvas\non GitHub\n\n\n\n\nWhere can I get feedback on my projects?36\n\nprof will return paper versions\non Gradescope\non Canvas\non GitHub\n\n\n\n\nFill in Q1.37\n\ngdp\nyear\ngdpval\ncountry\n–country\n\n\n\nGDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n       pivot_longer(cols = Q1, \n                    names_to = Q2, \n                    values_to = Q3)\n\n\n\nFill in Q2.38\n\ngdp\nyear\ngdpval\ncountry\n–country\n\n\n\nGDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n       pivot_longer(cols = Q1, \n                    names_to = Q2, \n                    values_to = Q3)\n\n\n\nFill in Q3.39\n\ngdp\nyear\ngdpval\ncountry\n–country\n\n\n\nGDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n       pivot_longer(cols = Q1, \n                    names_to = Q2, \n                    values_to = Q3)\n\n\n\nYou’d like to use the data to make a plot with Midterm score on the x-axis and Final score on the y-axis using the following ggplot() code. Which data frame should you use?40\n\nuse raw data\nuse pivot_wider() on raw data\nuse pivot_longer() on raw data\n\n\n\nggplot(___, aes(x = ___, y = ___, color = ___)) + \n  geom_point()\n\n\n\n# A tibble: 4 × 3\n  student test    score\n  &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;\n1 Alice   Midterm    85\n2 Alice   Final      90\n3 Bob     Midterm    78\n4 Bob     Final      82\n\n\n\n\ngrades |&gt; \n  pivot_wider(names_from = test, values_from = score)\n\n# A tibble: 2 × 3\n  student Midterm Final\n  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 Alice        85    90\n2 Bob          78    82\n\n\n\ngrades |&gt; \n  pivot_wider(names_from = test, values_from = score) |&gt; \n  ggplot(aes(x = Midterm, y = Final, color = student)) + \n  geom_point()\n\n\n\n\n\n\n\n\n\n\nResponse to stimulus (in ms) after only 3 hrs of sleep for 9 days. You want to make a plot with the subject’s reaction time (y-axis) vs the number of days of sleep restriction (x-axis) using the following ggplot() code. Which data frame should you use?41\n\nuse raw data\nuse pivot_wider() on raw data\nuse pivot_longer() on raw data\n\n\n\nggplot(___, aes(x = ___, y = ___, color = ___)) + \n  geom_line()\n\n\n\n# A tibble: 18 × 11\n   Subject day_0 day_1 day_2 day_3 day_4 day_5 day_6 day_7 day_8 day_9\n     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     308  250.  259.  251.  321.  357.  415.  382.  290.  431.  466.\n 2     309  223.  205.  203.  205.  208.  216.  214.  218.  224.  237.\n 3     310  199.  194.  234.  233.  229.  220.  235.  256.  261.  248.\n 4     330  322.  300.  284.  285.  286.  298.  280.  318.  305.  354.\n 5     331  288.  285   302.  320.  316.  293.  290.  335.  294.  372.\n 6     332  235.  243.  273.  310.  317.  310   454.  347.  330.  254.\n 7     333  284.  290.  277.  300.  297.  338.  332.  349.  333.  362.\n 8     334  265.  276.  243.  255.  279.  284.  306.  332.  336.  377.\n 9     335  242.  274.  254.  271.  251.  255.  245.  235.  236.  237.\n10     337  312.  314.  292.  346.  366.  392.  404.  417.  456.  459.\n11     349  236.  230.  239.  255.  251.  270.  282.  308.  336.  352.\n12     350  256.  243.  256.  256.  269.  330.  379.  363.  394.  389.\n13     351  251.  300.  270.  281.  272.  305.  288.  267.  322.  348.\n14     352  222.  298.  327.  347.  349.  353.  354.  360.  376.  389.\n15     369  272.  268.  257.  278.  315.  317.  298.  348.  340.  367.\n16     370  225.  235.  239.  240.  268.  344.  281.  348.  365.  372.\n17     371  270.  272.  278.  282.  279.  285.  259.  305.  351.  369.\n18     372  269.  273.  298.  311.  287.  330.  334.  343.  369.  364.\n\n\n\n\nsleep_long &lt;- sleep_wide |&gt;\n  pivot_longer(cols = -Subject,\n               names_to = \"day\",\n               names_prefix = \"day_\",\n               values_to = \"reaction_time\")\n\nsleep_long\n\n# A tibble: 180 × 3\n   Subject day   reaction_time\n     &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;\n 1     308 0              250.\n 2     308 1              259.\n 3     308 2              251.\n 4     308 3              321.\n 5     308 4              357.\n 6     308 5              415.\n 7     308 6              382.\n 8     308 7              290.\n 9     308 8              431.\n10     308 9              466.\n# ℹ 170 more rows\n\n\n\n\nsleep_wide |&gt;\n  pivot_longer(cols = -Subject,\n               names_to = \"day\",\n               names_prefix = \"day_\",\n               values_to = \"reaction_time\") |&gt;\n  ggplot(aes(x = day, y = reaction_time, color = as.factor(Subject), group = as.factor(Subject))) + \n  geom_line()\n\n\n\n\n\n\n\n\n\n\nConsider band members from the Beatles and the Rolling Stones. Who is removed in a right_join()?42\n\n\nMick\nJohn\nPaul\nKeith\nImpossible to know\n\n\nband_members |&gt; \n  right_join(band_instruments, by = \"name\")\n\n\n\nConsider band members from the Beatles and the Rolling Stones. Which variables are removed in a right_join()?43\n\n\nname\nband\nplays\nnone of them \n\n\n\n\nband_members\n\n# A tibble: 3 × 2\n  name  band   \n  &lt;chr&gt; &lt;chr&gt;  \n1 Mick  Stones \n2 John  Beatles\n3 Paul  Beatles\n\n\n\n\nband_instruments\n\n# A tibble: 3 × 2\n  name  plays \n  &lt;chr&gt; &lt;chr&gt; \n1 John  guitar\n2 Paul  bass  \n3 Keith guitar\n\n\n\n\n\nband_members |&gt; \n  right_join(band_instruments, by = \"name\")\n\n\n\nWhat happens to Mick’s plays variable in a full_join()?44\n\n\nMick is removed\nchanges to guitar\nchanges to bass\nNA\nNULL \n\n\n\n\nband_members\n\n# A tibble: 3 × 2\n  name  band   \n  &lt;chr&gt; &lt;chr&gt;  \n1 Mick  Stones \n2 John  Beatles\n3 Paul  Beatles\n\n\n\n\nband_instruments\n\n# A tibble: 3 × 2\n  name  plays \n  &lt;chr&gt; &lt;chr&gt; \n1 John  guitar\n2 Paul  bass  \n3 Keith guitar\n\n\n\n\n\nband_members |&gt; \n  full_join(band_instruments, by = \"name\")\n\n\n\nStudents on the roster but not in any class.45\n\nroster |&gt; inner_join(classes, by = “student_id”) |&gt; filter(major != subject)`\nclasses |&gt; anti_join(roster, by = \"student_id\")\nroster |&gt; anti_join(classes, by = \"student_id\")\nroster |&gt; full_join(classes, by = \"student_id\")\nroster |&gt; semi_join(classes, by = \"student_id\")\n\n\n\n\n\nroster\n\n# A tibble: 5 × 3\n  student_id name  major  \n       &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  \n1          1 Alice Math   \n2          2 Ben   CS     \n3          3 Carla History\n4          4 David CS     \n5          5 Eva   Math   \n\n\n\n\nclasses\n\n# A tibble: 5 × 3\n  student_id class       subject  \n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;    \n1          1 Calc I      Math     \n2          2 Intro CS    CS       \n3          2 Data Struct CS       \n4          4 Intro CS    CS       \n5          6 Chemistry   Chemistry\n\n\n\n\n\n\nAll students on the roster and all enrollments.46\n\nroster |&gt; inner_join(classes, by = “student_id”) |&gt; filter(major != subject)`\nclasses |&gt; anti_join(roster, by = \"student_id\")\nroster |&gt; anti_join(classes, by = \"student_id\")\nroster |&gt; full_join(classes, by = \"student_id\")\nroster |&gt; semi_join(classes, by = \"student_id\")\n\n\n\n\n\nroster\n\n# A tibble: 5 × 3\n  student_id name  major  \n       &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  \n1          1 Alice Math   \n2          2 Ben   CS     \n3          3 Carla History\n4          4 David CS     \n5          5 Eva   Math   \n\n\n\n\nclasses\n\n# A tibble: 5 × 3\n  student_id class       subject  \n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;    \n1          1 Calc I      Math     \n2          2 Intro CS    CS       \n3          2 Data Struct CS       \n4          4 Intro CS    CS       \n5          6 Chemistry   Chemistry\n\n\n\n\n\n\nStudents from the roster who are enrolled in at least one class.47\n\nroster |&gt; inner_join(classes, by = “student_id”) |&gt; filter(major != subject)`\nclasses |&gt; anti_join(roster, by = \"student_id\")\nroster |&gt; anti_join(classes, by = \"student_id\")\nroster |&gt; full_join(classes, by = \"student_id\")\nroster |&gt; semi_join(classes, by = \"student_id\")\n\n\n\n\n\nroster\n\n# A tibble: 5 × 3\n  student_id name  major  \n       &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  \n1          1 Alice Math   \n2          2 Ben   CS     \n3          3 Carla History\n4          4 David CS     \n5          5 Eva   Math   \n\n\n\n\nclasses\n\n# A tibble: 5 × 3\n  student_id class       subject  \n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;    \n1          1 Calc I      Math     \n2          2 Intro CS    CS       \n3          2 Data Struct CS       \n4          4 Intro CS    CS       \n5          6 Chemistry   Chemistry\n\n\n\n\n\n\nStudents in a class but not on the roster.48\n\nroster |&gt; inner_join(classes, by = “student_id”) |&gt; filter(major != subject)`\nclasses |&gt; anti_join(roster, by = \"student_id\")\nroster |&gt; anti_join(classes, by = \"student_id\")\nroster |&gt; full_join(classes, by = \"student_id\")\nroster |&gt; semi_join(classes, by = \"student_id\")\n\n\n\n\n\nroster\n\n# A tibble: 5 × 3\n  student_id name  major  \n       &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  \n1          1 Alice Math   \n2          2 Ben   CS     \n3          3 Carla History\n4          4 David CS     \n5          5 Eva   Math   \n\n\n\n\nclasses\n\n# A tibble: 5 × 3\n  student_id class       subject  \n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;    \n1          1 Calc I      Math     \n2          2 Intro CS    CS       \n3          2 Data Struct CS       \n4          4 Intro CS    CS       \n5          6 Chemistry   Chemistry\n\n\n\n\n\n\nStudents on the roster taking at least one class outside their major.49\n\nroster |&gt; inner_join(classes, by = “student_id”) |&gt; filter(major != subject)`\nclasses |&gt; anti_join(roster, by = \"student_id\")\nroster |&gt; anti_join(classes, by = \"student_id\")\nroster |&gt; full_join(classes, by = \"student_id\")\nroster |&gt; semi_join(classes, by = \"student_id\")\n\n\n\n\n\nroster\n\n# A tibble: 5 × 3\n  student_id name  major  \n       &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  \n1          1 Alice Math   \n2          2 Ben   CS     \n3          3 Carla History\n4          4 David CS     \n5          5 Eva   Math   \n\n\n\n\nclasses\n\n# A tibble: 5 × 3\n  student_id class       subject  \n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;    \n1          1 Calc I      Math     \n2          2 Intro CS    CS       \n3          2 Data Struct CS       \n4          4 Intro CS    CS       \n5          6 Chemistry   Chemistry\n\n\n\n\n\n\nWhat is the output of the following R code?50\n\n\n“a 1” “b 2” “c 3”\n“a, 1” “b, 2” “c, 3”\n“a1” “b2” “c3”\n“a b c” “1 2 3”\n“abc” “123”\n\n\nstr_c(letters = c(\"a\", \"b\", \"c\"),\n      numbers = c(1, 2, 3))\n\n\n\nWhat is the output of the following R code?51\n\n\n“a 1” “b 2” “c 3”\n“a, 1” “b, 2” “c, 3”\n“a1” “b2” “c3”\n“a b c” “1 2 3”\n“abc” “123”\n\n\nstr_c(letters = c(\"a\", \"b\", \"c\"),\n      numbers = c(1, 2, 3), sep = \" \")\n\n\n\nWhat is the output of the following R code?52\n\n“abc” “hifg”\n“ab” “hifg”\n“ab” “ifg”\n“abc” “ifg”\n\n\n\nx &lt;- c(\"abcde\", \"ghifgh\")\nstr_sub(x, start = c(1, 3), end = c(2, 5))\n\n\n\nWhat is the output of the following R code?53\n\n\n“one -pple” “two p-ars” “three bananas”\n“on- -ppl-” “two p–rs” “thr– b-n-n-s”\n“on- apple” “two p-ars” “thr-e bananas”\n\n\nfruits &lt;- c(\"one apple\", \"two pears\", \"three bananas\")\nstr_replace(fruits, pattern = c(\"a\", \"e\", \"i\"), replacement = \"-\")\n\n\n\nWhat is the output of the following R code?54\n\n\nTRUE\nTRUE TRUE TRUE TRUE\nTRUE FALSE FALSE FALSE\nFALSE\n\n\nfruit &lt;- c(\"apple\", \"banana\", \"pear\", \"pineapple\")\nstr_detect(fruit, pattern = \"a\")\n\n\n\nIf unspecified, the levels of a factor variable will be ordered:55\n\nin the order that they first show up in the dataset\nfrom shortest to longest in terms of characters\nfrom longest to shortest in terms of characters\nalphabetically, from a to z\nalphabetically, from z to a\n\n\n\n\nWhat does this code do?56\n\nNew variable which is the average of the calories\nNew variable which is the average of the type\nChanges the values of type\nChanges the levels of type\nChanges the order of the levels of type\n\n\n\nstarbucks |&gt; \n  mutate(type = fct_reorder(type, calories, .fun = \"mean\", .desc = TRUE))\n\n\n\nWhat does fct_recode() do here?57\n\nCreates a new variable\nChanges the values of x\nChanges the levels of x\nChanges the order of the levels of x\nSome of the above\nAll of the above\n\n\n\nx &lt;- factor(c(\"apple\", \"bear\", \"dear\", \"banana\"))\nx\nfct_recode(x, fruit = \"apple\", fruit = \"banana\")\n\n\n\nWhat is January 31 + one month?58\n\nFebruary 31\nMarch 3\nFebruary 28 (assuming no leap year)\nI don’t want to answer the question\n\n\n\n\nWhat is the difference between code lines 3 and 4 below?59\n\nsame thing\ndifferent months\ndifferent output formatting\ndifferent input\ndifferent calculation\n\n\n\nlibrary(lubridate)\ntoday &lt;- now()\nmonth(today)\nmonth(today, label = TRUE)\n\n\n\nWhat does this number mean?60\n\nToday is the 39th day of the month.\nToday is the 39th day of the year.\nToday is the 39th week of the month.\nToday is the 39th week of the year.\n\n\n\ntoday &lt;- now()\nweek(today)\n\n[1] 39\n\n\n\n\nWhat is the difference in these two functions?61\n\n\nDay of month and day of year.\nDay of month and day of week.\nDay of week and day of year.\nDay of weekend and day of month.\n\n\nmday(today)\n\n[1] 24\n\nyday(today)\n\n[1] 267\n\n\n\n\nWhat is the result of the code?62\n\nTRUE\nFALSE\n“2025-09-01”\n“2025-02-19”\n\n\n\ntoday &gt; ymd(\"2025-09-01\")\n\n\n\nstr_subset(\"q[^u]\", very.large.word.list) would not match which of the following?63\n\nIraqi\nIraqian\nIraq\nzaqqun (tree that “springs out of the bottom of Hell”, in the Quran)\nQantas (the Australian airline)\n\n\n\n\nWhich of the following regex would match to both “grey” and “gray”?64\n\n“gr[ae]y”\n“gr(a|e)y”\n“gray | grey”\n“gr[a|e]y”\nsome / all of the above – which ones?\n\n\n\n\nWhat will the result be for the following code?65\n\n10\n1\n0\nNA\n\n\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")\n\n\n\nWhat will the result be for the following code?66\n\n10\n1\n0\nNA\n\n\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d+\")\n\n\n\nWhat will the result be for the following code?67\n\n.\nEpisode 2: The pie whisperer. (4 August 2015)\nEpisode\nE\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".\")\n\n\n\nWhat will the result be for the following code?68\n\n.\nEpisode 2: The pie whisperer. (4 August 2015)\nEpisode\nE\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".+\")\n\n\n\nWhat will the result be for the following code?69\n\n.\nEpisode 2: The pie whisperer. (4 August 2015)\nEpisode\nE\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\.\")\n\n\n\nWhat is the difference between the output for the two regular expressions below?70\n\nThey give the same result.\nThe first is not case sensitive.\nThe second allow for all the variants.\nThe first includes Jane.\n\n\n\nstring &lt;- c(\"Mary\", \"Mar\", \"Janet\", \"jane\", \"Susan\", \"Sue\")\nstr_extract(string, \"\\\\bMary|Jane|Sue\\\\b\")\nstr_extract(string, \"\\\\b(Mary|Jane|Sue)\\\\b\")\n\n\n\nHow can I pull out just the numerical information in “$47”?71\n\n\"(?&lt;=\\\\$)\\\\d\"\n\"(?&lt;=\\\\$)\\\\d+\"\n\"\\\\d(?=\\\\$)\"\n\"\\\\d+(?=\\\\$)\"\n\n\n\n\nYou want to know all the types of pies in the text strings. They are written as, for example “apple pie”.72\n\n\"\\\\w+(?!pie)\"\n\"\\\\w+(?! pie)\"\n\"\\\\w+(?=pie)\"\n\"\\\\w+(?= pie)\"\n\n\n\n\nstr_extract(c(\"apple pie\", \"chocolate pie\", \"peach pie\"), \"\\\\w+(?= pie)\")\n\n[1] \"apple\"     \"chocolate\" \"peach\"    \n\n\n\nstr_extract(c(\"apple pie\", \"chocolate pie\", \"peach pie\"), \"\\\\w+(?=pie)\")\n\n[1] NA NA NA\n\n\n\n\nWe say that lookarounds are “zero-lenghth assertions”. What does that mean?73\n\nwe return the string in the lookaround\nwe replace the string in the lookaround\nwe return the string at the lookaround\nwe replace the string at the lookaround\n\n\n\n\nWhat will happen when I run the following code?74\n\n0\n3\n9\nNA\nerror (code will fail)\n\n\n\nmy_power &lt;- function(x, y){\n  return(x^y)\n}\nmy_power(3)\n\n\n\nWhat will happen when I run the following code?75\n\n0\n3\n9\nNA\nerror (code will fail)\n\n\n\nmy_power &lt;- function(x, y = 2){\n  return(x^y)\n}\nmy_power(3)\n\n\n\nWhat will happen when I run the following code?76\n\n4\n8\n9\nNA\nerror (code will fail)\n\n\n\nmy_power &lt;- function(x, y = 2){\n  return(x^y)\n}\nmy_power(2, 3)\n\n\n\nWhat will happen when I run the following code?77\n\n4\n8\n9\nNA\nerror (code will fail)\n\n\n\nmy_power &lt;- function(x = 2, y = 3){\n  return(x^y)\n}\nmy_power( )\n\n\n\nConsider the addTen() function. The following output is a result of which map_*() call?78\n\n\nmap(c(1,4,7), addTen)\nmap_dbl(c(1,4,7), addTen)\nmap_chr(c(1,4,7), addTen)\nmap_lgl(c(1,4,7), addTen)\n\n\naddTen &lt;- function(wow) {\n  return(wow + 10)\n}\n\n\n\n[1] \"11.000000\" \"14.000000\" \"17.000000\"\n\n\n\n\nWhich of the following input is allowed?79\n\nmap(c(1, 4, 7), addTen)\nmap(list(1, 4, 7), addTen)\nmap(data.frame(a=1, b=4, c=7), addTen)\nsome of the above\nall of the above\n\n\n\n\nWhich of the following produces a different output?80\n\nmap(c(1, 4, 7), addTen)\nmap(c(1, 4, 7), ~addTen(.x))\nmap(c(1, 4, 7), ~addTen)\nmap(c(1, 4, 7), function(hi) (hi + 10))\nmap(c(1, 4, 7), ~(.x + 10))\n\n\n\n\nWhat will the following code output?81\n\n3 random normals\n6 random normals\n18 random normals\n\n\n\ninput\n\n# A tibble: 3 × 3\n      n  mean    sd\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     1     1     3\n2     2     3     1\n3     3    47    10\n\n\n\ninput |&gt; \n  pmap(rnorm)\n\n\n\nWhat is the following error telling me?82\n\n\nI haven’t loaded lubridate.\nI can’t add months and days.\nThere is no object called jan31.\nmonths() is not a function.\nThere is no error\n\n\njan31 + months(0:11) + days(31)\n#&gt; Error in eval(expr, envir, enclos): object 'jan31' not found\n\n\n\nWhat is the following error telling me?83\n\n\nI haven’t loaded lubridate.\nI can’t add months and days.\nThere is no object called jan31.\nymd() is not a function.\nThere is no error.\n\n\n  jan31 &lt;- ymd(\"2021-01-31\")\n#&gt; Error in ymd(\"2021-01-31\"): could not find function \"ymd\"\n  jan31 + months(0:11) + days(31)\n#&gt; Error in eval(expr, envir, enclos): object 'jan31' not found\n\n\n\nWhat is the following error telling me?84\n\n\nI haven’t loaded lubridate.\nI can’t add months and days.\nThere is no object called jan31.\nymd() is not a function.\nThere is no error.\n\n\n  library(lubridate)\n#&gt; \n#&gt; Attaching package: 'lubridate'\n#&gt; The following objects are masked from 'package:base':\n#&gt; \n#&gt;     date, intersect, setdiff, union\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n#&gt;  [1] \"2021-03-03\" NA           \"2021-05-01\" NA           \"2021-07-01\"\n#&gt;  [6] NA           \"2021-08-31\" \"2021-10-01\" NA           \"2021-12-01\"\n#&gt; [11] NA           \"2022-01-31\"\n\n\n\nRank these in order of bad to best.85\n\n1, 2, 3\n1, 3, 2\n2, 1, 3\n3, 2, 1\n3, 1, 2\n\n\n\n# 1\nday_one\nday_1\n\n# 2\nDayOne\ndayone\n\n# 3\nT &lt;- FALSE\nc &lt;- 10\nmean &lt;- function(x) sum(x)\n\n\n\nWhich is better?86\n\n1\n2\n\n\n\n# 1\nmean(x, na.rm = TRUE)\n\n# 2\nmean (x, na.rm = TRUE)\nmean( x, na.rm = TRUE )\n\n\n\nWhich is better?87\n\n1\n2\n\n\n\n# 1\nheight&lt;-feet*12+inches\nmean(x, na.rm=TRUE)\n\n# 2\nheight &lt;- (feet * 12) + inches\nmean(x, na.rm = TRUE)\n\n\n\nWhich is better?88\n\n1\n2\n\n\n\n# 1\ndo_something_very_complicated(\n  something = \"that\",\n  requires = many,\n  arguments = \"some of which may be long\"\n)\n\n# 2\ndo_something_very_complicated(\"that\", requires, many, arguments,\n                              \"some of which may be long\"\n                              )\n\n\n\nWhich is better?89\n\n1\n2\n\n\n\n# 1\niris |&gt;\n  summarise(Sepal.Length = mean(Sepal.Length), Sepal.Width = mean(Sepal.Width), .by = Species)\n\n# 2\niris |&gt;\n  summarise(\n    Sepal.Length = mean(Sepal.Length),\n    Sepal.Width = mean(Sepal.Width),\n    .by = Species\n  )\n\n\n\nWhich one do you like best?90\n\n1\n2\n3\n\n\n\n# 1\nx |&gt;\n  semi_join(y |&gt; filter(is_valid))\n\n# 2\nx |&gt;\n  select(a, b, w) |&gt;\n  left_join(y |&gt; select(a, b, v), join_by(a, b))\n\n# 3\nx_join &lt;- x |&gt; select(a, b, w)\ny_join &lt;- y |&gt; select(a, b, v)\nleft_join(x_join, y_join, join_by(a, b))\n\n\n\nIn R the ifelse() function takes the arguments:91\n\n\nquestion, yes, no\nquestion, no, yes\nstatement, yes, no\nstatement, no, yes\noption1, option2, option3\n\n\n\nWhat is the output of the following:92\n\n“cat”, 30, “cat”, “cat”, 6\n“cat”, “30”, “cat”, “cat”, “6”\n1, “cat”, 5, “cat”, “cat”\n1, “cat”, 5, NA, “cat”\n“1”, “cat”, “5”, NA, “cat”\n\n\n\ndata &lt;- c(1, 30, 5, NA, 6)\n\nifelse(data &gt; 5, \"cat\", data)\n\n\n\nWhere can I get feedback on my HW assignments / quizzes?93\n\nprof will return paper versions\non Gradescope\non Canvas\non GitHub\n\n\n\n\nWhere can I get feedback on my projects?94\n\nprof will return paper versions\non Gradescope\non Canvas\non GitHub\n\n\n\n\nIn R, the set.seed() function95\n\n\nmakes your computations go faster\nkeeps track of your computation time\nprovides an important parameter\nrepeats the function\nmakes your results reproducible\n\n\n\nWhat could the following code give us?96\n\n\n[1] “a” “b” “c” “d” “e” “f” “g” “h” “i” “j”\n[1] “i” “b” “g” “d” “a”\n[1] “j” “g” “f” “i” “f”\n[1] “f” “h” “i” “e” “g” “d” “c” “j” “b” “a”\n[1] “e” “j” “e” “b” “e” “c” “f” “a” “e” “a”\n\n\n# shuffle\nset.seed(47)\nalph &lt;- letters[1:10]\nsample(alph, 10, replace = FALSE)\n\n\n\nWhat could the following code give us?97\n\n\n[1] “a” “b” “c” “d” “e” “f” “g” “h” “i” “j”\n[1] “i” “b” “g” “d” “a”\n[1] “j” “g” “f” “i” “f”\n[1] “f” “h” “i” “e” “g” “d” “c” “j” “b” “a”\n[1] “e” “j” “e” “b” “e” “c” “f” “a” “e” “a”\n\n\n# resample\nset.seed(47)\nalph &lt;- letters[1:10]\nsample(alph, 10, replace = TRUE)\n\n\n\nWhat could the following code give us?98\n\n\n[1] “a” “b” “c” “d” “e” “f” “g” “h” “i” “j”\n[1] “i” “b” “g” “d” “a”\n[1] “j” “g” “f” “i” “f”\n[1] “f” “h” “i” “e” “g” “d” “c” “j” “b” “a”\n[1] “e” “j” “e” “b” “e” “c” “f” “a” “e” “a”\n\n\n# sample from an infinite population\nset.seed(47)\nalph &lt;- letters[1:10]\nsample(alph, 10, replace = TRUE)\n\n\n\nWhat could the following code give us?99\n\n\n[1] “a” “b” “c” “d” “e” “f” “g” “h” “i” “j”\n[1] “i” “b” “g” “d” “a”\n[1] “j” “g” “f” “i” “f”\n[1] “f” “h” “i” “e” “g” “d” “c” “j” “b” “a”\n[1] “e” “j” “e” “b” “e” “c” “f” “a” “e” “a”\n\n\n# sample from  finite population\nset.seed(47)\nalph &lt;- letters[1:10]\nsample(alph, 10, replace = FALSE)\n\n\n\nWhat does the following give us?100\n\n\nthe number of hats that match\nthe number of hats that don’t match\nthe proportion of hats that match\nthe proportion of hats that don’t match\nwhether or not at least one hat matches\n\n\nsum(hats == random_hats)\n\n[1] 2\n\n\n\n\nWhat does the following give us?101\n\n\nthe number of hats that match\nthe number of hats that don’t match\nthe proportion of hats that match\nthe proportion of hats that don’t match\nwhether or not at least one hat matches\n\n\nmean(hats == random_hats)\n\n[1] 0.2\n\n\n\n\nWhat does the following give us?102\n\n\nthe number of hats that match\nthe number of hats that don’t match\nthe proportion of hats that match\nthe proportion of hats that don’t match\nwhether or not at least one hat matches\n\n\nsum(hats == random_hats) &gt; 0\n\n[1] TRUE\n\n\n\n\nWhat is the magic number?103\n\n\n10\n10, the number of overall hats\n10, the number of hats we select\n0\n0, the number of matching hats\n\n\nhats &lt;- c(1:10)\nrandom_hats &lt;- sample(hats, size = 10, replace = FALSE)\nsum(hats == random_hats) &gt; 0\n\n\n\nIn the SAT example, we ran a single iteration and found that the false positive and false negative rates were problematic. What should we do next?104\n\n\nRepeat for many iterations.\nChange the initial settings.\nBring this analysis to the people with power.\nAlways use two models.\nAlways use only one model.\n\n\n\nIn the SAT example, what types of things might we vary?105\n\n\nproportion to red vs blue\nhow variable the values are: N(talent, 15)\ndifferent number of times blues get to take the test\nhow close grades and SAT are to talent (bias?)\n\n\n\nWhat would you want to know from the investment allocation plots?106\n\nWhat is the average rate of return?\nWhat is the maximum rate of return?\nWhat is the minimum rate of return?\nHow often do I lose money?\n\n\n\n\nIf 16 infants with no genuine preference choose 16 toys, what is the most likely number of “helping” toys that will be chosen?107\n\n\n4\n7\n8\n9\n10\n\n\n\nHow likely is it that exactly 8 helpers will be chosen (if there is no preference)?108\n\n\n0-15%\n16-30%\n31-49%\n50%\n51-100%\n\n\n\nWhat if we flipped a coin 160 times? What percent of the time will the simulation flip exactly 80 heads?109\n\n\n0-15%\n16-30%\n31-49%\n50%\n51-100%\n\n\n\nIs our actual result of 14 (under the coin model)…110\n\n\nvery surprising?\nsomewhat surprising?\nnot very surprising?\n\n\n\nHypothesis: the number of hours that grade-school children spend doing homework predicts their future success on standardized tests.111\n\nnull, one sided\nnull, two sided\nalternative, one sided\nalternative, two sided\n\n\n\n\nHypothesis: king cheetahs on average run the same speed as standard spotted cheetahs.112\n\nnull, one sided\nnull, two sided\nalternative, one sided\nalternative, two sided\n\n\n\n\nHypothesis: the mean length of African elephant tusks has changed over the last 100 years.113\n\nnull, one sided\nnull, two sided\nalternative, one sided\nalternative, two sided\n\n\n\n\nHypothesis: the risk of facial clefts is equal for babies born to mothers who take folic acid supplements compared with those from mothers who do not.114\n\nnull, one sided\nnull, two sided\nalternative, one sided\nalternative, two sided\n\n\n\n\nHypothesis: caffeine intake during pregnancy affects mean birth weight.115\n\nnull, one sided\nnull, two sided\nalternative, one sided\nalternative, two sided\n\n\n\n\nIn this class, the word parameter means:116\n\nThe values in a model\nNumbers that need to be tuned\nA number which is calculated from a sample of data.\nA number which (is almost always unknown and) describes a population.\n\n\n\n\nTo run a two-sample permutation test, should you permute the variable with or without replacement?117\n\nwith replacement (replace = TRUE)\nwithout replacement (replace = FALSE)\n\n\n\n\nThe histogram is a null sampling distribution for the difference in two means. The red line is the observed value from the data. To compute the p-value, which area should be considered?118\n\n\n\n\nThe area to the left.\nThe area to the right.\nDouble the area to the left.\nIt depends.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe histogram is a null sampling distribution for the difference in two means. The red line is the observed value from the data. The alternative hypothesis is \\(H_A: \\mu_1 - \\mu_2 \\ne 0\\). To compute the p-value, which area should be considered?119\n\n\n\n\nThe area to the left.\nThe area to the right.\nDouble the area to the left.\nIt depends.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is misleading here?120\n\nVery low data-to-ink ratio?121\nNon-intuitive sorting?\nWrong / changing scales?\n1-dim information in 2-D or 3-d?\nInconsistent labeling\n\n\n\n\n\n\n\nReproduction of a data graphic reporting the number of gun deaths in Florida over time. The original image was published by Reuters. [@MDSR]\n\n\n\n\n\n\nWhat is misleading here?122\n\nVery low data-to-ink ratio?123\nNon-intuitive sorting?\nWrong / changing scales?\n1-dim information in 2-D or 3-d?\nInconsistent labeling\n\n\n\n\n\n\n\nA tweet by National Review on December 14, 2015 showing the change in global temperature over time. [@MDSR]\n\n\n\n\n\n\nWhat is misleading here?124\n\nVery low data-to-ink ratio?125\nNon-intuitive sorting?\nWrong / changing scales?\n1-dim information in 2-D or 3-d?\nInconsistent labeling\n\n\n\n\n\n\n\nMay 10, 2020, Georgia Department of Health, COVID-19 cases for 5 counties across time. https://dph.georgia.gov/covid-19-daily-status-report\n\n\n\n\n\n\nWhat is misleading here?126\n\nVery low data-to-ink ratio?127\nNon-intuitive sorting?\nWrong / changing scales?\n1-dim information in 2-D or 3-d?\nInconsistent labeling\n\n\n\n\n\n\n\n\n\nJuly 2, 2020, Georgia Department of Health, COVID-19 cases per 100K\n\n\n\n\n\n\n\n\n\n\nJuly 17, 2020, https://dph.georgia.gov/covid-19-daily-status-report\n\n\n\n\n\n\n\n\nHow often do you read “The Student Life”?128\n\nEvery day\n3-5 times a week\nOnce a week\nRarely\nWhat is “The Student Life”?\n\n\n\n\nWhat do you think is the most common word in the titles of the Student Life opinion articles?129\n\nstop\nhealth\nPomona\nCMC\nstudents\n\n\n\n\nHow can you tell the difference between an element and an attribute?130\n\nthe elements have .\nthe elements have #\nthe elements have &lt; &gt;\nthe elements have [ ]\n\n\n\n\nHow do I find all the instances of the &lt;img&gt; (image) element?131\n\nuse selector: &lt;img&gt;\nuse selector: .img\nuse selector: #img\nuse selector: [img]\nuse selector: img\n\n\n\n\nHow do I find all the instances of the href= (URL) attribute?132\n\nuse selector: &lt;href&gt;\nuse selector: href\nuse selector: #href\nuse selector: [href]\nuse selector: href\n\n\n\n\nWhat is the difference between an attribute and an element?133\n\n\nan attribute describes an element\nan element describes an attribute\nan attribute is the parent of an element\nan element is the parent of an attribute\n\n\n\nWhat is a SQL server?134\n\n\nA relational database management system.\nA software program whose main purpose is to store and retrieve data.\nA highly secure server that does not allow any database file manipulation during execution.\nAll of the above.\n\n\n\nWhen was SQL created?135\n\n1960s\n1970s\n1980s\n1990s\n2000s\n\n\n\n\nWhat type of databases is SQL designed for?136\n\n\nhierarchical database management systems.\nnetwork database management systems.\nobject-oriented database management systems.\nrelational database management systems.\n\n\n\nWhich is bigger:137\n\ncomputer’s hard drive / storage\ncomputer’s memory / RAM\n\n\n\n\nWhere are each stored?138\n\n\nSQL tbl and R tibble both in storage\nSQL tbl and R tibble both in memory\nSQL tbl in storage and R tibble in memory\nSQL tbl in memory and R tibble in storage\n\n\n\nWhich SQL keyword is used to extract data from a database?139\n\n\nOPEN\nEXTRACT\nSELECT\nGET\n\n\n\nWith SQL, how to you retrieve a column named “FirstName” from a table named “Persons”?140\n\n\nSELECT Persons.FirstName\nEXTRACT FIRSTNAME FROM Persons\nSELECT FirstName FROM Persons\nSELECT “FirstName” FROM “Persons”\n\n\n\nWith SQL, how do you select all the columns from a table named “Persons”?141\n\n\nSELECT Persons\nSELECT * FROM Persons\nSELECT [all] FROM Persons\nSELECT *.Persons\n\n\n\nWith SQL, how can you return the number of records in the “Persons” table?142\n\n\nSELECT COLUMNS(*) FROM Persons\nSELECT COUNT(*) FROM Persons\nSELECT NO(*) FROM Persons\nSELECT LEN(*) FROM Persons\n\n\n\nWith SQL, how do you select all the records from a table named “Persons” where the value of the column “FirstName” is “Peter”?143\n\n\nSELECT * FROM Persons WHERE FirstName &lt;&gt; ‘Peter’\nSELECT * FROM Persons WHERE FirstName = ‘Peter’\nSELECT * FROM Persons WHERE FirstName == ‘Peter’\nSELECT * FROM Persons WHERE FirstName LIKE ‘Peter’\nSELECT [all] FROM Persons WHERE FirstName = ‘Peter’\n\n\n\nWith SQL, how do you select all the records from a table named “Persons” where the “FirstName” is “Peter” and the “LastName” is “Jackson”?144\n\n\nSELECT FirstName = ‘Peter’, LastName = ‘Jackson’ FROM Persons\nSELECT * FROM Persons WHERE FirstName = Peter’ & LastName = Jackson’\nSELECT * FROM Persons WHERE FirstName = ‘Peter’ AND LastName = ‘Jackson’\nSELECT * FROM Persons WHERE FirstName = Peter’ | LastName = Jackson’\n\n\n\nWhich keyword selects values within a range?145\n\nBEWTEEN\nWITHIN\nRANGE\n\n\n\n\nWith SQL, how do you select all the records from a table named “Persons” where the “LastName” is alphabetically between (and including) “Hansen” and “Pettersen”?146\n\nSELECT LastName &gt; ‘Hansen’ AND LastName &lt; ‘Pettersen’ FROM Persons\nSELECT * FROM Persons WHERE LastName BETWEEN ‘Hansen’ AND ‘Pettersen’\nSELECT * FROM Persons WHERE LastName &gt; ‘Hansen’ AND LastName &lt; ‘Pettersen’\n\n\n\n\nWhich SQL keyword returns only different values?147\n\nSELECT UNIQUE\nSELECT DISTINCT\nSELECT DIFFERENT\n\n\n\n\nWhich SQL keyword is used to sort the result-set?148\n\nORDER BY\nORDER\nSORT\nSORT BY\n\n\n\n\nWhat is the difference between the original data and the results set?149\n\noriginal comes after SELECT and results comes after FROM\noriginal comes after FROM and results comes after WHERE\noriginal comes after WHERE and results comes after GROUP BY\noriginal is the stored data and results comes after SELECT\noriginal is the stored data and results comes after WHERE\n\n\n\n\nWith SQL, how can you return all the records from a table named “Persons” sorted descending by “FirstName”?150\n\nSELECT * FROM Persons ORDER FirstName DESC\nSELECT * FROM Persons SORT ‘FirstName’ DESC\nSELECT * FROM Persons ORDER BY FirstName DESC\nSELECT * FROM Persons SORT BY ‘FirstName’ DESC\n\n\n\n\nThe OR operator displays a record if ANY conditions listed are true. The AND operator displays a record if ALL of the conditions listed are true.151\n\nTRUE\nFALSE\n\n\n\n\nIn order to SELECT the records with foods that are either green or yellow fruit:152\n\n… WHERE type = ‘fruit’ AND color = ‘yellow’ OR color = ‘green’\n\n… WHERE (type = ‘fruit’ AND color = ‘yellow’) OR color = ‘green’\n\n… WHERE type = ‘fruit’ AND (color = ‘yellow’ OR color = ‘green’)\n\n… WHERE type = ‘fruit’ AND color = ‘yellow’ AND color = ‘green’\n\n… WHERE type = ‘fruit’ AND (color = ‘yellow’ AND color = ‘green’)\n\n\n\n\nWhat is the purpose of a JOIN?153\n\nit filters the rows returned by the SELECT statement.\nit specifies the columns to be retrieved.\nit combines rows from two or more tables based on a related column.\nit orders the results in ascending or descending order.\n\n\n\n\nWhat is the purpose of the UNION operator in SQL?154\n\nit combines the results of two or more SELECT statements.\nit performs a pattern match on a string.\nit retrieves the maximum value in a column.\nit filters the rows returned by the SELECT statement.\n\n\n\n\nWhat is the purpose of the INNER JOIN in SQL?155\n\nit retrieves the maximum value in a column.\nit combines rows from two or more tables based on a related column.\nit filters the rows returned by the SELECT statement.\nit performs a pattern match on a string.\n\n\n\n\nWhat is the purpose of the LEFT JOIN in SQL?156\n\nit combines rows from two or more tables based on a related column.\nit retrieves the maximum value in a column.\nit filters the rows returned by the SELECT statement.\nit performs a pattern match on a string.\n\n\n\n\nRIGHT JOIN keeps all the rows in …?157\n\nthe first table.\nthe second table.\nboth tables.\nneither table\n\n\n\n\nWho is removed in a RIGHT JOIN?158\n\nMick\nJohn\nPaul\nKeith\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhich variable(s) are removed in a RIGHT JOIN?159\n\nname\nband\nplays\nnone of them\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn SQL, what happens to Mick’s “plays” variables in a FULL JOIN?160\n\nMick is removed\nguitar\nbass\nNA\nNULL\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is wrong with this SQL clause?161\n\nNo comma between selected columns\nCan’t have a column and a summary of that column\nUse MEAN() instead of AVG()\nVariables aren’t in flights\nNeed a LIMIT\n\n\n\nSELECT cancelled, AVG(cancelled)\nFROM flights;\n\n\n\nWhat is wrong with this SQL clause?162\n\nNeed a WHERE\nNeed a FROM\nNeed a LIMIT\nNeed a GROUP BY\nNeed a SELECT\n\n\n\nSELECT flights;\n\n\n\nWhat is wrong with this SQL clause?163\n\nNeed a doubl equals: ==\nNeed quotes around 2014, \"2014\"\nNeed quotes around dep_delay, \"dep_delay\"\nyear = 2014 should go in WHERE\nNeed GROUP BY year\n\n\n\nSELECT dep_delay, year = 2014\nFROM flights\nLIMIT 10;\n\n\n\nWhat is wrong with this SQL clause?164\n\nCan’t SELECT a variable from the results set\nCan’t SELECT a variable from the original data\nSUM() is not a function in SQL\nNo commas\n\n\n\nSELECT SUM(cancelled) AS num_cancelled,\n       num_cancelled / SUM(1) AS pct_cancelled\nFROM flights\nLIMIT 10;\n\n\n\n\n\n\nWith SQL, how do you select all the records from a table named “Persons” where the value of the column “FirstName” starts with an “a”?165\n\nSELECT * FROM Persons WHERE FirstName = ’a.*’\nSELECT * FROM Persons WHERE FirstName = ’a*’\nSELECT * FROM Persons WHERE FirstName REGEXP ’a.*’\nSELECT * FROM Persons WHERE FirstName REGEXP ’a*’\nSELECT * FROM Persons WHERE FirstName REGEXP ’(?i)a.*’\n\n\n\n\nWhat is the main way to absolutely recognize a record within a database?166\n\nForeign key\nPrimary key\nUnique key\nNatural key\nAlternate key\n\n\n\n\nWhat does a foreign key do?167\n\nDirectly identifies another table\nDirectly identifies another column\nGives access to another entire database\nTranslates the database into another language\n\n\n\n\nWhich of these would likely be used as a foreign key between a table on student enrollment and student grades?168\n\ngrades\ntuition\nstudent_name\nstudent_hometown\n\n\n\n\nFor the student records (for two tables: enrollment and grades), which is the most likely combination?169\n\nname as primary key to both\nname as foreign to both\nname as primary in enrollment and foreign in grades\nname as foreign in enrollment and primary in grades\n\n\n\n\nWhich of the following is the primary function used to create a Shiny app?170\n\nshinyApp()\ncreateApp()\nrunApp()\nstartShinyApp()\n\n\n\n\nWhich of the following Shiny components contains the code for handling user inputs and generating outputs?171\n\nui\nserver\nrunApp()\nshinyApp()\n\n\n\n\nWhich of the following Shiny UI elements is used to allow users to select a single option from a list of choices?172\n\n\nselectInput()\nradioButtons()\ncheckboxGroupInput()\ntextInput()\n\n\n\nIn Shiny, what is the purpose of the renderText() function?173\n\n\nTo display a plot as text\nTo generate text output based on reactive inputs\nTo create a text input field\nTo render HTML elements\n\n\n\nWhat does the ui component in a Shiny app represent?174\n\n\nThe logic of the application\nThe server-side calculations\nThe user interface elements\nThe global settings for the app\n\n\n\nWhich Shiny function is used to handle reactive expressions in the server function?175\n\n\nreactive()\nrender()\nobserve()\nupdateInput()\n\n\n\nWhat is the default output type for renderPlot() in Shiny?176\n\nplotly chart\nggplot2 plot\nbase R plot\nHTML table\n\n\n\n\nWhich of the following is the correct way to create a slider input in Shiny?177\n\nsliderInput(\"slider\", \"Slider\", min = 1, max = 100, value = 50)\ninputSlider(\"slider\", min = 1, max = 100)\nsliderControl(\"slider\", 1, 100)\ninput_slider(\"slider\", 1, 100)"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "syllabus",
    "section": "",
    "text": "Jo Hardin\n2351 Estella\njo.hardin@pomona.edu\nClass: Mondays & Wednesdays, 11-12:15pm\nEstella 2141\nOffice Hours: (Estella 2351)\nMonday: 2:30-5:00pm\nTuesday: 9-11am\nThursday: 1:15-3pm\nMentor Sessions:\nSunday 4-6pm & Tuesday 6-8pm\nEstella 2141\nMentor: Evelyn Hao\n\n\n\n\n\nArtwork by @allison_horst.\n\n\n\n\n\n\n\nFoundations of Data Science in R is a first course in data science. Data play an increasingly important role in many fields. Being able to understand data and the ethical implications in data driven decisions is paramount to being an informed member of society. As an introduction to data science with R, this course will introduce students to basic data science concepts. Prerequisite: CSCI004 or CSCI005 or CSCI051 or equivalent experience in programming.\n\n\n\n\n\n\nAnonymous Feedback\n\n\n\nAs someone who is, myself, constantly learning and growing in many ways, I welcome your feedback about the course, the classroom dynamics, or anything else you’d like me to know. There is a link on Canvas to an anonymous feedback form. Please feel free to provide me with feedback at any time!\n\n\n\n\n\nBy the end of the term, students will be able to:\n\nscrape, process, and clean data from the web\nwrangle data in a variety of formats\ncontextualize variation in data\nconstruct point and interval estimates using resampling techniques\ndesign accurate, clear and appropriate data graphics\nquery large relational databases (using SQL)\nwork fluently with regular expression\ncommunicate data-driven decisions\n\n\n\n\nIn an ideal world, science would be objective. However, much of science is subjective and is historically built on a small subset of privileged voices. In this class, we will make an effort to recognize how science (and data science!) has played a role in both understanding diversity as well as in promoting systems of power and privilege. I acknowledge that there may be both overt and covert biases in the material due to the lens with which it was written, even though the material is primarily of a scientific nature. Integrating a diverse set of experiences is important for a more comprehensive understanding of science. I would like to discuss issues of diversity in statistics as part of the course from time to time.\nPlease contact me if you have any suggestions to improve the quality of the course materials.\nFurthermore, I would like to create a learning environment for my students that supports a diversity of thoughts, perspectives and experiences, and honors your identities (including race, gender, class, sexuality, religion, ability, etc.) To help accomplish this:\n\nIf you have a name and/or set of pronouns that differ from those that appear in your official records, please let me know!\nIf you feel like your performance in the class is being impacted by your experiences outside of class, please don’t hesitate to come and talk with me. You can also relay information to me via your mentors. I want to be a resource for you.\n\nI (like many people) am still in the process of learning about diverse perspectives and identities. If something was said in class (by anyone) that made you feel uncomfortable, please talk to me about it. As a participant in course discussions, you should also strive to honor the diversity of your classmates.\n\n\n\n\n\n Modern Data Science with R, 3rd edition by Baumer, Kaplan, and Horton.\nR for Data Science, 2nd edition by Wickham, Çetinkaya-Rundel, and Grolemund.\n\n\n\n\n\n\nDates\n\n\n\n\nQuizzes on Sep 17, Oct 1, Oct 3, Nov 5, Nov 19, and Dec 3 (in class)\n9.24.25 Project 1 due\n10.8.25 Project 2 due\n10.29.25 Project 3 due\n11.12.25 Project 4 due\n11.26.25 Project 5 due\n12.5.25 (Friday) or 5.10.25 (Tuesday) Project Presentations (9am-noon)\n12.10.25 Project 6 write-up due (on GitHub by midnight)\n\n\n\n\n\n\n\n\n\n\n\nBest and most comprehensive Git help: http://happygitwithr.com/\nVersion control with Git\nMore on Git\nOnline Git book with lots of info\n\n\n\n\n\n\n\n\nA fantastic ggplot2 tutorial\nGreat tutorials through the Coding Club\nGoogle for R\nIncredibly helpful cheatsheets from RStudio.\n\ndata wrangling\nggplot2\nShiny\nQuarto\nRStudio IDE\n\n\n\n\n\n\n\n\nW3 schools Introduction to SQL\nW3 schools SQL Exercises, Practice, Solution\nR packages for working with databases\nIntroduction to dbplyr\n\n\n\n\n\n\n\nstringr vignette\nstringr package\nJenny Bryan et al.’s STAT 545 notes\nregexpal\n\nRegExr\nRegexOne\n\n\n\n\nHomework assignments will be graded out of 5 points, which are based on a combination of accuracy and effort. Below are rough guidelines for grading.\n[5] All problems completed with detailed solutions provided and 75% or more of the problems are fully correct. Additionally, there are no extraneous messages, warnings, or printed lists of numbers.\n[4] All problems completed with detailed solutions and 50-75% correct; OR close to all problems completed and 75%-100% correct. Or all problems are completed and there are extraneous messages, warnings, or printed lists of numbers. [Here is an example of extraneous messages and printed lists of numbers.]\n[3] Close to all problems completed with less than 75% correct. OR an assignment that didn’t make it all the way to Canvas as the correctly rendered pdf.\n[2] More than half but fewer than all problems completed and &gt; 75% correct.\n[1] More than half but fewer than all problems completed and &lt; 75% correct; OR less than half of problems completed.\n[0] No work submitted, OR half or less than half of the problems submitted and without any detail/work shown to explain the solutions. You will get a zero if your file is not compiled and submitted on GitHub.\n\n\n\n\n\nThere will be 5 mini-projects (due roughly every other week). You will also compile the projects, reflect on the process, and present your work to your classrmates. Project information is available here: DS 002R Projects\n\n\n\n\nGitHub will be used as a way to practice reproducible and collaborative science. There may be a slight learning curve, but knowing Git will be an extremely useful skill as you venture beyond this class.\nR will be used for all homework assignments. R is freely available at http://www.r-project.org/ and is already installed on college computers. Additionally, you need to install R Studio in order to use Quarto, https://posit.co/downloads/. If you are not already familiar with R, please work through some of the materials provided ASAP.\nYou are welcome to use Pomona’s R Studio server at https://rstudio.campus.pomona.edu/ (or https://rstudio.pomona.edu if you are off campus). If you use the server, you can connect directly to your Git account without installing Git locally on your own computer. [If you are not a Pomona student, you will need to get an account from Pomona’s ITS. Go to ITS, tell them that you are taking a Pomona course, and ask for an account for using RStudio.]\n\n\n\n\n\nThis class will be interactive, and your engagement is expected (every day in class). Although notes will be posted, your engagement is an integral part of the in-class learning process.\nIn class: after answering one question, wait until 5 other people have spoken before answering another question. [Feel free to ask as many questions as often as you like!]\nTo get full participation points, you will be expected to contribute at least one R tip of the day, sometime during the semester.\n\n\n\n\nYou are on your honor to present only your work as part of your course assessments. Below, I’ve provided Pomona’s academic honesty policy. But before the policy, I’ve given some thoughts on cheating which I have taken from Nick Ball’s CHEM 147 Collective (thank you, Prof Ball!). Prof Ball gives us all something to think about when we are learning in a classroom as well as on our journey to become scientists and professionals:\nThere are many known reasons why we may feel the need to “cheat” on problem sets or exams:\n\n\nAn academic environment that values grades above learning.\nFinancial aid is critical for remaining in school that places undue pressure on maintaining a high GPA.\nNavigating school, work, and/or family obligations that have diverted focus from class.\nChallenges balancing coursework and mental health.\nBalancing academic, family, peer, or personal issues.\n\n\nBeing accused of cheating – whether it has occurred or not – can be devastating for students. The college requires me to respond to potential academic dishonesty with a process that is very long and damaging. As your instructor, I care about you and want to offer alternatives to prevent us from having to go through this process. If you find yourself in a situation where “cheating” seems like the only option:\nPlease come talk to me. We will figure this out together.\nPomona College is an academic community, all of whose members are expected to abide by ethical standards both in their conduct and in their exercise of responsibilities toward other members of the community. The college expects students to understand and adhere to basic standards of honesty and academic integrity. These standards include, but are not limited to, the following:\n\n\nIn projects and assignments prepared independently, students never represent the ideas or the language of others as their own.\nStudents do not destroy or alter either the work of other students or the educational resources and materials of the College.\nStudents neither give nor receive assistance in examinations.\nStudents do not take unfair advantage of fellow students by representing work completed for one course as original work for another or by deliberately disregarding course rules and regulations.\nIn laboratory or research projects involving the collection of data, students accurately report data observed and do not alter these data for any reason.\n\n\n\n\n\nPlease email and / or set up a time to talk if you have any questions about or difficulty with the material, the computing, or the course. Talk to me as soon as possible if you find yourself struggling. The material will build on itself, so it will be much easier to catch up if the concepts get clarified earlier rather than later. This semester is going to be fun. Let’s do it.\n\n\n\n\n\n\nGrading\n\n\n\n\n30% Homework\n30% Quizzes\n30% Projects & Final Presentation\n10% Class engagement"
  },
  {
    "objectID": "syllabus.html#math-150-spring-2023",
    "href": "syllabus.html#math-150-spring-2023",
    "title": "syllabus",
    "section": "",
    "text": "Class: Tuesdays & Thursdays, 1:15-2:30pm\nJo Hardin\n2351 Estella\njo.hardin@pomona.edu\n\n\nMondays 1:30-3pm\nTuesdays 2:30-3:30pm\nWednesday 9-11am\nThursday 3-4pm\nor by appointment\n\n\nMonday 6-8pm\nWednesday 8-10pm\nEstella 2131\n\n\n\n\n\nArtwork by @allison_horst."
  },
  {
    "objectID": "syllabus.html#the-course",
    "href": "syllabus.html#the-course",
    "title": "syllabus",
    "section": "",
    "text": "Foundations of Data Science in R is a first course in data science. Data play an increasingly important role in many fields. Being able to understand data and the ethical implications in data driven decisions is paramount to being an informed member of society. As an introduction to data science with R, this course will introduce students to basic data science concepts. Prerequisite: CSCI004 or CSCI005 or CSCI051 or equivalent experience in programming.\n\n\n\n\n\n\nAnonymous Feedback\n\n\n\nAs someone who is, myself, constantly learning and growing in many ways, I welcome your feedback about the course, the classroom dynamics, or anything else you’d like me to know. There is a link on Canvas to an anonymous feedback form. Please feel free to provide me with feedback at any time!"
  },
  {
    "objectID": "syllabus.html#student-learning-outcomes",
    "href": "syllabus.html#student-learning-outcomes",
    "title": "syllabus",
    "section": "",
    "text": "By the end of the semester, students will be able to do the following:\n\nevaluate quantitative information with regards to clinical and biological data. We’ll be sure to keep in mind:\n\nCareful presentation of data\nConsideration of variability\nMeaningful comparisons\n\ncritically evaluate the medical literature with respect to design, analysis, and interpretation of results.\nunderstand the role of inherent variability and keep it in perspective when inferring results to a population.\ncritically evaluate medical results given in the mainstream media.\nread published studies with skepticism. Some people (in all fields!) wrongly believe that all studies published in a peer review publication must be 100% accurate and/or well designed studies. In this course, you will learn the tools to recognize, interpret, and critique statistical results in medical literature."
  },
  {
    "objectID": "syllabus.html#inclusion-goals",
    "href": "syllabus.html#inclusion-goals",
    "title": "syllabus",
    "section": "",
    "text": "In an ideal world, science would be objective. However, much of science is subjective and is historically built on a small subset of privileged voices. In this class, we will make an effort to recognize how science (and data science!) has played a role in both understanding diversity as well as in promoting systems of power and privilege. I acknowledge that there may be both overt and covert biases in the material due to the lens with which it was written, even though the material is primarily of a scientific nature. Integrating a diverse set of experiences is important for a more comprehensive understanding of science. I would like to discuss issues of diversity in statistics as part of the course from time to time.\nPlease contact me if you have any suggestions to improve the quality of the course materials.\nFurthermore, I would like to create a learning environment for my students that supports a diversity of thoughts, perspectives and experiences, and honors your identities (including race, gender, class, sexuality, religion, ability, etc.) To help accomplish this:\n\nIf you have a name and/or set of pronouns that differ from those that appear in your official records, please let me know!\nIf you feel like your performance in the class is being impacted by your experiences outside of class, please don’t hesitate to come and talk with me. You can also relay information to me via your mentors. I want to be a resource for you.\n\nI (like many people) am still in the process of learning about diverse perspectives and identities. If something was said in class (by anyone) that made you feel uncomfortable, please talk to me about it. As a participant in course discussions, you should also strive to honor the diversity of your classmates."
  },
  {
    "objectID": "syllabus.html#technical-details",
    "href": "syllabus.html#technical-details",
    "title": "syllabus",
    "section": "",
    "text": "Modern Data Science with R, 3rd edition by Baumer, Kaplan, and Horton.\nR for Data Science, 2nd edition by Wickham, Çetinkaya-Rundel, and Grolemund.\n\n\n\n\n\n\nDates\n\n\n\n\nQuizzes on Sep 17, Oct 1, Oct 3, Nov 5, Nov 19, and Dec 3 (in class)\n9.24.25 Project 1 due\n10.8.25 Project 2 due\n10.29.25 Project 3 due\n11.12.25 Project 4 due\n11.26.25 Project 5 due\n12.5.25 (Friday) or 5.10.25 (Tuesday) Project Presentations (9am-noon)\n12.10.25 Project 6 write-up due (on GitHub by midnight)"
  },
  {
    "objectID": "syllabus.html#important-features",
    "href": "syllabus.html#important-features",
    "title": "syllabus",
    "section": "",
    "text": "The prerequisite for this class is some computer science.\n\n\n\nLabs will take place on most days with the lab write-up due just before the following class period. See instructions for using GitHub on the course website for how to turn in assignments.\n\n\n\nThe class expectations are that you show up for class and labs and turn in a final project. A successful final project is required to pass the class. Additionally, you should not miss more than 1 or 2 classes nor should you miss turning in more than 1 or 2 labs.\n\n:::"
  },
  {
    "objectID": "syllabus.html#footnotes",
    "href": "syllabus.html#footnotes",
    "title": "syllabus",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nadapted from Monica Linden, Brown University↩︎"
  },
  {
    "objectID": "notes.html",
    "href": "notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "Class notes can be found at http://st47s.com/DS002R/Notes/.\n\n\n\n\n\n\n\n\n\nReuseCC-BY-SA-4.0"
  },
  {
    "objectID": "clicker.html",
    "href": "clicker.html",
    "title": "Clicker Questions for DS2 - Foundations of Data Science",
    "section": "",
    "text": "to go along with \nModern Data Science with R, 3rd edition by Baumer, Kaplan, and Horton\nR for Data Science, 2nd edition by Wickham, Çetinkaya-Rundel, and Grolemund\n\n\n\n\nR / R Studio / Quarto1\n\nall good\nstarted, progress is slow and steady\nstarted, very stuck\nhaven’t started yet\nwhat do you mean by “R”?\n\n\n\n\nGit / GitHub2\n\nall good\nstarted, progress is slow and steady\nstarted, very stuck\nhaven’t started yet\nwhat do you mean by “Git”?\n\n\n\n\nWhere can I get feedback on my HW assignments / quizzes?3\n\nprof will return paper versions\non Gradescope\non Canvas\non GitHub\n\n\n\n\nWhich of the following includes talking to the remote version of GitHub?4\n\nchanging your name (updating the YAML)\ncommitting the file(s)\npushing the file(s)\nsome of the above\nall of the above\n\n\n\n\nWhat is the error?5\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup2 &lt;-- \"Hello to you!\"\n\n\n\nWhat is the error?6\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\n3shup &lt;-  \"Hello to you!\"\n\n\n\nWhat is the error?7\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup4 &lt;-  \"Hello to you!\n\n\n\nWhat is the error?8\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup5 &lt;-  date()\n\n\n\nWhat is the error?9\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup6 &lt;-  sqrt 10\n\n\n\nDo you keep a calendar / schedule / planner?10\n\nYes\nNo\n\n\n\n\nDo you keep a calendar / schedule / planner? If you answered “Yes” …11\n\nYes, on Google Calendar\nYes, on Calendar for macOS\nYes, on Outlook for Windows\nYes, in some other app\nYes, by hand\n\n\n\n\nWhere should I put things I’ve created for the HW (e.g., data, .ics file, etc.)12\n\nUpload into remote GitHub directory\nIn the local folder which also has the R project\nIn my Downloads\nSomewhere on my Desktop\nIn my Home directory\n\n\n\n\nThe goal of making a figure is…13\n\nTo draw attention to your work.\nTo facilitate comparisons.\nTo provide as much information as possible.\n\n\n\n\nA good reason to make a particular choice of a graph is:14\n\nBecause the journal / field has particular expectations for how the data are presented.\nBecause some variables naturally fit better on some graphs (e.g., numbers on scatter plots).\nBecause that graphic displays the message you want as optimally as possible.\n\n\n\n\nWhat are the visual cues on this plot?15\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat are the visual cues on this plot?16\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat are the visual cues on this plot?17\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhy are the points orange?18\n\nR translates “navy” into orange.\ncolor must be specified in geom_point()\ncolor must be specified outside the aes() function\nthe default plot color is orange\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78, \n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point() +          \n  labs(title = \"US Births in 1978\")\n\n\n\n\n\nWhy are the dots blue and the lines colored?19\n\ndot color is given as “navy”, line color is given as wday.\nboth colors are specified in the ggplot() function.\ndot coloring takes precedence over line coloring.\nline coloring takes precedence over dot coloring.\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting vs. Mapping. If I want information to be passed to all data points (not variable):20\n\nmap the information inside the aes() function.\nset the information outside the aes() function\n\n\n\n\nThe Snow figure was most successful at:21\n\nmaking the data stand out\nfacilitating comparison\nputting the work in context\nsimplifying the story\n\n\n\n\nThe Challenger figure(s) was(were) least successful at:22\n\nmaking the data stand out\nfacilitating comparison\nputting the work in context\nsimplifying the story\n\n\n\n\nThe biggest difference between Snow and the Challenger was:23\n\nThe amount of information portrayed.\nOne was better at displaying cause.\nOne showed the relevant comparison better.\nOne was more artistic.\n\n\n\n\nCaffeine and Calories. What was the biggest concern over the average value axes?24\n\nIt isn’t at the origin.\nThey should have used all the data possible to find averages.\nThere wasn’t a random sample.\nThere wasn’t a label explaining why the axes were where they were.\n\n\n\n\nWhy is there no y designation in the aes() function for the geom_bar() geometry?25\n\nIt is outside the aes() function.\nThere is a default value for what y should be when not specified.\ny is specified in ggplot().\nThe job of a bar plot is to count the number of instances.\nThe y variable is the same as the x variable.\n\n\n\n\nWhat is the difference between fill = children and position = \"fill\"?26\n\nfill = children colors and position = \"fill\" changes the y-axis\nfill = children changes the y-axis and position = \"fill\" colors\nfill = children goes in the aes and position = \"fill\" goes outside the aes\nfill = children goes outside the aes and position = \"fill\" goes inside the aes\nfill = children and position = \"fill\" are two different ways to write the same thing.\n\n\n\n\nWhat is the difference between geom_bar() and geom_histogram()?27\n\nThey are the different names for the same function.\ngeom_bar() is for numbers and geom_histogram() is for categorical variables.\ngeom_bar() is for categorical variables and geom_histogram() is for nubmers.\ngeom_bar() produces counts and geom_histogram() produces percentages.\ngeom_bar() produces percentages and geom_histogram() produces counts.\n\n\n\n\nWhich data represents the ideal format for ggplot2 and dplyr?28\n\n\n\n\n\n\n\ntable a\n\n\nyear\nAlgeria\nBrazil\nColumbia\n\n\n\n\n2000\n7\n12\n16\n\n\n2001\n9\n14\n18\n\n\n\n\n\n\n\n\n\n\n\n\n\ntable b\n\n\ncountry\nY2000\nY2001\n\n\n\n\nAlgeria\n7\n9\n\n\nBrazil\n12\n14\n\n\nColumbia\n16\n18\n\n\n\n\n\n\n\n\n\n\n\n\n\ntable c\n\n\ncountry\nyear\nvalue\n\n\n\n\nAlgeria\n2000\n7\n\n\nAlgeria\n2001\n9\n\n\nBrazil\n2000\n12\n\n\nBrazil\n2001\n14\n\n\nColumbia\n2000\n16\n\n\nColumbia\n2001\n18\n\n\n\n\n\n\n\n\n\nWhat is wrong with the following code?29\n\nshould only be one =\nBakery should be upper case\ntype should not be in quotes\nuse mutate instead of filter\nstarbucks in wrong place\n\n\n\nResult &lt;- |&gt; filter(starbucks,\n        type == \"bakery\")\n\n\n\nEach of the statements except one will accomplish the same calculation. Which one does not match?30\n\n\n#(a) \nstarbucks |&gt; \n  group_by(type) |&gt; \n  summarize(average_fat = mean(fat))\n\n#(b) \ngroup_by(starbucks, type) |&gt; \n  summarize(average_fat = mean(fat))\n\n#(c)\ngroup_by(starbucks, type) |&gt; \n  summarize(average_fat = sum(fat))\n\n#(d)\ntemp &lt;- group_by(starbucks, type)\n\nsummarize(temp, average_fat = mean(fat))\n\n#(e)\nsummarize(group_by(starbucks, type), \n          average_fat = mean(fat))\n\n\n\nFill in Q1.31\n\nfilter()\narrange()\nselect()\nmutate()\ngroup_by()\n\n\n\nresult &lt;- lego_sample |&gt;\n  Q1(!is.na(minifigures)) |&gt; \n  # keep only those with minifigures\n  group_by(Q2, Q2) |&gt; \n  summarize(total = Q3)\n\n\n\nFill in Q2.32\n\n(theme, price)\n(theme, year)\n(year, price)\n(pieces, year)\n(pieces, price)\n\n\n\nresult &lt;- lego_sample |&gt;\n  Q1(!is.na(minifigures)) |&gt; \n  group_by(Q2, Q2) |&gt; \n  # for each theme and year\n  summarize(total = Q3)\n\n\n\nFill in Q3.33\n\nn_distinct(pieces)\nn_distinct(price)\nsum(pieces)\nsum(pages)\nmean(pieces)\n\n\n\nresult &lt;- lego_sample |&gt;\n  Q1(!is.na(minifigures)) |&gt; \n  group_by(Q2, Q2) |&gt; \n  summarize(ave_pieces = Q3)\n  # average number of pieces (each theme, each year)\n\n\n\nRunning the code.34\n\n\nlibrary(openintro)\nlego_sample |&gt;\n  filter(!is.na(minifigures)) |&gt; \n  # keep only those with minifigures\n  group_by(theme, year) |&gt; \n  # for each theme for each year\n  summarize(ave_pieces = mean(pieces))\n\n# A tibble: 9 × 3\n# Groups:   theme [3]\n  theme    year ave_pieces\n  &lt;chr&gt;   &lt;dbl&gt;      &lt;dbl&gt;\n1 City     2018      189. \n2 City     2019      257. \n3 City     2020      349  \n4 DUPLO®   2018       50.5\n5 DUPLO®   2019       32.5\n6 DUPLO®   2020       45.8\n7 Friends  2018      354. \n8 Friends  2019      259. \n9 Friends  2020      250. \n\n\n\n#(a)\nstarbucks |&gt; \n  group_by(type) |&gt; \n  summarize(average_fat = mean(fat))\n\n# A tibble: 7 × 2\n  type          average_fat\n  &lt;fct&gt;               &lt;dbl&gt;\n1 bakery              14.6 \n2 bistro box          18.4 \n3 hot breakfast       13.7 \n4 parfait              6.5 \n5 petite               9.33\n6 salad                0   \n7 sandwich            14.7 \n\n#(b) \ngroup_by(starbucks, type) |&gt; \n  summarize(average_fat = mean(fat))\n\n# A tibble: 7 × 2\n  type          average_fat\n  &lt;fct&gt;               &lt;dbl&gt;\n1 bakery              14.6 \n2 bistro box          18.4 \n3 hot breakfast       13.7 \n4 parfait              6.5 \n5 petite               9.33\n6 salad                0   \n7 sandwich            14.7 \n\n#(c)\ngroup_by(starbucks, type) |&gt; \n  summarize(average_fat = sum(fat))\n\n# A tibble: 7 × 2\n  type          average_fat\n  &lt;fct&gt;               &lt;dbl&gt;\n1 bakery              597  \n2 bistro box          147  \n3 hot breakfast       110. \n4 parfait              19.5\n5 petite               84  \n6 salad                 0  \n7 sandwich            103  \n\n#(d)\ntemp &lt;- group_by(starbucks, type)\n\nsummarize(temp, average_fat = mean(fat))\n\n# A tibble: 7 × 2\n  type          average_fat\n  &lt;fct&gt;               &lt;dbl&gt;\n1 bakery              14.6 \n2 bistro box          18.4 \n3 hot breakfast       13.7 \n4 parfait              6.5 \n5 petite               9.33\n6 salad                0   \n7 sandwich            14.7 \n\n#(e)\nsummarize(group_by(starbucks, type), \n          average_fat = mean(fat))\n\n# A tibble: 7 × 2\n  type          average_fat\n  &lt;fct&gt;               &lt;dbl&gt;\n1 bakery              14.6 \n2 bistro box          18.4 \n3 hot breakfast       13.7 \n4 parfait              6.5 \n5 petite               9.33\n6 salad                0   \n7 sandwich            14.7 \n\n\n\n\nWhere can I get feedback on my HW assignments / quizzes?35\n\nprof will return paper versions\non Gradescope\non Canvas\non GitHub\n\n\n\n\nWhere can I get feedback on my projects?36\n\nprof will return paper versions\non Gradescope\non Canvas\non GitHub\n\n\n\n\nFill in Q1.37\n\ngdp\nyear\ngdpval\ncountry\n–country\n\n\n\nGDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n       pivot_longer(cols = Q1, \n                    names_to = Q2, \n                    values_to = Q3)\n\n\n\nFill in Q2.38\n\ngdp\nyear\ngdpval\ncountry\n–country\n\n\n\nGDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n       pivot_longer(cols = Q1, \n                    names_to = Q2, \n                    values_to = Q3)\n\n\n\nFill in Q3.39\n\ngdp\nyear\ngdpval\ncountry\n–country\n\n\n\nGDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n       pivot_longer(cols = Q1, \n                    names_to = Q2, \n                    values_to = Q3)\n\n\n\nYou’d like to use the data to make a plot with Midterm score on the x-axis and Final score on the y-axis using the following ggplot() code. Which data frame should you use?40\n\nuse raw data\nuse pivot_wider() on raw data\nuse pivot_longer() on raw data\n\n\n\nggplot(___, aes(x = ___, y = ___, color = ___)) + \n  geom_point()\n\n\n\n# A tibble: 4 × 3\n  student test    score\n  &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;\n1 Alice   Midterm    85\n2 Alice   Final      90\n3 Bob     Midterm    78\n4 Bob     Final      82\n\n\n\n\ngrades |&gt; \n  pivot_wider(names_from = test, values_from = score)\n\n# A tibble: 2 × 3\n  student Midterm Final\n  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 Alice        85    90\n2 Bob          78    82\n\n\n\ngrades |&gt; \n  pivot_wider(names_from = test, values_from = score) |&gt; \n  ggplot(aes(x = Midterm, y = Final, color = student)) + \n  geom_point()\n\n\n\n\n\n\n\n\n\n\nResponse to stimulus (in ms) after only 3 hrs of sleep for 9 days. You want to make a plot with the subject’s reaction time (y-axis) vs the number of days of sleep restriction (x-axis) using the following ggplot() code. Which data frame should you use?41\n\nuse raw data\nuse pivot_wider() on raw data\nuse pivot_longer() on raw data\n\n\n\nggplot(___, aes(x = ___, y = ___, color = ___)) + \n  geom_line()\n\n\n\n# A tibble: 18 × 11\n   Subject day_0 day_1 day_2 day_3 day_4 day_5 day_6 day_7 day_8 day_9\n     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     308  250.  259.  251.  321.  357.  415.  382.  290.  431.  466.\n 2     309  223.  205.  203.  205.  208.  216.  214.  218.  224.  237.\n 3     310  199.  194.  234.  233.  229.  220.  235.  256.  261.  248.\n 4     330  322.  300.  284.  285.  286.  298.  280.  318.  305.  354.\n 5     331  288.  285   302.  320.  316.  293.  290.  335.  294.  372.\n 6     332  235.  243.  273.  310.  317.  310   454.  347.  330.  254.\n 7     333  284.  290.  277.  300.  297.  338.  332.  349.  333.  362.\n 8     334  265.  276.  243.  255.  279.  284.  306.  332.  336.  377.\n 9     335  242.  274.  254.  271.  251.  255.  245.  235.  236.  237.\n10     337  312.  314.  292.  346.  366.  392.  404.  417.  456.  459.\n11     349  236.  230.  239.  255.  251.  270.  282.  308.  336.  352.\n12     350  256.  243.  256.  256.  269.  330.  379.  363.  394.  389.\n13     351  251.  300.  270.  281.  272.  305.  288.  267.  322.  348.\n14     352  222.  298.  327.  347.  349.  353.  354.  360.  376.  389.\n15     369  272.  268.  257.  278.  315.  317.  298.  348.  340.  367.\n16     370  225.  235.  239.  240.  268.  344.  281.  348.  365.  372.\n17     371  270.  272.  278.  282.  279.  285.  259.  305.  351.  369.\n18     372  269.  273.  298.  311.  287.  330.  334.  343.  369.  364.\n\n\n\n\nsleep_long &lt;- sleep_wide |&gt;\n  pivot_longer(cols = -Subject,\n               names_to = \"day\",\n               names_prefix = \"day_\",\n               values_to = \"reaction_time\")\n\nsleep_long\n\n# A tibble: 180 × 3\n   Subject day   reaction_time\n     &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;\n 1     308 0              250.\n 2     308 1              259.\n 3     308 2              251.\n 4     308 3              321.\n 5     308 4              357.\n 6     308 5              415.\n 7     308 6              382.\n 8     308 7              290.\n 9     308 8              431.\n10     308 9              466.\n# ℹ 170 more rows\n\n\n\n\nsleep_wide |&gt;\n  pivot_longer(cols = -Subject,\n               names_to = \"day\",\n               names_prefix = \"day_\",\n               values_to = \"reaction_time\") |&gt;\n  ggplot(aes(x = day, y = reaction_time, color = as.factor(Subject), group = as.factor(Subject))) + \n  geom_line()\n\n\n\n\n\n\n\n\n\n\nConsider band members from the Beatles and the Rolling Stones. Who is removed in a right_join()?42\n\n\nMick\nJohn\nPaul\nKeith\nImpossible to know\n\n\nband_members |&gt; \n  right_join(band_instruments, by = \"name\")\n\n\n\nConsider band members from the Beatles and the Rolling Stones. Which variables are removed in a right_join()?43\n\n\nname\nband\nplays\nnone of them \n\n\n\n\nband_members\n\n# A tibble: 3 × 2\n  name  band   \n  &lt;chr&gt; &lt;chr&gt;  \n1 Mick  Stones \n2 John  Beatles\n3 Paul  Beatles\n\n\n\n\nband_instruments\n\n# A tibble: 3 × 2\n  name  plays \n  &lt;chr&gt; &lt;chr&gt; \n1 John  guitar\n2 Paul  bass  \n3 Keith guitar\n\n\n\n\n\nband_members |&gt; \n  right_join(band_instruments, by = \"name\")\n\n\n\nWhat happens to Mick’s plays variable in a full_join()?44\n\n\nMick is removed\nchanges to guitar\nchanges to bass\nNA\nNULL \n\n\n\n\nband_members\n\n# A tibble: 3 × 2\n  name  band   \n  &lt;chr&gt; &lt;chr&gt;  \n1 Mick  Stones \n2 John  Beatles\n3 Paul  Beatles\n\n\n\n\nband_instruments\n\n# A tibble: 3 × 2\n  name  plays \n  &lt;chr&gt; &lt;chr&gt; \n1 John  guitar\n2 Paul  bass  \n3 Keith guitar\n\n\n\n\n\nband_members |&gt; \n  full_join(band_instruments, by = \"name\")\n\n\n\nStudents on the roster but not in any class.45\n\nroster |&gt; inner_join(classes, by = “student_id”) |&gt; filter(major != subject)`\nclasses |&gt; anti_join(roster, by = \"student_id\")\nroster |&gt; anti_join(classes, by = \"student_id\")\nroster |&gt; full_join(classes, by = \"student_id\")\nroster |&gt; semi_join(classes, by = \"student_id\")\n\n\n\n\n\nroster\n\n# A tibble: 5 × 3\n  student_id name  major  \n       &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  \n1          1 Alice Math   \n2          2 Ben   CS     \n3          3 Carla History\n4          4 David CS     \n5          5 Eva   Math   \n\n\n\n\nclasses\n\n# A tibble: 5 × 3\n  student_id class       subject  \n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;    \n1          1 Calc I      Math     \n2          2 Intro CS    CS       \n3          2 Data Struct CS       \n4          4 Intro CS    CS       \n5          6 Chemistry   Chemistry\n\n\n\n\n\n\nAll students on the roster and all enrollments.46\n\nroster |&gt; inner_join(classes, by = “student_id”) |&gt; filter(major != subject)`\nclasses |&gt; anti_join(roster, by = \"student_id\")\nroster |&gt; anti_join(classes, by = \"student_id\")\nroster |&gt; full_join(classes, by = \"student_id\")\nroster |&gt; semi_join(classes, by = \"student_id\")\n\n\n\n\n\nroster\n\n# A tibble: 5 × 3\n  student_id name  major  \n       &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  \n1          1 Alice Math   \n2          2 Ben   CS     \n3          3 Carla History\n4          4 David CS     \n5          5 Eva   Math   \n\n\n\n\nclasses\n\n# A tibble: 5 × 3\n  student_id class       subject  \n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;    \n1          1 Calc I      Math     \n2          2 Intro CS    CS       \n3          2 Data Struct CS       \n4          4 Intro CS    CS       \n5          6 Chemistry   Chemistry\n\n\n\n\n\n\nStudents from the roster who are enrolled in at least one class.47\n\nroster |&gt; inner_join(classes, by = “student_id”) |&gt; filter(major != subject)`\nclasses |&gt; anti_join(roster, by = \"student_id\")\nroster |&gt; anti_join(classes, by = \"student_id\")\nroster |&gt; full_join(classes, by = \"student_id\")\nroster |&gt; semi_join(classes, by = \"student_id\")\n\n\n\n\n\nroster\n\n# A tibble: 5 × 3\n  student_id name  major  \n       &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  \n1          1 Alice Math   \n2          2 Ben   CS     \n3          3 Carla History\n4          4 David CS     \n5          5 Eva   Math   \n\n\n\n\nclasses\n\n# A tibble: 5 × 3\n  student_id class       subject  \n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;    \n1          1 Calc I      Math     \n2          2 Intro CS    CS       \n3          2 Data Struct CS       \n4          4 Intro CS    CS       \n5          6 Chemistry   Chemistry\n\n\n\n\n\n\nStudents in a class but not on the roster.48\n\nroster |&gt; inner_join(classes, by = “student_id”) |&gt; filter(major != subject)`\nclasses |&gt; anti_join(roster, by = \"student_id\")\nroster |&gt; anti_join(classes, by = \"student_id\")\nroster |&gt; full_join(classes, by = \"student_id\")\nroster |&gt; semi_join(classes, by = \"student_id\")\n\n\n\n\n\nroster\n\n# A tibble: 5 × 3\n  student_id name  major  \n       &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  \n1          1 Alice Math   \n2          2 Ben   CS     \n3          3 Carla History\n4          4 David CS     \n5          5 Eva   Math   \n\n\n\n\nclasses\n\n# A tibble: 5 × 3\n  student_id class       subject  \n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;    \n1          1 Calc I      Math     \n2          2 Intro CS    CS       \n3          2 Data Struct CS       \n4          4 Intro CS    CS       \n5          6 Chemistry   Chemistry\n\n\n\n\n\n\nStudents on the roster taking at least one class outside their major.49\n\nroster |&gt; inner_join(classes, by = “student_id”) |&gt; filter(major != subject)`\nclasses |&gt; anti_join(roster, by = \"student_id\")\nroster |&gt; anti_join(classes, by = \"student_id\")\nroster |&gt; full_join(classes, by = \"student_id\")\nroster |&gt; semi_join(classes, by = \"student_id\")\n\n\n\n\n\nroster\n\n# A tibble: 5 × 3\n  student_id name  major  \n       &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  \n1          1 Alice Math   \n2          2 Ben   CS     \n3          3 Carla History\n4          4 David CS     \n5          5 Eva   Math   \n\n\n\n\nclasses\n\n# A tibble: 5 × 3\n  student_id class       subject  \n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;    \n1          1 Calc I      Math     \n2          2 Intro CS    CS       \n3          2 Data Struct CS       \n4          4 Intro CS    CS       \n5          6 Chemistry   Chemistry\n\n\n\n\n\n\nWhat is the output of the following R code?50\n\n\n“a 1” “b 2” “c 3”\n“a, 1” “b, 2” “c, 3”\n“a1” “b2” “c3”\n“a b c” “1 2 3”\n“abc” “123”\n\n\nstr_c(letters = c(\"a\", \"b\", \"c\"),\n      numbers = c(1, 2, 3))\n\n\n\nWhat is the output of the following R code?51\n\n\n“a 1” “b 2” “c 3”\n“a, 1” “b, 2” “c, 3”\n“a1” “b2” “c3”\n“a b c” “1 2 3”\n“abc” “123”\n\n\nstr_c(letters = c(\"a\", \"b\", \"c\"),\n      numbers = c(1, 2, 3), sep = \" \")\n\n\n\nWhat is the output of the following R code?52\n\n“abc” “hifg”\n“ab” “hifg”\n“ab” “ifg”\n“abc” “ifg”\n\n\n\nx &lt;- c(\"abcde\", \"ghifgh\")\nstr_sub(x, start = c(1, 3), end = c(2, 5))\n\n\n\nWhat is the output of the following R code?53\n\n\n“one -pple” “two p-ars” “three bananas”\n“on- -ppl-” “two p–rs” “thr– b-n-n-s”\n“on- apple” “two p-ars” “thr-e bananas”\n\n\nfruits &lt;- c(\"one apple\", \"two pears\", \"three bananas\")\nstr_replace(fruits, pattern = c(\"a\", \"e\", \"i\"), replacement = \"-\")\n\n\n\nWhat is the output of the following R code?54\n\n\nTRUE\nTRUE TRUE TRUE TRUE\nTRUE FALSE FALSE FALSE\nFALSE\n\n\nfruit &lt;- c(\"apple\", \"banana\", \"pear\", \"pineapple\")\nstr_detect(fruit, pattern = \"a\")\n\n\n\nIf unspecified, the levels of a factor variable will be ordered:55\n\nin the order that they first show up in the dataset\nfrom shortest to longest in terms of characters\nfrom longest to shortest in terms of characters\nalphabetically, from a to z\nalphabetically, from z to a\n\n\n\n\nWhat does this code do?56\n\nNew variable which is the average of the calories\nNew variable which is the average of the type\nChanges the values of type\nChanges the levels of type\nChanges the order of the levels of type\n\n\n\nstarbucks |&gt; \n  mutate(type = fct_reorder(type, calories, .fun = \"mean\", .desc = TRUE))\n\n\n\nWhat does fct_recode() do here?57\n\nCreates a new variable\nChanges the values of x\nChanges the levels of x\nChanges the order of the levels of x\nSome of the above\nAll of the above\n\n\n\nx &lt;- factor(c(\"apple\", \"bear\", \"dear\", \"banana\"))\nx\nfct_recode(x, fruit = \"apple\", fruit = \"banana\")\n\n\n\nWhat is January 31 + one month?58\n\nFebruary 31\nMarch 3\nFebruary 28 (assuming no leap year)\nI don’t want to answer the question\n\n\n\n\nWhat is the difference between code lines 3 and 4 below?59\n\nsame thing\ndifferent months\ndifferent output formatting\ndifferent input\ndifferent calculation\n\n\n\nlibrary(lubridate)\ntoday &lt;- now()\nmonth(today)\nmonth(today, label = TRUE)\n\n\n\nWhat does this number mean?60\n\nToday is the 39th day of the month.\nToday is the 39th day of the year.\nToday is the 39th week of the month.\nToday is the 39th week of the year.\n\n\n\ntoday &lt;- now()\nweek(today)\n\n[1] 39\n\n\n\n\nWhat is the difference in these two functions?61\n\n\nDay of month and day of year.\nDay of month and day of week.\nDay of week and day of year.\nDay of weekend and day of month.\n\n\nmday(today)\n\n[1] 24\n\nyday(today)\n\n[1] 267\n\n\n\n\nWhat is the result of the code?62\n\nTRUE\nFALSE\n“2025-09-01”\n“2025-02-19”\n\n\n\ntoday &gt; ymd(\"2025-09-01\")\n\n\n\nstr_subset(\"q[^u]\", very.large.word.list) would not match which of the following?63\n\nIraqi\nIraqian\nIraq\nzaqqun (tree that “springs out of the bottom of Hell”, in the Quran)\nQantas (the Australian airline)\n\n\n\n\nWhich of the following regex would match to both “grey” and “gray”?64\n\n“gr[ae]y”\n“gr(a|e)y”\n“gray | grey”\n“gr[a|e]y”\nsome / all of the above – which ones?\n\n\n\n\nWhat will the result be for the following code?65\n\n10\n1\n0\nNA\n\n\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")\n\n\n\nWhat will the result be for the following code?66\n\n10\n1\n0\nNA\n\n\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d+\")\n\n\n\nWhat will the result be for the following code?67\n\n.\nEpisode 2: The pie whisperer. (4 August 2015)\nEpisode\nE\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".\")\n\n\n\nWhat will the result be for the following code?68\n\n.\nEpisode 2: The pie whisperer. (4 August 2015)\nEpisode\nE\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".+\")\n\n\n\nWhat will the result be for the following code?69\n\n.\nEpisode 2: The pie whisperer. (4 August 2015)\nEpisode\nE\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\.\")\n\n\n\nWhat is the difference between the output for the two regular expressions below?70\n\nThey give the same result.\nThe first is not case sensitive.\nThe second allow for all the variants.\nThe first includes Jane.\n\n\n\nstring &lt;- c(\"Mary\", \"Mar\", \"Janet\", \"jane\", \"Susan\", \"Sue\")\nstr_extract(string, \"\\\\bMary|Jane|Sue\\\\b\")\nstr_extract(string, \"\\\\b(Mary|Jane|Sue)\\\\b\")\n\n\n\nHow can I pull out just the numerical information in “$47”?71\n\n\"(?&lt;=\\\\$)\\\\d\"\n\"(?&lt;=\\\\$)\\\\d+\"\n\"\\\\d(?=\\\\$)\"\n\"\\\\d+(?=\\\\$)\"\n\n\n\n\nYou want to know all the types of pies in the text strings. They are written as, for example “apple pie”.72\n\n\"\\\\w+(?!pie)\"\n\"\\\\w+(?! pie)\"\n\"\\\\w+(?=pie)\"\n\"\\\\w+(?= pie)\"\n\n\n\n\nstr_extract(c(\"apple pie\", \"chocolate pie\", \"peach pie\"), \"\\\\w+(?= pie)\")\n\n[1] \"apple\"     \"chocolate\" \"peach\"    \n\n\n\nstr_extract(c(\"apple pie\", \"chocolate pie\", \"peach pie\"), \"\\\\w+(?=pie)\")\n\n[1] NA NA NA\n\n\n\n\nWe say that lookarounds are “zero-lenghth assertions”. What does that mean?73\n\nwe return the string in the lookaround\nwe replace the string in the lookaround\nwe return the string at the lookaround\nwe replace the string at the lookaround\n\n\n\n\nWhat will happen when I run the following code?74\n\n0\n3\n9\nNA\nerror (code will fail)\n\n\n\nmy_power &lt;- function(x, y){\n  return(x^y)\n}\nmy_power(3)\n\n\n\nWhat will happen when I run the following code?75\n\n0\n3\n9\nNA\nerror (code will fail)\n\n\n\nmy_power &lt;- function(x, y = 2){\n  return(x^y)\n}\nmy_power(3)\n\n\n\nWhat will happen when I run the following code?76\n\n4\n8\n9\nNA\nerror (code will fail)\n\n\n\nmy_power &lt;- function(x, y = 2){\n  return(x^y)\n}\nmy_power(2, 3)\n\n\n\nWhat will happen when I run the following code?77\n\n4\n8\n9\nNA\nerror (code will fail)\n\n\n\nmy_power &lt;- function(x = 2, y = 3){\n  return(x^y)\n}\nmy_power( )\n\n\n\nConsider the addTen() function. The following output is a result of which map_*() call?78\n\n\nmap(c(1,4,7), addTen)\nmap_dbl(c(1,4,7), addTen)\nmap_chr(c(1,4,7), addTen)\nmap_lgl(c(1,4,7), addTen)\n\n\naddTen &lt;- function(wow) {\n  return(wow + 10)\n}\n\n\n\n[1] \"11.000000\" \"14.000000\" \"17.000000\"\n\n\n\n\nWhich of the following input is allowed?79\n\nmap(c(1, 4, 7), addTen)\nmap(list(1, 4, 7), addTen)\nmap(data.frame(a=1, b=4, c=7), addTen)\nsome of the above\nall of the above\n\n\n\n\nWhich of the following produces a different output?80\n\nmap(c(1, 4, 7), addTen)\nmap(c(1, 4, 7), ~addTen(.x))\nmap(c(1, 4, 7), ~addTen)\nmap(c(1, 4, 7), function(hi) (hi + 10))\nmap(c(1, 4, 7), ~(.x + 10))\n\n\n\n\nWhat will the following code output?81\n\n3 random normals\n6 random normals\n18 random normals\n\n\n\ninput\n\n# A tibble: 3 × 3\n      n  mean    sd\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     1     1     3\n2     2     3     1\n3     3    47    10\n\n\n\ninput |&gt; \n  pmap(rnorm)\n\n\n\nWhat is the following error telling me?82\n\n\nI haven’t loaded lubridate.\nI can’t add months and days.\nThere is no object called jan31.\nmonths() is not a function.\nThere is no error\n\n\njan31 + months(0:11) + days(31)\n#&gt; Error in eval(expr, envir, enclos): object 'jan31' not found\n\n\n\nWhat is the following error telling me?83\n\n\nI haven’t loaded lubridate.\nI can’t add months and days.\nThere is no object called jan31.\nymd() is not a function.\nThere is no error.\n\n\n  jan31 &lt;- ymd(\"2021-01-31\")\n#&gt; Error in ymd(\"2021-01-31\"): could not find function \"ymd\"\n  jan31 + months(0:11) + days(31)\n#&gt; Error in eval(expr, envir, enclos): object 'jan31' not found\n\n\n\nWhat is the following error telling me?84\n\n\nI haven’t loaded lubridate.\nI can’t add months and days.\nThere is no object called jan31.\nymd() is not a function.\nThere is no error.\n\n\n  library(lubridate)\n#&gt; \n#&gt; Attaching package: 'lubridate'\n#&gt; The following objects are masked from 'package:base':\n#&gt; \n#&gt;     date, intersect, setdiff, union\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n#&gt;  [1] \"2021-03-03\" NA           \"2021-05-01\" NA           \"2021-07-01\"\n#&gt;  [6] NA           \"2021-08-31\" \"2021-10-01\" NA           \"2021-12-01\"\n#&gt; [11] NA           \"2022-01-31\"\n\n\n\nRank these in order of bad to best.85\n\n1, 2, 3\n1, 3, 2\n2, 1, 3\n3, 2, 1\n3, 1, 2\n\n\n\n# 1\nday_one\nday_1\n\n# 2\nDayOne\ndayone\n\n# 3\nT &lt;- FALSE\nc &lt;- 10\nmean &lt;- function(x) sum(x)\n\n\n\nWhich is better?86\n\n1\n2\n\n\n\n# 1\nmean(x, na.rm = TRUE)\n\n# 2\nmean (x, na.rm = TRUE)\nmean( x, na.rm = TRUE )\n\n\n\nWhich is better?87\n\n1\n2\n\n\n\n# 1\nheight&lt;-feet*12+inches\nmean(x, na.rm=TRUE)\n\n# 2\nheight &lt;- (feet * 12) + inches\nmean(x, na.rm = TRUE)\n\n\n\nWhich is better?88\n\n1\n2\n\n\n\n# 1\ndo_something_very_complicated(\n  something = \"that\",\n  requires = many,\n  arguments = \"some of which may be long\"\n)\n\n# 2\ndo_something_very_complicated(\"that\", requires, many, arguments,\n                              \"some of which may be long\"\n                              )\n\n\n\nWhich is better?89\n\n1\n2\n\n\n\n# 1\niris |&gt;\n  summarise(Sepal.Length = mean(Sepal.Length), Sepal.Width = mean(Sepal.Width), .by = Species)\n\n# 2\niris |&gt;\n  summarise(\n    Sepal.Length = mean(Sepal.Length),\n    Sepal.Width = mean(Sepal.Width),\n    .by = Species\n  )\n\n\n\nWhich one do you like best?90\n\n1\n2\n3\n\n\n\n# 1\nx |&gt;\n  semi_join(y |&gt; filter(is_valid))\n\n# 2\nx |&gt;\n  select(a, b, w) |&gt;\n  left_join(y |&gt; select(a, b, v), join_by(a, b))\n\n# 3\nx_join &lt;- x |&gt; select(a, b, w)\ny_join &lt;- y |&gt; select(a, b, v)\nleft_join(x_join, y_join, join_by(a, b))\n\n\n\nIn R the ifelse() function takes the arguments:91\n\n\nquestion, yes, no\nquestion, no, yes\nstatement, yes, no\nstatement, no, yes\noption1, option2, option3\n\n\n\nWhat is the output of the following:92\n\n“cat”, 30, “cat”, “cat”, 6\n“cat”, “30”, “cat”, “cat”, “6”\n1, “cat”, 5, “cat”, “cat”\n1, “cat”, 5, NA, “cat”\n“1”, “cat”, “5”, NA, “cat”\n\n\n\ndata &lt;- c(1, 30, 5, NA, 6)\n\nifelse(data &gt; 5, \"cat\", data)\n\n\n\nWhere can I get feedback on my HW assignments / quizzes?93\n\nprof will return paper versions\non Gradescope\non Canvas\non GitHub\n\n\n\n\nWhere can I get feedback on my projects?94\n\nprof will return paper versions\non Gradescope\non Canvas\non GitHub\n\n\n\n\nIn R, the set.seed() function95\n\n\nmakes your computations go faster\nkeeps track of your computation time\nprovides an important parameter\nrepeats the function\nmakes your results reproducible\n\n\n\nWhat could the following code give us?96\n\n\n[1] “a” “b” “c” “d” “e” “f” “g” “h” “i” “j”\n[1] “i” “b” “g” “d” “a”\n[1] “j” “g” “f” “i” “f”\n[1] “f” “h” “i” “e” “g” “d” “c” “j” “b” “a”\n[1] “e” “j” “e” “b” “e” “c” “f” “a” “e” “a”\n\n\n# shuffle\nset.seed(47)\nalph &lt;- letters[1:10]\nsample(alph, 10, replace = FALSE)\n\n\n\nWhat could the following code give us?97\n\n\n[1] “a” “b” “c” “d” “e” “f” “g” “h” “i” “j”\n[1] “i” “b” “g” “d” “a”\n[1] “j” “g” “f” “i” “f”\n[1] “f” “h” “i” “e” “g” “d” “c” “j” “b” “a”\n[1] “e” “j” “e” “b” “e” “c” “f” “a” “e” “a”\n\n\n# resample\nset.seed(47)\nalph &lt;- letters[1:10]\nsample(alph, 10, replace = TRUE)\n\n\n\nWhat could the following code give us?98\n\n\n[1] “a” “b” “c” “d” “e” “f” “g” “h” “i” “j”\n[1] “i” “b” “g” “d” “a”\n[1] “j” “g” “f” “i” “f”\n[1] “f” “h” “i” “e” “g” “d” “c” “j” “b” “a”\n[1] “e” “j” “e” “b” “e” “c” “f” “a” “e” “a”\n\n\n# sample from an infinite population\nset.seed(47)\nalph &lt;- letters[1:10]\nsample(alph, 10, replace = TRUE)\n\n\n\nWhat could the following code give us?99\n\n\n[1] “a” “b” “c” “d” “e” “f” “g” “h” “i” “j”\n[1] “i” “b” “g” “d” “a”\n[1] “j” “g” “f” “i” “f”\n[1] “f” “h” “i” “e” “g” “d” “c” “j” “b” “a”\n[1] “e” “j” “e” “b” “e” “c” “f” “a” “e” “a”\n\n\n# sample from  finite population\nset.seed(47)\nalph &lt;- letters[1:10]\nsample(alph, 10, replace = FALSE)\n\n\n\nWhat does the following give us?100\n\n\nthe number of hats that match\nthe number of hats that don’t match\nthe proportion of hats that match\nthe proportion of hats that don’t match\nwhether or not at least one hat matches\n\n\nsum(hats == random_hats)\n\n[1] 2\n\n\n\n\nWhat does the following give us?101\n\n\nthe number of hats that match\nthe number of hats that don’t match\nthe proportion of hats that match\nthe proportion of hats that don’t match\nwhether or not at least one hat matches\n\n\nmean(hats == random_hats)\n\n[1] 0.2\n\n\n\n\nWhat does the following give us?102\n\n\nthe number of hats that match\nthe number of hats that don’t match\nthe proportion of hats that match\nthe proportion of hats that don’t match\nwhether or not at least one hat matches\n\n\nsum(hats == random_hats) &gt; 0\n\n[1] TRUE\n\n\n\n\nWhat is the magic number?103\n\n\n10\n10, the number of overall hats\n10, the number of hats we select\n0\n0, the number of matching hats\n\n\nhats &lt;- c(1:10)\nrandom_hats &lt;- sample(hats, size = 10, replace = FALSE)\nsum(hats == random_hats) &gt; 0\n\n\n\nIn the SAT example, we ran a single iteration and found that the false positive and false negative rates were problematic. What should we do next?104\n\n\nRepeat for many iterations.\nChange the initial settings.\nBring this analysis to the people with power.\nAlways use two models.\nAlways use only one model.\n\n\n\nIn the SAT example, what types of things might we vary?105\n\n\nproportion to red vs blue\nhow variable the values are: N(talent, 15)\ndifferent number of times blues get to take the test\nhow close grades and SAT are to talent (bias?)\n\n\n\nWhat would you want to know from the investment allocation plots?106\n\nWhat is the average rate of return?\nWhat is the maximum rate of return?\nWhat is the minimum rate of return?\nHow often do I lose money?\n\n\n\n\nIf 16 infants with no genuine preference choose 16 toys, what is the most likely number of “helping” toys that will be chosen?107\n\n\n4\n7\n8\n9\n10\n\n\n\nHow likely is it that exactly 8 helpers will be chosen (if there is no preference)?108\n\n\n0-15%\n16-30%\n31-49%\n50%\n51-100%\n\n\n\nWhat if we flipped a coin 160 times? What percent of the time will the simulation flip exactly 80 heads?109\n\n\n0-15%\n16-30%\n31-49%\n50%\n51-100%\n\n\n\nIs our actual result of 14 (under the coin model)…110\n\n\nvery surprising?\nsomewhat surprising?\nnot very surprising?\n\n\n\nHypothesis: the number of hours that grade-school children spend doing homework predicts their future success on standardized tests.111\n\nnull, one sided\nnull, two sided\nalternative, one sided\nalternative, two sided\n\n\n\n\nHypothesis: king cheetahs on average run the same speed as standard spotted cheetahs.112\n\nnull, one sided\nnull, two sided\nalternative, one sided\nalternative, two sided\n\n\n\n\nHypothesis: the mean length of African elephant tusks has changed over the last 100 years.113\n\nnull, one sided\nnull, two sided\nalternative, one sided\nalternative, two sided\n\n\n\n\nHypothesis: the risk of facial clefts is equal for babies born to mothers who take folic acid supplements compared with those from mothers who do not.114\n\nnull, one sided\nnull, two sided\nalternative, one sided\nalternative, two sided\n\n\n\n\nHypothesis: caffeine intake during pregnancy affects mean birth weight.115\n\nnull, one sided\nnull, two sided\nalternative, one sided\nalternative, two sided\n\n\n\n\nIn this class, the word parameter means:116\n\nThe values in a model\nNumbers that need to be tuned\nA number which is calculated from a sample of data.\nA number which (is almost always unknown and) describes a population.\n\n\n\n\nTo run a two-sample permutation test, should you permute the variable with or without replacement?117\n\nwith replacement (replace = TRUE)\nwithout replacement (replace = FALSE)\n\n\n\n\nThe histogram is a null sampling distribution for the difference in two means. The red line is the observed value from the data. To compute the p-value, which area should be considered?118\n\n\n\n\nThe area to the left.\nThe area to the right.\nDouble the area to the left.\nIt depends.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe histogram is a null sampling distribution for the difference in two means. The red line is the observed value from the data. The alternative hypothesis is \\(H_A: \\mu_1 - \\mu_2 \\ne 0\\). To compute the p-value, which area should be considered?119\n\n\n\n\nThe area to the left.\nThe area to the right.\nDouble the area to the left.\nIt depends.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is misleading here?120\n\nVery low data-to-ink ratio?121\nNon-intuitive sorting?\nWrong / changing scales?\n1-dim information in 2-D or 3-d?\nInconsistent labeling\n\n\n\n\n\n\n\nReproduction of a data graphic reporting the number of gun deaths in Florida over time. The original image was published by Reuters. [@MDSR]\n\n\n\n\n\n\nWhat is misleading here?122\n\nVery low data-to-ink ratio?123\nNon-intuitive sorting?\nWrong / changing scales?\n1-dim information in 2-D or 3-d?\nInconsistent labeling\n\n\n\n\n\n\n\nA tweet by National Review on December 14, 2015 showing the change in global temperature over time. [@MDSR]\n\n\n\n\n\n\nWhat is misleading here?124\n\nVery low data-to-ink ratio?125\nNon-intuitive sorting?\nWrong / changing scales?\n1-dim information in 2-D or 3-d?\nInconsistent labeling\n\n\n\n\n\n\n\nMay 10, 2020, Georgia Department of Health, COVID-19 cases for 5 counties across time. https://dph.georgia.gov/covid-19-daily-status-report\n\n\n\n\n\n\nWhat is misleading here?126\n\nVery low data-to-ink ratio?127\nNon-intuitive sorting?\nWrong / changing scales?\n1-dim information in 2-D or 3-d?\nInconsistent labeling\n\n\n\n\n\n\n\n\n\nJuly 2, 2020, Georgia Department of Health, COVID-19 cases per 100K\n\n\n\n\n\n\n\n\n\n\nJuly 17, 2020, https://dph.georgia.gov/covid-19-daily-status-report\n\n\n\n\n\n\n\n\nHow often do you read “The Student Life”?128\n\nEvery day\n3-5 times a week\nOnce a week\nRarely\nWhat is “The Student Life”?\n\n\n\n\nWhat do you think is the most common word in the titles of the Student Life opinion articles?129\n\nstop\nhealth\nPomona\nCMC\nstudents\n\n\n\n\nHow can you tell the difference between an element and an attribute?130\n\nthe elements have .\nthe elements have #\nthe elements have &lt; &gt;\nthe elements have [ ]\n\n\n\n\nHow do I find all the instances of the &lt;img&gt; (image) element?131\n\nuse selector: &lt;img&gt;\nuse selector: .img\nuse selector: #img\nuse selector: [img]\nuse selector: img\n\n\n\n\nHow do I find all the instances of the href= (URL) attribute?132\n\nuse selector: &lt;href&gt;\nuse selector: href\nuse selector: #href\nuse selector: [href]\nuse selector: href\n\n\n\n\nWhat is the difference between an attribute and an element?133\n\n\nan attribute describes an element\nan element describes an attribute\nan attribute is the parent of an element\nan element is the parent of an attribute\n\n\n\nWhat is a SQL server?134\n\n\nA relational database management system.\nA software program whose main purpose is to store and retrieve data.\nA highly secure server that does not allow any database file manipulation during execution.\nAll of the above.\n\n\n\nWhen was SQL created?135\n\n1960s\n1970s\n1980s\n1990s\n2000s\n\n\n\n\nWhat type of databases is SQL designed for?136\n\n\nhierarchical database management systems.\nnetwork database management systems.\nobject-oriented database management systems.\nrelational database management systems.\n\n\n\nWhich is bigger:137\n\ncomputer’s hard drive / storage\ncomputer’s memory / RAM\n\n\n\n\nWhere are each stored?138\n\n\nSQL tbl and R tibble both in storage\nSQL tbl and R tibble both in memory\nSQL tbl in storage and R tibble in memory\nSQL tbl in memory and R tibble in storage\n\n\n\nWhich SQL keyword is used to extract data from a database?139\n\n\nOPEN\nEXTRACT\nSELECT\nGET\n\n\n\nWith SQL, how to you retrieve a column named “FirstName” from a table named “Persons”?140\n\n\nSELECT Persons.FirstName\nEXTRACT FIRSTNAME FROM Persons\nSELECT FirstName FROM Persons\nSELECT “FirstName” FROM “Persons”\n\n\n\nWith SQL, how do you select all the columns from a table named “Persons”?141\n\n\nSELECT Persons\nSELECT * FROM Persons\nSELECT [all] FROM Persons\nSELECT *.Persons\n\n\n\nWith SQL, how can you return the number of records in the “Persons” table?142\n\n\nSELECT COLUMNS(*) FROM Persons\nSELECT COUNT(*) FROM Persons\nSELECT NO(*) FROM Persons\nSELECT LEN(*) FROM Persons\n\n\n\nWith SQL, how do you select all the records from a table named “Persons” where the value of the column “FirstName” is “Peter”?143\n\n\nSELECT * FROM Persons WHERE FirstName &lt;&gt; ‘Peter’\nSELECT * FROM Persons WHERE FirstName = ‘Peter’\nSELECT * FROM Persons WHERE FirstName == ‘Peter’\nSELECT * FROM Persons WHERE FirstName LIKE ‘Peter’\nSELECT [all] FROM Persons WHERE FirstName = ‘Peter’\n\n\n\nWith SQL, how do you select all the records from a table named “Persons” where the “FirstName” is “Peter” and the “LastName” is “Jackson”?144\n\n\nSELECT FirstName = ‘Peter’, LastName = ‘Jackson’ FROM Persons\nSELECT * FROM Persons WHERE FirstName = Peter’ & LastName = Jackson’\nSELECT * FROM Persons WHERE FirstName = ‘Peter’ AND LastName = ‘Jackson’\nSELECT * FROM Persons WHERE FirstName = Peter’ | LastName = Jackson’\n\n\n\nWhich keyword selects values within a range?145\n\nBEWTEEN\nWITHIN\nRANGE\n\n\n\n\nWith SQL, how do you select all the records from a table named “Persons” where the “LastName” is alphabetically between (and including) “Hansen” and “Pettersen”?146\n\nSELECT LastName &gt; ‘Hansen’ AND LastName &lt; ‘Pettersen’ FROM Persons\nSELECT * FROM Persons WHERE LastName BETWEEN ‘Hansen’ AND ‘Pettersen’\nSELECT * FROM Persons WHERE LastName &gt; ‘Hansen’ AND LastName &lt; ‘Pettersen’\n\n\n\n\nWhich SQL keyword returns only different values?147\n\nSELECT UNIQUE\nSELECT DISTINCT\nSELECT DIFFERENT\n\n\n\n\nWhich SQL keyword is used to sort the result-set?148\n\nORDER BY\nORDER\nSORT\nSORT BY\n\n\n\n\nWhat is the difference between the original data and the results set?149\n\noriginal comes after SELECT and results comes after FROM\noriginal comes after FROM and results comes after WHERE\noriginal comes after WHERE and results comes after GROUP BY\noriginal is the stored data and results comes after SELECT\noriginal is the stored data and results comes after WHERE\n\n\n\n\nWith SQL, how can you return all the records from a table named “Persons” sorted descending by “FirstName”?150\n\nSELECT * FROM Persons ORDER FirstName DESC\nSELECT * FROM Persons SORT ‘FirstName’ DESC\nSELECT * FROM Persons ORDER BY FirstName DESC\nSELECT * FROM Persons SORT BY ‘FirstName’ DESC\n\n\n\n\nThe OR operator displays a record if ANY conditions listed are true. The AND operator displays a record if ALL of the conditions listed are true.151\n\nTRUE\nFALSE\n\n\n\n\nIn order to SELECT the records with foods that are either green or yellow fruit:152\n\n… WHERE type = ‘fruit’ AND color = ‘yellow’ OR color = ‘green’\n\n… WHERE (type = ‘fruit’ AND color = ‘yellow’) OR color = ‘green’\n\n… WHERE type = ‘fruit’ AND (color = ‘yellow’ OR color = ‘green’)\n\n… WHERE type = ‘fruit’ AND color = ‘yellow’ AND color = ‘green’\n\n… WHERE type = ‘fruit’ AND (color = ‘yellow’ AND color = ‘green’)\n\n\n\n\nWhat is the purpose of a JOIN?153\n\nit filters the rows returned by the SELECT statement.\nit specifies the columns to be retrieved.\nit combines rows from two or more tables based on a related column.\nit orders the results in ascending or descending order.\n\n\n\n\nWhat is the purpose of the UNION operator in SQL?154\n\nit combines the results of two or more SELECT statements.\nit performs a pattern match on a string.\nit retrieves the maximum value in a column.\nit filters the rows returned by the SELECT statement.\n\n\n\n\nWhat is the purpose of the INNER JOIN in SQL?155\n\nit retrieves the maximum value in a column.\nit combines rows from two or more tables based on a related column.\nit filters the rows returned by the SELECT statement.\nit performs a pattern match on a string.\n\n\n\n\nWhat is the purpose of the LEFT JOIN in SQL?156\n\nit combines rows from two or more tables based on a related column.\nit retrieves the maximum value in a column.\nit filters the rows returned by the SELECT statement.\nit performs a pattern match on a string.\n\n\n\n\nRIGHT JOIN keeps all the rows in …?157\n\nthe first table.\nthe second table.\nboth tables.\nneither table\n\n\n\n\nWho is removed in a RIGHT JOIN?158\n\nMick\nJohn\nPaul\nKeith\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhich variable(s) are removed in a RIGHT JOIN?159\n\nname\nband\nplays\nnone of them\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn SQL, what happens to Mick’s “plays” variables in a FULL JOIN?160\n\nMick is removed\nguitar\nbass\nNA\nNULL\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is wrong with this SQL clause?161\n\nNo comma between selected columns\nCan’t have a column and a summary of that column\nUse MEAN() instead of AVG()\nVariables aren’t in flights\nNeed a LIMIT\n\n\n\nSELECT cancelled, AVG(cancelled)\nFROM flights;\n\n\n\nWhat is wrong with this SQL clause?162\n\nNeed a WHERE\nNeed a FROM\nNeed a LIMIT\nNeed a GROUP BY\nNeed a SELECT\n\n\n\nSELECT flights;\n\n\n\nWhat is wrong with this SQL clause?163\n\nNeed a doubl equals: ==\nNeed quotes around 2014, \"2014\"\nNeed quotes around dep_delay, \"dep_delay\"\nyear = 2014 should go in WHERE\nNeed GROUP BY year\n\n\n\nSELECT dep_delay, year = 2014\nFROM flights\nLIMIT 10;\n\n\n\nWhat is wrong with this SQL clause?164\n\nCan’t SELECT a variable from the results set\nCan’t SELECT a variable from the original data\nSUM() is not a function in SQL\nNo commas\n\n\n\nSELECT SUM(cancelled) AS num_cancelled,\n       num_cancelled / SUM(1) AS pct_cancelled\nFROM flights\nLIMIT 10;\n\n\n\n\n\n\nWith SQL, how do you select all the records from a table named “Persons” where the value of the column “FirstName” starts with an “a”?165\n\nSELECT * FROM Persons WHERE FirstName = ’a.*’\nSELECT * FROM Persons WHERE FirstName = ’a*’\nSELECT * FROM Persons WHERE FirstName REGEXP ’a.*’\nSELECT * FROM Persons WHERE FirstName REGEXP ’a*’\nSELECT * FROM Persons WHERE FirstName REGEXP ’(?i)a.*’\n\n\n\n\nWhat is the main way to absolutely recognize a record within a database?166\n\nForeign key\nPrimary key\nUnique key\nNatural key\nAlternate key\n\n\n\n\nWhat does a foreign key do?167\n\nDirectly identifies another table\nDirectly identifies another column\nGives access to another entire database\nTranslates the database into another language\n\n\n\n\nWhich of these would likely be used as a foreign key between a table on student enrollment and student grades?168\n\ngrades\ntuition\nstudent_name\nstudent_hometown\n\n\n\n\nFor the student records (for two tables: enrollment and grades), which is the most likely combination?169\n\nname as primary key to both\nname as foreign to both\nname as primary in enrollment and foreign in grades\nname as foreign in enrollment and primary in grades\n\n\n\n\nWhich of the following is the primary function used to create a Shiny app?170\n\nshinyApp()\ncreateApp()\nrunApp()\nstartShinyApp()\n\n\n\n\nWhich of the following Shiny components contains the code for handling user inputs and generating outputs?171\n\nui\nserver\nrunApp()\nshinyApp()\n\n\n\n\nWhich of the following Shiny UI elements is used to allow users to select a single option from a list of choices?172\n\n\nselectInput()\nradioButtons()\ncheckboxGroupInput()\ntextInput()\n\n\n\nIn Shiny, what is the purpose of the renderText() function?173\n\n\nTo display a plot as text\nTo generate text output based on reactive inputs\nTo create a text input field\nTo render HTML elements\n\n\n\nWhat does the ui component in a Shiny app represent?174\n\n\nThe logic of the application\nThe server-side calculations\nThe user interface elements\nThe global settings for the app\n\n\n\nWhich Shiny function is used to handle reactive expressions in the server function?175\n\n\nreactive()\nrender()\nobserve()\nupdateInput()\n\n\n\nWhat is the default output type for renderPlot() in Shiny?176\n\nplotly chart\nggplot2 plot\nbase R plot\nHTML table\n\n\n\n\nWhich of the following is the correct way to create a slider input in Shiny?177\n\nsliderInput(\"slider\", \"Slider\", min = 1, max = 100, value = 50)\ninputSlider(\"slider\", min = 1, max = 100)\nsliderControl(\"slider\", 1, 100)\ninput_slider(\"slider\", 1, 100)"
  },
  {
    "objectID": "clicker_slides.html",
    "href": "clicker_slides.html",
    "title": "Clicker Questions",
    "section": "",
    "text": "Clicker Questions\nto go with Modern Data Science wi\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Project",
    "section": "",
    "text": "Artwork by @allison_horst.\n\n\n\n\nThroughout the semester, you will complete a series of mini-projects. The first project is the creation of a website connected to your GitHub account. Subsequent projects will be posted onto the website you create.\nEach individual project has instructions that are given separately, and will be graded according to the specific instructions. However, I encourage you to consider the overall project as a potential deliverable that you could include on a resume, show to future employers, discuss in graduate school interviews, etc. That is, approach the assignment as an opportunity for you to take something away from the class which is bigger than just a grade.\n\n\n\nReuseCC-BY-SA-4.0"
  },
  {
    "objectID": "project.html#building-a-database",
    "href": "project.html#building-a-database",
    "title": "Final Project",
    "section": "Building a Database",
    "text": "Building a Database\nbuild a database using the skills we’ve covered in the two week course.\n\nData\nYou will need to find your own (large!) data with at least 3 publicly available tables that have keys connecting them. Additionally, the data should have some strings that need parsing.\n\nuse the rvest package to scrape html data… it will be messy!\n\n\n\nDue Dates\n\nTuesday, January 16. Email prof with dataset idea for project. Include the following:\n\nHolistic description of the dataset (a few sentences).\nExplanation of keys that link the data tables.\nDescription of the observational units and columns in each data table.\nFull reference for data citation.\nLink to the resources.\n\nEnd of week 2. We will have some time in class to work on the project.\nTuesday, January 23. Completed project is due."
  },
  {
    "objectID": "project.html#assignment",
    "href": "project.html#assignment",
    "title": "Final Project",
    "section": "Assignment",
    "text": "Assignment\n\nInput data\nDescribe creation / construction / changing of the DB using DuckDB or MySQL.\nSome data wrangling in SQL and R (comparison). Should include some joining.\nSomething with regular expressions\nSome analysis (probably in R). Must include at least one visualization. For fun, you could make a Shiny App (not required)."
  },
  {
    "objectID": "project.html#something-new",
    "href": "project.html#something-new",
    "title": "Final Project",
    "section": "",
    "text": "Each individual should have some analysis that goes beyond a Cox PH model. For your analysis, you should give details of what is going on, how it is relevant, what are the technical conditions, what are the conclusions, etc. Your analysis should indicate a sense that you understand and that you can communicate the results to a possible client. Some possible topics to investigate include:\n\nInvestigation of the proportional hazards assumption (what does the R function cox.zph() do?)\nExponential or Weibull PH regression (parametric survival model)\nDeriving / detailing AIC & BIC for model selection on Cox PH\nPower analysis (a simulation?)\nDerivation of the sample size calculation for the log rank test (and application to the data)\nAn analysis of the Schoenfeld residuals (how are they calculated and why is that calculation relevant?)\nBootstrapping the survival model (what are the assumptions? what do you conclude?)\nAn analysis of possible time dependent covariates (what should you see? what do you see? do transformations help?)\nAn analysis / understanding / simulation of the multiple comparisons issues for assessing many different models (or other exploratory hypotheses).\nAndersen-Gill extension of the Cox PH model for time-varying covariates (available in rms R package). [Note: A-G isn’t meant to test PH, per se, but rather it allows for variables that are time varying.]\nAnother topic related to survival analysis that you find interesting."
  },
  {
    "objectID": "project.html#r-thoughts",
    "href": "project.html#r-thoughts",
    "title": "Final Project",
    "section": "",
    "text": "Use R Markdown to create a reproducible analysis. Anyone should be able to run your analysis using only the .Rmd file.\nTurn in both .Rmd and .pdf files for your final analysis.\nIf you are working in pairs, the project is extended in two ways. 1. You must both be able to work on the files. Ideally, you will share your work via GitHub or other software which tracks changes and coordinates work. 2. You must do two new items (one each).\nNote that the event of interest is “visit to primary care physician.”\nBe as creative as possible trying to think about how you might like to graphically display the data. If you come up with a cool idea for a graph but don’t know how to implement it, please let me know, and I will write the code for you!!\nPlease do not re-code the variables or change the variable names outside of R. You may, however, transform (mutate()) the variables within your R code (that is, for example, if you wanted to divide months by 12 to have years, or square a variable, etc.).\n\n\n\n\nYour primary assessment will be based on the above items (modeling, understanding of new topic, additional analysis, interpretation).\nAdditionally there will be two competitions. Winning either will add 5 points (out of 100) to your score.\n\nGraphic: the class will vote on who has the best graphic.\nModel: using a holdout sample (I only gave you part of the data), I will assess your final model. The group whose model best describes the holdout sample (as measured by the c-index) will win the model prize."
  },
  {
    "objectID": "project.html#footnotes",
    "href": "project.html#footnotes",
    "title": "Final Project",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nmeasured by the \\(c\\) index↩︎"
  },
  {
    "objectID": "clicker_study.html#footnotes",
    "href": "clicker_study.html#footnotes",
    "title": "Clicker Questions for DS2 - Foundations of Data Science",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nwherever you are, make sure you are communicating with me when you have questions!↩︎\nwherever you are, make sure you are communicating with me when you have questions!↩︎\n\non Gradescope\n\n↩︎\n\npushing the file(s)\n\n↩︎\n\npoor assignment operator\n\n↩︎\n\ninvalid object name\n\n↩︎\n\nunmatched quotes\n\n↩︎\n\nno mistake\n\n↩︎\n\nimproper syntax for a function argument\n\n↩︎\n\nI mean, the right answer has to be Yes, right!??!\n\n↩︎\nno right answer here!↩︎\n\nIn the local folder which also has the R project. It could be on the Desktop or the Home directory, but it must be in the same place as the R project. Do not upload files to the remote GitHub directory or you will find yourself with two different copies of the files.\n\n↩︎\nYes! All the responses are reasons to make a figure.↩︎\n\nBecause that graphic displays the message you want as optimally as possible.\n\n↩︎\n\nlength, definitely. Maybe also a. position.\n\n↩︎\n\nposition, definitely, also e. color. Maybe also b. length.\n\n↩︎\n\ncolor, definitely. Also probably d. area.\n\n↩︎\n\ncolor must be specified outside the aes() function\n\n↩︎\n\ndot color is specified as “navy”, line color is specified as wday.\n\n↩︎\n\nset the information outside the aes() function\n\n↩︎\nanswers may vary. I’d say c. putting the work in context. Others might say b. facilitating comparison or d. simplifying the story. However, I don’t think a correct answer is a. making the data stand out.↩︎\n\nmaking the data stand out\n\n↩︎\n\nOne showed the relevant comparison better.\n\n↩︎\n\nIt isn’t at the origin. in combination with d. There wasn’t a label explaining why the axes were where they were. The story associated with the average value axes is not clear to the reader.\n\n↩︎\n\nThe job of a bar plot is to count the number of instances.\n\n↩︎\n\nfill = children colors and position = \"fill\" changes the y-axis. AND c. fill = children goes in the aes and position = \"fill\" goes outside the aes\n\n↩︎\n\ngeom_bar() is for categorical variables and geom_histogram() is for nubmers.\n\n↩︎\n\nTable c is best because the columns allow us to work with each of the variable separately.\n\n↩︎\n\nstarbucks in wrong place\n\n↩︎\n\ndoes something different because it takes the sum() instead of the mean(). The other commands compute the average fat broken down by type of Starbucks item\n\n↩︎\n\nfilter()\n\n↩︎\n\n(theme, year)\n\n↩︎\n\nmean(pieces)\n\n↩︎\nrunning the different code chunks with relevant output.↩︎\n\non Gradescope\n\n↩︎\n\non Canvas\n\n↩︎\n\n-country\n\n↩︎\n\nyear\n\n↩︎\n\ngdpval (if possible, good idea to name variables something different from the name of the data frame)\n\n↩︎\n\nuse pivot_wider() on raw data\n\n↩︎\n\nuse pivot_longer() on raw data. The reference to the study is: Gregory Belenky, Nancy J. Wesensten, David R. Thorne, Maria L. Thomas, Helen C. Sing, Daniel P. Redmond, Michael B. Russo and Thomas J. Balkin (2003) Patterns of performance degradation and restoration during sleep restriction and subsequent recovery: a sleep dose-response study. Journal of Sleep Research 12, 1–12.\n\n↩︎\n\nMick\n\n↩︎\n\nnone of them (the default is to retain all the variables)\n\n↩︎\n\nNA (it would be NULL in SQL)\n\n↩︎\n\nroster |&gt; anti_join(classes, by = “student_id”)`\n\n↩︎\n\nroster |&gt; full_join(classes, by = “student_id”)`\n\n↩︎\ne.roster |&gt; semi_join(classes, by = \"student_id\")↩︎\n\nclasses |&gt; anti_join(roster, by = \"student_id\")\n\n↩︎\n\nroster |&gt; inner_join(classes, by = \"student_id\") |&gt; filter(major != subject)\n\n↩︎\n\n“a1” “b2” “c3”\n\n↩︎\n\n“a 1” “b 2” “c 3”\n\n↩︎\n\n“ab” “ifg” Again, str_sub() is vectorized. So the subset of string one is from 1 to 2. The subset of string two is from 3 to 5.\n\n↩︎\n\n“one -pple” “two p-ars” “three bananas” (because str_replace() is vectorized)\n\n↩︎\n\nTRUE TRUE TRUE TRUE\n\n↩︎\n\nalphabetically, from a to z\n\n↩︎\n\nChanges the order of the levels of type\n\n↩︎\n\nSome of the above (b. Changes the values of x and c. Changes the levels of x and sort of d. Changes the order of the levels of x, jut by the nature of c.)\n\n↩︎\nI don’t know what the answer is. Ill-defined question.↩︎\n\ndifferent output formatting (the first produces 9 the second produces Sep)\n\n↩︎\n\nToday is the 39th week of the year.\n\n↩︎\n\nDay of month and day of year. (Day of year is often called the “Julian Day”.)\n\n↩︎\n\nFALSE\n\n↩︎\nneither c. nor e. would match. Inside the bracket “[^u]” matches anything other than a “u”, but it has to match something.↩︎\n\nsome of the above. d. Inside a character class | is a normal character and would therefore match “grey” and “gray” and “gr|y”. Which is not what we want, but would work to match both “grey” and “gray”. c. would not match with str_extract() (but might match in other parsers that ignored spaces).\n\n↩︎\n\n1 (because \\d matches only a single digit).\n\n↩︎\n\n10 (because \\d+ matches at least one digit).\n\n↩︎\n\nE (because . matches anything, and returns only a single character).\n\n↩︎\n\nEpisode 2: The pie whisperer. (4 August 2015) (because . matches anything, and with the + it returns multiple characters).\n\n↩︎\n\n. (because \\. matches the period, .).\n\n↩︎\n\nThe first includes Jane.\n\n↩︎\n\n\"(?&lt;=\\\\$)\\\\d+\"\n\n↩︎\n\n\"\\\\w+(?= pie)\"\n\n↩︎\n\nwe return the string at the lookaround\n\n↩︎\n\nerror (code will fail)\n\n↩︎\n\n9\n\n↩︎\n\n8\n\n↩︎\n\n8\n\n↩︎\n\nmap_chr(c(1,4,7), addTen) because the output is in quotes, the values are strings, not numbers.\n\n↩︎\n\nall of the above. The map() function allows vectors, lists, and data frames as input.\n\n↩︎\n\nmap(c(1, 4, 7), ~addTen). The ~ acts on functions that do not have their own name or that are defined by function(...). By adding the argument (.x) we’ve expanded the addTen() function, and so it needs a ~. The addTen() function all alone does not use a ~.\n\n↩︎\n\n6 random normals (1 with mean 1, sd 3; 2 with mean 3, sd 1; 3 with mean 47, sd 10)\n\n↩︎\n\nThere is no object called jan31.\n\n↩︎\n\nI haven’t loaded lubridate (which is why it doesn’t recognize that ymd() is not a function).\n\n↩︎\n\nThere is no error.\n\n↩︎\n\n3, 2, 1\n\n↩︎\n\n1\n\n↩︎\n\n2\n\n↩︎\n\n1\n\n↩︎\n\n2\n\n↩︎\nMaybe c. 3? a. 1? They are all okay, but you have to think carefully to read any of them!↩︎\n\nquestion, yes, no\n\n↩︎\n\n“1”, “cat”, “5”, NA, “cat” (Note that the numbers were converted to character strings!)\n\n↩︎\n\non Gradescope\n\n↩︎\n\non Canvas\n\n↩︎\n\nmakes your results reproducible\n\n↩︎\n\n[1] “f” “h” “i” “e” “g” “d” “c” “j” “b” “a”\n\n↩︎\n\n[1] “e” “j” “e” “b” “e” “c” “f” “a” “e” “a”\n\n↩︎\n\n[1] “j” “g” “f” “i” “f” (could have also been b.)\n\n↩︎\n\n[1] “i” “b” “g” “d” “a”\n\n↩︎\n\nthe number of hats that match\n\n↩︎\n\nthe proportion of hats that match\n\n↩︎\n\nwhether or not at least one hat matches\n\n↩︎\n\n10 (it represents both the number of overall hats and the number of hats we select)\n\n↩︎\n\nRepeat for many iterations. (The next step needs to gather information on how the FP and FN results hold, it might have just been something odd in my simulation… )\n\n↩︎\nall of the above↩︎\nIt totally depends on your personality and your finances. b. doesn’t make much sense. But a., c., and d. are all very reasonable questions to ask about your investments.↩︎\n\n8\n\n↩︎\n\n0.196 (19.6% of the time)\n\n↩︎\n\n0.063 (6.3% of the time)\n\n↩︎\n\nvery surprising (prob of 14 or more is 0.0021)\n\n↩︎\n\nalternative, one sided (because probably we are studying that it increases their success rate)\n\n↩︎\n\nnull, two sided (because I have no idea which cheetah might run faster)\n\n↩︎\n\nalternative, two sided (because I have no idea whether they’ve increased or decreased)\n\n↩︎\n\nnull, one sided (because I happen to know that folic acid is thought to prevent facial clefts)\n\n↩︎\n\nalternative, one sided (because I happen to know that caffeine is thought to decrease baby’s birth weight)\n\n↩︎\n\nA number which (is almost always unknown and) describes a population.\n\n↩︎\n\nwithout replacement (replace = FALSE)\n\n↩︎\n\nIt depends. a. would be the correct answer if the alternative hypothesis is \\(\\mu_1 - \\mu_2 &lt; 0\\), b. would be the right answer if the alternative hypothesis is \\(\\mu_1 - \\mu_2 &gt; 0\\) and c. would be the right answer if the alternative hypothesis is \\(\\mu_1 - \\mu_2 \\ne 0\\).\n\n↩︎\n\nDouble the area to the left.\n\n↩︎\n\nThe scale of the y-axis is upside down.\n\n↩︎\ndata-to-ink ratio measures how much ink is being used for the data (data-ink) as compared to how much ink is because used on the entire plot (labels, etc.)↩︎\n\nThe scale of the y-axis is way too zoomed in.\n\n↩︎\ndata-to-ink ratio measures how much ink is being used for the data (data-ink) as compared to how much ink is because used on the entire plot (labels, etc.)↩︎\n\nNon-intuitive sorting (sorted in decreasing order instead of by time)\n\n↩︎\ndata-to-ink ratio measures how much ink is being used for the data (data-ink) as compared to how much ink is because used on the entire plot (labels, etc.)↩︎\n\nInconsistent labeling (the colors mean different things for the two plots)\n\n↩︎\ndata-to-ink ratio measures how much ink is being used for the data (data-ink) as compared to how much ink is because used on the entire plot (labels, etc.)↩︎\nthere can’t possibly be a right answer here.↩︎\n\nstudents (is the top word over the last 500 opinion articles)\n\n↩︎\n\nthe elements have &lt; &gt;\n\n↩︎\n\nuse selector: img\n\n↩︎\n\nuse selector: [href]\n\n↩︎\n\nan attribute describes an element\n\n↩︎\n\nA relational database management system.\n\n↩︎\n\nThe first versions were created in the 1970s and called SEQUEL (Structured English QUEry Language). c. SQL came about in particular systems in the 1980s.\n\n↩︎\n\nrelational database management systems.\n\n↩︎\n\ncomputer’s hard drive / storage\n\n↩︎\n\nSQL tbl in storage and R tibble in memory\n\n↩︎\n\nSELECT\n\n↩︎\n\nSELECT FirstName FROM Persons\n\n↩︎\n\nSELECT * FROM Persons\n\n↩︎\n\nSELECT COUNT(*) FROM Persons\n\n↩︎\n\nSELECT * FROM Persons WHERE FirstName = ‘Peter’ (d. would also work.)\n\n↩︎\n\nSELECT * FROM Persons WHERE FirstName = ‘Peter’ AND LastName = ‘Jackson’\n\n↩︎\n\nBEWTEEN\n\n↩︎\n\nSELECT * FROM Persons WHERE LastName BETWEEN ‘Hansen’ AND ‘Pettersen’\n\n↩︎\n\nSELECT DISTINCT\n\n↩︎\n\nORDER BY\n\n↩︎\n\noriginal is the stored data and results comes after SELECT\n\n↩︎\n\nSELECT * FROM Persons ORDER BY FirstName DESC\n\n↩︎\n\nTRUE\n\n↩︎\n\n… WHERE type = ‘fruit’ AND (color = ‘yellow’ OR color = ‘green’)\n\n↩︎\n\nit combines rows from two or more tables based on a related column.\n\n↩︎\n\nit combines the results of two or more SELECT statements.\n\n↩︎\n\nit combines rows from two or more tables based on a related column.\n\n↩︎\n\nit combines rows from two or more tables based on a related column.\n\n↩︎\n\nthe second table\n\n↩︎\n\nMick\n\n↩︎\n\nnone of them (all variables are kept in all joins)\n\n↩︎\n\nNULL (it would be NA in R)\n\n↩︎\n\nCan’t have a column and a summary of that column.\n\n↩︎\n\nNeed a FROM\n\n↩︎\n\nyear = 2014 should go in WHERE\n\n↩︎\n\nCan’t SELECT a variable from the results set\n\n↩︎\n\nSELECT * FROM Persons WHERE FirstName REGEXP ’(?i)a.*’ (n.b., the LIKE function will give you a similar result, with % as a wildcard: SELECT*FROMPersonsWHERE` FirstName LIKE ‘a%’)\n\n↩︎\n\nPrimary key\n\n↩︎\n\nDirectly identifies another column\n\n↩︎\n\nstudent_name\n\n↩︎\n\nname as primary in enrollment and foreign in grades (the primary key must uniquely identify the records, and name is unlikely to do that in a grades database.)\n\n↩︎\n\nshinyApp()\n\n↩︎\n\nserver\n\n↩︎\n\nselectInput()\n\n↩︎\n\nTo generate text output based on reactive inputs\n\n↩︎\n\nThe user interface elements\n\n↩︎\n\nreactive()\n\n↩︎\n\nbase R plot\n\n↩︎\n\nsliderInput(\"slider\", \"Slider\", min = 1, max = 100, value = 50)\n\n↩︎"
  },
  {
    "objectID": "clicker_slides.html#footnotes",
    "href": "clicker_slides.html#footnotes",
    "title": "Foundations of Data Science in R",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nwherever you are, make sure you are communicating with me when you have questions!\nwherever you are, make sure you are communicating with me when you have questions!\n\non Gradescope\n\n\n\npushing the file(s)\n\n\n\npoor assignment operator\n\n\n\ninvalid object name\n\n\n\nunmatched quotes\n\n\n\nno mistake\n\n\n\nimproper syntax for a function argument\n\n\n\nI mean, the right answer has to be Yes, right!??!\n\n\nno right answer here!\n\nIn the local folder which also has the R project. It could be on the Desktop or the Home directory, but it must be in the same place as the R project. Do not upload files to the remote GitHub directory or you will find yourself with two different copies of the files.\n\n\nYes! All the responses are reasons to make a figure.\n\nBecause that graphic displays the message you want as optimally as possible.\n\n\n\nlength, definitely. Maybe also a. position.\n\n\n\nposition, definitely, also e. color. Maybe also b. length.\n\n\n\ncolor, definitely. Also probably d. area.\n\n\n\ncolor must be specified outside the aes() function\n\n\n\ndot color is specified as “navy”, line color is specified as wday.\n\n\n\nset the information outside the aes() function\n\n\nanswers may vary. I’d say c. putting the work in context. Others might say b. facilitating comparison or d. simplifying the story. However, I don’t think a correct answer is a. making the data stand out.\n\nmaking the data stand out\n\n\n\nOne showed the relevant comparison better.\n\n\n\nIt isn’t at the origin. in combination with d. There wasn’t a label explaining why the axes were where they were. The story associated with the average value axes is not clear to the reader.\n\n\n\nThe job of a bar plot is to count the number of instances.\n\n\n\nfill = children colors and position = \"fill\" changes the y-axis. AND c. fill = children goes in the aes and position = \"fill\" goes outside the aes\n\n\n\ngeom_bar() is for categorical variables and geom_histogram() is for nubmers.\n\n\n\nTable c is best because the columns allow us to work with each of the variable separately.\n\n\n\nstarbucks in wrong place\n\n\n\ndoes something different because it takes the sum() instead of the mean(). The other commands compute the average fat broken down by type of Starbucks item\n\n\n\nfilter()\n\n\n\n(theme, year)\n\n\n\nmean(pieces)\n\n\nrunning the different code chunks with relevant output.\n\non Gradescope\n\n\n\non Canvas\n\n\n\n-country\n\n\n\nyear\n\n\n\ngdpval (if possible, good idea to name variables something different from the name of the data frame)\n\n\n\nuse pivot_wider() on raw data\n\n\n\nuse pivot_longer() on raw data. The reference to the study is: Gregory Belenky, Nancy J. Wesensten, David R. Thorne, Maria L. Thomas, Helen C. Sing, Daniel P. Redmond, Michael B. Russo and Thomas J. Balkin (2003) Patterns of performance degradation and restoration during sleep restriction and subsequent recovery: a sleep dose-response study. Journal of Sleep Research 12, 1–12.\n\n\n\nMick\n\n\n\nnone of them (the default is to retain all the variables)\n\n\n\nNA (it would be NULL in SQL)\n\n\n\nroster |&gt; anti_join(classes, by = “student_id”)`\n\n\n\nroster |&gt; full_join(classes, by = “student_id”)`\n\n\ne.roster |&gt; semi_join(classes, by = \"student_id\")\n\nclasses |&gt; anti_join(roster, by = \"student_id\")\n\n\n\nroster |&gt; inner_join(classes, by = \"student_id\") |&gt; filter(major != subject)\n\n\n\n“a1” “b2” “c3”\n\n\n\n“a 1” “b 2” “c 3”\n\n\n\n“ab” “ifg” Again, str_sub() is vectorized. So the subset of string one is from 1 to 2. The subset of string two is from 3 to 5.\n\n\n\n“one -pple” “two p-ars” “three bananas” (because str_replace() is vectorized)\n\n\n\nTRUE TRUE TRUE TRUE\n\n\n\nalphabetically, from a to z\n\n\n\nChanges the order of the levels of type\n\n\n\nSome of the above (b. Changes the values of x and c. Changes the levels of x and sort of d. Changes the order of the levels of x, jut by the nature of c.)\n\n\nI don’t know what the answer is. Ill-defined question.\n\ndifferent output formatting (the first produces 9 the second produces Sep)\n\n\n\nToday is the 39th week of the year.\n\n\n\nDay of month and day of year. (Day of year is often called the “Julian Day”.)\n\n\n\nFALSE\n\n\nneither c. nor e. would match. Inside the bracket “[^u]” matches anything other than a “u”, but it has to match something.\n\nsome of the above. d. Inside a character class | is a normal character and would therefore match “grey” and “gray” and “gr|y”. Which is not what we want, but would work to match both “grey” and “gray”. c. would not match with str_extract() (but might match in other parsers that ignored spaces).\n\n\n\n1 (because \\d matches only a single digit).\n\n\n\n10 (because \\d+ matches at least one digit).\n\n\n\nE (because . matches anything, and returns only a single character).\n\n\n\nEpisode 2: The pie whisperer. (4 August 2015) (because . matches anything, and with the + it returns multiple characters).\n\n\n\n. (because \\. matches the period, .).\n\n\n\nThe first includes Jane.\n\n\n\n\"(?&lt;=\\\\$)\\\\d+\"\n\n\n\n\"\\\\w+(?= pie)\"\n\n\n\nwe return the string at the lookaround\n\n\n\nerror (code will fail)\n\n\n\n9\n\n\n\n8\n\n\n\n8\n\n\n\nmap_chr(c(1,4,7), addTen) because the output is in quotes, the values are strings, not numbers.\n\n\n\nall of the above. The map() function allows vectors, lists, and data frames as input.\n\n\n\nmap(c(1, 4, 7), ~addTen). The ~ acts on functions that do not have their own name or that are defined by function(...). By adding the argument (.x) we’ve expanded the addTen() function, and so it needs a ~. The addTen() function all alone does not use a ~.\n\n\n\n6 random normals (1 with mean 1, sd 3; 2 with mean 3, sd 1; 3 with mean 47, sd 10)\n\n\n\nThere is no object called jan31.\n\n\n\nI haven’t loaded lubridate (which is why it doesn’t recognize that ymd() is not a function).\n\n\n\nThere is no error.\n\n\n\n3, 2, 1\n\n\n\n1\n\n\n\n2\n\n\n\n1\n\n\n\n2\n\n\nMaybe c. 3? a. 1? They are all okay, but you have to think carefully to read any of them!\n\nquestion, yes, no\n\n\n\n“1”, “cat”, “5”, NA, “cat” (Note that the numbers were converted to character strings!)\n\n\n\non Gradescope\n\n\n\non Canvas\n\n\n\nmakes your results reproducible\n\n\n\n[1] “f” “h” “i” “e” “g” “d” “c” “j” “b” “a”\n\n\n\n[1] “e” “j” “e” “b” “e” “c” “f” “a” “e” “a”\n\n\n\n[1] “j” “g” “f” “i” “f” (could have also been b.)\n\n\n\n[1] “i” “b” “g” “d” “a”\n\n\n\nthe number of hats that match\n\n\n\nthe proportion of hats that match\n\n\n\nwhether or not at least one hat matches\n\n\n\n10 (it represents both the number of overall hats and the number of hats we select)\n\n\n\nRepeat for many iterations. (The next step needs to gather information on how the FP and FN results hold, it might have just been something odd in my simulation… )\n\n\nall of the above\nIt totally depends on your personality and your finances. b. doesn’t make much sense. But a., c., and d. are all very reasonable questions to ask about your investments.\n\n8\n\n\n\n0.196 (19.6% of the time)\n\n\n\n0.063 (6.3% of the time)\n\n\n\nvery surprising (prob of 14 or more is 0.0021)\n\n\n\nalternative, one sided (because probably we are studying that it increases their success rate)\n\n\n\nnull, two sided (because I have no idea which cheetah might run faster)\n\n\n\nalternative, two sided (because I have no idea whether they’ve increased or decreased)\n\n\n\nnull, one sided (because I happen to know that folic acid is thought to prevent facial clefts)\n\n\n\nalternative, one sided (because I happen to know that caffeine is thought to decrease baby’s birth weight)\n\n\n\nA number which (is almost always unknown and) describes a population.\n\n\n\nwithout replacement (replace = FALSE)\n\n\n\nIt depends. a. would be the correct answer if the alternative hypothesis is \\(\\mu_1 - \\mu_2 &lt; 0\\), b. would be the right answer if the alternative hypothesis is \\(\\mu_1 - \\mu_2 &gt; 0\\) and c. would be the right answer if the alternative hypothesis is \\(\\mu_1 - \\mu_2 \\ne 0\\).\n\n\n\nDouble the area to the left.\n\n\n\nThe scale of the y-axis is upside down.\n\n\ndata-to-ink ratio measures how much ink is being used for the data (data-ink) as compared to how much ink is because used on the entire plot (labels, etc.)\n\nThe scale of the y-axis is way too zoomed in.\n\n\ndata-to-ink ratio measures how much ink is being used for the data (data-ink) as compared to how much ink is because used on the entire plot (labels, etc.)\n\nNon-intuitive sorting (sorted in decreasing order instead of by time)\n\n\ndata-to-ink ratio measures how much ink is being used for the data (data-ink) as compared to how much ink is because used on the entire plot (labels, etc.)\n\nInconsistent labeling (the colors mean different things for the two plots)\n\n\ndata-to-ink ratio measures how much ink is being used for the data (data-ink) as compared to how much ink is because used on the entire plot (labels, etc.)\nthere can’t possibly be a right answer here.\n\nstudents (is the top word over the last 500 opinion articles)\n\n\n\nthe elements have &lt; &gt;\n\n\n\nuse selector: img\n\n\n\nuse selector: [href]\n\n\n\nan attribute describes an element\n\n\n\nA relational database management system.\n\n\n\nThe first versions were created in the 1970s and called SEQUEL (Structured English QUEry Language). c. SQL came about in particular systems in the 1980s.\n\n\n\nrelational database management systems.\n\n\n\ncomputer’s hard drive / storage\n\n\n\nSQL tbl in storage and R tibble in memory\n\n\n\nSELECT\n\n\n\nSELECT FirstName FROM Persons\n\n\n\nSELECT * FROM Persons\n\n\n\nSELECT COUNT(*) FROM Persons\n\n\n\nSELECT * FROM Persons WHERE FirstName = ‘Peter’ (d. would also work.)\n\n\n\nSELECT * FROM Persons WHERE FirstName = ‘Peter’ AND LastName = ‘Jackson’\n\n\n\nBEWTEEN\n\n\n\nSELECT * FROM Persons WHERE LastName BETWEEN ‘Hansen’ AND ‘Pettersen’\n\n\n\nSELECT DISTINCT\n\n\n\nORDER BY\n\n\n\noriginal is the stored data and results comes after SELECT\n\n\n\nSELECT * FROM Persons ORDER BY FirstName DESC\n\n\n\nTRUE\n\n\n\n… WHERE type = ‘fruit’ AND (color = ‘yellow’ OR color = ‘green’)\n\n\n\nit combines rows from two or more tables based on a related column.\n\n\n\nit combines the results of two or more SELECT statements.\n\n\n\nit combines rows from two or more tables based on a related column.\n\n\n\nit combines rows from two or more tables based on a related column.\n\n\n\nthe second table\n\n\n\nMick\n\n\n\nnone of them (all variables are kept in all joins)\n\n\n\nNULL (it would be NA in R)\n\n\n\nCan’t have a column and a summary of that column.\n\n\n\nNeed a FROM\n\n\n\nyear = 2014 should go in WHERE\n\n\n\nCan’t SELECT a variable from the results set\n\n\n\nSELECT * FROM Persons WHERE FirstName REGEXP ’(?i)a.*’ (n.b., the LIKE function will give you a similar result, with % as a wildcard: SELECT*FROMPersonsWHERE` FirstName LIKE ‘a%’)\n\n\n\nPrimary key\n\n\n\nDirectly identifies another column\n\n\n\nstudent_name\n\n\n\nname as primary in enrollment and foreign in grades (the primary key must uniquely identify the records, and name is unlikely to do that in a grades database.)\n\n\n\nshinyApp()\n\n\n\nserver\n\n\n\nselectInput()\n\n\n\nTo generate text output based on reactive inputs\n\n\n\nThe user interface elements\n\n\n\nreactive()\n\n\n\nbase R plot\n\n\n\nsliderInput(\"slider\", \"Slider\", min = 1, max = 100, value = 50)"
  },
  {
    "objectID": "clicker.html#footnotes",
    "href": "clicker.html#footnotes",
    "title": "Clicker Questions for DS2 - Foundations of Data Science",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nwherever you are, make sure you are communicating with me when you have questions!↩︎\nwherever you are, make sure you are communicating with me when you have questions!↩︎\n\non Gradescope\n\n↩︎\n\npushing the file(s)\n\n↩︎\n\npoor assignment operator\n\n↩︎\n\ninvalid object name\n\n↩︎\n\nunmatched quotes\n\n↩︎\n\nno mistake\n\n↩︎\n\nimproper syntax for a function argument\n\n↩︎\n\nI mean, the right answer has to be Yes, right!??!\n\n↩︎\nno right answer here!↩︎\n\nIn the local folder which also has the R project. It could be on the Desktop or the Home directory, but it must be in the same place as the R project. Do not upload files to the remote GitHub directory or you will find yourself with two different copies of the files.\n\n↩︎\nYes! All the responses are reasons to make a figure.↩︎\n\nBecause that graphic displays the message you want as optimally as possible.\n\n↩︎\n\nlength, definitely. Maybe also a. position.\n\n↩︎\n\nposition, definitely, also e. color. Maybe also b. length.\n\n↩︎\n\ncolor, definitely. Also probably d. area.\n\n↩︎\n\ncolor must be specified outside the aes() function\n\n↩︎\n\ndot color is specified as “navy”, line color is specified as wday.\n\n↩︎\n\nset the information outside the aes() function\n\n↩︎\nanswers may vary. I’d say c. putting the work in context. Others might say b. facilitating comparison or d. simplifying the story. However, I don’t think a correct answer is a. making the data stand out.↩︎\n\nmaking the data stand out\n\n↩︎\n\nOne showed the relevant comparison better.\n\n↩︎\n\nIt isn’t at the origin. in combination with d. There wasn’t a label explaining why the axes were where they were. The story associated with the average value axes is not clear to the reader.\n\n↩︎\n\nThe job of a bar plot is to count the number of instances.\n\n↩︎\n\nfill = children colors and position = \"fill\" changes the y-axis. AND c. fill = children goes in the aes and position = \"fill\" goes outside the aes\n\n↩︎\n\ngeom_bar() is for categorical variables and geom_histogram() is for nubmers.\n\n↩︎\n\nTable c is best because the columns allow us to work with each of the variable separately.\n\n↩︎\n\nstarbucks in wrong place\n\n↩︎\n\ndoes something different because it takes the sum() instead of the mean(). The other commands compute the average fat broken down by type of Starbucks item\n\n↩︎\n\nfilter()\n\n↩︎\n\n(theme, year)\n\n↩︎\n\nmean(pieces)\n\n↩︎\nrunning the different code chunks with relevant output.↩︎\n\non Gradescope\n\n↩︎\n\non Canvas\n\n↩︎\n\n-country\n\n↩︎\n\nyear\n\n↩︎\n\ngdpval (if possible, good idea to name variables something different from the name of the data frame)\n\n↩︎\n\nuse pivot_wider() on raw data\n\n↩︎\n\nuse pivot_longer() on raw data. The reference to the study is: Gregory Belenky, Nancy J. Wesensten, David R. Thorne, Maria L. Thomas, Helen C. Sing, Daniel P. Redmond, Michael B. Russo and Thomas J. Balkin (2003) Patterns of performance degradation and restoration during sleep restriction and subsequent recovery: a sleep dose-response study. Journal of Sleep Research 12, 1–12.\n\n↩︎\n\nMick\n\n↩︎\n\nnone of them (the default is to retain all the variables)\n\n↩︎\n\nNA (it would be NULL in SQL)\n\n↩︎\n\nroster |&gt; anti_join(classes, by = “student_id”)`\n\n↩︎\n\nroster |&gt; full_join(classes, by = “student_id”)`\n\n↩︎\ne.roster |&gt; semi_join(classes, by = \"student_id\")↩︎\n\nclasses |&gt; anti_join(roster, by = \"student_id\")\n\n↩︎\n\nroster |&gt; inner_join(classes, by = \"student_id\") |&gt; filter(major != subject)\n\n↩︎\n\n“a1” “b2” “c3”\n\n↩︎\n\n“a 1” “b 2” “c 3”\n\n↩︎\n\n“ab” “ifg” Again, str_sub() is vectorized. So the subset of string one is from 1 to 2. The subset of string two is from 3 to 5.\n\n↩︎\n\n“one -pple” “two p-ars” “three bananas” (because str_replace() is vectorized)\n\n↩︎\n\nTRUE TRUE TRUE TRUE\n\n↩︎\n\nalphabetically, from a to z\n\n↩︎\n\nChanges the order of the levels of type\n\n↩︎\n\nSome of the above (b. Changes the values of x and c. Changes the levels of x and sort of d. Changes the order of the levels of x, jut by the nature of c.)\n\n↩︎\nI don’t know what the answer is. Ill-defined question.↩︎\n\ndifferent output formatting (the first produces 9 the second produces Sep)\n\n↩︎\n\nToday is the 39th week of the year.\n\n↩︎\n\nDay of month and day of year. (Day of year is often called the “Julian Day”.)\n\n↩︎\n\nFALSE\n\n↩︎\nneither c. nor e. would match. Inside the bracket “[^u]” matches anything other than a “u”, but it has to match something.↩︎\n\nsome of the above. d. Inside a character class | is a normal character and would therefore match “grey” and “gray” and “gr|y”. Which is not what we want, but would work to match both “grey” and “gray”. c. would not match with str_extract() (but might match in other parsers that ignored spaces).\n\n↩︎\n\n1 (because \\d matches only a single digit).\n\n↩︎\n\n10 (because \\d+ matches at least one digit).\n\n↩︎\n\nE (because . matches anything, and returns only a single character).\n\n↩︎\n\nEpisode 2: The pie whisperer. (4 August 2015) (because . matches anything, and with the + it returns multiple characters).\n\n↩︎\n\n. (because \\. matches the period, .).\n\n↩︎\n\nThe first includes Jane.\n\n↩︎\n\n\"(?&lt;=\\\\$)\\\\d+\"\n\n↩︎\n\n\"\\\\w+(?= pie)\"\n\n↩︎\n\nwe return the string at the lookaround\n\n↩︎\n\nerror (code will fail)\n\n↩︎\n\n9\n\n↩︎\n\n8\n\n↩︎\n\n8\n\n↩︎\n\nmap_chr(c(1,4,7), addTen) because the output is in quotes, the values are strings, not numbers.\n\n↩︎\n\nall of the above. The map() function allows vectors, lists, and data frames as input.\n\n↩︎\n\nmap(c(1, 4, 7), ~addTen). The ~ acts on functions that do not have their own name or that are defined by function(...). By adding the argument (.x) we’ve expanded the addTen() function, and so it needs a ~. The addTen() function all alone does not use a ~.\n\n↩︎\n\n6 random normals (1 with mean 1, sd 3; 2 with mean 3, sd 1; 3 with mean 47, sd 10)\n\n↩︎\n\nThere is no object called jan31.\n\n↩︎\n\nI haven’t loaded lubridate (which is why it doesn’t recognize that ymd() is not a function).\n\n↩︎\n\nThere is no error.\n\n↩︎\n\n3, 2, 1\n\n↩︎\n\n1\n\n↩︎\n\n2\n\n↩︎\n\n1\n\n↩︎\n\n2\n\n↩︎\nMaybe c. 3? a. 1? They are all okay, but you have to think carefully to read any of them!↩︎\n\nquestion, yes, no\n\n↩︎\n\n“1”, “cat”, “5”, NA, “cat” (Note that the numbers were converted to character strings!)\n\n↩︎\n\non Gradescope\n\n↩︎\n\non Canvas\n\n↩︎\n\nmakes your results reproducible\n\n↩︎\n\n[1] “f” “h” “i” “e” “g” “d” “c” “j” “b” “a”\n\n↩︎\n\n[1] “e” “j” “e” “b” “e” “c” “f” “a” “e” “a”\n\n↩︎\n\n[1] “j” “g” “f” “i” “f” (could have also been b.)\n\n↩︎\n\n[1] “i” “b” “g” “d” “a”\n\n↩︎\n\nthe number of hats that match\n\n↩︎\n\nthe proportion of hats that match\n\n↩︎\n\nwhether or not at least one hat matches\n\n↩︎\n\n10 (it represents both the number of overall hats and the number of hats we select)\n\n↩︎\n\nRepeat for many iterations. (The next step needs to gather information on how the FP and FN results hold, it might have just been something odd in my simulation… )\n\n↩︎\nall of the above↩︎\nIt totally depends on your personality and your finances. b. doesn’t make much sense. But a., c., and d. are all very reasonable questions to ask about your investments.↩︎\n\n8\n\n↩︎\n\n0.196 (19.6% of the time)\n\n↩︎\n\n0.063 (6.3% of the time)\n\n↩︎\n\nvery surprising (prob of 14 or more is 0.0021)\n\n↩︎\n\nalternative, one sided (because probably we are studying that it increases their success rate)\n\n↩︎\n\nnull, two sided (because I have no idea which cheetah might run faster)\n\n↩︎\n\nalternative, two sided (because I have no idea whether they’ve increased or decreased)\n\n↩︎\n\nnull, one sided (because I happen to know that folic acid is thought to prevent facial clefts)\n\n↩︎\n\nalternative, one sided (because I happen to know that caffeine is thought to decrease baby’s birth weight)\n\n↩︎\n\nA number which (is almost always unknown and) describes a population.\n\n↩︎\n\nwithout replacement (replace = FALSE)\n\n↩︎\n\nIt depends. a. would be the correct answer if the alternative hypothesis is \\(\\mu_1 - \\mu_2 &lt; 0\\), b. would be the right answer if the alternative hypothesis is \\(\\mu_1 - \\mu_2 &gt; 0\\) and c. would be the right answer if the alternative hypothesis is \\(\\mu_1 - \\mu_2 \\ne 0\\).\n\n↩︎\n\nDouble the area to the left.\n\n↩︎\n\nThe scale of the y-axis is upside down.\n\n↩︎\ndata-to-ink ratio measures how much ink is being used for the data (data-ink) as compared to how much ink is because used on the entire plot (labels, etc.)↩︎\n\nThe scale of the y-axis is way too zoomed in.\n\n↩︎\ndata-to-ink ratio measures how much ink is being used for the data (data-ink) as compared to how much ink is because used on the entire plot (labels, etc.)↩︎\n\nNon-intuitive sorting (sorted in decreasing order instead of by time)\n\n↩︎\ndata-to-ink ratio measures how much ink is being used for the data (data-ink) as compared to how much ink is because used on the entire plot (labels, etc.)↩︎\n\nInconsistent labeling (the colors mean different things for the two plots)\n\n↩︎\ndata-to-ink ratio measures how much ink is being used for the data (data-ink) as compared to how much ink is because used on the entire plot (labels, etc.)↩︎\nthere can’t possibly be a right answer here.↩︎\n\nstudents (is the top word over the last 500 opinion articles)\n\n↩︎\n\nthe elements have &lt; &gt;\n\n↩︎\n\nuse selector: img\n\n↩︎\n\nuse selector: [href]\n\n↩︎\n\nan attribute describes an element\n\n↩︎\n\nA relational database management system.\n\n↩︎\n\nThe first versions were created in the 1970s and called SEQUEL (Structured English QUEry Language). c. SQL came about in particular systems in the 1980s.\n\n↩︎\n\nrelational database management systems.\n\n↩︎\n\ncomputer’s hard drive / storage\n\n↩︎\n\nSQL tbl in storage and R tibble in memory\n\n↩︎\n\nSELECT\n\n↩︎\n\nSELECT FirstName FROM Persons\n\n↩︎\n\nSELECT * FROM Persons\n\n↩︎\n\nSELECT COUNT(*) FROM Persons\n\n↩︎\n\nSELECT * FROM Persons WHERE FirstName = ‘Peter’ (d. would also work.)\n\n↩︎\n\nSELECT * FROM Persons WHERE FirstName = ‘Peter’ AND LastName = ‘Jackson’\n\n↩︎\n\nBEWTEEN\n\n↩︎\n\nSELECT * FROM Persons WHERE LastName BETWEEN ‘Hansen’ AND ‘Pettersen’\n\n↩︎\n\nSELECT DISTINCT\n\n↩︎\n\nORDER BY\n\n↩︎\n\noriginal is the stored data and results comes after SELECT\n\n↩︎\n\nSELECT * FROM Persons ORDER BY FirstName DESC\n\n↩︎\n\nTRUE\n\n↩︎\n\n… WHERE type = ‘fruit’ AND (color = ‘yellow’ OR color = ‘green’)\n\n↩︎\n\nit combines rows from two or more tables based on a related column.\n\n↩︎\n\nit combines the results of two or more SELECT statements.\n\n↩︎\n\nit combines rows from two or more tables based on a related column.\n\n↩︎\n\nit combines rows from two or more tables based on a related column.\n\n↩︎\n\nthe second table\n\n↩︎\n\nMick\n\n↩︎\n\nnone of them (all variables are kept in all joins)\n\n↩︎\n\nNULL (it would be NA in R)\n\n↩︎\n\nCan’t have a column and a summary of that column.\n\n↩︎\n\nNeed a FROM\n\n↩︎\n\nyear = 2014 should go in WHERE\n\n↩︎\n\nCan’t SELECT a variable from the results set\n\n↩︎\n\nSELECT * FROM Persons WHERE FirstName REGEXP ’(?i)a.*’ (n.b., the LIKE function will give you a similar result, with % as a wildcard: SELECT*FROMPersonsWHERE` FirstName LIKE ‘a%’)\n\n↩︎\n\nPrimary key\n\n↩︎\n\nDirectly identifies another column\n\n↩︎\n\nstudent_name\n\n↩︎\n\nname as primary in enrollment and foreign in grades (the primary key must uniquely identify the records, and name is unlikely to do that in a grades database.)\n\n↩︎\n\nshinyApp()\n\n↩︎\n\nserver\n\n↩︎\n\nselectInput()\n\n↩︎\n\nTo generate text output based on reactive inputs\n\n↩︎\n\nThe user interface elements\n\n↩︎\n\nreactive()\n\n↩︎\n\nbase R plot\n\n↩︎\n\nsliderInput(\"slider\", \"Slider\", min = 1, max = 100, value = 50)\n\n↩︎"
  },
  {
    "objectID": "handout/lab1_db_sds261_j24.html",
    "href": "handout/lab1_db_sds261_j24.html",
    "title": "Lab 1 - working with Databases",
    "section": "",
    "text": "Today’s lab will provide practice working with the different tools we can use to implement SQL code. We haven’t covered much SQL syntax, so the focus will be more on the tools than on writing code. You should, however, be trying to understand the SQL code as you go along.\nThe goals for lab 1 include:"
  },
  {
    "objectID": "syllabus.html#sds-261-januar-2024",
    "href": "syllabus.html#sds-261-januar-2024",
    "title": "syllabus",
    "section": "",
    "text": "Class: daily 10-11:30am Lab: daily (not Fridays) 1:30-3pm Office hours: daily 11:30-1:30pm\nJo Hardin\njo.hardin@pomona.edu\n\n\n\n\n\nArtwork by @allison_horst."
  },
  {
    "objectID": "syllabus.html#student-learning-outcomes.",
    "href": "syllabus.html#student-learning-outcomes.",
    "title": "syllabus",
    "section": "",
    "text": "By the end of the term, students will be able to:\n\nscrape, process, and clean data from the web\nwrangle data in a variety of formats\ncontextualize variation in data\nconstruct point and interval estimates using resampling techniques\ndesign accurate, clear and appropriate data graphics\nquery large relational databases (using SQL)\nwork fluently with regular expression\ncommunicate data-driven decisions"
  },
  {
    "objectID": "handout/lab4_regexp_sds261_j24.html",
    "href": "handout/lab4_regexp_sds261_j24.html",
    "title": "Lab 4 - regular expressions",
    "section": "",
    "text": "do something with chatgpt. ask chat gpt how to answer the question. then ask using SQL then ask using stringr.\nSolution: ^(?([0-9]{3}))?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$\nTest your solution on the following potential phone numbers:\nSolution: 1?[0-9]/[0-3]?[0-9]/([0-9]{2})?[0-9]{2}\nTest your solution on the following potential dates:\nSolution: ^(1|t(rue)?|y(es)?|ok(ay)?)$\n–&gt;&gt; need to figure out about lower and upper case in R / grep()\nTest your solution on the following potential responses:\nSolution: 2{1,3}(,[0-9]{3})*.[0-9]+$\nTest your solution on the following potential values:"
  },
  {
    "objectID": "syllabus.html#sds-261-january-2024",
    "href": "syllabus.html#sds-261-january-2024",
    "title": "syllabus",
    "section": "",
    "text": "Class: daily 10-11:30am\nLab: daily (not Fridays) 1:30-3pm\nOffice hours: daily 11:30-1:30pm\n\n\n\n\n\nArtwork by @allison_horst."
  },
  {
    "objectID": "handout/lab2_R_SQL_sds261_j24.html",
    "href": "handout/lab2_R_SQL_sds261_j24.html",
    "title": "Lab2 - SQL in R",
    "section": "",
    "text": "do something with NA / NULL. see hadley’s comments in the where section. https://r4ds.hadley.nz/databases#where\ndo something with distinct()\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "handout/lab4_joins_sds261_j24.html",
    "href": "handout/lab4_joins_sds261_j24.html",
    "title": "Lab4 - joins",
    "section": "",
    "text": "according to Ben: Yelp data does not have referential integrity, and you can find reviews written by users who don’t exist and/or about restaurants that aren’t in the other table.\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "github.html",
    "href": "github.html",
    "title": "Working on assignments with GitHub",
    "section": "",
    "text": "In DS002R, we will use GitHub + Gradescope to access and submit assignments. Here is the basic structure of how it will work:\n\nGet the assignment materials from GitHub.\nClone the repository to any machine you are using.\nWork on the assignment and push back to GitHub.\nSubmit the assignment on Gradescope.\n\n\n\n\n\n\n\nimage credit: https://xkcd.com/1597/,\n\n\n\n\n\nThe following diagram lays out the process, and the rest of the document provides a more detailed set of instructions.\n\n\n\n\n\nFlowchart of assignment process."
  },
  {
    "objectID": "github.html#pull",
    "href": "github.html#pull",
    "title": "Working on assignments with GitHub",
    "section": "pull",
    "text": "pull\nIf you are working with a colleague or on different machines it is so incredibly important to get in the habit of immediately clicking on pull when you start your work. (If you are working alone on a single machine pull won’t hurt! You’ll just be told that your files are already up to date.)\n\n\n\n\n\nAlways pull before you start. pull-work-save-commit-push"
  },
  {
    "objectID": "github.html#knit-your-work",
    "href": "github.html#knit-your-work",
    "title": "Working on assignments with GitHub",
    "section": "knit your work",
    "text": "knit your work\nDon’t forget to put your name on the assignment. Also, make sure that you knit to pdf. Knit early and often. The more often you knit, the fewer headaches you will have.\n\n\n\n\n\nAlways pull before you start. pull-work-knit-commit-push"
  },
  {
    "objectID": "github.html#commit-your-work",
    "href": "github.html#commit-your-work",
    "title": "Working on assignments with GitHub",
    "section": "commit your work",
    "text": "commit your work\nYou don’t need to commit every file, but you do need to commit files that are integral to the analysis (always commit .qmd, .pdf, data files, images that created the pdf, etc.).\n\n\n\n\n\npull-work-render-commit-push"
  },
  {
    "objectID": "github.html#push-your-work-to-github",
    "href": "github.html#push-your-work-to-github",
    "title": "Working on assignments with GitHub",
    "section": "push your work to GitHub",
    "text": "push your work to GitHub\nIt is good practice to use meaningful commit messages to help your future self figure out your past work.\n\n\n\n\n\npull-work-render-commit-push"
  },
  {
    "objectID": "github.html#check-your-work-on-github",
    "href": "github.html#check-your-work-on-github",
    "title": "Working on assignments with GitHub",
    "section": "check your work on GitHub",
    "text": "check your work on GitHub\nTo make sure that the work went through, always check your GitHub repo online to confirm any changes you made.\n\n\n\n\n\nCheck that your changes are correct."
  },
  {
    "objectID": "project.html#big-picture",
    "href": "project.html#big-picture",
    "title": "Project",
    "section": "Big picture",
    "text": "Big picture\nYour project is meant to answer a question using data. The vast majority of the work will be on the data wrangling side, but you might hope to have a plot or two at the end to help tie together your ideas.\n\nTopics\nThe topics above are meant to direct the project productively. They are not meant to limit you. If you have an idea for a project that doesn’t quite fit into what is outlined above (but is related to the course content), let’s talk about it! Most likely, your idea will fit into the project goals.\nExpanding on the topics above to get you started…\n\n1. SQL queries\nThroughout the course, we’ve seen a few different databases. There are more available in the R mdsr package, and you also have access to some additional MySQL server databases through Smith. Additionally, the professor has access to a MySQL server that contains all of the Stanford Open Policing data, and you are welcome to work with it (just ask for login information). So many interesting questions to consider!\n\n\n2. Regular expressions\nYou might think about web scraping to retrieve data (probably using the rvest R package). For example, you might scrape details about every Taylor Swift song and use regular expressions to format the information in a way that allows easy question asking.\nOr you might find a dataset on the Gilmore Girls and scrape IMDb to match the ratings for each episode.\n\n\n3. Creating SQL database\nYou can use any of a variety of platforms to create a SQL database. As in the class notes and labs, you can create a database using DuckDB. Alternatively, you can use Smith’s MySQL server. Or, you can use SQLite to create a database (in a similar way to DuckDB).\nFor example, you might create a database using the Saturday Night Live data and update all of the files with more recent episodes.\nOr you might look for a TidyTuesday dataset to upload. For example, consider data on cats in the UK which references similar datasets in the US, Australia, and New Zealand.\nIf you are creating a new SQL database, make sure that your database has three or more tables that link to one another."
  },
  {
    "objectID": "project.html#technical-details",
    "href": "project.html#technical-details",
    "title": "Project",
    "section": "Technical details",
    "text": "Technical details\n\nYou may work alone or in pairs.\nThere must be a narrative to accompany all technical products including code, output tables, visualizations, etc. No naked code or graphs. (Figures and Tables should have captions.)\nThe expectation is that you turn in a reproducible Quarto file and accompanying pdf or html file. If you plan to turn in the project in a different format, please check with the professor in advance.\n\n\nDue Dates\n\nTuesday, January 16. Email prof with dataset details and idea for project. Include the following:\n\nQuestion of interest that you hope to address.\nHolistic description of the dataset(s) (a few sentences).\nDescription of the observational units and columns in each data table.\nFull reference for data citation.\nLink to the resources.\n\nEnd of week 2. We will have some time in class to work on the project.\nTuesday, January 23. Completed project is due.\n\n\n:::"
  },
  {
    "objectID": "slides/2024-01-08-db.html#what-is-a-database",
    "href": "slides/2024-01-08-db.html#what-is-a-database",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "What is a database?",
    "text": "What is a database?\n\nstructured collection of data organized with\n\nefficient storage\neasy retrieval\nconsistent management\n\ndata stored in tables which are linked to one another via keys"
  },
  {
    "objectID": "slides/2024-01-08-db.html#tidy-data",
    "href": "slides/2024-01-08-db.html#tidy-data",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "Tidy data",
    "text": "Tidy data\n\ndata frame (R) or table (SQL)\ncolumns of variables\nrows of observational units"
  },
  {
    "objectID": "slides/2024-01-08-db.html#differences-between-r-and-sql",
    "href": "slides/2024-01-08-db.html#differences-between-r-and-sql",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "Differences between R and SQL",
    "text": "Differences between R and SQL\n\ntables in SQL databases can be arbitrarily large\n\nlive in storage, computer’s hard drive (usually remote)\n\ndata frames in R\n\nlive in memory (RAM) on your personal computer\n\ntables in a database are linked via a key."
  },
  {
    "objectID": "slides/2024-01-08-db.html#sql-connection",
    "href": "slides/2024-01-08-db.html#sql-connection",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "SQL connection",
    "text": "SQL connection\nTo set up a SQL connection, you need the location of the server (host) as well as a username and password.\n\ncon_air &lt;- DBI::dbConnect(\n  RMariaDB::MariaDB(),\n  dbname = \"airlines\",\n  host = Sys.getenv(\"MDSR_HOST\"),\n  user = Sys.getenv(\"MDSR_USER\"),\n  password = Sys.getenv(\"MDSR_PWD\")\n)\n\nHadley Wickham discusses how to use Sys.getenv: https://cran.r-project.org/web/packages/httr/vignettes/secrets.html"
  },
  {
    "objectID": "slides/2024-01-08-db.html#sql-tables-as-tbl",
    "href": "slides/2024-01-08-db.html#sql-tables-as-tbl",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "SQL tables as tbl",
    "text": "SQL tables as tbl\n\ncarriers &lt;- dplyr::tbl(con_air, \"carriers\")\ndim(carriers)\n\n[1] NA  2\n\nhead(carriers)\n\n# Source:   SQL [6 x 2]\n# Database: mysql  [mdsr_public@mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com:NA/airlines]\n  carrier name                         \n  &lt;chr&gt;   &lt;chr&gt;                        \n1 02Q     Titan Airways                \n2 04Q     Tradewind Aviation           \n3 05Q     Comlux Aviation, AG          \n4 06Q     Master Top Linhas Aereas Ltd.\n5 07Q     Flair Airlines Ltd.          \n6 09Q     Swift Air, LLC"
  },
  {
    "objectID": "slides/2024-01-08-db.html#sql-tables-as-tibble",
    "href": "slides/2024-01-08-db.html#sql-tables-as-tibble",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "SQL tables as tibble",
    "text": "SQL tables as tibble\nThe function collect() copies a SQL table from it’s server location on disk to your local memory location in R.\n\ncarriers_tibble &lt;- carriers |&gt;\n  dplyr::collect()\n\ndim(carriers_tibble)\n\n[1] 1610    2\n\nhead(carriers_tibble)\n\n# A tibble: 6 × 2\n  carrier name                         \n  &lt;chr&gt;   &lt;chr&gt;                        \n1 02Q     Titan Airways                \n2 04Q     Tradewind Aviation           \n3 05Q     Comlux Aviation, AG          \n4 06Q     Master Top Linhas Aereas Ltd.\n5 07Q     Flair Airlines Ltd.          \n6 09Q     Swift Air, LLC"
  },
  {
    "objectID": "slides/2024-01-08-db.html#how-much-space-does-carriers-take-up",
    "href": "slides/2024-01-08-db.html#how-much-space-does-carriers-take-up",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "How much space does carriers take up?",
    "text": "How much space does carriers take up?\nThe data frame in R takes up 2 orders of magnitude of memory more than the table which just points to the object in SQL.\n\ncarriers |&gt;\n  object.size() |&gt;\n  print(units = \"Kb\")\n\n5.2 Kb\n\ncarriers_tibble |&gt;\n  object.size() |&gt;\n  print(units = \"Kb\")\n\n234.8 Kb"
  },
  {
    "objectID": "slides/2024-01-08-db.html#what-is-sql-structured-query-language",
    "href": "slides/2024-01-08-db.html#what-is-sql-structured-query-language",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "What is SQL (Structured Query Language) ?",
    "text": "What is SQL (Structured Query Language) ?\n\nSQL is a programming language for working with relational databases.\nSQL has been around since the 1970s, but has, unfortunately, many different dialects.\nTo connect to the Smith and mdsr databases (via R and DBeaver), we will use MySQL.\nTo connect to DuckDB, we will use the dialect native to DuckDB."
  },
  {
    "objectID": "slides/2024-01-08-db.html#translating-dplyr-code-into-sql",
    "href": "slides/2024-01-08-db.html#translating-dplyr-code-into-sql",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\nThe function dbListTables() in the DBI package will tell us what tables exist in the airlines database.\n\nDBI::dbListTables(con_air)\n\n[1] \"airports\" \"carriers\" \"flights\"  \"planes\"  \n\nflights &lt;- dplyr::tbl(con_air, \"flights\")\ncarriers &lt;- dplyr::tbl(con_air, \"carriers\")"
  },
  {
    "objectID": "slides/2024-01-08-db.html#translating-dplyr-code-into-sql-1",
    "href": "slides/2024-01-08-db.html#translating-dplyr-code-into-sql-1",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\n\nOver what years is the flights data taken?\n\n\nyrs &lt;- flights |&gt;\n  summarize(min_year = min(year), max_year = max(year))\n\nyrs\n\n# Source:   SQL [1 x 2]\n# Database: mysql  [mdsr_public@mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com:NA/airlines]\n  min_year max_year\n     &lt;int&gt;    &lt;int&gt;\n1     2010     2017"
  },
  {
    "objectID": "slides/2024-01-08-db.html#translating-dplyr-code-into-sql-2",
    "href": "slides/2024-01-08-db.html#translating-dplyr-code-into-sql-2",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\nBecause flights is not actually a data.frame in R (but instead a tbl in SQL), the work that was done above was actually performed in SQL. To see the SQL code, we can use the function show_query.\n\ndplyr::show_query(yrs)\n\n&lt;SQL&gt;\nSELECT MIN(`year`) AS `min_year`, MAX(`year`) AS `max_year`\nFROM `flights`"
  },
  {
    "objectID": "slides/2024-01-08-db.html#translating-dplyr-code-into-sql-3",
    "href": "slides/2024-01-08-db.html#translating-dplyr-code-into-sql-3",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\n\nCreate a data set containing only flights between LAX and BOS in 2012.\n\n\nla_bos &lt;- flights |&gt;\n  filter(year == 2012 & ((origin == \"LAX\" & dest == \"BOS\") | \n           (origin == \"BOS\" & dest == \"LAX\"))) \n\ndplyr::show_query(la_bos)\n\n&lt;SQL&gt;\nSELECT *\nFROM `flights`\nWHERE (`year` = 2012.0 AND ((`origin` = 'LAX' AND `dest` = 'BOS') OR (`origin` = 'BOS' AND `dest` = 'LAX')))"
  },
  {
    "objectID": "slides/2024-01-08-db.html#translating-dplyr-code-into-sql-4",
    "href": "slides/2024-01-08-db.html#translating-dplyr-code-into-sql-4",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\n\ndbplyr doesn’t translate every R command into SQL.\nSQL is not a statistical software and doesn’t, for example, have a mechanism for creating data visualizations.\ntrack which R commands are connected to SQL at the dbplyr reference sheet."
  },
  {
    "objectID": "slides/2024-01-08-db.html#sql-queries-through-the-dbi-package",
    "href": "slides/2024-01-08-db.html#sql-queries-through-the-dbi-package",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "2. SQL queries through the DBI package",
    "text": "2. SQL queries through the DBI package\n\nLook at the first few rows of the flights data.\n\n\nDBI::dbGetQuery(con_air,\n                \"SELECT * FROM flights LIMIT 8;\")\n\n  year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n1 2010    10   1        1           2100       181      159           2320\n2 2010    10   1        1           1920       281      230           2214\n3 2010    10   1        3           2355         8      339            334\n4 2010    10   1        5           2200       125       41           2249\n5 2010    10   1        7           2245        82      104           2347\n6 2010    10   1        7             10        -3      451            500\n7 2010    10   1        7           2150       137      139           2337\n8 2010    10   1        8             15        -7      538            537\n  arr_delay carrier tailnum flight origin dest air_time distance cancelled\n1       159      XE  N11137   2558    EWR  OMA      162     1133         0\n2       256      B6  N659JB    562    FLL  SWF      131     1119         0\n3         5      B6  N563JB    701    JFK  SJU      196     1597         0\n4       112      XE  N16559   5982    IAD  BNA       82      542         0\n5        77      OO  N908SW   6433    LAX  FAT       37      209         0\n6        -9      AA  N3FRAA    700    LAX  DFW      150     1235         0\n7       122      DL  N347NW   1752    ATL  IAD       70      533         0\n8         1      CO  N73283   1740    SMF  IAH      193     1609         0\n  diverted hour minute           time_hour\n1        0   21      0 2010-10-01 21:00:00\n2        0   19     20 2010-10-01 19:20:00\n3        0   23     55 2010-10-01 23:55:00\n4        0   22      0 2010-10-01 22:00:00\n5        0   22     45 2010-10-01 22:45:00\n6        0    0     10 2010-10-01 00:10:00\n7        0   21     50 2010-10-01 21:50:00\n8        0    0     15 2010-10-01 00:15:00"
  },
  {
    "objectID": "slides/2024-01-08-db.html#sql-queries-through-the-dbi-package-1",
    "href": "slides/2024-01-08-db.html#sql-queries-through-the-dbi-package-1",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "2. SQL queries through the DBI package",
    "text": "2. SQL queries through the DBI package\n\nHow many flights per year are in the flights table?\n\n\ndbGetQuery(con_air, \n  \"SELECT year, count(*) AS num_flights FROM flights GROUP BY year ORDER BY num_flights;\")\n\n  year num_flights\n1 2016     5617658\n2 2017     5674621\n3 2015     5819079\n4 2014     5819811\n5 2011     6085281\n6 2012     6096762\n7 2013     6369482\n8 2010     6450117"
  },
  {
    "objectID": "slides/2024-01-08-db.html#direct-sql-queries-through-a-sql-chunk",
    "href": "slides/2024-01-08-db.html#direct-sql-queries-through-a-sql-chunk",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "3. Direct SQL queries through a sql chunk",
    "text": "3. Direct SQL queries through a sql chunk\nSQL queries can be written directly inside a sql chunk in RStudio.\n\n```{sql}\n#| connection: con_air\n\nSELECT * FROM flights LIMIT 8;\n```\n\n\n\n\n8 records\n\n\n\n\nyear\n\n\nmonth\n\n\nday\n\n\ndep_time\n\n\nsched_dep_time\n\n\ndep_delay\n\n\narr_time\n\n\nsched_arr_time\n\n\narr_delay\n\n\ncarrier\n\n\ntailnum\n\n\nflight\n\n\norigin\n\n\ndest\n\n\nair_time\n\n\ndistance\n\n\ncancelled\n\n\ndiverted\n\n\nhour\n\n\nminute\n\n\ntime_hour\n\n\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n1\n\n\n2100\n\n\n181\n\n\n159\n\n\n2320\n\n\n159\n\n\nXE\n\n\nN11137\n\n\n2558\n\n\nEWR\n\n\nOMA\n\n\n162\n\n\n1133\n\n\n0\n\n\n0\n\n\n21\n\n\n0\n\n\n2010-10-01 21:00:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n1\n\n\n1920\n\n\n281\n\n\n230\n\n\n2214\n\n\n256\n\n\nB6\n\n\nN659JB\n\n\n562\n\n\nFLL\n\n\nSWF\n\n\n131\n\n\n1119\n\n\n0\n\n\n0\n\n\n19\n\n\n20\n\n\n2010-10-01 19:20:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n3\n\n\n2355\n\n\n8\n\n\n339\n\n\n334\n\n\n5\n\n\nB6\n\n\nN563JB\n\n\n701\n\n\nJFK\n\n\nSJU\n\n\n196\n\n\n1597\n\n\n0\n\n\n0\n\n\n23\n\n\n55\n\n\n2010-10-01 23:55:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n5\n\n\n2200\n\n\n125\n\n\n41\n\n\n2249\n\n\n112\n\n\nXE\n\n\nN16559\n\n\n5982\n\n\nIAD\n\n\nBNA\n\n\n82\n\n\n542\n\n\n0\n\n\n0\n\n\n22\n\n\n0\n\n\n2010-10-01 22:00:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n7\n\n\n2245\n\n\n82\n\n\n104\n\n\n2347\n\n\n77\n\n\nOO\n\n\nN908SW\n\n\n6433\n\n\nLAX\n\n\nFAT\n\n\n37\n\n\n209\n\n\n0\n\n\n0\n\n\n22\n\n\n45\n\n\n2010-10-01 22:45:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n7\n\n\n10\n\n\n-3\n\n\n451\n\n\n500\n\n\n-9\n\n\nAA\n\n\nN3FRAA\n\n\n700\n\n\nLAX\n\n\nDFW\n\n\n150\n\n\n1235\n\n\n0\n\n\n0\n\n\n0\n\n\n10\n\n\n2010-10-01 00:10:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n7\n\n\n2150\n\n\n137\n\n\n139\n\n\n2337\n\n\n122\n\n\nDL\n\n\nN347NW\n\n\n1752\n\n\nATL\n\n\nIAD\n\n\n70\n\n\n533\n\n\n0\n\n\n0\n\n\n21\n\n\n50\n\n\n2010-10-01 21:50:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n8\n\n\n15\n\n\n-7\n\n\n538\n\n\n537\n\n\n1\n\n\nCO\n\n\nN73283\n\n\n1740\n\n\nSMF\n\n\nIAH\n\n\n193\n\n\n1609\n\n\n0\n\n\n0\n\n\n0\n\n\n15\n\n\n2010-10-01 00:15:00"
  },
  {
    "objectID": "slides/2024-01-08-db.html#direct-sql-queries-through-a-sql-chunk-1",
    "href": "slides/2024-01-08-db.html#direct-sql-queries-through-a-sql-chunk-1",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "3. Direct SQL queries through a sql chunk",
    "text": "3. Direct SQL queries through a sql chunk\nSQL queries can be written directly inside a sql chunk in RStudio.\n\n```{sql}\n#| connection: con_air\n\nSELECT year, count(*) AS num_flights \n       FROM flights \n       GROUP BY year \n       ORDER BY num_flights;\n```\n\n\n\n\n8 records\n\n\n\n\nyear\n\n\nnum_flights\n\n\n\n\n\n\n2016\n\n\n5617658\n\n\n\n\n2017\n\n\n5674621\n\n\n\n\n2015\n\n\n5819079\n\n\n\n\n2014\n\n\n5819811\n\n\n\n\n2011\n\n\n6085281\n\n\n\n\n2012\n\n\n6096762\n\n\n\n\n2013\n\n\n6369482\n\n\n\n\n2010\n\n\n6450117"
  },
  {
    "objectID": "slides/2024-01-08-db.html#sql-queries-via-the-dbi-package",
    "href": "slides/2024-01-08-db.html#sql-queries-via-the-dbi-package",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "2. SQL queries via the DBI package",
    "text": "2. SQL queries via the DBI package\n\nLook at the first few rows of the flights data.\n\n\nDBI::dbGetQuery(con_air,\n                \"SELECT * FROM flights LIMIT 8;\")\n\n  year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n1 2010    10   1        1           2100       181      159           2320\n2 2010    10   1        1           1920       281      230           2214\n3 2010    10   1        3           2355         8      339            334\n4 2010    10   1        5           2200       125       41           2249\n5 2010    10   1        7           2245        82      104           2347\n6 2010    10   1        7             10        -3      451            500\n7 2010    10   1        7           2150       137      139           2337\n8 2010    10   1        8             15        -7      538            537\n  arr_delay carrier tailnum flight origin dest air_time distance cancelled\n1       159      XE  N11137   2558    EWR  OMA      162     1133         0\n2       256      B6  N659JB    562    FLL  SWF      131     1119         0\n3         5      B6  N563JB    701    JFK  SJU      196     1597         0\n4       112      XE  N16559   5982    IAD  BNA       82      542         0\n5        77      OO  N908SW   6433    LAX  FAT       37      209         0\n6        -9      AA  N3FRAA    700    LAX  DFW      150     1235         0\n7       122      DL  N347NW   1752    ATL  IAD       70      533         0\n8         1      CO  N73283   1740    SMF  IAH      193     1609         0\n  diverted hour minute           time_hour\n1        0   21      0 2010-10-01 21:00:00\n2        0   19     20 2010-10-01 19:20:00\n3        0   23     55 2010-10-01 23:55:00\n4        0   22      0 2010-10-01 22:00:00\n5        0   22     45 2010-10-01 22:45:00\n6        0    0     10 2010-10-01 00:10:00\n7        0   21     50 2010-10-01 21:50:00\n8        0    0     15 2010-10-01 00:15:00"
  },
  {
    "objectID": "slides/2024-01-08-db.html#sql-queries-via-the-dbi-package-1",
    "href": "slides/2024-01-08-db.html#sql-queries-via-the-dbi-package-1",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "2. SQL queries via the DBI package",
    "text": "2. SQL queries via the DBI package\n\nHow many flights per year are in the flights table?\n\n\nDBI::dbGetQuery(con_air, \n  \"SELECT year, count(*) AS num_flights FROM flights GROUP BY year ORDER BY num_flights;\")\n\n  year num_flights\n1 2016     5617658\n2 2017     5674621\n3 2015     5819079\n4 2014     5819811\n5 2011     6085281\n6 2012     6096762\n7 2013     6369482\n8 2010     6450117"
  },
  {
    "objectID": "slides/2024-01-08-db.html#direct-sql-queries-via-sql-chunks",
    "href": "slides/2024-01-08-db.html#direct-sql-queries-via-sql-chunks",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "3. Direct SQL queries via sql chunks",
    "text": "3. Direct SQL queries via sql chunks\nSQL queries can be written directly inside a sql chunk in RStudio.\n\n```{sql}\n#| connection: con_air\n\nSELECT * FROM flights LIMIT 8;\n```\n\n\n\n\n8 records\n\n\n\n\nyear\n\n\nmonth\n\n\nday\n\n\ndep_time\n\n\nsched_dep_time\n\n\ndep_delay\n\n\narr_time\n\n\nsched_arr_time\n\n\narr_delay\n\n\ncarrier\n\n\ntailnum\n\n\nflight\n\n\norigin\n\n\ndest\n\n\nair_time\n\n\ndistance\n\n\ncancelled\n\n\ndiverted\n\n\nhour\n\n\nminute\n\n\ntime_hour\n\n\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n1\n\n\n2100\n\n\n181\n\n\n159\n\n\n2320\n\n\n159\n\n\nXE\n\n\nN11137\n\n\n2558\n\n\nEWR\n\n\nOMA\n\n\n162\n\n\n1133\n\n\n0\n\n\n0\n\n\n21\n\n\n0\n\n\n2010-10-01 21:00:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n1\n\n\n1920\n\n\n281\n\n\n230\n\n\n2214\n\n\n256\n\n\nB6\n\n\nN659JB\n\n\n562\n\n\nFLL\n\n\nSWF\n\n\n131\n\n\n1119\n\n\n0\n\n\n0\n\n\n19\n\n\n20\n\n\n2010-10-01 19:20:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n3\n\n\n2355\n\n\n8\n\n\n339\n\n\n334\n\n\n5\n\n\nB6\n\n\nN563JB\n\n\n701\n\n\nJFK\n\n\nSJU\n\n\n196\n\n\n1597\n\n\n0\n\n\n0\n\n\n23\n\n\n55\n\n\n2010-10-01 23:55:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n5\n\n\n2200\n\n\n125\n\n\n41\n\n\n2249\n\n\n112\n\n\nXE\n\n\nN16559\n\n\n5982\n\n\nIAD\n\n\nBNA\n\n\n82\n\n\n542\n\n\n0\n\n\n0\n\n\n22\n\n\n0\n\n\n2010-10-01 22:00:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n7\n\n\n2245\n\n\n82\n\n\n104\n\n\n2347\n\n\n77\n\n\nOO\n\n\nN908SW\n\n\n6433\n\n\nLAX\n\n\nFAT\n\n\n37\n\n\n209\n\n\n0\n\n\n0\n\n\n22\n\n\n45\n\n\n2010-10-01 22:45:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n7\n\n\n10\n\n\n-3\n\n\n451\n\n\n500\n\n\n-9\n\n\nAA\n\n\nN3FRAA\n\n\n700\n\n\nLAX\n\n\nDFW\n\n\n150\n\n\n1235\n\n\n0\n\n\n0\n\n\n0\n\n\n10\n\n\n2010-10-01 00:10:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n7\n\n\n2150\n\n\n137\n\n\n139\n\n\n2337\n\n\n122\n\n\nDL\n\n\nN347NW\n\n\n1752\n\n\nATL\n\n\nIAD\n\n\n70\n\n\n533\n\n\n0\n\n\n0\n\n\n21\n\n\n50\n\n\n2010-10-01 21:50:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n8\n\n\n15\n\n\n-7\n\n\n538\n\n\n537\n\n\n1\n\n\nCO\n\n\nN73283\n\n\n1740\n\n\nSMF\n\n\nIAH\n\n\n193\n\n\n1609\n\n\n0\n\n\n0\n\n\n0\n\n\n15\n\n\n2010-10-01 00:15:00"
  },
  {
    "objectID": "slides/2024-01-08-db.html#direct-sql-queries-via-sql-chunks-1",
    "href": "slides/2024-01-08-db.html#direct-sql-queries-via-sql-chunks-1",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "3. Direct SQL queries via sql chunks",
    "text": "3. Direct SQL queries via sql chunks\nSQL queries can be written directly inside a sql chunk in RStudio.\n\n```{sql}\n#| connection: con_air\n\nSELECT year, count(*) AS num_flights \n       FROM flights \n       GROUP BY year \n       ORDER BY num_flights;\n```\n\n\n\n\n8 records\n\n\n\n\nyear\n\n\nnum_flights\n\n\n\n\n\n\n2016\n\n\n5617658\n\n\n\n\n2017\n\n\n5674621\n\n\n\n\n2015\n\n\n5819079\n\n\n\n\n2014\n\n\n5819811\n\n\n\n\n2011\n\n\n6085281\n\n\n\n\n2012\n\n\n6096762\n\n\n\n\n2013\n\n\n6369482\n\n\n\n\n2010\n\n\n6450117"
  },
  {
    "objectID": "handout/lab1_db_sds261_j24.html#advice-for-turning-in-the-assignment",
    "href": "handout/lab1_db_sds261_j24.html#advice-for-turning-in-the-assignment",
    "title": "Lab 1 - working with Databases",
    "section": "Advice for turning in the assignment",
    "text": "Advice for turning in the assignment\n\nrender early and often. In fact, go ahead and render your .qmd file right now. Maybe set a timer so that you render every 5 minutes. Do not wait until you are done with the assignment to render\nsave the .Rproj file somewhere you can find it. Don’t keep everything in your downloads folder. Maybe make a folder called SDS261 or something. That folder could live on your Desktop. Or maybe in your Dropbox."
  },
  {
    "objectID": "github.html#render-your-work",
    "href": "github.html#render-your-work",
    "title": "Working on assignments with GitHub",
    "section": "Render your work",
    "text": "Render your work\nDon’t forget to put your name on the assignment. Also, make sure that you Render to pdf. Render early and often. The more often you Render, the fewer headaches you will have.\n\n\n\n\n\nAlways pull before you start. pull-work-render-commit-push"
  },
  {
    "objectID": "slides/2024-01-08-db.html#steps-for-weekly-homework",
    "href": "slides/2024-01-08-db.html#steps-for-weekly-homework",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "Steps for weekly homework",
    "text": "Steps for weekly homework\n\nReceive a link to the new assignment (clicking on the link will create a new private repo)\n\nUse RStudio\n\nNew Project, version control, Git\n\nClone the repo using SSH\n\n\nCreate a new file sds261-lab#-lname-fname.qmd. (If the .qmd file already exists, rename the file to sds261-lab#-lname-fname.qmd.)\nDo the assignment\n\ncommit and push after every problem\n\n\nFor work done in DBeaver (.sql files), use the same naming convention: sds261-lab#-lname-fname.sql.\nAll necessary files must be in the same folder (e.g., data, .sql files, etc.)"
  },
  {
    "objectID": "handout/lab1_db_sds261_j24.html#assignment",
    "href": "handout/lab1_db_sds261_j24.html#assignment",
    "title": "Lab 1 - working with Databases",
    "section": "Assignment",
    "text": "Assignment\nPreliminary: You’ll need to create a quarto document. To do so click on: New file -&gt; quarto document.\n\nThe document should be saved in the R Project as lab1-sds261-yourlastname-yourfirstname.qmd.\nThe yaml at the top of the file should look like this (change the author and date fields):\n\n---\ntitle: 'Lab 1 - working with Databases'\nauthor: 'your name goes here'\ndate: 'due 10am Tuesday, January 9, 2024'\nexecute:\n  echo: true\n  warning: false\n  message: false\n---\nFor much of the assignment, Consider the task of figuring out how many flights came into or flew out of Bradley International Airport (BDL) last year.\n\nSet up a connection within an R chunk. See the README file.\n\n\nPull in the flights table as a tbl (do not use collect()!). Use dplyr commands to calculate the number of flights that flew into or out of BDL in 2012. Then use dplyr::show_query() to output the SQL query. (All done inside an R chunk.)\n\n\nAgain, inside an R chunk, use DBI::dbGetQuery() to run the SQL code calculated in the previous question.\n\n\nNow, inside a SQL chunk, use the SQL commands directly (same task: how many flights in and out of BDL in 2012).\n\n\nRerun all three scenarios, using the tictoc R package to see which method calculates the desired number most quickly. Below is an example of how to use tictoc. For the SQL chunk, you’ll need to place tic() in an R chunk before the SQL chunk and toc() in an R chunk after the SQL chunk. Write 1-2 sentences describing the results.\n\n\nlibrary(tictoc)\n\ntic()\nrand_numbers &lt;- rnorm(1000000)\nquantile(rand_numbers)\n\n           0%           25%           50%           75%          100% \n-4.7441954424 -0.6750814407  0.0006767307  0.6734974364  5.6445201338 \n\ntoc()\n\n0.097 sec elapsed\n\n\n\nUsing R on the tbl.\n\n\nUsing dbGetQuery().\n\n\nUsing SQL chunk.\n\n\nNow create a tibble (not a tbl) that includes only flights in 2012 either to or from BDL (use collect()). After you have created the tibble, summarize the observations to get the count. Use tictoc to evaluate how long the process takes. Write 1-2 sentences describing the results.\n\n\nDBeaver: open DBeaver from your applications. Following the instructions in the DBeaver online notes, set up a connection to the mdsr SQL server. Create a file called lab1-sds261-yourlastname-yourfirstname.sql and SAVE THE FILE in the lab1 R Project folder. Run the same SQL code as above. Did you get the same result? Were there any adjustments to the SQL code from above? Explain in a few sentences.\n\n\nReflect on at least 3 things that you learned during this lab. It could be about technical aspects. It could be about understanding databases. It could be about the difference between R and SQL. Anything you learned while doing the lab.\n\n\nAlways a good idea to terminate the SQL connection when you are done with it.\n\n\ndbDisconnect(con_air, shutdown = TRUE)\n\n\nrender - commit - push to GitHub. You should push three files, those with extensions .qmd, .html, and .sql. In a browser, look at your GitHub website to make sure that all three files were successfully pushed to the correct repo (yours for lab1)."
  },
  {
    "objectID": "slides/2024-01-08-db.html#good-practice",
    "href": "slides/2024-01-08-db.html#good-practice",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "Good practice",
    "text": "Good practice\nAlways a good idea to terminate the SQL connection when you are done with it.\n\ndbDisconnect(con_air, shutdown = TRUE)"
  },
  {
    "objectID": "handout/lab1_db_sds261_j24_sol.html",
    "href": "handout/lab1_db_sds261_j24_sol.html",
    "title": "Lab 1 - working with Databases",
    "section": "",
    "text": "Solution\n\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(DBI)\nlibrary(RMariaDB)\nlibrary(dbplyr)\nlibrary(mdsr)\nToday’s lab will provide practice working with the different tools we can use to implement SQL code. We haven’t covered much SQL syntax, so the focus will be more on the tools than on writing code. You should, however, be trying to understand the SQL code as you go along.\nThe goals for lab 1 include:"
  },
  {
    "objectID": "handout/lab1_db_sds261_j24_sol.html#advice-for-turning-in-the-assignment",
    "href": "handout/lab1_db_sds261_j24_sol.html#advice-for-turning-in-the-assignment",
    "title": "Lab 1 - working with Databases",
    "section": "Advice for turning in the assignment",
    "text": "Advice for turning in the assignment\n\nrender early and often. In fact, go ahead and render your .qmd file right now. Maybe set a timer so that you render every 5 minutes. Do not wait until you are done with the assignment to render\nsave the .Rproj file somewhere you can find it. Don’t keep everything in your downloads folder. Maybe make a folder called SDS261 or something. That folder could live on your Desktop. Or maybe in your Dropbox."
  },
  {
    "objectID": "handout/lab1_db_sds261_j24_sol.html#assignment",
    "href": "handout/lab1_db_sds261_j24_sol.html#assignment",
    "title": "Lab 1 - working with Databases",
    "section": "Assignment",
    "text": "Assignment\nPreliminary: You’ll need to create a quarto document. To do so click on: New file -&gt; quarto document.\n\nThe document should be saved in the R Project as lab1-sds261-yourlastname-yourfirstname.qmd.\nThe yaml at the top of the file should look like this (change the author and date fields):\n\n---\ntitle: 'Lab 1 - working with Databases'\nauthor: 'your name goes here'\ndate: 'due 10am Tuesday, January 9, 2024'\nexecute:\n  echo: true\n  warning: false\n  message: false\n---\nFor much of the assignment, Consider the task of figuring out how many flights came into or flew out of Bradley International Airport (BDL) last year.\n\nSet up a connection within an R chunk. See the README file.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ncon_air &lt;- DBI::dbConnect(\n  RMariaDB::MariaDB(),\n  dbname = \"airlines\",\n  host = Sys.getenv(\"MDSR_HOST\"),\n  user = Sys.getenv(\"MDSR_USER\"),\n  password = Sys.getenv(\"MDSR_PWD\")\n)\n\n\n\n\n\nPull in the flights table as a tbl (do not use collect()!). Use dplyr commands to calculate the number of flights that flew into or out of BDL in 2012. Then use dplyr::show_query() to output the SQL query. (All done inside an R chunk.)\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nflights &lt;- tbl(con_air, \"flights\")\nnames(flights)\n\n [1] \"year\"           \"month\"          \"day\"            \"dep_time\"      \n [5] \"sched_dep_time\" \"dep_delay\"      \"arr_time\"       \"sched_arr_time\"\n [9] \"arr_delay\"      \"carrier\"        \"tailnum\"        \"flight\"        \n[13] \"origin\"         \"dest\"           \"air_time\"       \"distance\"      \n[17] \"cancelled\"      \"diverted\"       \"hour\"           \"minute\"        \n[21] \"time_hour\"     \n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nbdl_query &lt;- flights |&gt;\n  filter(year == 2012 & (dest == \"BDL\" | origin == \"BDL\")) |&gt;\n  summarize(count = n())\n\nshow_query(bdl_query)\n\n&lt;SQL&gt;\nSELECT COUNT(*) AS `count`\nFROM `flights`\nWHERE (`year` = 2012.0 AND (`dest` = 'BDL' OR `origin` = 'BDL'))\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nThere were 41,949 flights to or from BDL in 2012.\n\n\n\n\n\nAgain, inside an R chunk, use DBI::dbGetQuery() to run the SQL code calculated in the previous question.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nDBI::dbGetQuery(con_air, \"SELECT COUNT(*) AS `count`\nFROM `flights`\nWHERE (`year` = 2012 AND (`dest` = 'BDL' OR `origin` = 'BDL'))\")\n\n  count\n1 41949\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nThere were 41,949 flights to or from BDL in 2012.\n\n\n\n\n\nNow, inside a SQL chunk, use the SQL commands directly (same task: how many flights in and out of BDL in 2012).\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n```{sql}\n#| connection: con_air\n#| unilur-solution: true\n\nSELECT COUNT(*) AS `count`\nFROM `flights`\nWHERE (`year` = 2012 AND (`dest` = 'BDL' OR `origin` = 'BDL'))\n```\n\n\n1 records\n\n\ncount\n\n\n\n\n41949\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nThere were 41,949 flights to or from BDL in 2012.\n\n\n\n\n\nRerun all three scenarios, using the tictoc R package to see which method calculates the desired number most quickly. Below is an example of how to use tictoc. For the SQL chunk, you’ll need to place tic() in an R chunk before the SQL chunk and toc() in an R chunk after the SQL chunk. Write 1-2 sentences describing the results.\n\n\nlibrary(tictoc)\n\ntic()\nrand_numbers &lt;- rnorm(1000000)\nquantile(rand_numbers)\n\n           0%           25%           50%           75%          100% \n-4.7441954424 -0.6750814407  0.0006767307  0.6734974364  5.6445201338 \n\ntoc()\n\n0.097 sec elapsed\n\n\n\nUsing R on the tbl.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ntic()\n\nflights &lt;- tbl(con_air, \"flights\")\n\nflights |&gt;\n  filter(year == 2012 & (dest == \"BDL\" | origin == \"BDL\")) |&gt;\n  summarize(count = n())\n\n# Source:   SQL [1 x 1]\n# Database: mysql  [mdsr_public@mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com:NA/airlines]\n    count\n  &lt;int64&gt;\n1   41949\n\ntoc()\n\n5.526 sec elapsed\n\n\n\n\n\n\nUsing dbGetQuery().\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ntic()\n\nDBI::dbGetQuery(con_air, \"SELECT COUNT(*) AS `count`\nFROM `flights`\nWHERE (`year` = 2012 AND (`dest` = 'BDL' OR `origin` = 'BDL'))\")\n\n  count\n1 41949\n\ntoc()\n\n5.258 sec elapsed\n\n\n\n\n\n\nUsing SQL chunk.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ntic()\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n```{sql}\n#| connection: con_air\n#| unilur-solution: true\n\nSELECT COUNT(*) AS `count`\nFROM `flights`\nWHERE (`year` = 2012 AND (`dest` = 'BDL' OR `origin` = 'BDL'))\n```\n\n\n1 records\n\n\ncount\n\n\n\n\n41949\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ntoc()\n\n5.515 sec elapsed\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nRunning the SQL code (either directly through a SQL chunk or by using DBI::dbGetQuery()) is faster than when dbplyr is used to translate R code into SQL queries.\n\n\n\n\n\nNow create a tibble (not a tbl) that includes only flights in 2012 either to or from BDL (use collect()). After you have created the tibble, summarize the observations to get the count. Use tictoc to evaluate how long the process takes. Write 1-2 sentences describing the results.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ntic()\n\nflights_BDL &lt;- flights |&gt;\n  filter(year == 2012 & (dest == \"BDL\" | origin == \"BDL\")) |&gt;\n  collect()\n\nflights_BDL |&gt;\n  summarize(count = n())\n\n# A tibble: 1 × 1\n  count\n  &lt;int&gt;\n1 41949\n\ntoc()\n\n5.538 sec elapsed\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nPulling the table into R as a dataframe slows down the calculations quite a bit.\n\n\n\n\n\nDBeaver: open DBeaver from your applications. Following the instructions in the DBeaver online notes, set up a connection to the mdsr SQL server. Create a file called lab1-sds261-yourlastname-yourfirstname.sql and SAVE THE FILE in the lab1 R Project folder. Run the same SQL code as above. Did you get the same result? Were there any adjustments to the SQL code from above? Explain in a few sentences.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nYes, there were still 41,949 flights to and from BDL in 2012. Whew! It would have been very odd if there had been a different number because the database itself hasn’t changed at all, we are just sending the query using a different client.\nI needed to remove the back ticks from the table and variable names. R uses backticks but DBeaver does not. Good to remember.\nI had set up my connection to the entire mdsr database, so I needed to add the line USE airlines; to the top of my SQL query so that it would be able to find the flights table. I could have also specified where flights lives using: ... FROM airlines.flights....\n\n\n\n\n\nReflect on at least 3 things that you learned during this lab. It could be about technical aspects. It could be about understanding databases. It could be about the difference between R and SQL. Anything you learned while doing the lab.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n\nthere are different ways to run the same SQL commands\nsome approaches are more efficient than other approaches\nthe RStudio IDE is flexible in that it allows both R and SQL code\nDBeaver is a more typical SQL client in that many lines of SQL code can be written simultaneously, and the SQL connection says in tact for the entire set of queries.\nthe airlines database has a ginormous about of information which exists in four tables: airports, carriers, flights, and planes\n\n\n\n\n\n\nAlways a good idea to terminate the SQL connection when you are done with it.\n\n\ndbDisconnect(con_air, shutdown = TRUE)\n\n\nrender - commit - push to GitHub. You should push three files, those with extensions .qmd, .html, and .sql. In a browser, look at your GitHub website to make sure that all three files were successfully pushed to the correct repo (yours for lab1)."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#nyc-taxis",
    "href": "slides/2024-01-09-clauses.html#nyc-taxis",
    "title": "SQL clauses",
    "section": "NYC Taxis",
    "text": "NYC Taxis\nConsider a database of taxi rides from the Yellow Cab company in NYC in March of 2014.\n\nFigure 1: image credit: Mariordo (Mario Roberto Durán Ortiz), CC BY-SA 3.0"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#establishing-a-sql-connection",
    "href": "slides/2024-01-09-clauses.html#establishing-a-sql-connection",
    "title": "SQL clauses",
    "section": "Establishing a SQL connection",
    "text": "Establishing a SQL connection\n\ncon_taxi &lt;- DBI::dbConnect(\n  RMariaDB::MariaDB(),\n  dbname = \"nyctaxi\",\n  host = Sys.getenv(\"MDSR_HOST\"),\n  user = Sys.getenv(\"MDSR_USER\"),\n  password = Sys.getenv(\"MDSR_PWD\")\n)"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#what-is-a-database",
    "href": "slides/2024-01-09-clauses.html#what-is-a-database",
    "title": "SQL clauses",
    "section": "What is a database?",
    "text": "What is a database?\n\nstructured collection of data organized with\n\nefficient storage\neasy retrieval\nconsistent management\n\ndata stored in tables which are linked to one another via keys"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#tidy-data",
    "href": "slides/2024-01-09-clauses.html#tidy-data",
    "title": "SQL clauses",
    "section": "Tidy data",
    "text": "Tidy data\n\ndata frame (R) or table (SQL)\ncolumns of variables\nrows of observational units"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#differences-between-r-and-sql",
    "href": "slides/2024-01-09-clauses.html#differences-between-r-and-sql",
    "title": "SQL clauses",
    "section": "Differences between R and SQL",
    "text": "Differences between R and SQL\n\ntables in SQL databases can be arbitrarily large\n\nlive in storage, computer’s hard drive (usually remote)\n\ndata frames in R\n\nlive in memory (RAM) on your personal computer\n\ntables in a database are linked via a key."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#sql-connection",
    "href": "slides/2024-01-09-clauses.html#sql-connection",
    "title": "SQL clauses",
    "section": "SQL connection",
    "text": "SQL connection\nTo set up a SQL connection, you need the location of the server (host) as well as a username and password.\n\ncon_air &lt;- DBI::dbConnect(\n  RMariaDB::MariaDB(),\n  dbname = \"airlines\",\n  host = Sys.getenv(\"MDSR_HOST\"),\n  user = Sys.getenv(\"MDSR_USER\"),\n  password = Sys.getenv(\"MDSR_PWD\")\n)\n\nHadley Wickham discusses how to use Sys.getenv: https://cran.r-project.org/web/packages/httr/vignettes/secrets.html"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#sql-tables-as-tbl",
    "href": "slides/2024-01-09-clauses.html#sql-tables-as-tbl",
    "title": "SQL clauses",
    "section": "SQL tables as tbl",
    "text": "SQL tables as tbl\n\ncarriers &lt;- dplyr::tbl(con_air, \"carriers\")\ndim(carriers)\n\n[1] NA  2\n\nhead(carriers)\n\n# Source:   SQL [6 x 2]\n# Database: mysql  [mdsr_public@mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com:NA/airlines]\n  carrier name                         \n  &lt;chr&gt;   &lt;chr&gt;                        \n1 02Q     Titan Airways                \n2 04Q     Tradewind Aviation           \n3 05Q     Comlux Aviation, AG          \n4 06Q     Master Top Linhas Aereas Ltd.\n5 07Q     Flair Airlines Ltd.          \n6 09Q     Swift Air, LLC"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#sql-tables-as-tibble",
    "href": "slides/2024-01-09-clauses.html#sql-tables-as-tibble",
    "title": "SQL clauses",
    "section": "SQL tables as tibble",
    "text": "SQL tables as tibble\nThe function collect() copies a SQL table from it’s server location on disk to your local memory location in R.\n\ncarriers_tibble &lt;- carriers |&gt;\n  dplyr::collect()\n\ndim(carriers_tibble)\n\n[1] 1610    2\n\nhead(carriers_tibble)\n\n# A tibble: 6 × 2\n  carrier name                         \n  &lt;chr&gt;   &lt;chr&gt;                        \n1 02Q     Titan Airways                \n2 04Q     Tradewind Aviation           \n3 05Q     Comlux Aviation, AG          \n4 06Q     Master Top Linhas Aereas Ltd.\n5 07Q     Flair Airlines Ltd.          \n6 09Q     Swift Air, LLC"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#how-much-space-does-carriers-take-up",
    "href": "slides/2024-01-09-clauses.html#how-much-space-does-carriers-take-up",
    "title": "SQL clauses",
    "section": "How much space does carriers take up?",
    "text": "How much space does carriers take up?\nThe data frame in R takes up 2 orders of magnitude of memory than the table which just points to the object in SQL.\n\ncarriers |&gt;\n  object.size() |&gt;\n  print(units = \"Kb\")\n\n5.2 Kb\n\ncarriers_tibble |&gt;\n  object.size() |&gt;\n  print(units = \"Kb\")\n\n234.8 Kb"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#what-is-sql-structured-query-language",
    "href": "slides/2024-01-09-clauses.html#what-is-sql-structured-query-language",
    "title": "SQL clauses",
    "section": "What is SQL (Structured Query Language) ?",
    "text": "What is SQL (Structured Query Language) ?\n\nSQL is a programming language for working with relational databases.\nSQL has been around since the 1970s, but has, unfortunately, many different dialects.\nTo connect to the Smith and mdsr databases (via R and DBeaver), we will use MySQL.\nTo connect to DuckDB, we will use the dialect native to DuckDB."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#translating-dplyr-code-into-sql",
    "href": "slides/2024-01-09-clauses.html#translating-dplyr-code-into-sql",
    "title": "SQL clauses",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\nThe function dbListTables() in the DBI package will tell us what tables exist in the airlines database.\n\nDBI::dbListTables(con_air)\n\n[1] \"airports\" \"carriers\" \"flights\"  \"planes\"  \n\nflights &lt;- dplyr::tbl(con_air, \"flights\")\ncarriers &lt;- dplyr::tbl(con_air, \"carriers\")"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#translating-dplyr-code-into-sql-1",
    "href": "slides/2024-01-09-clauses.html#translating-dplyr-code-into-sql-1",
    "title": "SQL clauses",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\n\nOver what years is the flights data taken?\n\n\nyrs &lt;- flights |&gt;\n  summarize(min_year = min(year), max_year = max(year))\n\nyrs\n\n# Source:   SQL [1 x 2]\n# Database: mysql  [mdsr_public@mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com:NA/airlines]\n  min_year max_year\n     &lt;int&gt;    &lt;int&gt;\n1     2010     2017"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#translating-dplyr-code-into-sql-2",
    "href": "slides/2024-01-09-clauses.html#translating-dplyr-code-into-sql-2",
    "title": "SQL clauses",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\nBecause flights is not actually a data.frame in R (but instead a tbl in SQL), the work that was done above was actually performed in SQL. To see the SQL code, we can use the function show_query.\n\ndplyr::show_query(yrs)\n\n&lt;SQL&gt;\nSELECT MIN(`year`) AS `min_year`, MAX(`year`) AS `max_year`\nFROM `flights`"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#translating-dplyr-code-into-sql-3",
    "href": "slides/2024-01-09-clauses.html#translating-dplyr-code-into-sql-3",
    "title": "SQL clauses",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\n\nCreate a data set containing only flights between LAX and BOS in 2012.\n\n\nla_bos &lt;- flights |&gt;\n  filter(year == 2012 & ((origin == \"LAX\" & dest == \"BOS\") | \n           (origin == \"BOS\" & dest == \"LAX\"))) \n\ndplyr::show_query(la_bos)\n\n&lt;SQL&gt;\nSELECT *\nFROM `flights`\nWHERE (`year` = 2012.0 AND ((`origin` = 'LAX' AND `dest` = 'BOS') OR (`origin` = 'BOS' AND `dest` = 'LAX')))"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#translating-dplyr-code-into-sql-4",
    "href": "slides/2024-01-09-clauses.html#translating-dplyr-code-into-sql-4",
    "title": "SQL clauses",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\n\ndbplyr doesn’t translate every R command into SQL.\nSQL is not a statistical software and doesn’t, for example, have a mechanism for creating data visualizations.\ntrack which R commands are connected to SQL at the dbplyr reference sheet."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#sql-queries-via-the-dbi-package",
    "href": "slides/2024-01-09-clauses.html#sql-queries-via-the-dbi-package",
    "title": "SQL clauses",
    "section": "2. SQL queries via the DBI package",
    "text": "2. SQL queries via the DBI package\n\nLook at the first few rows of the flights data.\n\n\nDBI::dbGetQuery(con_air,\n                \"SELECT * FROM flights LIMIT 8;\")\n\n  year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n1 2010    10   1        1           2100       181      159           2320\n2 2010    10   1        1           1920       281      230           2214\n3 2010    10   1        3           2355         8      339            334\n4 2010    10   1        5           2200       125       41           2249\n5 2010    10   1        7           2245        82      104           2347\n6 2010    10   1        7             10        -3      451            500\n7 2010    10   1        7           2150       137      139           2337\n8 2010    10   1        8             15        -7      538            537\n  arr_delay carrier tailnum flight origin dest air_time distance cancelled\n1       159      XE  N11137   2558    EWR  OMA      162     1133         0\n2       256      B6  N659JB    562    FLL  SWF      131     1119         0\n3         5      B6  N563JB    701    JFK  SJU      196     1597         0\n4       112      XE  N16559   5982    IAD  BNA       82      542         0\n5        77      OO  N908SW   6433    LAX  FAT       37      209         0\n6        -9      AA  N3FRAA    700    LAX  DFW      150     1235         0\n7       122      DL  N347NW   1752    ATL  IAD       70      533         0\n8         1      CO  N73283   1740    SMF  IAH      193     1609         0\n  diverted hour minute           time_hour\n1        0   21      0 2010-10-01 21:00:00\n2        0   19     20 2010-10-01 19:20:00\n3        0   23     55 2010-10-01 23:55:00\n4        0   22      0 2010-10-01 22:00:00\n5        0   22     45 2010-10-01 22:45:00\n6        0    0     10 2010-10-01 00:10:00\n7        0   21     50 2010-10-01 21:50:00\n8        0    0     15 2010-10-01 00:15:00"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#sql-queries-via-the-dbi-package-1",
    "href": "slides/2024-01-09-clauses.html#sql-queries-via-the-dbi-package-1",
    "title": "SQL clauses",
    "section": "2. SQL queries via the DBI package",
    "text": "2. SQL queries via the DBI package\n\nHow many flights per year are in the flights table?\n\n\nDBI::dbGetQuery(con_air, \n  \"SELECT year, count(*) AS num_flights FROM flights GROUP BY year ORDER BY num_flights;\")\n\n  year num_flights\n1 2016     5617658\n2 2017     5674621\n3 2015     5819079\n4 2014     5819811\n5 2011     6085281\n6 2012     6096762\n7 2013     6369482\n8 2010     6450117"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#direct-sql-queries-via-sql-chunks",
    "href": "slides/2024-01-09-clauses.html#direct-sql-queries-via-sql-chunks",
    "title": "SQL clauses",
    "section": "3. Direct SQL queries via sql chunks",
    "text": "3. Direct SQL queries via sql chunks\nSQL queries can be written directly inside a sql chunk in RStudio.\n\n```{sql}\n#| connection: con_air\n\nSELECT * FROM flights LIMIT 8;\n```\n\n\n\n\n8 records\n\n\n\n\nyear\n\n\nmonth\n\n\nday\n\n\ndep_time\n\n\nsched_dep_time\n\n\ndep_delay\n\n\narr_time\n\n\nsched_arr_time\n\n\narr_delay\n\n\ncarrier\n\n\ntailnum\n\n\nflight\n\n\norigin\n\n\ndest\n\n\nair_time\n\n\ndistance\n\n\ncancelled\n\n\ndiverted\n\n\nhour\n\n\nminute\n\n\ntime_hour\n\n\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n1\n\n\n2100\n\n\n181\n\n\n159\n\n\n2320\n\n\n159\n\n\nXE\n\n\nN11137\n\n\n2558\n\n\nEWR\n\n\nOMA\n\n\n162\n\n\n1133\n\n\n0\n\n\n0\n\n\n21\n\n\n0\n\n\n2010-10-01 21:00:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n1\n\n\n1920\n\n\n281\n\n\n230\n\n\n2214\n\n\n256\n\n\nB6\n\n\nN659JB\n\n\n562\n\n\nFLL\n\n\nSWF\n\n\n131\n\n\n1119\n\n\n0\n\n\n0\n\n\n19\n\n\n20\n\n\n2010-10-01 19:20:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n3\n\n\n2355\n\n\n8\n\n\n339\n\n\n334\n\n\n5\n\n\nB6\n\n\nN563JB\n\n\n701\n\n\nJFK\n\n\nSJU\n\n\n196\n\n\n1597\n\n\n0\n\n\n0\n\n\n23\n\n\n55\n\n\n2010-10-01 23:55:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n5\n\n\n2200\n\n\n125\n\n\n41\n\n\n2249\n\n\n112\n\n\nXE\n\n\nN16559\n\n\n5982\n\n\nIAD\n\n\nBNA\n\n\n82\n\n\n542\n\n\n0\n\n\n0\n\n\n22\n\n\n0\n\n\n2010-10-01 22:00:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n7\n\n\n2245\n\n\n82\n\n\n104\n\n\n2347\n\n\n77\n\n\nOO\n\n\nN908SW\n\n\n6433\n\n\nLAX\n\n\nFAT\n\n\n37\n\n\n209\n\n\n0\n\n\n0\n\n\n22\n\n\n45\n\n\n2010-10-01 22:45:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n7\n\n\n10\n\n\n-3\n\n\n451\n\n\n500\n\n\n-9\n\n\nAA\n\n\nN3FRAA\n\n\n700\n\n\nLAX\n\n\nDFW\n\n\n150\n\n\n1235\n\n\n0\n\n\n0\n\n\n0\n\n\n10\n\n\n2010-10-01 00:10:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n7\n\n\n2150\n\n\n137\n\n\n139\n\n\n2337\n\n\n122\n\n\nDL\n\n\nN347NW\n\n\n1752\n\n\nATL\n\n\nIAD\n\n\n70\n\n\n533\n\n\n0\n\n\n0\n\n\n21\n\n\n50\n\n\n2010-10-01 21:50:00\n\n\n\n\n2010\n\n\n10\n\n\n1\n\n\n8\n\n\n15\n\n\n-7\n\n\n538\n\n\n537\n\n\n1\n\n\nCO\n\n\nN73283\n\n\n1740\n\n\nSMF\n\n\nIAH\n\n\n193\n\n\n1609\n\n\n0\n\n\n0\n\n\n0\n\n\n15\n\n\n2010-10-01 00:15:00"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#direct-sql-queries-via-sql-chunks-1",
    "href": "slides/2024-01-09-clauses.html#direct-sql-queries-via-sql-chunks-1",
    "title": "SQL clauses",
    "section": "3. Direct SQL queries via sql chunks",
    "text": "3. Direct SQL queries via sql chunks\nSQL queries can be written directly inside a sql chunk in RStudio.\n\n```{sql}\n#| connection: con_air\n\nSELECT year, count(*) AS num_flights \n       FROM flights \n       GROUP BY year \n       ORDER BY num_flights;\n```\n\n\n\n\n8 records\n\n\n\n\nyear\n\n\nnum_flights\n\n\n\n\n\n\n2016\n\n\n5617658\n\n\n\n\n2017\n\n\n5674621\n\n\n\n\n2015\n\n\n5819079\n\n\n\n\n2014\n\n\n5819811\n\n\n\n\n2011\n\n\n6085281\n\n\n\n\n2012\n\n\n6096762\n\n\n\n\n2013\n\n\n6369482\n\n\n\n\n2010\n\n\n6450117"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#good-practice",
    "href": "slides/2024-01-09-clauses.html#good-practice",
    "title": "SQL clauses",
    "section": "Good practice",
    "text": "Good practice\nAlways a good idea to terminate the SQL connection when you are done with it.\n\ndbDisconnect(con_taxi, shutdown = TRUE)"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#steps-for-weekly-homework",
    "href": "slides/2024-01-09-clauses.html#steps-for-weekly-homework",
    "title": "SQL clauses",
    "section": "Steps for weekly homework",
    "text": "Steps for weekly homework\n\nReceive a link to the new assignment (clicking on the link will create a new private repo)\n\nUse R Studio\n\nNew Project, version control, Git\n\nClone the repo using SSH\n\n\nCreate a new file sds261-lab#-lname-fname.qmd. (If the .qmd file already exists, rename the file to sds261-lab#-lname-fname.qmd.)\nDo the assignment\n\ncommit and push after every problem\n\n\nFor work done in DBeaver (.sql files), use the same naming convention: sds261-lab#-lname-fname.sql.\nAll necessary files must be in the same folder (e.g., data, .sql files, etc.)"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#show-tables",
    "href": "slides/2024-01-09-clauses.html#show-tables",
    "title": "SQL clauses",
    "section": "SHOW TABLES",
    "text": "SHOW TABLES\nThere is only one table in the nyctaxi database. It is called yellow_old.\n\n```{sql}\n#| connection: con_taxi\n\nSHOW TABLES;\n```\n\n\n\n\n1 records\n\n\n\n\nTables_in_nyctaxi\n\n\n\n\n\n\nyellow_old"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#describe-tables",
    "href": "slides/2024-01-09-clauses.html#describe-tables",
    "title": "SQL clauses",
    "section": "DESCRIBE tables",
    "text": "DESCRIBE tables\nStill using a {sql} chunk. The DESCRIBE command shows the 18 field names (variables) in the yellow_old table. Some of the variables are characters (text) and some are numeric (either double or bigint)\n\nDESCRIBE yellow_old;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nField\n\n\nType\n\n\nNull\n\n\nKey\n\n\nDefault\n\n\nExtra\n\n\n\n\n\n\nvendor_id\n\n\ntext\n\n\nYES\n\n\n\n\n\n\n\n\n\n\npickup_datetime\n\n\ntext\n\n\nYES\n\n\n\n\n\n\n\n\n\n\ndropoff_datetime\n\n\ntext\n\n\nYES\n\n\n\n\n\n\n\n\n\n\npassenger_count\n\n\nbigint(20)\n\n\nYES\n\n\n\n\n\n\n\n\n\n\ntrip_distance\n\n\ndouble\n\n\nYES\n\n\n\n\n\n\n\n\n\n\npickup_longitude\n\n\ndouble\n\n\nYES\n\n\n\n\n\n\n\n\n\n\npickup_latitude\n\n\ndouble\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nrate_code\n\n\nbigint(20)\n\n\nYES\n\n\n\n\n\n\n\n\n\n\nstore_and_fwd_flag\n\n\ntext\n\n\nYES\n\n\n\n\n\n\n\n\n\n\ndropoff_longitude\n\n\ndouble\n\n\nYES"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#order-of-clauses",
    "href": "slides/2024-01-09-clauses.html#order-of-clauses",
    "title": "SQL clauses",
    "section": "Order of clauses",
    "text": "Order of clauses\nQueries in SQL start with the SELECT keyword and consist of several clauses, which must be written in the following order:\n\n\n\nSELECT\nFROM\nJOIN\nWHERE\n\n\n\nGROUP BY\nHAVING\nORDER BY\nLIMIT\n\n\n\nThe clauses are similar to data wrangling verbs in R."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#select-from",
    "href": "slides/2024-01-09-clauses.html#select-from",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\n\nstart with a SELECT, include a corresponding FROM\ncolumns may be specified or * returns every column\n\nThe shortest SQL query is the following SELECT command. Do not run this command!!! The yellow_old table has 15 million rows, and we do not want to look at them simultaneously.\n\nDO NOT RUN:  SELECT * FROM yellow_old;"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#select-from-1",
    "href": "slides/2024-01-09-clauses.html#select-from-1",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nMuch better for big tables:\n\nSELECT * FROM yellow_old LIMIT 0, 14;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nvendor_id\n\n\npickup_datetime\n\n\ndropoff_datetime\n\n\npassenger_count\n\n\ntrip_distance\n\n\npickup_longitude\n\n\npickup_latitude\n\n\nrate_code\n\n\nstore_and_fwd_flag\n\n\ndropoff_longitude\n\n\ndropoff_latitude\n\n\npayment_type\n\n\nfare_amount\n\n\nsurcharge\n\n\nmta_tax\n\n\ntip_amount\n\n\ntolls_amount\n\n\ntotal_amount\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCMT\n\n\n2014-03-01 01:07:38\n\n\n2014-03-01 01:16:26\n\n\n1\n\n\n2.0\n\n\n-74.0\n\n\n40.7\n\n\n1\n\n\nN\n\n\n-73.9\n\n\n40.7\n\n\nCRD\n\n\n9.0\n\n\n0.5\n\n\n0.5\n\n\n2.0\n\n\n0\n\n\n12.0\n\n\n\n\nCMT\n\n\n2014-03-01 01:08:03\n\n\n2014-03-01 01:12:51\n\n\n2\n\n\n1.2\n\n\n-74.0\n\n\n40.7\n\n\n1\n\n\nN\n\n\n-74.0\n\n\n40.7\n\n\nCRD\n\n\n6.0\n\n\n0.5\n\n\n0.5\n\n\n1.0\n\n\n0\n\n\n8.0\n\n\n\n\nCMT\n\n\n2014-03-01 01:08:51\n\n\n2014-03-01 01:13:18\n\n\n3\n\n\n0.5\n\n\n-73.9\n\n\n40.7\n\n\n1\n\n\nN\n\n\n-74.0\n\n\n40.7\n\n\nCRD\n\n\n5.0\n\n\n0.5\n\n\n0.5\n\n\n1.2\n\n\n0\n\n\n7.2\n\n\n\n\nCMT\n\n\n2014-03-01 01:09:20\n\n\n2014-03-01 01:24:18\n\n\n3\n\n\n3.5\n\n\n-74.0\n\n\n40.7\n\n\n1\n\n\nN\n\n\n-74.0\n\n\n40.8\n\n\nCRD\n\n\n14.0\n\n\n0.5\n\n\n0.5\n\n\n3.0\n\n\n0\n\n\n18.0\n\n\n\n\nCMT\n\n\n2014-03-01 01:09:46\n\n\n2014-03-01 01:22:34\n\n\n1\n\n\n1.8\n\n\n-74.0\n\n\n40.7\n\n\n1\n\n\nN\n\n\n-74.0\n\n\n40.7\n\n\nCRD\n\n\n10.5\n\n\n0.5\n\n\n0.5\n\n\n1.0\n\n\n0\n\n\n12.5\n\n\n\n\nCMT\n\n\n2014-03-01 01:12:41\n\n\n2014-03-01 01:15:38\n\n\n1\n\n\n0.5\n\n\n-74.0\n\n\n40.7\n\n\n1\n\n\nN\n\n\n-74.0\n\n\n40.7\n\n\nCRD\n\n\n4.0\n\n\n0.5\n\n\n0.5\n\n\n0.5\n\n\n0\n\n\n5.5\n\n\n\n\nCMT\n\n\n2014-03-01 01:12:11\n\n\n2014-03-01 01:27:38\n\n\n2\n\n\n3.7\n\n\n-74.0\n\n\n40.8\n\n\n1\n\n\nN\n\n\n-74.0\n\n\n40.7\n\n\nCRD\n\n\n14.5\n\n\n0.5\n\n\n0.5\n\n\n3.1\n\n\n0\n\n\n18.6\n\n\n\n\nCMT\n\n\n2014-03-01 01:13:55\n\n\n2014-03-01 01:34:54\n\n\n1\n\n\n5.4\n\n\n-74.0\n\n\n40.8\n\n\n1\n\n\nN\n\n\n-74.0\n\n\n40.7\n\n\nCRD\n\n\n20.0\n\n\n0.5\n\n\n0.5\n\n\n3.0\n\n\n0\n\n\n24.0\n\n\n\n\nCMT\n\n\n2014-03-01 01:14:06\n\n\n2014-03-01 01:28:25\n\n\n1\n\n\n3.5\n\n\n-74.0\n\n\n40.7\n\n\n1\n\n\nN\n\n\n-74.0\n\n\n40.8\n\n\nCRD\n\n\n13.5\n\n\n0.5\n\n\n0.5\n\n\n2.9\n\n\n0\n\n\n17.4"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#select-from-2",
    "href": "slides/2024-01-09-clauses.html#select-from-2",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nHow do we know how many taxi rides are recorded? Two different ways of counting the rows:\n\nSELECT COUNT(*), SUM(1) FROM yellow_old LIMIT 0, 14;\n\n\n\n\n1 records\n\n\n\n\nCOUNT(*)\n\n\nSUM(1)\n\n\n\n\n\n\n15428128\n\n\n15428128\n\n\n\n\n\n\n\nYikes, more than 15 million taxi rides!"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#select-from-3",
    "href": "slides/2024-01-09-clauses.html#select-from-3",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nWhat is the length of a taxi ride (in time)? … unfortunately, pickup_datetime and dropoff_datetime are saved as character strings instead of in DateTime format.\n\nSELECT\n      pickup_datetime, dropoff_datetime,\n      STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\") AS pickup,\n      STR_TO_DATE(dropoff_datetime, \"%Y-%m-%d %T\") AS dropoff\n   FROM yellow_old\n   LIMIT 0, 10;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\npickup_datetime\n\n\ndropoff_datetime\n\n\npickup\n\n\ndropoff\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2014-03-01 01:07:38\n\n\n2014-03-01 01:16:26\n\n\n2014-03-01 01:07:38\n\n\n2014-03-01 01:16:26\n\n\n\n\n2014-03-01 01:08:03\n\n\n2014-03-01 01:12:51\n\n\n2014-03-01 01:08:03\n\n\n2014-03-01 01:12:51\n\n\n\n\n2014-03-01 01:08:51\n\n\n2014-03-01 01:13:18\n\n\n2014-03-01 01:08:51\n\n\n2014-03-01 01:13:18\n\n\n\n\n2014-03-01 01:09:20\n\n\n2014-03-01 01:24:18\n\n\n2014-03-01 01:09:20\n\n\n2014-03-01 01:24:18\n\n\n\n\n2014-03-01 01:09:46\n\n\n2014-03-01 01:22:34\n\n\n2014-03-01 01:09:46\n\n\n2014-03-01 01:22:34\n\n\n\n\n2014-03-01 01:12:41\n\n\n2014-03-01 01:15:38\n\n\n2014-03-01 01:12:41\n\n\n2014-03-01 01:15:38\n\n\n\n\n2014-03-01 01:12:11\n\n\n2014-03-01 01:27:38\n\n\n2014-03-01 01:12:11\n\n\n2014-03-01 01:27:38\n\n\n\n\n2014-03-01 01:13:55\n\n\n2014-03-01 01:34:54\n\n\n2014-03-01 01:13:55\n\n\n2014-03-01 01:34:54\n\n\n\n\n2014-03-01 01:14:06\n\n\n2014-03-01 01:28:25\n\n\n2014-03-01 01:14:06\n\n\n2014-03-01 01:28:25"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#select-from-4",
    "href": "slides/2024-01-09-clauses.html#select-from-4",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nWhy can’t we find the difference between the new two time variables?\n\nSELECT\n      pickup_datetime, dropoff_datetime,\n      STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\") AS pickup,\n      STR_TO_DATE(dropoff_datetime, \"%Y-%m-%d %T\") AS dropoff,\n      TIMEDIFF(pickup, dropoff) AS length_time\n   FROM yellow_old\n   LIMIT 0, 10;\n\nError: Unknown column 'pickup' in 'field list' [1054]"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#select-from-5",
    "href": "slides/2024-01-09-clauses.html#select-from-5",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nSolution 1: two layers of SELECT\n\nfirst SELECT (i.e., inside) layer creates the new variables\nsecond SELECT (i.e., outside) layer subtracts the two times\n\n\nSELECT \n   pickup,\n   dropoff, \n   TIMEDIFF(pickup, dropoff) AS length_time \nFROM (\n   SELECT\n      STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\") AS pickup,\n      STR_TO_DATE(dropoff_datetime, \"%Y-%m-%d %T\") AS dropoff\n   FROM yellow_old)\n   AS subquery_table\nLIMIT 0, 20;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\npickup\n\n\ndropoff\n\n\nlength_time\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2014-03-01 01:07:38\n\n\n2014-03-01 01:16:26\n\n\n00:08:48\n\n\n\n\n2014-03-01 01:08:03\n\n\n2014-03-01 01:12:51\n\n\n00:04:48\n\n\n\n\n2014-03-01 01:08:51\n\n\n2014-03-01 01:13:18\n\n\n00:04:27\n\n\n\n\n2014-03-01 01:09:20\n\n\n2014-03-01 01:24:18\n\n\n00:14:58\n\n\n\n\n2014-03-01 01:09:46\n\n\n2014-03-01 01:22:34\n\n\n00:12:48\n\n\n\n\n2014-03-01 01:12:41\n\n\n2014-03-01 01:15:38\n\n\n00:02:57\n\n\n\n\n2014-03-01 01:12:11\n\n\n2014-03-01 01:27:38\n\n\n00:15:27\n\n\n\n\n2014-03-01 01:13:55\n\n\n2014-03-01 01:34:54\n\n\n00:20:59\n\n\n\n\n2014-03-01 01:14:06\n\n\n2014-03-01 01:28:25\n\n\n00:14:19"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#select-from-6",
    "href": "slides/2024-01-09-clauses.html#select-from-6",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nSolution 2: apply the STR_TO_DATE() function inside the TIMEDIFF() function\n\nSELECT \n   pickup_datetime,\n   dropoff_datetime, \n   TIMEDIFF(STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\"), \n            STR_TO_DATE(dropoff_datetime, \"%Y-%m-%d %T\")) AS length_time \nFROM yellow_old\nLIMIT 0, 20;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\npickup_datetime\n\n\ndropoff_datetime\n\n\nlength_time\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2014-03-01 01:07:38\n\n\n2014-03-01 01:16:26\n\n\n00:08:48\n\n\n\n\n2014-03-01 01:08:03\n\n\n2014-03-01 01:12:51\n\n\n00:04:48\n\n\n\n\n2014-03-01 01:08:51\n\n\n2014-03-01 01:13:18\n\n\n00:04:27\n\n\n\n\n2014-03-01 01:09:20\n\n\n2014-03-01 01:24:18\n\n\n00:14:58\n\n\n\n\n2014-03-01 01:09:46\n\n\n2014-03-01 01:22:34\n\n\n00:12:48\n\n\n\n\n2014-03-01 01:12:41\n\n\n2014-03-01 01:15:38\n\n\n00:02:57\n\n\n\n\n2014-03-01 01:12:11\n\n\n2014-03-01 01:27:38\n\n\n00:15:27\n\n\n\n\n2014-03-01 01:13:55\n\n\n2014-03-01 01:34:54\n\n\n00:20:59\n\n\n\n\n2014-03-01 01:14:06\n\n\n2014-03-01 01:28:25\n\n\n00:14:19"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#important-note",
    "href": "slides/2024-01-09-clauses.html#important-note",
    "title": "SQL clauses",
    "section": "Important note:",
    "text": "Important note:\nThere is a distinction between clauses that operate on the variables of the original table versus those that operate on the variables of the results set.\npickup_datetime and dropoff_datetime are columns in the original table - they are written to disk on the SQL server.\npickup, dropoff, and length_time exist only in the results set, which is passed from the server (SQL server) to the client (e.g., RStudio or DBeaver) and is not written to disk."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#where",
    "href": "slides/2024-01-09-clauses.html#where",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nThe WHERE clause is analogous to the filter() function in dplyr. However, keep in mind that there are two SQL commands that resemble the dplyr filter() function. WHERE operates on the original data in the table and HAVING operates on the result set."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#where-1",
    "href": "slides/2024-01-09-clauses.html#where-1",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nWhat was the fare for those taxi rides where the tip_amount was more than $10 and the person used cash?\nNote that in SQL the equality logical is = and in R the equality logical is ==.\n\nSELECT payment_type, fare_amount, tip_amount, total_amount\nFROM yellow_old\nWHERE tip_amount &gt; 10\n   AND payment_type = \"CSH\"\nLIMIT 0, 10;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\npayment_type\n\n\nfare_amount\n\n\ntip_amount\n\n\ntotal_amount\n\n\n\n\n\n\nCSH\n\n\n65.5\n\n\n15.3\n\n\n91.8\n\n\n\n\nCSH\n\n\n52.0\n\n\n11.6\n\n\n69.4\n\n\n\n\nCSH\n\n\n52.0\n\n\n11.6\n\n\n69.4\n\n\n\n\nCSH\n\n\n55.0\n\n\n16.2\n\n\n81.2\n\n\n\n\nCSH\n\n\n71.5\n\n\n20.0\n\n\n103.5\n\n\n\n\nCSH\n\n\n70.0\n\n\n16.2\n\n\n97.1\n\n\n\n\nCSH\n\n\n95.0\n\n\n21.9\n\n\n131.2\n\n\n\n\nCSH\n\n\n62.5\n\n\n15.5\n\n\n93.0\n\n\n\n\nCSH\n\n\n66.0\n\n\n15.0\n\n\n90.0\n\n\n\n\nCSH\n\n\n65.0\n\n\n13.2\n\n\n79.2"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#where-2",
    "href": "slides/2024-01-09-clauses.html#where-2",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nBETWEEN can be used to specify a range of values for a numeric value. BETWEEN is inclusive.\n\nSELECT payment_type, fare_amount, tip_amount, total_amount\nFROM yellow_old\nWHERE tip_amount BETWEEN 10 and 12\n   AND payment_type = \"CSH\"\nLIMIT 0, 10;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\npayment_type\n\n\nfare_amount\n\n\ntip_amount\n\n\ntotal_amount\n\n\n\n\n\n\nCSH\n\n\n52.0\n\n\n11.6\n\n\n69.4\n\n\n\n\nCSH\n\n\n52.0\n\n\n11.6\n\n\n69.4\n\n\n\n\nCSH\n\n\n88.0\n\n\n10.0\n\n\n107.0\n\n\n\n\nCSH\n\n\n72.0\n\n\n10.0\n\n\n94.0\n\n\n\n\nCSH\n\n\n64.5\n\n\n10.0\n\n\n85.5\n\n\n\n\nCSH\n\n\n66.0\n\n\n12.0\n\n\n93.0\n\n\n\n\nCSH\n\n\n52.0\n\n\n11.6\n\n\n69.4\n\n\n\n\nCSH\n\n\n69.0\n\n\n10.0\n\n\n88.0\n\n\n\n\nCSH\n\n\n90.0\n\n\n10.0\n\n\n100.0\n\n\n\n\nCSH\n\n\n52.0\n\n\n11.6\n\n\n69.4"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#where-3",
    "href": "slides/2024-01-09-clauses.html#where-3",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nIN is similar to the dplyr %in% function which specifies distinct values for the variable.\n\nSELECT payment_type, fare_amount, tip_amount, total_amount\nFROM yellow_old\nWHERE tip_amount IN (10, 12)\n   AND payment_type = \"CSH\"\nLIMIT 0, 10;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\npayment_type\n\n\nfare_amount\n\n\ntip_amount\n\n\ntotal_amount\n\n\n\n\n\n\nCSH\n\n\n88.0\n\n\n10\n\n\n107.0\n\n\n\n\nCSH\n\n\n72.0\n\n\n10\n\n\n94.0\n\n\n\n\nCSH\n\n\n64.5\n\n\n10\n\n\n85.5\n\n\n\n\nCSH\n\n\n66.0\n\n\n12\n\n\n93.0\n\n\n\n\nCSH\n\n\n69.0\n\n\n10\n\n\n88.0\n\n\n\n\nCSH\n\n\n90.0\n\n\n10\n\n\n100.0\n\n\n\n\nCSH\n\n\n74.5\n\n\n10\n\n\n90.3\n\n\n\n\nCSH\n\n\n89.0\n\n\n10\n\n\n118.1\n\n\n\n\nCSH\n\n\n52.0\n\n\n10\n\n\n67.8\n\n\n\n\nCSH\n\n\n66.0\n\n\n12\n\n\n90.0"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#where-4",
    "href": "slides/2024-01-09-clauses.html#where-4",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nAND takes precedent over OR in the order of operations, when there are no parentheses.\n\nSELECT payment_type, fare_amount, tip_amount, total_amount\nFROM yellow_old\nWHERE tip_amount BETWEEN 10 and 12 OR \n      total_amount BETWEEN 100 and 112 AND \n      payment_type = \"CSH\"\nLIMIT 0, 10;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\npayment_type\n\n\nfare_amount\n\n\ntip_amount\n\n\ntotal_amount\n\n\n\n\n\n\nCRD\n\n\n52.0\n\n\n10.5\n\n\n63.0\n\n\n\n\nCRD\n\n\n35.0\n\n\n10.2\n\n\n51.0\n\n\n\n\nCRD\n\n\n52.0\n\n\n11.6\n\n\n69.4\n\n\n\n\nCRD\n\n\n30.5\n\n\n10.8\n\n\n47.2\n\n\n\n\nCRD\n\n\n52.0\n\n\n10.5\n\n\n63.0\n\n\n\n\nCRD\n\n\n52.0\n\n\n10.5\n\n\n63.0\n\n\n\n\nCRD\n\n\n52.0\n\n\n11.6\n\n\n69.4\n\n\n\n\nCRD\n\n\n52.0\n\n\n11.6\n\n\n69.4\n\n\n\n\nCRD\n\n\n52.0\n\n\n11.6\n\n\n69.4\n\n\n\n\nCRD\n\n\n52.0\n\n\n11.6\n\n\n69.4"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#where-5",
    "href": "slides/2024-01-09-clauses.html#where-5",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nParentheses take precedent over AND and OR.\n\nSELECT payment_type, fare_amount, tip_amount, total_amount\nFROM yellow_old\nWHERE (tip_amount BETWEEN 10 and 12 OR \n      total_amount BETWEEN 100 and 112 ) AND \n      payment_type = \"CSH\"\nLIMIT 0, 10;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\npayment_type\n\n\nfare_amount\n\n\ntip_amount\n\n\ntotal_amount\n\n\n\n\n\n\nCSH\n\n\n107.0\n\n\n0.0\n\n\n108.0\n\n\n\n\nCSH\n\n\n92.5\n\n\n0.0\n\n\n103.5\n\n\n\n\nCSH\n\n\n99.5\n\n\n0.0\n\n\n105.3\n\n\n\n\nCSH\n\n\n92.0\n\n\n0.0\n\n\n106.3\n\n\n\n\nCSH\n\n\n103.0\n\n\n0.0\n\n\n109.3\n\n\n\n\nCSH\n\n\n107.0\n\n\n0.0\n\n\n107.0\n\n\n\n\nCSH\n\n\n104.5\n\n\n0.0\n\n\n105.5\n\n\n\n\nCSH\n\n\n112.0\n\n\n0.0\n\n\n112.0\n\n\n\n\nCSH\n\n\n52.0\n\n\n11.6\n\n\n69.4\n\n\n\n\nCSH\n\n\n52.0\n\n\n11.6\n\n\n69.4"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#group-by",
    "href": "slides/2024-01-09-clauses.html#group-by",
    "title": "SQL clauses",
    "section": "GROUP BY",
    "text": "GROUP BY\nThe GROUP BY clause will direct SQL to carry out the query separately for each category in the grouped variable.\n\naggregate functions include COUNT(), SUM(), MAX(), MIN(), and AVG().\n\n\nSELECT COUNT(*) AS num_transactions, \n       SUM(1) AS num_transactions_also,\n       SUM(2) AS double_transactions,\n       payment_type \nFROM yellow_old\nWHERE tip_amount BETWEEN 10 and 20\nGROUP BY payment_type;\n\n\n\n\n5 records\n\n\n\n\nnum_transactions\n\n\nnum_transactions_also\n\n\ndouble_transactions\n\n\npayment_type\n\n\n\n\n\n\n213872\n\n\n213872\n\n\n427744\n\n\nCRD\n\n\n\n\n78\n\n\n78\n\n\n156\n\n\nCSH\n\n\n\n\n3\n\n\n3\n\n\n6\n\n\nDIS\n\n\n\n\n7\n\n\n7\n\n\n14\n\n\nNOC\n\n\n\n\n609\n\n\n609\n\n\n1218\n\n\nUNK"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#group-by-1",
    "href": "slides/2024-01-09-clauses.html#group-by-1",
    "title": "SQL clauses",
    "section": "GROUP BY",
    "text": "GROUP BY\nFor those people who tipped between $10 and $20, what was the lowest and highest fare for each of the types of payments?\n\nSELECT COUNT(*) AS num_transactions, \n       MIN(fare_amount) AS lowest_fare,\n       MAX(fare_amount) AS highest_fare,\n       payment_type \nFROM yellow_old\nWHERE tip_amount BETWEEN 10 and 20\nGROUP BY payment_type;\n\n\n\n\n5 records\n\n\n\n\nnum_transactions\n\n\nlowest_fare\n\n\nhighest_fare\n\n\npayment_type\n\n\n\n\n\n\n213872\n\n\n0.0\n\n\n370.0\n\n\nCRD\n\n\n\n\n78\n\n\n52.0\n\n\n102.0\n\n\nCSH\n\n\n\n\n3\n\n\n52.0\n\n\n79.5\n\n\nDIS\n\n\n\n\n7\n\n\n58.0\n\n\n94.0\n\n\nNOC\n\n\n\n\n609\n\n\n4.5\n\n\n147.0\n\n\nUNK"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#group-by-2",
    "href": "slides/2024-01-09-clauses.html#group-by-2",
    "title": "SQL clauses",
    "section": "GROUP BY",
    "text": "GROUP BY\nGROUP BY will work applied to multiple columns.\nWhat is wday?\n\nSELECT COUNT(*) AS num_transactions, \n       MIN(fare_amount) AS lowest_fare,\n       MAX(fare_amount) AS highest_fare,\n       payment_type,\n       DAYNAME(STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\")) AS wday\nFROM yellow_old\nGROUP BY payment_type, wday;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nnum_transactions\n\n\nlowest_fare\n\n\nhighest_fare\n\n\npayment_type\n\n\nwday\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n1247397\n\n\n2.5\n\n\n477\n\n\nCRD\n\n\nFriday\n\n\n\n\n1278362\n\n\n-612.4\n\n\n500\n\n\nCRD\n\n\nMonday\n\n\n\n\n1533796\n\n\n2.5\n\n\n420\n\n\nCRD\n\n\nSaturday\n\n\n\n\n1324394\n\n\n2.5\n\n\n480\n\n\nCRD\n\n\nSunday\n\n\n\n\n1258098\n\n\n2.5\n\n\n500\n\n\nCRD\n\n\nThursday\n\n\n\n\n1121081\n\n\n2.5\n\n\n500\n\n\nCRD\n\n\nTuesday\n\n\n\n\n1192892\n\n\n2.5\n\n\n400\n\n\nCRD\n\n\nWednesday\n\n\n\n\n860920\n\n\n2.5\n\n\n444\n\n\nCSH\n\n\nFriday\n\n\n\n\n918653\n\n\n0.0\n\n\n873\n\n\nCSH\n\n\nMonday"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#order-by",
    "href": "slides/2024-01-09-clauses.html#order-by",
    "title": "SQL clauses",
    "section": "ORDER BY",
    "text": "ORDER BY\nORDER BY allows us to look at interesting aspects of the data by sorting the data.\n\nSELECT COUNT(*) AS num_transactions, \n       MIN(fare_amount) AS lowest_fare,\n       MAX(fare_amount) AS highest_fare,\n       payment_type,\n       DAYNAME(STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\")) AS wday\nFROM yellow_old\nGROUP BY payment_type, wday\nORDER BY lowest_fare ASC;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nnum_transactions\n\n\nlowest_fare\n\n\nhighest_fare\n\n\npayment_type\n\n\nwday\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n1278362\n\n\n-612.4\n\n\n500\n\n\nCRD\n\n\nMonday\n\n\n\n\n918653\n\n\n0.0\n\n\n873\n\n\nCSH\n\n\nMonday\n\n\n\n\n5440\n\n\n0.0\n\n\n950\n\n\nNOC\n\n\nMonday\n\n\n\n\n1537\n\n\n0.0\n\n\n102\n\n\nDIS\n\n\nMonday\n\n\n\n\n1533796\n\n\n2.5\n\n\n420\n\n\nCRD\n\n\nSaturday\n\n\n\n\n1121081\n\n\n2.5\n\n\n500\n\n\nCRD\n\n\nTuesday\n\n\n\n\n1192892\n\n\n2.5\n\n\n400\n\n\nCRD\n\n\nWednesday\n\n\n\n\n1258098\n\n\n2.5\n\n\n500\n\n\nCRD\n\n\nThursday\n\n\n\n\n1247397\n\n\n2.5\n\n\n477\n\n\nCRD\n\n\nFriday\n\n\n\n\n\n\n\nWHAT?!?!! How in the world was one of the fares -$612.40?"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#order-by-1",
    "href": "slides/2024-01-09-clauses.html#order-by-1",
    "title": "SQL clauses",
    "section": "ORDER BY",
    "text": "ORDER BY\n\nSELECT COUNT(*) AS num_transactions, \n       MIN(fare_amount) AS lowest_fare,\n       MAX(fare_amount) AS highest_fare,\n       payment_type,\n       DAYNAME(STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\")) AS wday\nFROM yellow_old\nGROUP BY payment_type, wday\nORDER BY highest_fare DESC;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nnum_transactions\n\n\nlowest_fare\n\n\nhighest_fare\n\n\npayment_type\n\n\nwday\n\n\n\n\n\n\n5440\n\n\n0.0\n\n\n950\n\n\nNOC\n\n\nMonday\n\n\n\n\n918653\n\n\n0.0\n\n\n873\n\n\nCSH\n\n\nMonday\n\n\n\n\n1278362\n\n\n-612.4\n\n\n500\n\n\nCRD\n\n\nMonday\n\n\n\n\n1121081\n\n\n2.5\n\n\n500\n\n\nCRD\n\n\nTuesday\n\n\n\n\n1258098\n\n\n2.5\n\n\n500\n\n\nCRD\n\n\nThursday\n\n\n\n\n1324394\n\n\n2.5\n\n\n480\n\n\nCRD\n\n\nSunday\n\n\n\n\n1247397\n\n\n2.5\n\n\n477\n\n\nCRD\n\n\nFriday\n\n\n\n\n1222\n\n\n2.5\n\n\n475\n\n\nDIS\n\n\nTuesday\n\n\n\n\n813813\n\n\n2.5\n\n\n475\n\n\nCSH\n\n\nThursday\n\n\n\n\n860920\n\n\n2.5\n\n\n444\n\n\nCSH\n\n\nFriday\n\n\n\n\n\n\n\n$950 is a lot to pay for a cab ride! But in NYC, I’d believe it."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#order-by-2",
    "href": "slides/2024-01-09-clauses.html#order-by-2",
    "title": "SQL clauses",
    "section": "ORDER BY",
    "text": "ORDER BY\n\nSELECT COUNT(*) AS num_transactions, \n       MIN(fare_amount) AS lowest_fare,\n       MAX(fare_amount) AS highest_fare,\n       payment_type,\n       DAYNAME(STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\")) AS wday\nFROM yellow_old\nGROUP BY payment_type, wday\nORDER BY wday, payment_type;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nnum_transactions\n\n\nlowest_fare\n\n\nhighest_fare\n\n\npayment_type\n\n\nwday\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n1247397\n\n\n2.5\n\n\n477\n\n\nCRD\n\n\nFriday\n\n\n\n\n860920\n\n\n2.5\n\n\n444\n\n\nCSH\n\n\nFriday\n\n\n\n\n1592\n\n\n2.5\n\n\n255\n\n\nDIS\n\n\nFriday\n\n\n\n\n5252\n\n\n2.5\n\n\n229\n\n\nNOC\n\n\nFriday\n\n\n\n\n10131\n\n\n2.5\n\n\n130\n\n\nUNK\n\n\nFriday\n\n\n\n\n1278362\n\n\n-612.4\n\n\n500\n\n\nCRD\n\n\nMonday\n\n\n\n\n918653\n\n\n0.0\n\n\n873\n\n\nCSH\n\n\nMonday\n\n\n\n\n1537\n\n\n0.0\n\n\n102\n\n\nDIS\n\n\nMonday\n\n\n\n\n5440\n\n\n0.0\n\n\n950\n\n\nNOC\n\n\nMonday"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#order-by-3",
    "href": "slides/2024-01-09-clauses.html#order-by-3",
    "title": "SQL clauses",
    "section": "ORDER BY",
    "text": "ORDER BY\n\n\n\nNote that both GROUP BY and ORDER BY evaluate the data after it has been retrieved. Therefore, the functions operate on the results set, not the original rows of the data.\n\n\n\nWe are able to GROUP BY and ORDER BY on the new variables we had created, wday."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#having",
    "href": "slides/2024-01-09-clauses.html#having",
    "title": "SQL clauses",
    "section": "HAVING",
    "text": "HAVING\nRecall that WHERE acts only on the original data. If we are interested in rides that took place on Friday, we need to use the derived variable wday instead of the raw variable pickup_datetime. Fortunately, HAVING works on the results set."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#having-1",
    "href": "slides/2024-01-09-clauses.html#having-1",
    "title": "SQL clauses",
    "section": "HAVING",
    "text": "HAVING\n\nSELECT COUNT(*) AS num_transactions, \n       MIN(fare_amount) AS lowest_fare,\n       MAX(fare_amount) AS highest_fare,\n       payment_type,\n       DAYNAME(STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\")) AS wday\nFROM yellow_old\nGROUP BY payment_type, wday\nHAVING wday = 'Friday';\n\n\n\n\n5 records\n\n\n\n\nnum_transactions\n\n\nlowest_fare\n\n\nhighest_fare\n\n\npayment_type\n\n\nwday\n\n\n\n\n\n\n1247397\n\n\n2.5\n\n\n477\n\n\nCRD\n\n\nFriday\n\n\n\n\n860920\n\n\n2.5\n\n\n444\n\n\nCSH\n\n\nFriday\n\n\n\n\n1592\n\n\n2.5\n\n\n255\n\n\nDIS\n\n\nFriday\n\n\n\n\n5252\n\n\n2.5\n\n\n229\n\n\nNOC\n\n\nFriday\n\n\n\n\n10131\n\n\n2.5\n\n\n130\n\n\nUNK\n\n\nFriday"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#having-2",
    "href": "slides/2024-01-09-clauses.html#having-2",
    "title": "SQL clauses",
    "section": "HAVING",
    "text": "HAVING\nWhile it worked out quite well for us that HAVING was able to filter the data based on the results set, the use of HAVING was quite onerous because the entire data set was considered before the filter was applied. That is, if the filter can be done on the original data using WHERE, the query will be much faster and more efficient.\nNote: HAVING requires a GROUP BY clause. And the variable(s) used in HAVING must also be part of the GROUP BY clause."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#limit",
    "href": "slides/2024-01-09-clauses.html#limit",
    "title": "SQL clauses",
    "section": "LIMIT",
    "text": "LIMIT\nLIMIT truncates the query to specified rows. The first number is the offset (i.e., the number of rows to skip), the second number is the (maximum) number of rows to return. Here, we return rows 15428119 through 15428128.\nThe first number is optional.\n\nSELECT * FROM yellow_old LIMIT 15428118, 10;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nvendor_id\n\n\npickup_datetime\n\n\ndropoff_datetime\n\n\npassenger_count\n\n\ntrip_distance\n\n\npickup_longitude\n\n\npickup_latitude\n\n\nrate_code\n\n\nstore_and_fwd_flag\n\n\ndropoff_longitude\n\n\ndropoff_latitude\n\n\npayment_type\n\n\nfare_amount\n\n\nsurcharge\n\n\nmta_tax\n\n\ntip_amount\n\n\ntolls_amount\n\n\ntotal_amount\n\n\n\n\n\n\nCMT\n\n\n2014-03-18 14:35:21\n\n\n2014-03-18 14:52:01\n\n\n1\n\n\n2.7\n\n\n0\n\n\n0.0\n\n\n1\n\n\nN\n\n\n0\n\n\n0.0\n\n\nCRD\n\n\n13.0\n\n\n0\n\n\n0.5\n\n\n2.50\n\n\n0.00\n\n\n16.0\n\n\n\n\nCMT\n\n\n2014-03-18 14:08:23\n\n\n2014-03-18 14:19:29\n\n\n2\n\n\n1.3\n\n\n0\n\n\n0.0\n\n\n1\n\n\nN\n\n\n0\n\n\n0.0\n\n\nCRD\n\n\n9.0\n\n\n0\n\n\n0.5\n\n\n1.90\n\n\n0.00\n\n\n11.4\n\n\n\n\nCMT\n\n\n2014-03-18 09:18:38\n\n\n2014-03-18 09:19:41\n\n\n1\n\n\n0.2\n\n\n-74\n\n\n40.8\n\n\n1\n\n\nN\n\n\n-74\n\n\n40.8\n\n\nCRD\n\n\n3.0\n\n\n0\n\n\n0.5\n\n\n1.00\n\n\n0.00\n\n\n4.5\n\n\n\n\nCMT\n\n\n2014-03-18 06:28:12\n\n\n2014-03-18 06:49:49\n\n\n1\n\n\n9.9\n\n\n0\n\n\n0.0\n\n\n1\n\n\nN\n\n\n0\n\n\n0.0\n\n\nCRD\n\n\n30.0\n\n\n0\n\n\n0.5\n\n\n7.16\n\n\n5.33\n\n\n43.0\n\n\n\n\nCMT\n\n\n2014-03-18 17:39:28\n\n\n2014-03-18 17:53:01\n\n\n1\n\n\n4.9\n\n\n-74\n\n\n40.8\n\n\n1\n\n\nN\n\n\n-74\n\n\n40.7\n\n\nCRD\n\n\n16.5\n\n\n1\n\n\n0.5\n\n\n3.00\n\n\n0.00\n\n\n21.0\n\n\n\n\nCMT\n\n\n2014-03-18 18:14:19\n\n\n2014-03-18 18:27:22\n\n\n1\n\n\n0.3\n\n\n-74\n\n\n40.7\n\n\n1\n\n\nN\n\n\n-74\n\n\n40.7\n\n\nCRD\n\n\n3.5\n\n\n1\n\n\n0.5\n\n\n6.00\n\n\n0.00\n\n\n11.0\n\n\n\n\nCMT\n\n\n2014-03-18 10:12:33\n\n\n2014-03-18 10:28:09\n\n\n1\n\n\n3.3\n\n\n-74\n\n\n40.8\n\n\n1\n\n\nN\n\n\n-74\n\n\n40.8\n\n\nCRD\n\n\n13.5\n\n\n0\n\n\n0.5\n\n\n4.20\n\n\n0.00\n\n\n18.2\n\n\n\n\nCMT\n\n\n2014-03-18 09:02:37\n\n\n2014-03-18 09:16:29\n\n\n1\n\n\n6.2\n\n\n-74\n\n\n40.8\n\n\n1\n\n\nN\n\n\n-74\n\n\n40.7\n\n\nCRD\n\n\n19.5\n\n\n0\n\n\n0.5\n\n\n1.00\n\n\n0.00\n\n\n21.0\n\n\n\n\nCMT\n\n\n2014-03-18 10:10:19\n\n\n2014-03-18 10:19:25\n\n\n1\n\n\n1.7\n\n\n-74\n\n\n40.8\n\n\n1\n\n\nN\n\n\n-74\n\n\n40.8\n\n\nCRD\n\n\n8.5\n\n\n0\n\n\n0.5\n\n\n1.80\n\n\n0.00\n\n\n10.8\n\n\n\n\nCMT\n\n\n2014-03-18 15:24:53\n\n\n2014-03-18 15:42:42\n\n\n1\n\n\n1.7\n\n\n-74\n\n\n40.8\n\n\n1\n\n\nN\n\n\n-74\n\n\n40.7\n\n\nCRD\n\n\n12.5\n\n\n0\n\n\n0.5\n\n\n2.60\n\n\n0.00\n\n\n15.6"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#saving-sql-queries-as-r-objects",
    "href": "slides/2024-01-09-clauses.html#saving-sql-queries-as-r-objects",
    "title": "SQL clauses",
    "section": "Saving SQL queries as R objects",
    "text": "Saving SQL queries as R objects\nIf you are working in R to run SQL commands, you may want to use the query output for further analysis or visualizations.\n\nuse #|output.var: \"name_of_variable\" inside the {sql} chunk.\nname_of_variable will then be available to be used in the R environment.\n\n\n```{sql}\n#| connection: con_taxi\n#| label: new-table\n#| output.var: \"new_table\"\n\nSELECT *, DAYNAME(STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\")) AS wday\nFROM yellow_old \nLIMIT 0, 1000;\n```"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#saving-sql-queries-as-r-objects-1",
    "href": "slides/2024-01-09-clauses.html#saving-sql-queries-as-r-objects-1",
    "title": "SQL clauses",
    "section": "Saving SQL queries as R objects",
    "text": "Saving SQL queries as R objects\n\n```{r}\nnew_table |&gt;\n  drop_na(wday) |&gt;\n  ggplot(aes(x = fare_amount, y = tip_amount, color = wday)) + \n  geom_point() \n```"
  },
  {
    "objectID": "slides/2024-01-08-db.html#the-airlines-database",
    "href": "slides/2024-01-08-db.html#the-airlines-database",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "The airlines database",
    "text": "The airlines database\nConsider a database of US flights between 2010 and 2017. The flights are downloaded from the Bureau of Transportation Statistics, US Department of Transportation. The database is a superset of the nycflights13 R package that tracks only flights in and out of airports serving New York City in 2013."
  },
  {
    "objectID": "handout/ws4_sds261_j24.html",
    "href": "handout/ws4_sds261_j24.html",
    "title": "WS4 - regular expressions I",
    "section": "",
    "text": "Your Name: __________________________________\nNames of people you worked with: __________________________________\n\nIntroduce yourself. What is the most challenging thing you have to do in the next 10 days?\nWhat classes are you taking in the spring? How many of them are SDS?\n\nTask:\nThe Jewish Festival of Lights is written as ה כ נ ח in Hebrew and translated to many different spellings in English. The correct English spelling of the holiday can be given in any of the following thirteen variants, according to https://www.holidays.net/chanukah/spelling.htm.\n\nlights &lt;- c(\"Chanuka\", \"Chanukah\", \"Chanukkah\", \"Channukah\", \"Hanukah\", \"Hannukah\",\n            \"Hanukkah\", \"Hanuka\", \"Hanukka\", \"Hanaka\", \"Haneka\", \"Hanika\", \"Khanukkah\")\n\nlights\n\n [1] \"Chanuka\"   \"Chanukah\"  \"Chanukkah\" \"Channukah\" \"Hanukah\"   \"Hannukah\" \n [7] \"Hanukkah\"  \"Hanuka\"    \"Hanukka\"   \"Hanaka\"    \"Haneka\"    \"Hanika\"   \n[13] \"Khanukkah\"\n\n\nProvide a regular expression which will capture all thirteen variants.\n\nSolution:\n[CHK]h?ann?[aeiu]kk?ah?\n\ngrepl(\"[CHK]h?ann?[aeiu]kk?ah?\", lights)\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "handout/lab2_clauses_sds261_j24.html",
    "href": "handout/lab2_clauses_sds261_j24.html",
    "title": "Lab 2 - SQL clauses",
    "section": "",
    "text": "Today’s lab will provide practice working with SQL clauses in DBeaver. Don’t forget the importance of the order of the SQL clauses.\nThe goals for lab 2 include:"
  },
  {
    "objectID": "handout/lab2_clauses_sds261_j24.html#advice-for-turning-in-the-assignment",
    "href": "handout/lab2_clauses_sds261_j24.html#advice-for-turning-in-the-assignment",
    "title": "Lab 2 - SQL clauses",
    "section": "Advice for turning in the assignment",
    "text": "Advice for turning in the assignment\n\nBe sure to indicate (in the .sql file) which problem is being answered with which SQL code. Use the following syntax to comment within a .sql file: /* here is where comments go */. Indeed, feel free to copy the question into the .sql file so that you have it for your own records.\nsave the .Rproj file somewhere you can find it. Don’t keep everything in your downloads folder. Maybe make a folder called SDS261 or something. That folder could live on your Desktop. Or maybe in your Dropbox.\nThe SQL document should be saved in the R Project as lab2-sds261-yourlastname-yourfirstname.sql. You will have to navigate to the R Project to save the DBeaver file in the correct place.\nConnect to the nyctaxi database, which contains the yellow_old table. See README file (or lab 1) for connection details."
  },
  {
    "objectID": "handout/lab2_clauses_sds261_j24.html#assignment",
    "href": "handout/lab2_clauses_sds261_j24.html#assignment",
    "title": "Lab 2 - SQL clauses",
    "section": "Assignment",
    "text": "Assignment\n\nSelect the trip_distance and total_amount columns from the yellow_old table. For safety (i.e., not crashing your computer), only return the first 5 rows.\n\n\nUsing the AVG() function, find the average total_amount paid in the yellow_old table.\n\n\nWhich type of payment_type had the highest total_amount? How much was it?\n\n\nHow many taxi trips happened on each day of the week? Sort your results so that the day of the week with the fewest rides is at the top of the output.\n\n\nWhich day of the week had the longest trip_distance? Sort the results to have the day of the week with the longest rides at the top of the output.\n\n\nHow many different rate_codes are given in the dataset?\n\n\nStart with the following lines of query:\n\n\nSELECT AVG(trip_distance) AS avg_trip, \n       DAYNAME(STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\")) AS wday\n\n\nCan you use WHERE to subset only Saturday and Sunday to find the average trip distance across the weekend? Why or why not?\nCan you use HAVING to subset only Saturday and Sunday to find the average trip distance across the weekend? Why or why not?"
  },
  {
    "objectID": "handout/lab3_joins_sds261_j24.html",
    "href": "handout/lab3_joins_sds261_j24.html",
    "title": "Lab 3 - SQL joins",
    "section": "",
    "text": "Today’s lab will provide practice working with SQL clauses in DBeaver. Don’t forget the importance of the order of the SQL clauses.\nThe goals for lab 3 include:"
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#regular-expressions",
    "href": "slides/2024-01-11-regex1.html#regular-expressions",
    "title": "Regular Expressions I",
    "section": "Regular Expressions",
    "text": "Regular Expressions\n\nA regular expression … is a sequence of characters that define a search pattern. Usually such patterns are used by string searching algorithms for “find” or “find and replace” operations on strings, or for input validation. It is a technique developed in theoretical computer science and formal language theory."
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#escape-sequences",
    "href": "slides/2024-01-11-regex1.html#escape-sequences",
    "title": "Regular Expressions I",
    "section": "Escape sequences",
    "text": "Escape sequences\nJust to scratch the surface, here are a few special characters that cannot be directly coded. Therefore, they are escaped with a backslash, \\.\n\n\\': single quote.\n\n\\\": double quote.\n\n\\n: newline.\n\n\\r: carriage return.\n\n\\t: tab character."
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#quantifiers",
    "href": "slides/2024-01-11-regex1.html#quantifiers",
    "title": "Regular Expressions I",
    "section": "Quantifiers",
    "text": "Quantifiers\nQuantifiers specify how many repetitions of the pattern.\n\n*: matches at least 0 times.\n\n+: matches at least 1 times.\n\n?: matches at most 1 times.\n\n{n}: matches exactly n times.\n\n{n,}: matches at least n times.\n\n{n,m}: matches between n and m times."
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#examples-of-quantifiers",
    "href": "slides/2024-01-11-regex1.html#examples-of-quantifiers",
    "title": "Regular Expressions I",
    "section": "Examples of quantifiers",
    "text": "Examples of quantifiers\n\nstrings &lt;- c(\"a\", \"ab\", \"acb\", \"accb\", \"acccb\", \"accccb\")\ngrep(\"ac*b\", strings, value = TRUE)\ngrep(\"ac*b\", strings, value = FALSE)\ngrep(\"ac+b\", strings, value = TRUE)\ngrep(\"ac?b\", strings, value = TRUE)\ngrep(\"ac{2}b\", strings, value = TRUE)\ngrep(\"ac{2,}b\", strings, value = TRUE)\ngrep(\"ac{2,3}b\", strings, value = TRUE)\n\ngrep() stands for “global regular expression print”. grep() returns a character vector containing the selected elements, grepl() returns a logical vector of TRUE/FALSE for whether or not there was a match."
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#position-of-pattern-within-the-string",
    "href": "slides/2024-01-11-regex1.html#position-of-pattern-within-the-string",
    "title": "Regular Expressions I",
    "section": "Position of pattern within the string",
    "text": "Position of pattern within the string\n\n^: matches the start of the string.\n\n$: matches the end of the string.\n\n\\b: matches the boundary of a word. Don’t confuse it with ^ $ which marks the edge of a string.\n\n\\B: matches the empty string provided it is not at an edge of a word."
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#examples-of-positions",
    "href": "slides/2024-01-11-regex1.html#examples-of-positions",
    "title": "Regular Expressions I",
    "section": "Examples of positions",
    "text": "Examples of positions\n\nstrings &lt;- c(\"abcd\", \"cdab\", \"cabd\", \"c abd\")\ngrep(\"ab\", strings, value = TRUE)\ngrep(\"^ab\", strings, value = TRUE)\ngrep(\"ab$\", strings, value = TRUE)\ngrep(\"\\\\bab\", strings, value = TRUE)"
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#examples-of-quantifiers---solution",
    "href": "slides/2024-01-11-regex1.html#examples-of-quantifiers---solution",
    "title": "Regular Expressions I",
    "section": "Examples of quantifiers - solution",
    "text": "Examples of quantifiers - solution\n\nstrings &lt;- c(\"a\", \"ab\", \"acb\", \"accb\", \"acccb\", \"accccb\")\ngrep(\"ac*b\", strings, value = TRUE)\n\n[1] \"ab\"     \"acb\"    \"accb\"   \"acccb\"  \"accccb\"\n\ngrep(\"ac*b\", strings, value = FALSE)\n\n[1] 2 3 4 5 6\n\ngrep(\"ac+b\", strings, value = TRUE)\n\n[1] \"acb\"    \"accb\"   \"acccb\"  \"accccb\"\n\ngrep(\"ac?b\", strings, value = TRUE)\n\n[1] \"ab\"  \"acb\"\n\ngrep(\"ac{2}b\", strings, value = TRUE)\n\n[1] \"accb\"\n\ngrep(\"ac{2,}b\", strings, value = TRUE)\n\n[1] \"accb\"   \"acccb\"  \"accccb\"\n\ngrep(\"ac{2,3}b\", strings, value = TRUE)\n\n[1] \"accb\"  \"acccb\"\n\n\ngrep() stands for “global regular expression print”. grep() returns a character vector containing the selected elements, grepl() returns a logical vector of TRUE/FALSE for whether or not there was a match."
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#examples-of-positions---solution",
    "href": "slides/2024-01-11-regex1.html#examples-of-positions---solution",
    "title": "Regular Expressions I",
    "section": "Examples of positions - solution",
    "text": "Examples of positions - solution\n\nstrings &lt;- c(\"abcd\", \"cdab\", \"cabd\", \"c abd\")\ngrep(\"ab\", strings, value = TRUE)\n\n[1] \"abcd\"  \"cdab\"  \"cabd\"  \"c abd\"\n\ngrep(\"^ab\", strings, value = TRUE)\n\n[1] \"abcd\"\n\ngrep(\"ab$\", strings, value = TRUE)\n\n[1] \"cdab\"\n\ngrep(\"\\\\bab\", strings, value = TRUE)\n\n[1] \"abcd\"  \"c abd\""
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#operators",
    "href": "slides/2024-01-11-regex1.html#operators",
    "title": "Regular Expressions I",
    "section": "Operators",
    "text": "Operators\n\n.: matches any single character,\n[...]: a character list, matches any one of the characters inside the square brackets. A - inside the brackets specifies a range of characters.\n\n[^...]: an inverted character list, similar to [...], but matches any characters except those inside the square brackets.\n\n\\: suppress the special meaning of metacharacters in regular expression, i.e. $ * + . ? [ ] ^ { } | ( ) \\. Since \\ itself needs to be escaped in R, we need to escape metacharacters with double backslash like \\\\$.\n\n|: an “or” operator, matches patterns on either side of the |.\n\n(...): grouping in regular expressions. This allows you to retrieve the bits that matched various parts of your regular expression so you can alter them or use them for building up a new string."
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#examples-of-operators",
    "href": "slides/2024-01-11-regex1.html#examples-of-operators",
    "title": "Regular Expressions I",
    "section": "Examples of operators",
    "text": "Examples of operators\n\nstrings &lt;- c(\"^ab\", \"ab\", \"abc\", \"abd\", \"abe\", \"ab 12\", \"a|b\")\ngrep(\"ab.\", strings, value = TRUE)\ngrep(\"ab[c-e]\", strings, value = TRUE)\ngrep(\"ab[^c]\", strings, value = TRUE)\ngrep(\"^ab\", strings, value = TRUE)\ngrep(\"\\\\^ab\", strings, value = TRUE)\ngrep(\"abc|abd\", strings, value = TRUE)\ngrep(\"a[b|c]\", strings, value = TRUE)\nstr_extract(strings, \"a[b|c]\")"
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#examples-of-operators---solution",
    "href": "slides/2024-01-11-regex1.html#examples-of-operators---solution",
    "title": "Regular Expressions I",
    "section": "Examples of operators - solution",
    "text": "Examples of operators - solution\n\nstrings &lt;- c(\"^ab\", \"ab\", \"abc\", \"abd\", \"abe\", \"ab 12\", \"a|b\")\ngrep(\"ab.\", strings, value = TRUE)\n\n[1] \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\ngrep(\"ab[c-e]\", strings, value = TRUE)\n\n[1] \"abc\" \"abd\" \"abe\"\n\ngrep(\"ab[^c]\", strings, value = TRUE)\n\n[1] \"abd\"   \"abe\"   \"ab 12\"\n\ngrep(\"^ab\", strings, value = TRUE)\n\n[1] \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\ngrep(\"\\\\^ab\", strings, value = TRUE)\n\n[1] \"^ab\"\n\ngrep(\"abc|abd\", strings, value = TRUE)\n\n[1] \"abc\" \"abd\"\n\ngrep(\"a[b|c]\", strings, value = TRUE)\n\n[1] \"^ab\"   \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\" \"a|b\"  \n\nstr_extract(strings, \"a[b|c]\")\n\n[1] \"ab\" \"ab\" \"ab\" \"ab\" \"ab\" \"ab\" \"a|\""
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#character-classes",
    "href": "slides/2024-01-11-regex1.html#character-classes",
    "title": "Regular Expressions I",
    "section": "Character classes",
    "text": "Character classes\nCharacter classes allow specifying entire classes of characters, such as numbers, letters, etc. There are two flavors of character classes, one uses [: and :] around a predefined name inside square brackets and the other uses \\ and a special character. They are sometimes interchangeable.\n\n(?i) before the string indicates that the match should be case insensitive.\n[:digit:] or \\d: digits, 0 1 2 3 4 5 6 7 8 9, equivalent to [0-9].\n\n\\D: non-digits, equivalent to [^0-9].\n\n[:lower:]: lower-case letters, equivalent to [a-z].\n\n[:upper:]: upper-case letters, equivalent to [A-Z].\n\n[:alpha:]: alphabetic characters, equivalent to [[:lower:][:upper:]] or [A-z].\n\n[:alnum:]: alphanumeric characters, equivalent to [[:alpha:][:digit:]] or [A-z0-9].\n\n\\w: word characters, equivalent to [[:alnum:]_] or [A-z0-9_] (letter, number, or underscore).\n\n\\W: not word, equivalent to [^A-z0-9_].\n\n[:blank:]: blank characters, i.e. space and tab.\n\n[:space:]: space characters: tab, newline, vertical tab, form feed, carriage return, space.\n\\s: space, .\n\n\\S: not space.\n\n[:punct:]: punctuation characters, ! ” # $ % & ’ ( ) * + , - . / : ; &lt; = &gt; ? @ [  ] ^ _ ` { | } ~.\n[:graph:]: graphical (human readable) characters: equivalent to [[:alnum:][:punct:]].\n[:print:]: printable characters, equivalent to [[:alnum:][:punct:]\\\\s]."
  },
  {
    "objectID": "handout/lab4_regexp_sds261_j24.html#footnotes",
    "href": "handout/lab4_regexp_sds261_j24.html#footnotes",
    "title": "Lab 4 - regular expressions",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n0-1↩︎\n0-9↩︎"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#lookaround",
    "href": "slides/2024-01-12-regex2.html#lookaround",
    "title": "Regular Expressions II",
    "section": "Lookaround",
    "text": "Lookaround\nA lookaround specifies a place in the regular expression that will anchor the string you’d like to match.\n\n“x(?=y)” – positive lookahead (matches ‘x’ when it is followed by ‘y’)\n“x(?!y)” – negative lookahead (matches ‘x’ when it is not followed by ‘y’)\n“(?&lt;=y)x” – positive lookbehind (matches ‘x’ when it is preceded by ‘y’)\n“(?&lt;!y)x” – negative lookbehind (matches ‘x’ when it is not preceded by ‘y’)"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#example---taskmaster",
    "href": "slides/2024-01-12-regex2.html#example---taskmaster",
    "title": "Regular Expressions II",
    "section": "Example - Taskmaster",
    "text": "Example - Taskmaster\nData scraped from the wiki site for the TV series, Taskmaster.\n\nFigure 2: Taskmaster Wiki https://taskmaster.fandom.com/wiki/Series_11"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#goal-taskmaster-information",
    "href": "slides/2024-01-12-regex2.html#goal-taskmaster-information",
    "title": "Regular Expressions II",
    "section": "Goal: Taskmaster information",
    "text": "Goal: Taskmaster information\nOur goal is to scrape the Taskmaster wiki to create a dataframe which includes the task, description, episode, episode name, air date, contestant, score, and series.1\n\n   Task  Description     episode episode_name air_date contestant score series\n 1 1     Prize: Best th… 1       \"It's not y… 18 Marc… Charlotte… 1         11\n 2 1     Prize: Best th… 1       \"It's not y… 18 Marc… Jamali Ma… 2         11\n 3 1     Prize: Best th… 1       \"It's not y… 18 Marc… Lee Mack   4         11\n 4 1     Prize: Best th… 1       \"It's not y… 18 Marc… Mike Wozn… 5         11\n 5 1     Prize: Best th… 1       \"It's not y… 18 Marc… Sarah Ken… 3         11\n 6 2     Do the most im… 1       \"It's not y… 18 Marc… Charlotte… 2         11\n 7 2     Do the most im… 1       \"It's not y… 18 Marc… Jamali Ma… 3         11\n 8 2     Do the most im… 1       \"It's not y… 18 Marc… Lee Mack   3         11\n 9 2     Do the most im… 1       \"It's not y… 18 Marc… Mike Wozn… 5         11\n10 2     Do the most im… 1       \"It's not y… 18 Marc… Sarah Ken… 4         11\n\nThanks to Ciaran Evans at Wake Forest University for example and code, https://sta279-f23.github.io/"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#scraping-and-wrangling-taskmaster-data",
    "href": "slides/2024-01-12-regex2.html#scraping-and-wrangling-taskmaster-data",
    "title": "Regular Expressions II",
    "section": "Scraping and wrangling Taskmaster data",
    "text": "Scraping and wrangling Taskmaster data\nOur goal is to scrape the Taskmaster wiki to create a dataframe which includes the task, description, episode, episode name, air date, contestant, score, and series.1\n\nresults &lt;- read_html(\"https://taskmaster.fandom.com/wiki/Series_11\") |&gt;\n  html_element(\".tmtable\") |&gt; \n  html_table() |&gt;\n  mutate(episode = ifelse(startsWith(Task, \"Episode\"), Task, NA)) |&gt;\n  fill(episode, .direction = \"down\") |&gt;\n  filter(!startsWith(Task, \"Episode\"), \n         !(Task %in% c(\"Total\", \"Grand Total\"))) |&gt;\n  pivot_longer(cols = -c(Task, Description, episode),\n               names_to = \"contestant\",\n               values_to = \"score\") |&gt;\n  mutate(series = 11)\n\nThanks to Ciaran Evans at Wake Forest University for example and code, https://sta279-f23.github.io/"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#scraping-and-wrangling-taskmaster-data---results",
    "href": "slides/2024-01-12-regex2.html#scraping-and-wrangling-taskmaster-data---results",
    "title": "Regular Expressions II",
    "section": "Scraping and wrangling Taskmaster data - results",
    "text": "Scraping and wrangling Taskmaster data - results\n\nresults |&gt; \n  select(Task, Description, episode, contestant, score, series) |&gt;\n  head(10)\n\n# A tibble: 10 × 6\n  Task  Description                              episode contestant score series\n  &lt;chr&gt; &lt;chr&gt;                                    &lt;chr&gt;   &lt;chr&gt;      &lt;chr&gt;  &lt;dbl&gt;\n1 1     Prize: Best thing you can carry, but on… Episod… Charlotte… 1         11\n2 1     Prize: Best thing you can carry, but on… Episod… Jamali Ma… 2         11\n3 1     Prize: Best thing you can carry, but on… Episod… Lee Mack   4         11\n4 1     Prize: Best thing you can carry, but on… Episod… Mike Wozn… 5         11\n5 1     Prize: Best thing you can carry, but on… Episod… Sarah Ken… 3         11\n6 2     Do the most impressive thing under the … Episod… Charlotte… 2         11\n# ℹ 4 more rows"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#more-succinct-results",
    "href": "slides/2024-01-12-regex2.html#more-succinct-results",
    "title": "Regular Expressions II",
    "section": "more succinct results",
    "text": "more succinct results\n\n   Task  Description         episode   contestant score series\n  1     Prize: Best thing…  Episode 1… Charlotte… 1         11\n  1     Prize: Best thing…  Episode 1… Jamali Ma… 2         11\n  1     Prize: Best thing…  Episode 1… Lee Mack   4         11\n  1     Prize: Best thing…  Episode 1… Mike Wozn… 5         11\n  1     Prize: Best thing…  Episode 1… Sarah Ken… 3         11\n  2     Do the most…        Episode 1… Charlotte… 2         11\n  2     Do the most…        Episode 1… Jamali Ma… 3[1]      11\n  2     Do the most…        Episode 1… Lee Mack   3         11\n  2     Do the most…        Episode 1… Mike Wozn… 5         11\n  2     Do the most…        Episode 1… Sarah Ken… 4         11\n\nCurrently, the episode column contains entries like\n\n\"Episode 1: It's not your fault. (18 March 2021)\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#cleaning-the-score-column",
    "href": "slides/2024-01-12-regex2.html#cleaning-the-score-column",
    "title": "Regular Expressions II",
    "section": "Cleaning the score column",
    "text": "Cleaning the score column\n\ntable(results$score)\n\n\n   –    ✔    ✘    0    1    2    3 3[1] 3[2]    4 4[2]    5   DQ \n   7    1    1   11   37   42   48    1    3   50    1   55   13 \n\n\nHow should the scores be stored? What is the cleaning task?\n\nFigure 3: Taskmaster Wiki https://taskmaster.fandom.com/wiki/Series_11"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#extracting-numeric-information",
    "href": "slides/2024-01-12-regex2.html#extracting-numeric-information",
    "title": "Regular Expressions II",
    "section": "Extracting numeric information",
    "text": "Extracting numeric information\nSuppose we have the following string:\n\n\"3[1]\"\n\nAnd we want to extract just the number “3”:\n\nstr_extract(\"3[1]\", \"3\")\n\n[1] \"3\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#extracting-numeric-information-1",
    "href": "slides/2024-01-12-regex2.html#extracting-numeric-information-1",
    "title": "Regular Expressions II",
    "section": "Extracting numeric information",
    "text": "Extracting numeric information\nWhat if we don’t know which number to extract?\n\nstr_extract(\"3[1]\", \"\\\\d\")\n\n[1] \"3\"\n\n\n\nstr_extract(\"4[1]\", \"\\\\d\")\n\n[1] \"4\"\n\n\n\nstr_extract(\"10[1]\", \"\\\\d\")\n\n[1] \"1\"\n\n\n\nstr_extract(\"10[1]\", \"\\\\d+\")\n\n[1] \"10\"\n\n\n\nstr_extract(\"DQ\", \"\\\\d\")\n\n[1] NA"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#str_extract",
    "href": "slides/2024-01-12-regex2.html#str_extract",
    "title": "Regular Expressions II",
    "section": "str_extract()",
    "text": "str_extract()\nstr_extract() is an R function in the stringr package which finds regular expressions in strings of text.\n\nstr_extract(\"My cat is 3 years old\", \"cat\")\n\n[1] \"cat\"\n\n\n\nstr_extract(\"My cat is 3 years old\", \"3\")\n\n[1] \"3\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#matching-multiple-options",
    "href": "slides/2024-01-12-regex2.html#matching-multiple-options",
    "title": "Regular Expressions II",
    "section": "Matching multiple options",
    "text": "Matching multiple options\nstr_extract() returns the first match; str_extract_all() allows more than one match.\n\nstr_extract(\"My cat is 3 years old\", \"cat|dog\")\n\n[1] \"cat\"\n\nstr_extract(\"My dog is 10 years old\", \"cat|dog\")\n\n[1] \"dog\"\n\nstr_extract(\"My dog is 10 years old, my cat is 3 years old\", \n            \"cat|dog\")\n\n[1] \"dog\"\n\nstr_extract_all(\"My dog is 10 years old, my cat is 3 years old\", \n                \"cat|dog\")\n\n[[1]]\n[1] \"dog\" \"cat\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#matching-groups-of-characters",
    "href": "slides/2024-01-12-regex2.html#matching-groups-of-characters",
    "title": "Regular Expressions II",
    "section": "Matching groups of characters",
    "text": "Matching groups of characters\nWhat if I want to extract a number?\n\nstr_extract(\"My cat is 3 years old\", \"\\\\d\")\n\n[1] \"3\"\n\n\nWhat will the result be for the following code?\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#matching-groups-of-characters-1",
    "href": "slides/2024-01-12-regex2.html#matching-groups-of-characters-1",
    "title": "Regular Expressions II",
    "section": "Matching groups of characters",
    "text": "Matching groups of characters\nWhat if I want to extract a number?\n\nstr_extract(\"My cat is 3 years old\", \"\\\\d\")\n\n[1] \"3\"\n\n\nWhat will the result be for the following code?\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")\n\n[1] \"1\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#matching-groups-of-characters-2",
    "href": "slides/2024-01-12-regex2.html#matching-groups-of-characters-2",
    "title": "Regular Expressions II",
    "section": "Matching groups of characters",
    "text": "Matching groups of characters\nWhat if I want to extract a number?\n\nstr_extract(\"My cat is 3 years old\", \"\\\\d\")\n\n[1] \"3\"\n\n\nWhat will the result be for the following code?\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")\n\n[1] \"1\"\n\n\nThe + symbol in a regular expression means “repeated one or more times”\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d+\")\n\n[1] \"10\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#extracting-from-multiple-strings",
    "href": "slides/2024-01-12-regex2.html#extracting-from-multiple-strings",
    "title": "Regular Expressions II",
    "section": "Extracting from multiple strings",
    "text": "Extracting from multiple strings\n\nstrings &lt;- c(\"My cat is 3 years old\", \"My dog is 10 years old\")\nstr_extract(strings, \"\\\\d+\")\n\n[1] \"3\"  \"10\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#extracting-episode-information",
    "href": "slides/2024-01-12-regex2.html#extracting-episode-information",
    "title": "Regular Expressions II",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nCurrently, the episode column contains entries like:\n\n\"Episode 2: The pie whisperer. (4 August 2015)\"\n\nHow would I extract just the episode number?"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#extracting-episode-information-1",
    "href": "slides/2024-01-12-regex2.html#extracting-episode-information-1",
    "title": "Regular Expressions II",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nCurrently, the episode column contains entries like:\n\n\"Episode 2: The pie whisperer. (4 August 2015)\"\n\nHow would I extract just the episode number?\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\d+\")\n\n[1] \"2\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#extracting-episode-information-2",
    "href": "slides/2024-01-12-regex2.html#extracting-episode-information-2",
    "title": "Regular Expressions II",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nCurrently, the episode column contains entries like:\n\n\"Episode 2: The pie whisperer. (4 August 2015)\"\n\nHow would I extract the episode name?\nGoal: find a pattern to match: anything that starts with a :, ends with a .\nLet’s break down that task into pieces."
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#extracting-episode-information-3",
    "href": "slides/2024-01-12-regex2.html#extracting-episode-information-3",
    "title": "Regular Expressions II",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nHow can we find the period at the end of the sentence? What does each of these lines of code return?\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".\")\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".+\")\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\.\")"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#extracting-episode-information---solution",
    "href": "slides/2024-01-12-regex2.html#extracting-episode-information---solution",
    "title": "Regular Expressions II",
    "section": "Extracting episode information - solution",
    "text": "Extracting episode information - solution\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".\")\n\n[1] \"E\"\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".+\")\n\n[1] \"Episode 2: The pie whisperer. (4 August 2015)\"\n\n\nWe use an escape character when we actually want to choose a period:\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\.\")\n\n[1] \".\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#extracting-episode-information-4",
    "href": "slides/2024-01-12-regex2.html#extracting-episode-information-4",
    "title": "Regular Expressions II",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nGoal: find a pattern to match: anything that starts with a :, ends with a .\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\",\n            \":.+\\\\.\")\n\n[1] \": The pie whisperer.\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#extracting-episode-information-5",
    "href": "slides/2024-01-12-regex2.html#extracting-episode-information-5",
    "title": "Regular Expressions II",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nGetting everything between the : and the .\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=: ).+(?=\\\\.)\")\n\n[1] \"The pie whisperer\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#lookbehinds",
    "href": "slides/2024-01-12-regex2.html#lookbehinds",
    "title": "Regular Expressions II",
    "section": "Lookbehinds",
    "text": "Lookbehinds\n(?&lt;=) is a positive lookbehind. It is used to identify expressions which are preceded by a particular expression.\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=: ).+\")\n\n[1] \"The pie whisperer. (4 August 2015)\"\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=\\\\. ).+\")\n\n[1] \"(4 August 2015)\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#lookaheads",
    "href": "slides/2024-01-12-regex2.html#lookaheads",
    "title": "Regular Expressions II",
    "section": "Lookaheads",
    "text": "Lookaheads\n(?=) is a positive lookahead. It is used to identify expressions which are followed by a particular expression.\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \".+(?=\\\\.)\")\n\n[1] \"Episode 2: The pie whisperer\"\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \".+(?=:)\")\n\n[1] \"Episode 2\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#extracting-air-date",
    "href": "slides/2024-01-12-regex2.html#extracting-air-date",
    "title": "Regular Expressions II",
    "section": "Extracting air date",
    "text": "Extracting air date\nI want to extract just the air date. What pattern do I want to match?\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", ...)"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#extracting-air-date-1",
    "href": "slides/2024-01-12-regex2.html#extracting-air-date-1",
    "title": "Regular Expressions II",
    "section": "Extracting air date",
    "text": "Extracting air date\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=\\\\().+(?=\\\\))\")\n\n[1] \"4 August 2015\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#wrangling-the-episode-info",
    "href": "slides/2024-01-12-regex2.html#wrangling-the-episode-info",
    "title": "Regular Expressions II",
    "section": "Wrangling the episode info",
    "text": "Wrangling the episode info\nCurrently:\n\n\n# A tibble: 270 × 1\n  episode                                        \n  &lt;chr&gt;                                          \n1 Episode 1: It's not your fault. (18 March 2021)\n2 Episode 1: It's not your fault. (18 March 2021)\n3 Episode 1: It's not your fault. (18 March 2021)\n4 Episode 1: It's not your fault. (18 March 2021)\n5 Episode 1: It's not your fault. (18 March 2021)\n6 Episode 1: It's not your fault. (18 March 2021)\n# ℹ 264 more rows"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#wrangling-the-episode-info-1",
    "href": "slides/2024-01-12-regex2.html#wrangling-the-episode-info-1",
    "title": "Regular Expressions II",
    "section": "Wrangling the episode info",
    "text": "Wrangling the episode info\nOne option:\n\nresults |&gt;\n  select(episode) |&gt;\n  mutate(episode_name = str_extract(episode, \"(?&lt;=: ).+(?=\\\\.)\"),\n         air_date = str_extract(episode, \"(?&lt;=\\\\().+(?=\\\\))\"),\n         episode = str_extract(episode, \"\\\\d+\"))\n\n# A tibble: 270 × 3\n  episode episode_name        air_date     \n  &lt;chr&gt;   &lt;chr&gt;               &lt;chr&gt;        \n1 1       It's not your fault 18 March 2021\n2 1       It's not your fault 18 March 2021\n3 1       It's not your fault 18 March 2021\n4 1       It's not your fault 18 March 2021\n5 1       It's not your fault 18 March 2021\n6 1       It's not your fault 18 March 2021\n# ℹ 264 more rows"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#wrangling-the-episode-info-2",
    "href": "slides/2024-01-12-regex2.html#wrangling-the-episode-info-2",
    "title": "Regular Expressions II",
    "section": "Wrangling the episode info",
    "text": "Wrangling the episode info\nAnother option:\n\nresults |&gt;\n  separate_wider_regex(episode, \n                       patterns = c(\".+ \", \n                                    episode = \"\\\\d+\", \n                                    \": \", \n                                    episode_name = \".+\", \n                                    \"\\\\. \\\\(\", \n                                    air_date = \".+\", \n                                    \"\\\\)\"))\n\n\n\n# A tibble: 270 × 3\n  episode episode_name        air_date     \n  &lt;chr&gt;   &lt;chr&gt;               &lt;chr&gt;        \n1 1       It's not your fault 18 March 2021\n2 1       It's not your fault 18 March 2021\n3 1       It's not your fault 18 March 2021\n4 1       It's not your fault 18 March 2021\n5 1       It's not your fault 18 March 2021\n6 1       It's not your fault 18 March 2021\n# ℹ 264 more rows"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#lookaround-1",
    "href": "slides/2024-01-12-regex2.html#lookaround-1",
    "title": "Regular Expressions II",
    "section": "Lookaround",
    "text": "Lookaround\n\nFigure 1: Image credit: Stefan Judis https://www.stefanjudis.com/blog/a-regular-expression-lookahead-lookbehind-cheat-sheet/"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#scraping-and-wrangling-taskmaster",
    "href": "slides/2024-01-12-regex2.html#scraping-and-wrangling-taskmaster",
    "title": "Regular Expressions II",
    "section": "Scraping and wrangling Taskmaster",
    "text": "Scraping and wrangling Taskmaster\nGoal: to scrape the Taskmaster wiki into a dataframe including task, description, episode, episode name, air date, contestant, score, and series.1\n\nresults &lt;- read_html(\"https://taskmaster.fandom.com/wiki/Series_11\") |&gt;\n  html_element(\".tmtable\") |&gt; \n  html_table() |&gt;\n  mutate(episode = ifelse(startsWith(Task, \"Episode\"), Task, NA)) |&gt;\n  fill(episode, .direction = \"down\") |&gt;\n  filter(!startsWith(Task, \"Episode\"), \n         !(Task %in% c(\"Total\", \"Grand Total\"))) |&gt;\n  pivot_longer(cols = -c(Task, Description, episode),\n               names_to = \"contestant\",\n               values_to = \"score\") |&gt;\n  mutate(series = 11)\n\nThanks to Ciaran Evans at Wake Forest University for example and code, https://sta279-f23.github.io/"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#extracting-from-multiple-strings-1",
    "href": "slides/2024-01-12-regex2.html#extracting-from-multiple-strings-1",
    "title": "Regular Expressions II",
    "section": "Extracting from multiple strings",
    "text": "Extracting from multiple strings\nWhat if we have multiple instances across multiple strings? We need to be careful working with lists (instead of vectors).\n\nstrings &lt;- c(\"My cat is 3 years old\", \"My dog is 10 years old\")\nstr_extract(strings, \"\\\\w+\")\n\n[1] \"My\" \"My\"\n\nstr_extract_all(strings, \"\\\\w+\")\n\n[[1]]\n[1] \"My\"    \"cat\"   \"is\"    \"3\"     \"years\" \"old\"  \n\n[[2]]\n[1] \"My\"    \"dog\"   \"is\"    \"10\"    \"years\" \"old\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#lookaround-again",
    "href": "slides/2024-01-12-regex2.html#lookaround-again",
    "title": "Regular Expressions II",
    "section": "Lookaround (again)",
    "text": "Lookaround (again)\n\nFigure 4: Image credit: Stefan Judis https://www.stefanjudis.com/blog/a-regular-expression-lookahead-lookbehind-cheat-sheet/"
  },
  {
    "objectID": "handout/lab4_regex_sds261_j24.html",
    "href": "handout/lab4_regex_sds261_j24.html",
    "title": "Lab 4 - regular expressions",
    "section": "",
    "text": "library(tidyverse)\nlibrary(stringr)\nToday’s lab will provide practice working with regular expressions in R.\nThe goals for lab 4 include:"
  },
  {
    "objectID": "handout/lab4_regex_sds261_j24.html#footnotes",
    "href": "handout/lab4_regex_sds261_j24.html#footnotes",
    "title": "Lab 4 - regular expressions",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n0-1↩︎\n0-9↩︎\nLorem Ipsum from https://www.webfx.com/web-design/html-ipsum/.↩︎"
  },
  {
    "objectID": "handout/ws1_sds261_j24.html",
    "href": "handout/ws1_sds261_j24.html",
    "title": "Worksheet 1 - DB, R, SQL, Oh My!",
    "section": "",
    "text": "Your Name: __________________________________\nNames of people you worked with: __________________________________\n\nIntroduce yourself. Which dorm do you live in? What is one great thing and one lousy thing about that dorm?\nName one thing in the Syllabus / website / etc. for this class that either sounds strange/unusual or that you would like to know more about.\n\nTask: Consider a large hospital system that coordinates all aspects of health care: doctors, visits, prescriptions, surgeries, billing, etc. Let’s say that the hospital has a database which includes a series of tables linking all the needed information that they routinely collect.\n\nCome up with at least five tables which might exist in the hospital database. For each table indicate a few columns / variables.\nDraw arrows between the tables and indicate the variable(s) that link the tables. No table should be completely isolated.\n\n\nSolution:\nThe solution is taken directly from w3resource. Consider the hypothetical SQL schema diagram in Figure 1. Some of the tables and respective variables are described below.\n\nphysician\n\nemployeeid - unique ID of a physician\nname - name of physician\nposition - designation of a physician\nssn - social security number of physician\n\ndepartment\n\ndepartmentid - unique ID of the department\nname - name of the department\nhead - ID of the physician who is the head of the department, connects to the employeeid of the table physician\n\naffiliated_with\n\nphysician - ID of the physician, connects to the employeeid of the table physician\ndepartment - ID of the department, connects to the departmentid of the table department\nprimaryaffiliation - logical column which indicates whether the physicians are affiliated or not\n\nprocedure\n\ncode - unique ID of the medical procedure\nname - name of the medical procedure\ncost - cost of the medical procedure\n\ntrained_in\n\nphysician - ID of the physician, connects to the employeeid of the table physician\ntreatment - ID of the medical procedure, connects to the code of the procedure table\ncertificationdate - starting date of certification\ncertificationexpires - expiry date of certification\n\npatient\n\nssn - unique ID for each patient\nname - name of patient\naddress - address of patient\nphone - phone number of patient\n\n\n\n\n\n\n\n\n\n\nFigure 1: SQL schema describing links of tables from a hypothetical hospital database, image credit: https://www.w3resource.com/sql-exercises/hospital-database-exercise/index.php\n\n\n\n\n\n\n:::\n\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "handout/lab2_clauses_sds261_j24_sol.html",
    "href": "handout/lab2_clauses_sds261_j24_sol.html",
    "title": "Lab 2 - SQL clauses",
    "section": "",
    "text": "Solution\n\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(DBI)\nlibrary(RMariaDB)\nlibrary(dbplyr)\nlibrary(mdsr)\nToday’s lab will provide practice working with SQL clauses in DBeaver. Don’t forget the importance of the order of the SQL clauses.\nThe goals for lab 2 include:"
  },
  {
    "objectID": "handout/lab2_clauses_sds261_j24_sol.html#advice-for-turning-in-the-assignment",
    "href": "handout/lab2_clauses_sds261_j24_sol.html#advice-for-turning-in-the-assignment",
    "title": "Lab 2 - SQL clauses",
    "section": "Advice for turning in the assignment",
    "text": "Advice for turning in the assignment\n\nBe sure to indicate (in the .sql file) which problem is being answered with which SQL code. Use the following syntax to comment within a .sql file: /* here is where comments go */. Indeed, feel free to copy the question into the .sql file so that you have it for your own records.\nsave the .Rproj file somewhere you can find it. Don’t keep everything in your downloads folder. Maybe make a folder called SDS261 or something. That folder could live on your Desktop. Or maybe in your Dropbox.\nThe SQL document should be saved in the R Project as lab2-sds261-yourlastname-yourfirstname.sql. You will have to navigate to the R Project to save the DBeaver file in the correct place.\nConnect to the nyctaxi database, which contains the yellow_old table. See README file (or lab 1) for connection details."
  },
  {
    "objectID": "handout/lab2_clauses_sds261_j24_sol.html#assignment",
    "href": "handout/lab2_clauses_sds261_j24_sol.html#assignment",
    "title": "Lab 2 - SQL clauses",
    "section": "Assignment",
    "text": "Assignment\n\nSelect the trip_distance and total_amount columns from the yellow_old table. For safety (i.e., not crashing your computer), only return the first 5 rows.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT trip_distance, total_amount\nFROM yellow_old\nLIMIT 0, 5;\n\n\n5 records\n\n\ntrip_distance\ntotal_amount\n\n\n\n\nNA\nNA\n\n\n2.0\n12.0\n\n\n1.2\n8.0\n\n\n0.5\n7.2\n\n\n3.5\n18.0\n\n\n\n\n\n\n\n\n\nUsing the AVG() function, find the average total_amount paid in the yellow_old table.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT AVG(total_amount)\nFROM yellow_old\nLIMIT 0, 5;\n\n\n1 records\n\n\nAVG(total_amount)\n\n\n\n\n14.76179\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nThe average total fare was $14.76\n\n\n\n\n\nWhich type of payment_type had the highest total_amount? How much was it?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT MAX(total_amount), payment_type\nFROM yellow_old\nGROUP BY payment_type\nLIMIT 0, 5;\n\n\n5 records\n\n\nMAX(total_amount)\npayment_type\n\n\n\n\nNA\nNA\n\n\n540.00\nCRD\n\n\n1007.51\nCSH\n\n\n484.04\nDIS\n\n\n950.30\nNOC\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nThe highest total amount was a cash payment for $1007.51. Yikes, that’s a big bill for a taxi ride. Note that the second highest payment was $950.30 for a no charge ride. How does that happen?\n\n\n\n\n\nHow many taxi trips happened on each day of the week? Sort your results so that the day of the week with the fewest rides is at the top of the output.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT COUNT(*) AS num_transactions, \n       DAYNAME(STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\")) AS wday\nFROM yellow_old\nGROUP BY wday\nORDER BY num_transactions;\n\n\n8 records\n\n\nnum_transactions\nwday\n\n\n\n\n1\nNA\n\n\n1887838\nTuesday\n\n\n1984031\nWednesday\n\n\n2088305\nThursday\n\n\n2125292\nFriday\n\n\n2215255\nMonday\n\n\n2364039\nSunday\n\n\n2763367\nSaturday\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nUnsurprisingly, the most rides were on the weekends. Monday is a close third, possibly a reflection of how hard it is to get out of bed on Monday mornings.\n\n\n\n\n\nWhich day of the week had the longest trip_distance? Sort the results to have the day of the week with the longest rides at the top of the output.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT MAX(trip_distance) AS long_trip, \n       DAYNAME(STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\")) AS wday\nFROM yellow_old\nGROUP BY wday\nORDER BY long_trip DESC;\n\n\n8 records\n\n\nlong_trip\nwday\n\n\n\n\n5005013.0\nMonday\n\n\n100.0\nWednesday\n\n\n100.0\nFriday\n\n\n100.0\nSunday\n\n\n97.4\nTuesday\n\n\n96.1\nThursday\n\n\n92.9\nSaturday\n\n\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nHoly cow, one of the trips is 5,005,013 miles! That can’t be right!??!\n\n\n\n\n\nHow many different rate_codes are given in the dataset?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT DISTINCT rate_code\nFROM yellow_old\nLIMIT 0, 20;\n\n\nDisplaying records 1 - 10\n\n\nrate_code\n\n\n\n\nNA\n\n\n1\n\n\n2\n\n\n5\n\n\n3\n\n\n4\n\n\n0\n\n\n6\n\n\n210\n\n\n8\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT COUNT(*) AS num_code, rate_code\nFROM yellow_old\nGROUP BY rate_code\nORDER BY num_code DESC\nLIMIT 0, 20;\n\n\nDisplaying records 1 - 10\n\n\nnum_code\nrate_code\n\n\n\n\n15088481\n1\n\n\n268161\n2\n\n\n42092\n5\n\n\n22935\n3\n\n\n4676\n4\n\n\n1579\n0\n\n\n179\n6\n\n\n14\n210\n\n\n4\n8\n\n\n4\n7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nThere are 11 different rate codes. Rate codes are different because the taxi charges you a different rate if, for example, you go to JFK or go very far away.\nThe second solution not only gave rate codes, but also the number of transactions for each rate code.\n\n\n\n\n\nStart with the following lines of query:\n\n\nSELECT AVG(trip_distance) AS avg_trip, \n       DAYNAME(STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\")) AS wday\n\n\nCan you use WHERE to subset only Saturday and Sunday to find the average trip distance across the weekend? Why or why not?\nCan you use HAVING to subset only Saturday and Sunday to find the average trip distance across the weekend? Why or why not?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT AVG(trip_distance) AS avg_trip, \n       DAYNAME(STR_TO_DATE(pickup_datetime, \"%Y-%m-%d %T\")) AS wday\nFROM yellow_old\nGROUP BY wday\nHAVING wday = \"Saturday\" | wday = \"Sunday\"\nLIMIT 0,8;\n\n\n0 records\n\n\navg_trip\nwday\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nNeither WHERE nor HAVING can be used with this query to find the average trip distance across the weekend days.\nWHERE cannot be used because wday is not in the original dataset. WHERE works on the original data.\nHAVING cannot be used because the average has already been taken across the groups, so there isn’t any way to go back and re-calculate the average across Saturday and Sunday. HAVING works on the results set."
  },
  {
    "objectID": "handout/lab3_joins_sds261_j24_sol.html",
    "href": "handout/lab3_joins_sds261_j24_sol.html",
    "title": "Lab 3 - SQL joins",
    "section": "",
    "text": "Solution\n\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(DBI)\nlibrary(RMariaDB)\nlibrary(dbplyr)\nlibrary(mdsr)\nToday’s lab will provide practice working with SQL clauses in DBeaver. Don’t forget the importance of the order of the SQL clauses.\nThe goals for lab 3 include:"
  },
  {
    "objectID": "slides/2024-01-08-db.html",
    "href": "slides/2024-01-08-db.html",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "",
    "text": "structured collection of data organized with\n\nefficient storage\neasy retrieval\nconsistent management\n\ndata stored in tables which are linked to one another via keys\n\n\n\n\n\ndata frame (R) or table (SQL)\ncolumns of variables\nrows of observational units\n\n\n\n\n\ntables in SQL databases can be arbitrarily large\n\nlive in storage, computer’s hard drive (usually remote)\n\ndata frames in R\n\nlive in memory (RAM) on your personal computer\n\ntables in a database are linked via a key."
  },
  {
    "objectID": "slides/2024-01-11-regex1.html",
    "href": "slides/2024-01-11-regex1.html",
    "title": "Regular Expressions I",
    "section": "",
    "text": "A regular expression … is a sequence of characters that define a search pattern. Usually such patterns are used by string searching algorithms for “find” or “find and replace” operations on strings, or for input validation. It is a technique developed in theoretical computer science and formal language theory."
  },
  {
    "objectID": "slides/2024-01-12-regex2.html",
    "href": "slides/2024-01-12-regex2.html",
    "title": "Regular Expressions II",
    "section": "",
    "text": "A lookaround specifies a place in the regular expression that will anchor the string you’d like to match.\n\n“x(?=y)” – positive lookahead (matches ‘x’ when it is followed by ‘y’)\n“x(?!y)” – negative lookahead (matches ‘x’ when it is not followed by ‘y’)\n“x(?&lt;=y)” – positive lookbehind (matches ‘x’ when it is preceded by ‘y’)\n“x(?&lt;!y)” – negative lookbehind (matches ‘x’ when it is not preceded by ‘y’)"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#footnotes",
    "href": "slides/2024-01-12-regex2.html#footnotes",
    "title": "Regular Expressions II",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThanks to Ciaran Evans at Wake Forest University for example and code, https://sta279-f23.github.io/↩︎"
  },
  {
    "objectID": "slides/2024-01-08-db.html#tables-in-airlines-database",
    "href": "slides/2024-01-08-db.html#tables-in-airlines-database",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "Tables in airlines database",
    "text": "Tables in airlines database\n\nDBI::dbListTables(con_air)\n\n[1] \"airports\" \"carriers\" \"flights\"  \"planes\""
  },
  {
    "objectID": "slides/2024-01-08-db.html#what-is-sql",
    "href": "slides/2024-01-08-db.html#what-is-sql",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "What is SQL?",
    "text": "What is SQL?\n\nSQL is a programming language for working with relational databases.\nSQL has been around since the 1970s, but has, unfortunately, many different dialects.\nTo connect to the Smith and mdsr databases (via R and DBeaver), we will use MySQL.\nTo connect to DuckDB, we will use the dialect native to DuckDB."
  },
  {
    "objectID": "slides/2024-01-08-db.html#a-github-merge-conflict",
    "href": "slides/2024-01-08-db.html#a-github-merge-conflict",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "A GitHub merge conflict",
    "text": "A GitHub merge conflict\n\nOn GitHub (on the web) edit the README document and Commit it with a message describing what you did.\nThen, in RStudio also edit the README document with a different change.\n\nCommit your changes\nTry to push – you’ll get an error!\nTry pulling\nResolve the merge conflict and then commit and push\n\nAs you work in teams you are likely to run into merge conflicts, learning how to resolve them properly will be very important."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#select-distinct",
    "href": "slides/2024-01-09-clauses.html#select-distinct",
    "title": "SQL clauses",
    "section": "SELECT DISTINCT",
    "text": "SELECT DISTINCT\nReturns only unique rows.\n\nSELECT DISTINCT payment_type\nFROM yellow_old\nLIMIT 0, 20;\n\n\n\n\n6 records\n\n\n\n\npayment_type\n\n\n\n\n\n\n\n\n\n\nCRD\n\n\n\n\nCSH\n\n\n\n\nNOC\n\n\n\n\nDIS\n\n\n\n\nUNK\n\n\n\n\n\n\n\n\nSELECT DISTINCT vendor_id, payment_type\nFROM yellow_old\nLIMIT 0, 20;\n\n\n\n\n8 records\n\n\n\n\nvendor_id\n\n\npayment_type\n\n\n\n\n\n\n\n\n\n\n\n\nCMT\n\n\nCRD\n\n\n\n\nCMT\n\n\nCSH\n\n\n\n\nCMT\n\n\nNOC\n\n\n\n\nCMT\n\n\nDIS\n\n\n\n\nVTS\n\n\nCRD\n\n\n\n\nVTS\n\n\nCSH\n\n\n\n\nVTS\n\n\nUNK\n\n\n\n\n\n\n\nIn case you are curious:\n\nVTS is Verifone Transportation Systems and CMT is Mobile Knowledge Systems Inc.\nCRD is credit card; CSH is cash; NOC is no charge; DIS is dispute"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#where-6",
    "href": "slides/2024-01-09-clauses.html#where-6",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nIS NULL not = NULL (because NULL indicates unknown)\n\nSELECT payment_type, fare_amount, tip_amount, total_amount\nFROM yellow_old\nWHERE payment_type IS NULL\nLIMIT 0, 10;\n\n\n\n\n1 records\n\n\n\n\npayment_type\n\n\nfare_amount\n\n\ntip_amount\n\n\ntotal_amount\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSELECT payment_type, fare_amount, tip_amount, total_amount\nFROM yellow_old\nWHERE payment_type = NULL\nLIMIT 0, 10;\n\n\n\n\n0 records\n\n\n\n\npayment_type\n\n\nfare_amount\n\n\ntip_amount\n\n\ntotal_amount"
  },
  {
    "objectID": "handout/lab3_joins_sds261_j24.html#best-practice",
    "href": "handout/lab3_joins_sds261_j24.html#best-practice",
    "title": "Lab 3 - SQL joins",
    "section": "Best practice",
    "text": "Best practice\nIt is always a good idea to terminate the SQL connection when you are done with it.\n\nDBI::dbDisconnect(con_yelp)"
  },
  {
    "objectID": "handout/lab3_joins_sds261_j24_sol.html#best-practice",
    "href": "handout/lab3_joins_sds261_j24_sol.html#best-practice",
    "title": "Lab 3 - SQL joins",
    "section": "Best practice",
    "text": "Best practice\nIt is always a good idea to terminate the SQL connection when you are done with it.\n\nDBI::dbDisconnect(con_yelp)"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#imdb",
    "href": "slides/2024-01-10-joins.html#imdb",
    "title": "SQL joins",
    "section": "IMDb",
    "text": "IMDb\nConsider a database of information from IMDb."
  },
  {
    "objectID": "slides/2024-01-10-joins.html#join-imdb-title-votes",
    "href": "slides/2024-01-10-joins.html#join-imdb-title-votes",
    "title": "SQL joins",
    "section": "JOIN IMDb title + votes",
    "text": "JOIN IMDb title + votes\nIn the imdb database, the title table includes information about the 4,626,322 titles in the database, including the id, title, kind_id (indicator for the kind of ID it is), and production_year. It does not, however, include the review of the title.\n\nSELECT * FROM title LIMIT 0, 10;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nid\n\n\ntitle\n\n\nimdb_index\n\n\nkind_id\n\n\nproduction_year\n\n\nimdb_id\n\n\nphonetic_code\n\n\nepisode_of_id\n\n\nseason_nr\n\n\nepisode_nr\n\n\nseries_years\n\n\nmd5sum\n\n\n\n\n\n\n78460\n\n\nAdults Recat to the Simpsons (30th Anniversary)\n\n\n\n\n7\n\n\n2017\n\n\n\n\nA3432\n\n\n78406\n\n\n\n\n\n\n\n\n2ae09eed7d576cc2c24774fed5b18168\n\n\n\n\n70273\n\n\n(2016-05-18)\n\n\n\n\n7\n\n\n2016\n\n\n\n\n\n\n68058\n\n\n\n\n\n\n\n\n511dfc14cfff7589d29a95abb30cd66a\n\n\n\n\n60105\n\n\n(2014-04-11)\n\n\n\n\n7\n\n\n2014\n\n\n\n\n\n\n59138\n\n\n\n\n\n\n\n\nc6cdce7e667e07713e431805c407feed\n\n\n\n\n32120\n\n\n(2008-05-01)\n\n\n\n\n7\n\n\n2008\n\n\n\n\n\n\n32060\n\n\n\n\n\n\n\n\n100df65742caf5afd092b2e0ead67d8e\n\n\n\n\n97554\n\n\nSchmÃ¶lders Traum\n\n\n\n\n7\n\n\n2001\n\n\n\n\nS2543\n\n\n97302\n\n\n10\n\n\n1\n\n\n\n\n46862a2f96f9fb2d59e8c9a11ecfdd28\n\n\n\n\n57966\n\n\n(#1.1)\n\n\n\n\n7\n\n\n2013\n\n\n\n\n\n\n57965\n\n\n1\n\n\n1\n\n\n\n\n409c37703766c4b24f8a86162fd9cf85\n\n\n\n\n76391\n\n\nAnniversary\n\n\n\n\n7\n\n\n1971\n\n\n\n\nA5162\n\n\n76385\n\n\n4\n\n\n9\n\n\n\n\n5e12ce73fac1d1dcf94136b6e9acd8f8\n\n\n\n\n11952\n\n\nAngus Black/Lester Barrie/DC Curry\n\n\n\n\n7\n\n\n2009\n\n\n\n\nA5214\n\n\n11937\n\n\n4\n\n\n7\n\n\n\n\n9c38b9e5601dc154444b73b518034aa1\n\n\n\n\n1554\n\n\nNew Orleans\n\n\n\n\n7\n\n\n2003\n\n\n\n\nN6452\n\n\n1508\n\n\n2\n\n\n11\n\n\n\n\n621bea735740a547e862e4a3226f35d2\n\n\n\n\n58442\n\n\nKiss Me Kate\n\n\n\n\n7\n\n\n2011\n\n\n\n\nK2523\n\n\n58436\n\n\n1\n\n\n10\n\n\n\n\n293e8c75c7f35a4035abf617962be5a9"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#join-imdb-title-votes-1",
    "href": "slides/2024-01-10-joins.html#join-imdb-title-votes-1",
    "title": "SQL joins",
    "section": "JOIN IMDb title + votes",
    "text": "JOIN IMDb title + votes\nThe movie_info_idx table does not contain much information about each particular film. It does, however, have an indicator for the movie ID (given by movie_id) as well as the number of votes (given by info where type_id = 100).\n\nSELECT * FROM movie_info_idx LIMIT 0, 6;\n\n\n\n\n6 records\n\n\n\n\nid\n\n\nmovie_id\n\n\ninfo_type_id\n\n\ninfo\n\n\nnote\n\n\n\n\n\n\n1\n\n\n1\n\n\n99\n\n\n31.2.1..2.\n\n\n\n\n\n\n2\n\n\n1\n\n\n100\n\n\n9\n\n\n\n\n\n\n3\n\n\n1\n\n\n101\n\n\n4.1\n\n\n\n\n\n\n4\n\n\n2\n\n\n99\n\n\n1000000102\n\n\n\n\n\n\n5\n\n\n2\n\n\n100\n\n\n61\n\n\n\n\n\n\n6\n\n\n2\n\n\n101\n\n\n6.4"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#join-imdb-title-votes-2",
    "href": "slides/2024-01-10-joins.html#join-imdb-title-votes-2",
    "title": "SQL joins",
    "section": "JOIN IMDb title + votes",
    "text": "JOIN IMDb title + votes\n\ncombine the titles with the number of votes so that each title with user votes is included (INNER JOIN)\n\n\nSELECT title.id,\n       title.title,\n       movie_info_idx.info\nFROM title\nJOIN movie_info_idx ON title.id = movie_info_idx.movie_id \nWHERE title.production_year = 2015 \n    AND title.kind_id = 1                  # movies only\n    AND movie_info_idx.info_type_id = 100  # info_type is votes\n    AND movie_info_idx.info &gt; 150000       # at least 150,000 votes\nORDER BY movie_info_idx.info DESC\nLIMIT 0, 20;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nid\n\n\ntitle\n\n\ninfo\n\n\n\n\n\n\n4260166\n\n\nStar Wars: Episode VII - The Force Awakens\n\n\n691691\n\n\n\n\n3915213\n\n\nMad Max: Fury Road\n\n\n666484\n\n\n\n\n4389619\n\n\nThe Martian\n\n\n583987\n\n\n\n\n3313672\n\n\nAvengers: Age of Ultron\n\n\n540606\n\n\n\n\n4414139\n\n\nThe Revenant\n\n\n526189\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n471237\n\n\n\n\n3752999\n\n\nInside Out\n\n\n443051\n\n\n\n\n3292159\n\n\nAnt-Man\n\n\n390965\n\n\n\n\n4364483\n\n\nThe Hateful Eight\n\n\n363199\n\n\n\n\n4251736\n\n\nSpectre\n\n\n319875\n\n\n\n\n\n\n\nSome aspects of the query are worth pointing out:\n* The variables in the output are given in the SELECT clause. The id and title (both from the title table) and the info from the movie_info_idx which represents the number of IMDb votes. * The variables are preceded by the table from which they came. While not always necessary, it is good practice so as to avoid confusion. * The JOIN happens by linking the id variable in the title table with the movie_id variable in the movie_info_idx table. * The LIMIT wasn’t necessary (there are only 12 observations), but it’s good practice so that we don’t end up with unwieldy query results. * The WHERE clause happens before the JOIN action, despite being written after. * In the WHERE clause, we keep only movies, only 2015 production year, and only at least 150,000 votes."
  },
  {
    "objectID": "slides/2024-01-10-joins.html#join-imdb-title-actress",
    "href": "slides/2024-01-10-joins.html#join-imdb-title-actress",
    "title": "SQL joins",
    "section": "JOIN IMDb title + actress",
    "text": "JOIN IMDb title + actress\ncast_info contains the person_id and the movie_id\n\nSELECT * FROM cast_info LIMIT 0, 10;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nid\n\n\nperson_id\n\n\nmovie_id\n\n\nperson_role_id\n\n\nnote\n\n\nnr_order\n\n\nrole_id\n\n\n\n\n\n\n1\n\n\n1\n\n\n3432997\n\n\n1\n\n\n\n\n31\n\n\n1\n\n\n\n\n2\n\n\n2\n\n\n1901690\n\n\n2\n\n\n\n\n\n\n1\n\n\n\n\n3\n\n\n3\n\n\n4027567\n\n\n2\n\n\n\n\n25\n\n\n1\n\n\n\n\n4\n\n\n3\n\n\n4282876\n\n\n3\n\n\n\n\n22\n\n\n1\n\n\n\n\n5\n\n\n4\n\n\n3542672\n\n\n\n\n\n\n12\n\n\n1\n\n\n\n\n6\n\n\n5\n\n\n3331520\n\n\n4\n\n\n(as $hutter Boy)\n\n\n10\n\n\n1\n\n\n\n\n7\n\n\n5\n\n\n4027191\n\n\n2\n\n\n(as $hutter Boy)\n\n\n1\n\n\n1\n\n\n\n\n8\n\n\n5\n\n\n4195731\n\n\n5\n\n\n(uncredited)\n\n\n\n\n1\n\n\n\n\n9\n\n\n5\n\n\n4263956\n\n\n6\n\n\n(uncredited)\n\n\n\n\n1\n\n\n\n\n10\n\n\n5\n\n\n4267787\n\n\n7\n\n\n(uncredited)\n\n\n\n\n1\n\n\n\n\n\n\n\nperson_role_id is 1 if actor and 2 if actress"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#join-imdb-title-actress-1",
    "href": "slides/2024-01-10-joins.html#join-imdb-title-actress-1",
    "title": "SQL joins",
    "section": "JOIN IMDb title + actress",
    "text": "JOIN IMDb title + actress\naka_name contains person_id and name (of actor)\n\nSELECT * FROM aka_name LIMIT 0, 10;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nid\n\n\nperson_id\n\n\nname\n\n\nimdb_index\n\n\nname_pcode_cf\n\n\nname_pcode_nf\n\n\nsurname_pcode\n\n\nmd5sum\n\n\n\n\n\n\n1\n\n\n6188450\n\n\nSmith, Jessica Noel\n\n\n\n\nS5325\n\n\nJ2542\n\n\nS53\n\n\n25c9d464e3ff2957533546aa92b397ed\n\n\n\n\n2\n\n\n5125059\n\n\nPain, L. $ham\n\n\n\n\nP545\n\n\nL515\n\n\nP5\n\n\n569b1e885ccb51211c01753f0dad9b2c\n\n\n\n\n3\n\n\n5\n\n\nBoy, $hutter\n\n\n\n\nB36\n\n\nH361\n\n\nB\n\n\n35092b5604ce378fc48c8a6fc0038a49\n\n\n\n\n4\n\n\n4152053\n\n\nDollasign, Ty\n\n\n\n\nD4253\n\n\nT3425\n\n\nD425\n\n\n0f565a2d8027cfb8ed6c5f4bba719fcd\n\n\n\n\n5\n\n\n4152053\n\n\nSign, Ty Dolla\n\n\n\n\nS2534\n\n\nT3425\n\n\nS25\n\n\n2eded1b021b96333b4b74e0fec959650\n\n\n\n\n6\n\n\n6\n\n\nMoore, Brandon\n\n\n\n\nM6165\n\n\nB6535\n\n\nM6\n\n\n193a6f5adf4756320f622162d2475608\n\n\n\n\n7\n\n\n8\n\n\n$torm, Country\n\n\n\n\nT6525\n\n\nC5363\n\n\nT65\n\n\n1654400b707d34323ea392b87060e6cc\n\n\n\n\n8\n\n\n19\n\n\n‘Hooper’, Simon P.J. Kelly\n\n\n\n\nH1625\n\n\nS5124\n\n\nH16\n\n\n3fd8885372c23f8c74e583da91d1fd05\n\n\n\n\n9\n\n\n19\n\n\nHooper\n\n\n\n\nH16\n\n\n\n\n\n\n24ddc68ab605ee95857ad45b65ffa2d8\n\n\n\n\n10\n\n\n19\n\n\nKelly, Simon P.J.\n\n\n\n\nK4251\n\n\nS5124\n\n\nK4\n\n\n33d976f22e276b73c61513bc5f6e72a6"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#join-imdb-title-actress-2",
    "href": "slides/2024-01-10-joins.html#join-imdb-title-actress-2",
    "title": "SQL joins",
    "section": "JOIN IMDb title + actress",
    "text": "JOIN IMDb title + actress\ntitle contains id and title (of the movie)\n\nSELECT * FROM title LIMIT 0, 10;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nid\n\n\ntitle\n\n\nimdb_index\n\n\nkind_id\n\n\nproduction_year\n\n\nimdb_id\n\n\nphonetic_code\n\n\nepisode_of_id\n\n\nseason_nr\n\n\nepisode_nr\n\n\nseries_years\n\n\nmd5sum\n\n\n\n\n\n\n78460\n\n\nAdults Recat to the Simpsons (30th Anniversary)\n\n\n\n\n7\n\n\n2017\n\n\n\n\nA3432\n\n\n78406\n\n\n\n\n\n\n\n\n2ae09eed7d576cc2c24774fed5b18168\n\n\n\n\n70273\n\n\n(2016-05-18)\n\n\n\n\n7\n\n\n2016\n\n\n\n\n\n\n68058\n\n\n\n\n\n\n\n\n511dfc14cfff7589d29a95abb30cd66a\n\n\n\n\n60105\n\n\n(2014-04-11)\n\n\n\n\n7\n\n\n2014\n\n\n\n\n\n\n59138\n\n\n\n\n\n\n\n\nc6cdce7e667e07713e431805c407feed\n\n\n\n\n32120\n\n\n(2008-05-01)\n\n\n\n\n7\n\n\n2008\n\n\n\n\n\n\n32060\n\n\n\n\n\n\n\n\n100df65742caf5afd092b2e0ead67d8e\n\n\n\n\n97554\n\n\nSchmÃ¶lders Traum\n\n\n\n\n7\n\n\n2001\n\n\n\n\nS2543\n\n\n97302\n\n\n10\n\n\n1\n\n\n\n\n46862a2f96f9fb2d59e8c9a11ecfdd28\n\n\n\n\n57966\n\n\n(#1.1)\n\n\n\n\n7\n\n\n2013\n\n\n\n\n\n\n57965\n\n\n1\n\n\n1\n\n\n\n\n409c37703766c4b24f8a86162fd9cf85\n\n\n\n\n76391\n\n\nAnniversary\n\n\n\n\n7\n\n\n1971\n\n\n\n\nA5162\n\n\n76385\n\n\n4\n\n\n9\n\n\n\n\n5e12ce73fac1d1dcf94136b6e9acd8f8\n\n\n\n\n11952\n\n\nAngus Black/Lester Barrie/DC Curry\n\n\n\n\n7\n\n\n2009\n\n\n\n\nA5214\n\n\n11937\n\n\n4\n\n\n7\n\n\n\n\n9c38b9e5601dc154444b73b518034aa1\n\n\n\n\n1554\n\n\nNew Orleans\n\n\n\n\n7\n\n\n2003\n\n\n\n\nN6452\n\n\n1508\n\n\n2\n\n\n11\n\n\n\n\n621bea735740a547e862e4a3226f35d2\n\n\n\n\n58442\n\n\nKiss Me Kate\n\n\n\n\n7\n\n\n2011\n\n\n\n\nK2523\n\n\n58436\n\n\n1\n\n\n10\n\n\n\n\n293e8c75c7f35a4035abf617962be5a9"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#join-imdb-title-actress-3",
    "href": "slides/2024-01-10-joins.html#join-imdb-title-actress-3",
    "title": "SQL joins",
    "section": "JOIN IMDb title + actress",
    "text": "JOIN IMDb title + actress\nGoal: identify the actresses in those movies with the highest number of votes.\n\nSELECT t.title,\n       idx.info,\n       a.person_id,\n       n.name\nFROM title AS t\nJOIN movie_info_idx AS idx ON t.id = idx.movie_id \nJOIN cast_info AS a ON idx.movie_id = a.movie_id\nJOIN aka_name AS n ON a.person_id = n.person_id\nWHERE t.production_year = 2015 \n    AND t.kind_id = 1           # movies only\n    AND idx.info_type_id = 100  # info_type is votes\n    AND idx.info &gt; 150000       # at least 150,000 votes\n    AND a.role_id = 2           # actresses only\nORDER BY a.person_id\nLIMIT 0, 50;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\ntitle\n\n\ninfo\n\n\nperson_id\n\n\nname\n\n\n\n\n\n\nMission: Impossible - Rogue Nation\n\n\n266759\n\n\n2674172\n\n\nSofz\n\n\n\n\nMission: Impossible - Rogue Nation\n\n\n266759\n\n\n2674172\n\n\nSof\n\n\n\n\nMission: Impossible - Rogue Nation\n\n\n266759\n\n\n2674172\n\n\nSofz\n\n\n\n\nMission: Impossible - Rogue Nation\n\n\n266759\n\n\n2674172\n\n\nSof\n\n\n\n\nFocus\n\n\n172680\n\n\n2678594\n\n\nLabouisse, Kate\n\n\n\n\nMad Max: Fury Road\n\n\n666484\n\n\n2681098\n\n\nMichelle, Debra\n\n\n\n\nThe Hunger Games: Mockingjay - Part 2\n\n\n214569\n\n\n2685496\n\n\nHarris, Ahnie\n\n\n\n\nThe Hunger Games: Mockingjay - Part 2\n\n\n214569\n\n\n2685496\n\n\nHarris, Jasmine\n\n\n\n\nCreed\n\n\n183904\n\n\n2686218\n\n\nKareema, Kiana A.\n\n\n\n\nAnt-Man\n\n\n390965\n\n\n2687271\n\n\nAkana, Anna Kay\n\n\n\n\n\n\n\nConnecting the most popular movies of 2015 with the actresses in those movies requires a series of JOINs. Note that to make the code less onerous, the title table has been aliased by t, the movie_info_idx table has been aliased by idx, the cast_info table has been aliased by a, and the aka_name table has been aliased by n.\nThere is a lot of data cleaning to do as some of the person_id values are one to many!! That is, the person_id matches multiple names in the aka_name database."
  },
  {
    "objectID": "slides/2024-01-10-joins.html#other-joins",
    "href": "slides/2024-01-10-joins.html#other-joins",
    "title": "SQL joins",
    "section": "Other JOINs",
    "text": "Other JOINs\nLet’s look at RIGHT JOIN and LEFT JOIN using two new smaller tables.\n\nThe first has seven movies in it (from 2015 with at least 400,000 IMDb votes).\nThe second consists of almost 3 million actresses (person_role_id = 2). In order to find a subset of actresses, the person_id &gt; 3900000 was set arbitrarily (in order to have a smaller group with which to work).\n\nUsing subqueries, we can JOIN the two datasets using different JOIN techniques."
  },
  {
    "objectID": "slides/2024-01-10-joins.html#unioning",
    "href": "slides/2024-01-10-joins.html#unioning",
    "title": "SQL joins",
    "section": "UNIONing",
    "text": "UNIONing\nIn SQL a UNION clause combines two different tables by their rows (whereas JOIN combines two tables by columns). Think about UNION similarly to the bind_rows() command in R.\n\nFigure 3: UNION binds rows while JOIN appends columns, image credit: Jane Williams https://blog.devart.com/mysql-union-tutorial-html.html"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#best-practice",
    "href": "slides/2024-01-10-joins.html#best-practice",
    "title": "SQL joins",
    "section": "Best practice",
    "text": "Best practice\nIt is always a good idea to terminate the SQL connection when you are done with it.\n\nDBI::dbDisconnect(con_imdb, shutdown = TRUE)"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#imdb-1",
    "href": "slides/2024-01-10-joins.html#imdb-1",
    "title": "SQL joins",
    "section": "IMDb",
    "text": "IMDb\n21 tables in the imdb database! Lots of details on movies, TV series, video games, and more. Today interest is in movies (and details within, like actors and ratings).\n\nSHOW TABLES;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nTables_in_imdb\n\n\n\n\n\n\naka_name\n\n\n\n\naka_title\n\n\n\n\ncast_info\n\n\n\n\nchar_name\n\n\n\n\ncomp_cast_type\n\n\n\n\ncompany_name\n\n\n\n\ncompany_type\n\n\n\n\ncomplete_cast\n\n\n\n\ninfo_type\n\n\n\n\nkeyword"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#imdb---glance-through-tables",
    "href": "slides/2024-01-10-joins.html#imdb---glance-through-tables",
    "title": "SQL joins",
    "section": "IMDb - glance through tables",
    "text": "IMDb - glance through tables\n\nSELECT * FROM kind_type\nLIMIT 0, 10;\n\n\n\n\n7 records\n\n\n\n\nid\n\n\nkind\n\n\n\n\n\n\n1\n\n\nmovie\n\n\n\n\n2\n\n\ntv series\n\n\n\n\n3\n\n\ntv movie\n\n\n\n\n4\n\n\nvideo movie\n\n\n\n\n5\n\n\ntv mini series\n\n\n\n\n6\n\n\nvideo game\n\n\n\n\n7\n\n\nepisode"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#all-the-joins",
    "href": "slides/2024-01-10-joins.html#all-the-joins",
    "title": "SQL joins",
    "section": "All the JOINs",
    "text": "All the JOINs\n\nJOIN (aka INNER JOIN): include all of the rows that exist in both tables\nLEFT JOIN: include all of the rows in the first table.\n\nRIGHT JOIN: include all of the rows in the second table.\nFULL OUTER JOIN: include all rows in either table. (The functionality doesn’t exist in MySQL but can be created using joins and UNION.)\nCROSS JOIN: match each row of the first table with each row in the second table."
  },
  {
    "objectID": "slides/2024-01-10-joins.html#all-the-joins-1",
    "href": "slides/2024-01-10-joins.html#all-the-joins-1",
    "title": "SQL joins",
    "section": "All the JOINs",
    "text": "All the JOINs\nVenn diagrams of the different types of joins.\n\nFigure 1: Venn diagrams describing different JOINs, image credit: phoenixNAP https://phoenixnap.com/kb/mysql-join"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#all-the-joins-2",
    "href": "slides/2024-01-10-joins.html#all-the-joins-2",
    "title": "SQL joins",
    "section": "All the JOINs",
    "text": "All the JOINs\nMini data tables of the different types of JOIN. (In SQL the missing values will be labeled as NULL (not NA).)\n\nFigure 2: Mini data tables describing different JOINs, image credit: Statistics Globe blog, https://statisticsglobe.com/r-dplyr-join-inner-left-right-full-semi-anti"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#all-the-joins-3",
    "href": "slides/2024-01-10-joins.html#all-the-joins-3",
    "title": "SQL joins",
    "section": "All the JOINs",
    "text": "All the JOINs\nEach JOIN clause needs four specific pieces of information:\n\nThe name of the first table you want to JOIN.\nThe type of JOIN being used.\nThe name of the second table you want to JOIN.\nThe condition(s) under which you want the records in the first table to match records in the second table."
  },
  {
    "objectID": "slides/2024-01-10-joins.html#a-toy-example",
    "href": "slides/2024-01-10-joins.html#a-toy-example",
    "title": "SQL joins",
    "section": "A toy example",
    "text": "A toy example\nRock bands from the 60s.\n\nband_members\n\n# A tibble: 3 × 2\n  name  band   \n  &lt;chr&gt; &lt;chr&gt;  \n1 Mick  Stones \n2 John  Beatles\n3 Paul  Beatles\n\nband_instruments\n\n# A tibble: 3 × 2\n  name  plays \n  &lt;chr&gt; &lt;chr&gt; \n1 John  guitar\n2 Paul  bass  \n3 Keith guitar\n\n\nThe function sqldf() in the sqldf R package allows for SQL commands on R objects."
  },
  {
    "objectID": "slides/2024-01-10-joins.html#rock-bands---inner-join",
    "href": "slides/2024-01-10-joins.html#rock-bands---inner-join",
    "title": "SQL joins",
    "section": "Rock bands - INNER JOIN",
    "text": "Rock bands - INNER JOIN\nAn inner join combines two datasets returning only the observations that exist in both of the original datasets.\n\nsqldf::sqldf(\"SELECT star.name,\n                     star.band,\n                     inst.plays\n              FROM band_members AS star\n              JOIN band_instruments AS inst ON star.name = inst.name\")\n\n  name    band  plays\n1 John Beatles guitar\n2 Paul Beatles   bass"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#rock-bands---full-join",
    "href": "slides/2024-01-10-joins.html#rock-bands---full-join",
    "title": "SQL joins",
    "section": "Rock bands - FULL JOIN",
    "text": "Rock bands - FULL JOIN\nA full join combines two datasets returning every observation that exists in either one of the original datasets.\n\nband_members |&gt;\n  full_join(band_instruments)\n\n# A tibble: 4 × 3\n  name  band    plays \n  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n1 Mick  Stones  &lt;NA&gt;  \n2 John  Beatles guitar\n3 Paul  Beatles bass  \n4 Keith &lt;NA&gt;    guitar\n\n\nThe full_join() function does not have an equivalent in MySQL. See notes for using JOINs and UNIONs to produce a full join."
  },
  {
    "objectID": "slides/2024-01-10-joins.html#rock-bands---left-join",
    "href": "slides/2024-01-10-joins.html#rock-bands---left-join",
    "title": "SQL joins",
    "section": "Rock bands - LEFT JOIN",
    "text": "Rock bands - LEFT JOIN\nA left join combines two datasets returning every observation that exists in the left (or first) original dataset.\n\nsqldf::sqldf(\"SELECT star.name,\n                     star.band,\n                      inst.plays\n              FROM band_members AS star\n              LEFT JOIN band_instruments AS inst \n              ON star.name = inst.name\")\n\n  name    band  plays\n1 Mick  Stones   &lt;NA&gt;\n2 John Beatles guitar\n3 Paul Beatles   bass"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#rock-bands---right-join",
    "href": "slides/2024-01-10-joins.html#rock-bands---right-join",
    "title": "SQL joins",
    "section": "Rock bands - RIGHT JOIN",
    "text": "Rock bands - RIGHT JOIN\nA right join combines two datasets returning every observation that exists in the right (or second) original dataset.\n\nsqldf::sqldf(\"SELECT inst.name,\n                     star.band,\n                      inst.plays\n              FROM band_members AS star\n              RIGHT JOIN band_instruments AS inst \n              ON star.name = inst.name\")\n\n   name    band  plays\n1  John Beatles guitar\n2  Paul Beatles   bass\n3 Keith    &lt;NA&gt; guitar"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#rock-bands---cross-join",
    "href": "slides/2024-01-10-joins.html#rock-bands---cross-join",
    "title": "SQL joins",
    "section": "Rock bands - CROSS JOIN",
    "text": "Rock bands - CROSS JOIN\nA right join combines two datasets returning every observation that exists in the right (or second) original dataset.\n\nsqldf::sqldf(\"SELECT *\n              FROM band_members AS star\n              CROSS JOIN band_instruments AS inst\")\n\n  name    band  name  plays\n1 Mick  Stones  John guitar\n2 Mick  Stones  Paul   bass\n3 Mick  Stones Keith guitar\n4 John Beatles  John guitar\n5 John Beatles  Paul   bass\n6 John Beatles Keith guitar\n7 Paul Beatles  John guitar\n8 Paul Beatles  Paul   bass\n9 Paul Beatles Keith guitar"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#movies",
    "href": "slides/2024-01-10-joins.html#movies",
    "title": "SQL joins",
    "section": "movies:",
    "text": "movies:\n\nSELECT t.id,\n       t.title,\n       idx.info,\n       (SELECT COUNT(*)\n       FROM title AS t\n       JOIN movie_info_idx AS idx ON idx.movie_id = t.id\n       WHERE t.production_year = 2015  \n             AND t.kind_id = 1\n             AND idx.info_type_id = 100\n             AND idx.info &gt; 400000) AS row_count\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1             # movies only\n    AND idx.info_type_id = 100    # info_type is votes\n    AND idx.info &gt; 400000         # at least 400,000 votes\nORDER BY idx.info DESC;\n\n\n\n\n7 records\n\n\n\n\nid\n\n\ntitle\n\n\ninfo\n\n\nrow_count\n\n\n\n\n\n\n4260166\n\n\nStar Wars: Episode VII - The Force Awakens\n\n\n691691\n\n\n7\n\n\n\n\n3915213\n\n\nMad Max: Fury Road\n\n\n666484\n\n\n7\n\n\n\n\n4389619\n\n\nThe Martian\n\n\n583987\n\n\n7\n\n\n\n\n3313672\n\n\nAvengers: Age of Ultron\n\n\n540606\n\n\n7\n\n\n\n\n4414139\n\n\nThe Revenant\n\n\n526189\n\n\n7\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n471237\n\n\n7\n\n\n\n\n3752999\n\n\nInside Out\n\n\n443051\n\n\n7"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#actresses",
    "href": "slides/2024-01-10-joins.html#actresses",
    "title": "SQL joins",
    "section": "actresses:",
    "text": "actresses:\n\n\nSELECT a.person_id,\n       a.movie_id,\n       n.name,\n       (SELECT COUNT(*)\n       FROM cast_info AS a\n       JOIN aka_name AS n ON a.person_id = n.person_id\n       WHERE a.person_role_id = 2  \n             AND a.person_id &gt; 390000) AS row_count\nFROM cast_info AS a\nJOIN aka_name AS n ON a.person_id = n.person_id\n       WHERE a.person_role_id = 2  \n             AND a.person_id &gt; 3900000\nLIMIT 0, 20;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nperson_id\n\n\nmovie_id\n\n\nname\n\n\nrow_count\n\n\n\n\n\n\n3900141\n\n\n759802\n\n\nSimons, Rita Joanne\n\n\n2904759\n\n\n\n\n3902258\n\n\n4365829\n\n\nSinger, Rabbi Tovia\n\n\n2904759\n\n\n\n\n3902699\n\n\n3109788\n\n\nSingh, Sabine Erika\n\n\n2904759\n\n\n\n\n3903035\n\n\n3215866\n\n\nVal\n\n\n2904759\n\n\n\n\n3904831\n\n\n2468067\n\n\nMasha\n\n\n2904759\n\n\n\n\n3904928\n\n\n3654347\n\n\nFei, Siu Yin\n\n\n2904759\n\n\n\n\n3904928\n\n\n3654347\n\n\nHsiao, Yen-fei\n\n\n2904759\n\n\n\n\n3904928\n\n\n3654347\n\n\nSiu, Yinfei\n\n\n2904759\n\n\n\n\n3904928\n\n\n3654347\n\n\nXiao, Yanfei\n\n\n2904759\n\n\n\n\n3904928\n\n\n3654347\n\n\nYin-Fai, Siu\n\n\n2904759"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#inner-join",
    "href": "slides/2024-01-10-joins.html#inner-join",
    "title": "SQL joins",
    "section": "Inner JOIN",
    "text": "Inner JOIN\nWith an inner JOIN, there are 32 rows corresponding to all the actresses in the seven 2015 films with the most votes. Because the JOIN is an intersection of the two tables, only the actresses with person_id above 3900000 are included.\n\nSELECT * FROM\n(SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes     \nINNER JOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nLIMIT 0, 300;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nid\n\n\ntitle\n\n\nperson_id\n\n\nmovie_id\n\n\nname\n\n\n\n\n\n\n3313672\n\n\nAvengers: Age of Ultron\n\n\n3916648\n\n\n3313672\n\n\nSmulders, Jacoba Francisca Maria\n\n\n\n\n3752999\n\n\nInside Out\n\n\n4122876\n\n\n3752999\n\n\nKuzniar, Lennon Wynn\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n3938423\n\n\n3787790\n\n\nNorvell, Ingrid\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n3938423\n\n\n3787790\n\n\nNorvell, Ingrid\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n3950111\n\n\n3787790\n\n\nSallaway, Seannon Jane\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n4079047\n\n\n3787790\n\n\nWashington, Kelly Lynn\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n4079047\n\n\n3787790\n\n\nWashington, Kelly Lynn\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n4084626\n\n\n3787790\n\n\nWeeks, Jency\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n4084626\n\n\n3787790\n\n\nJenc\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n4084626\n\n\n3787790\n\n\nLittle J"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#right-join",
    "href": "slides/2024-01-10-joins.html#right-join",
    "title": "SQL joins",
    "section": "RIGHT JOIN",
    "text": "RIGHT JOIN\nWith a RIGHT JOIN, there are more than 300 rows (the LIMIT clause keeps us from knowing how many rows, but there are a LOT!) corresponding to all the actresses whose person_id above 3900000 are included. Those actresses who acted in one of the seven top 2015 films are also included in the full results table, but they don’t happen to be in the truncated output here.\n\nSELECT * FROM\n(SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes     \nRIGHT JOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nLIMIT 0, 300;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nid\n\n\ntitle\n\n\nperson_id\n\n\nmovie_id\n\n\nname\n\n\n\n\n\n\n\n\n\n\n3900001\n\n\n3355298\n\n\nSimonis, Heidi\n\n\n\n\n\n\n\n\n3900001\n\n\n3509490\n\n\nSimonis, Heidi\n\n\n\n\n\n\n\n\n3900001\n\n\n3739780\n\n\nSimonis, Heidi\n\n\n\n\n\n\n\n\n3900001\n\n\n3943329\n\n\nSimonis, Heidi\n\n\n\n\n\n\n\n\n3900001\n\n\n165963\n\n\nSimonis, Heidi\n\n\n\n\n\n\n\n\n3900001\n\n\n268249\n\n\nSimonis, Heidi\n\n\n\n\n\n\n\n\n3900001\n\n\n268370\n\n\nSimonis, Heidi\n\n\n\n\n\n\n\n\n3900001\n\n\n268406\n\n\nSimonis, Heidi\n\n\n\n\n\n\n\n\n3900001\n\n\n268475\n\n\nSimonis, Heidi\n\n\n\n\n\n\n\n\n3900001\n\n\n279082\n\n\nSimonis, Heidi"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#left-join",
    "href": "slides/2024-01-10-joins.html#left-join",
    "title": "SQL joins",
    "section": "LEFT JOIN",
    "text": "LEFT JOIN\nWith a LEFT JOIN, there are 33 rows corresponding to the actresses in the seven top 2015 movies. Only The Revenant did not have any actresses whose person_id is greater than 3900000.\n\nSELECT * FROM\n(SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes     \nLEFT JOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nLIMIT 0, 300;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nid\n\n\ntitle\n\n\nperson_id\n\n\nmovie_id\n\n\nname\n\n\n\n\n\n\n3313672\n\n\nAvengers: Age of Ultron\n\n\n3916648\n\n\n3313672\n\n\nSmulders, Jacoba Francisca Maria\n\n\n\n\n3752999\n\n\nInside Out\n\n\n4122876\n\n\n3752999\n\n\nKuzniar, Lennon Wynn\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n3938423\n\n\n3787790\n\n\nNorvell, Ingrid\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n3938423\n\n\n3787790\n\n\nNorvell, Ingrid\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n3950111\n\n\n3787790\n\n\nSallaway, Seannon Jane\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n4079047\n\n\n3787790\n\n\nWashington, Kelly Lynn\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n4079047\n\n\n3787790\n\n\nWashington, Kelly Lynn\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n4084626\n\n\n3787790\n\n\nWeeks, Jency\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n4084626\n\n\n3787790\n\n\nJenc\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n4084626\n\n\n3787790\n\n\nLittle J"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#counting-repeat-actresses",
    "href": "slides/2024-01-10-joins.html#counting-repeat-actresses",
    "title": "SQL joins",
    "section": "Counting repeat actresses",
    "text": "Counting repeat actresses\nWe might, for example, want to know how many names / spellings of a name with a specific person_id (above 3900000) exist for each person_id in each of the top voted seven films of 2015.\n\nSELECT acts.person_id, \n       COUNT(*) AS num_repeat_names\nFROM (SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes\nJOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nGROUP BY acts.person_id;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nperson_id\n\n\nnum_repeat_names\n\n\n\n\n\n\n3916648\n\n\n1\n\n\n\n\n4122876\n\n\n1\n\n\n\n\n3938423\n\n\n2\n\n\n\n\n3950111\n\n\n1\n\n\n\n\n4079047\n\n\n2\n\n\n\n\n4084626\n\n\n3\n\n\n\n\n4099458\n\n\n1\n\n\n\n\n3958614\n\n\n1\n\n\n\n\n3990819\n\n\n2\n\n\n\n\n4081131\n\n\n2"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#counting-number-of-actresses-per-film",
    "href": "slides/2024-01-10-joins.html#counting-number-of-actresses-per-film",
    "title": "SQL joins",
    "section": "Counting number of actresses per film",
    "text": "Counting number of actresses per film\nWe might, for example, want to know how many actresses with a specific person_id (above 3900000) are in each of the top voted seven films of 2015.\n\nSELECT movs.id, \n       movs.title,\n       COUNT(*) AS num_actress\nFROM (SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes\nJOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nGROUP BY movs.id;\n\n\n\n\n6 records\n\n\n\n\nid\n\n\ntitle\n\n\nnum_actress\n\n\n\n\n\n\n3313672\n\n\nAvengers: Age of Ultron\n\n\n1\n\n\n\n\n3752999\n\n\nInside Out\n\n\n1\n\n\n\n\n3787790\n\n\nJurassic World\n\n\n9\n\n\n\n\n3915213\n\n\nMad Max: Fury Road\n\n\n5\n\n\n\n\n4260166\n\n\nStar Wars: Episode VII - The Force Awakens\n\n\n15\n\n\n\n\n4389619\n\n\nThe Martian\n\n\n1"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#unions",
    "href": "slides/2024-01-10-joins.html#unions",
    "title": "SQL joins",
    "section": "UNIONs",
    "text": "UNIONs\nSilly example where the column names are ignored.\n\nSELECT \n    1 AS bar,\n    2 AS foo\n\nUNION\n\nSELECT \n    10 AS foo,\n    20 AS bar;\n\n\n\n\n2 records\n\n\n\n\nbar\n\n\nfoo\n\n\n\n\n\n\n1\n\n\n2\n\n\n\n\n10\n\n\n20"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#union",
    "href": "slides/2024-01-10-joins.html#union",
    "title": "SQL joins",
    "section": "UNION",
    "text": "UNION\nUNION is specifically designed to bind rows from two different SELECT queries where the variables have been selected in the same order.\nCombine the top voted movies from 2015 with the top voted movies from 2019.\nHowever, to account for time, we require the movies from 2015 to have more votes (400,000) than the movies from 2017 (200,000).\nThat is, the WHERE clause is different for the two subqueries."
  },
  {
    "objectID": "slides/2024-01-10-joins.html#union-1",
    "href": "slides/2024-01-10-joins.html#union-1",
    "title": "SQL joins",
    "section": "UNION",
    "text": "UNION\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 400000)\n\nUNION\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2017  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 200000)\nLIMIT 0, 100;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\ntitle\n\n\nproduction_year\n\n\nnum_votes\n\n\n\n\n\n\nAvengers: Age of Ultron\n\n\n2015\n\n\n540606\n\n\n\n\nInside Out\n\n\n2015\n\n\n443051\n\n\n\n\nJurassic World\n\n\n2015\n\n\n471237\n\n\n\n\nMad Max: Fury Road\n\n\n2015\n\n\n666484\n\n\n\n\nStar Wars: Episode VII - The Force Awakens\n\n\n2015\n\n\n691691\n\n\n\n\nThe Martian\n\n\n2015\n\n\n583987\n\n\n\n\nThe Revenant\n\n\n2015\n\n\n526189\n\n\n\n\nDunkirk\n\n\n2017\n\n\n229089\n\n\n\n\nGuardians of the Galaxy Vol. 2\n\n\n2017\n\n\n281845\n\n\n\n\nLogan\n\n\n2017\n\n\n397056"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#union-all",
    "href": "slides/2024-01-10-joins.html#union-all",
    "title": "SQL joins",
    "section": "UNION ALL",
    "text": "UNION ALL\nIf the goal is to include duplicates across two tables, use UNION ALL instead of UNION.\nLet’s say that the first table is all movies with production year after 2012 and number of votes greater than 500,000. The second table is movies with production year equal to 2015 and number of votes greater than 400,000.\nThe Martian would be in both tables."
  },
  {
    "objectID": "slides/2024-01-10-joins.html#union-all-1",
    "href": "slides/2024-01-10-joins.html#union-all-1",
    "title": "SQL joins",
    "section": "UNION ALL",
    "text": "UNION ALL\nWith just UNION\n\n(SELECT t.title,\n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year &gt; 2012  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 500000)\n\nUNION\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 400000)\nORDER BY production_year DESC, num_votes;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\ntitle\n\n\nproduction_year\n\n\nnum_votes\n\n\n\n\n\n\nBatman v Superman: Dawn of Justice\n\n\n2016\n\n\n500037\n\n\n\n\nDeadpool\n\n\n2016\n\n\n673887\n\n\n\n\nInside Out\n\n\n2015\n\n\n443051\n\n\n\n\nJurassic World\n\n\n2015\n\n\n471237\n\n\n\n\nThe Revenant\n\n\n2015\n\n\n526189\n\n\n\n\nAvengers: Age of Ultron\n\n\n2015\n\n\n540606\n\n\n\n\nThe Martian\n\n\n2015\n\n\n583987\n\n\n\n\nMad Max: Fury Road\n\n\n2015\n\n\n666484\n\n\n\n\nStar Wars: Episode VII - The Force Awakens\n\n\n2015\n\n\n691691\n\n\n\n\nInterstellar\n\n\n2014\n\n\n1102826"
  },
  {
    "objectID": "slides/2024-01-10-joins.html#union-all-2",
    "href": "slides/2024-01-10-joins.html#union-all-2",
    "title": "SQL joins",
    "section": "UNION ALL",
    "text": "UNION ALL\nWhen UNION ALL is applied, The Martian is listed twice in the results table.\n\n(SELECT t.title,\n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year &gt; 2012  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 500000)\n\nUNION ALL\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 400000)\nORDER BY production_year DESC, num_votes;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\ntitle\n\n\nproduction_year\n\n\nnum_votes\n\n\n\n\n\n\nBatman v Superman: Dawn of Justice\n\n\n2016\n\n\n500037\n\n\n\n\nDeadpool\n\n\n2016\n\n\n673887\n\n\n\n\nInside Out\n\n\n2015\n\n\n443051\n\n\n\n\nJurassic World\n\n\n2015\n\n\n471237\n\n\n\n\nThe Revenant\n\n\n2015\n\n\n526189\n\n\n\n\nThe Revenant\n\n\n2015\n\n\n526189\n\n\n\n\nAvengers: Age of Ultron\n\n\n2015\n\n\n540606\n\n\n\n\nAvengers: Age of Ultron\n\n\n2015\n\n\n540606\n\n\n\n\nThe Martian\n\n\n2015\n\n\n583987\n\n\n\n\nThe Martian\n\n\n2015\n\n\n583987"
  },
  {
    "objectID": "handout/lab3_joins_sds261_j24.html#advice-for-turning-in-the-assignment",
    "href": "handout/lab3_joins_sds261_j24.html#advice-for-turning-in-the-assignment",
    "title": "Lab 3 - SQL joins",
    "section": "Advice for turning in the assignment",
    "text": "Advice for turning in the assignment\n\nBe sure to indicate (in the .sql file) which problem is being answered with which SQL code. Use the following syntax to comment within a .sql file: /* here is where comments go */. Indeed, feel free to copy the question into the .sql file so that you have it for your own records.\nsave the .Rproj file somewhere you can find it. Don’t keep everything in your downloads folder. Maybe make a folder called SDS261 or something. That folder could live on your Desktop. Or maybe in your Dropbox.\nThe SQL document should be saved in the R Project as lab3-sds261-yourlastname-yourfirstname.sql. You will have to navigate to the R Project to save the DBeaver file in the correct place.\nConnect to the yelp database, which contains the businesses, reviews, and users tables. See README file for connection details.\n\n\nSHOW TABLES;\n\n\n3 records\n\n\nTables_in_yelp\n\n\n\n\nbusinesses\n\n\nreviews\n\n\nusers"
  },
  {
    "objectID": "handout/lab3_joins_sds261_j24.html#assignment",
    "href": "handout/lab3_joins_sds261_j24.html#assignment",
    "title": "Lab 3 - SQL joins",
    "section": "Assignment",
    "text": "Assignment\n\nFor each of the three tables in the yelp database, identify the number of records and the variables. (That means, write at least a sentence for each table.)\n\n\nFind the user with the most reviews. What is the person’s name, and how many reviews did they make?\n\n\nWhat cities are represented in the businesses table? Find out by querying the number of businesses per city. Use LIMIT to start, just in case there are hundreds of cities. Write down a few of the city names. Do you notice anything interesting?\n\n\nFind the businesses in “Carefree” (a city in Arizona). Write down the names of a few of the businesses.\n\n\nCount the number of records resulting when the query connects the users with the reviews using a JOIN. How many records are there? What does that tell you about the two tables?\n\n\nHow many users wrote reviews in the reviews table but do not exist in the users table. Hint: use a RIGHT JOIN to keep all the reviews, and then look for the rows where the user_id from the users table IS NULL.\n\n\nWrite a query to ask a question that you think is interesting and uses at least one join. Provide both the question (in words) as well as the SQL code and results."
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#proper-times-and-dates",
    "href": "slides/2024-01-11-regex1.html#proper-times-and-dates",
    "title": "Regular Expressions I",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch dates like 01/15/24 and also like 01.15.24 and like 01-15-24.\n\n\nstring &lt;- c(\"01/15/24\", \"01.15.24\", \"01-15-24\", \"011524\", \n            \"January 15, 2024\")"
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#proper-times-and-dates-1",
    "href": "slides/2024-01-11-regex1.html#proper-times-and-dates-1",
    "title": "Regular Expressions I",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch dates like 01/15/24 and also like 01.15.24 and like 01-15-24.\n\n\nstring &lt;- c(\"01/15/24\", \"01.15.24\", \"01-15-24\", \"01 15 24\", \n            \"011524\", \"January 15, 2024\")\n\nstr_extract(string, \"\\\\d\\\\d.\\\\d\\\\d.\\\\d\\\\d\")\n\n[1] \"01/15/24\" \"01.15.24\" \"01-15-24\" \"01 15 24\" NA         NA        \n\nstr_extract(string, \"\\\\d\\\\d[/.\\\\-]\\\\d\\\\d[/.\\\\-]\\\\d\\\\d\")\n\n[1] \"01/15/24\" \"01.15.24\" \"01-15-24\" NA         NA         NA        \n\nstr_extract(string, \"\\\\d{2}[/.\\\\-]\\\\d{2}[/.\\\\-]\\\\d{2}\")\n\n[1] \"01/15/24\" \"01.15.24\" \"01-15-24\" NA         NA         NA"
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#proper-times-and-dates-2",
    "href": "slides/2024-01-11-regex1.html#proper-times-and-dates-2",
    "title": "Regular Expressions I",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch a time of day such as “9:17 am” or “12:30 pm”. Require that the time be a valid time (not “99:99 pm”). Assume no leading zeros (i.e., “09:17 am”).\n\n\nstring &lt;- c(\"9:17 am\", \"12:30 pm\", \"99:99 pm\", \"09:17 am\")"
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#proper-times-and-dates-3",
    "href": "slides/2024-01-11-regex1.html#proper-times-and-dates-3",
    "title": "Regular Expressions I",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch a time of day such as “9:17 am” or “12:30 pm”. Require that the time be a valid time (not “99:99 pm”). Assume no leading zeros (i.e., “09:17 am”).\n\n^(1[012]|[1-9]):[0-5][0-9] (am|pm)$\n\nstring &lt;- c(\"9:17 am\", \"12:30 pm\", \"99:99 pm\", \"09:17 am\")\n\nstr_extract(string, \"(1[012]|[1-9]):[0-5][0-9] (am|pm)\")\n\n[1] \"9:17 am\"  \"12:30 pm\" NA         \"9:17 am\" \n\nstr_extract(string, \"^(1[012]|[1-9]):[0-5][0-9] (am|pm)$\")\n\n[1] \"9:17 am\"  \"12:30 pm\" NA         NA"
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#alternation-operator",
    "href": "slides/2024-01-11-regex1.html#alternation-operator",
    "title": "Regular Expressions I",
    "section": "Alternation operator",
    "text": "Alternation operator\nThe “or” operator, | has the lowest precedence and parentheses have the highest precedence, which means that parentheses get evaluated before “or”.\n\nWhat is the difference between \\bMary|Jane|Sue\\b and \\b(Mary|Jane|Sue)\\b?\n\n\nstring &lt;- c(\"Mary\", \"Mar\", \"Janet\", \"jane\", \"Susan\", \"Sue\")\n\nstr_extract(string, \"\\\\bMary|Jane|Sue\\\\b\")\nstr_extract(string, \"\\\\b(Mary|Jane|Sue)\\\\b\")"
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#alternation-operator-1",
    "href": "slides/2024-01-11-regex1.html#alternation-operator-1",
    "title": "Regular Expressions I",
    "section": "Alternation operator",
    "text": "Alternation operator\nThe “or” operator, | has the lowest precedence and parentheses have the highest precedence, which means that parentheses get evaluated before “or”.\n\nWhat is the difference between \\bMary|Jane|Sue\\b and \\b(Mary|Jane|Sue)\\b?\n\n\nstring &lt;- c(\"Mary\", \"Mar\", \"Janet\", \"jane\", \"Susan\", \"Sue\")\n\nstr_extract(string, \"\\\\bMary|Jane|Sue\\\\b\")\n\n[1] \"Mary\" NA     \"Jane\" NA     NA     \"Sue\" \n\nstr_extract(string, \"\\\\b(Mary|Jane|Sue)\\\\b\")\n\n[1] \"Mary\" NA     NA     NA     NA     \"Sue\""
  },
  {
    "objectID": "handout/lab4_regex_sds261_j24.html#advice-for-turning-in-the-assignment",
    "href": "handout/lab4_regex_sds261_j24.html#advice-for-turning-in-the-assignment",
    "title": "Lab 4 - regular expressions",
    "section": "Advice for turning in the assignment",
    "text": "Advice for turning in the assignment\n\nBe sure to indicate (in the .qmd file) which problem is being answered with which code. A sentence or two with each response goes a long way toward your understanding!\nsave the .Rproj file somewhere you can find it. Don’t keep everything in your downloads folder. Maybe make a folder called SDS261 or something. That folder could live on your Desktop. Or maybe in your Dropbox.\nThe .qmd document should be saved in the R Project as lab4-sds261-yourlastname-yourfirstname.qmd.\n\n\nExample: Let’s say that I want to test whether the string contains a US zip code (of the format: xxxxx or xxxxx-xxxx). I might want to test it against a particular string.\n\nstring_zip &lt;- c(\"01063-6302\", \"91711\", \"6302\", \"01063\", \"zip 01063\")\n\nI would use the str_extract() function (in the stringr package) to test whether my regular expression is correct.\n\nstr_extract(string_zip, \"^\\\\d{5}(-\\\\d{4})?$\")\n\n[1] \"01063-6302\" \"91711\"      NA           \"01063\"      NA          \n\n\nDepending on how strict I was being, I might have kept the last one by leaving out the starting and ending positioning.\n\nstr_extract(string_zip, \"\\\\d{5}(-\\\\d{4})?\")\n\n[1] \"01063-6302\" \"91711\"      NA           \"01063\"      \"01063\"     \n\n\nNote that in R, \\d needs to be escaped to \\\\d. That’s true with any metacharacter which uses a backslash."
  },
  {
    "objectID": "handout/lab3_joins_sds261_j24_sol.html#advice-for-turning-in-the-assignment",
    "href": "handout/lab3_joins_sds261_j24_sol.html#advice-for-turning-in-the-assignment",
    "title": "Lab 3 - SQL joins",
    "section": "Advice for turning in the assignment",
    "text": "Advice for turning in the assignment\n\nBe sure to indicate (in the .sql file) which problem is being answered with which SQL code. Use the following syntax to comment within a .sql file: /* here is where comments go */. Indeed, feel free to copy the question into the .sql file so that you have it for your own records.\nsave the .Rproj file somewhere you can find it. Don’t keep everything in your downloads folder. Maybe make a folder called SDS261 or something. That folder could live on your Desktop. Or maybe in your Dropbox.\nThe SQL document should be saved in the R Project as lab3-sds261-yourlastname-yourfirstname.sql. You will have to navigate to the R Project to save the DBeaver file in the correct place.\nConnect to the yelp database, which contains the businesses, reviews, and users tables. See README file for connection details.\n\n\nSHOW TABLES;\n\n\n3 records\n\n\nTables_in_yelp\n\n\n\n\nbusinesses\n\n\nreviews\n\n\nusers"
  },
  {
    "objectID": "handout/lab3_joins_sds261_j24_sol.html#assignment",
    "href": "handout/lab3_joins_sds261_j24_sol.html#assignment",
    "title": "Lab 3 - SQL joins",
    "section": "Assignment",
    "text": "Assignment\n\nFor each of the three tables in the yelp database, identify the number of records and the variables. (That means, write at least a sentence for each table.)\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT * FROM businesses LIMIT 0, 5;\n\n\n5 records\n\n\n\n\n\n\n\n\n\n\n\n\nid\nname\nstars\nopen\nreview_count\ncity\nlongitude\nlatitude\n\n\n\n\nrncjoVoEFUJGCUoC1JgnUA\nPeoria Income Tax Service\n5\nTRUE\n3\nPeoria\n-112.2416\n33.58187\n\n\n0FNFSzCFP_rGUoJx8W7tJg\nBike Doctor\n5\nTRUE\n5\nPhoenix\n-112.1059\n33.60405\n\n\n3f_lyB6vFK48ukH6ScvLHg\nValley Permaculture Alliance\n5\nTRUE\n4\nPhoenix\n-112.0739\n33.46053\n\n\nusAsSV36QmUej8–yvN-dg\nFood City\n4\nTRUE\n5\nPhoenix\n-112.0854\n33.39221\n\n\nPzOqRohWw7F7YEPBz6AubA\nHot Bagels & Deli\n4\nTRUE\n14\nGlendale Az\n-112.2003\n33.71280\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT * FROM reviews LIMIT 0, 5;\n\n\n5 records\n\n\nbusiness_id\nuser_id\nstars\n\n\n\n\n9yKzy9PApeiPPOUJEtnvkg\nrLtl8ZkDX5vH5nAx9C3q5Q\n5\n\n\nZRJwVLyzEJq1VAihDhYiow\n0a2KyEL0d3Yb1V6aivbIuQ\n5\n\n\n6oRAC4uyJCsJl1X0WZpVSA\n0hT2KtfLiobPvh6cDC8JQg\n4\n\n\n_1QQZuf4zZOyFCvXc0o6Vg\nuZetl9T0NcROGOyFfughhg\n5\n\n\n6ozycU1RpktNG2-1BroVtw\nvYmM4KTsC8ZfQBg-j5MWkw\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT * FROM users LIMIT 0, 5;\n\n\n5 records\n\n\nuser_id\nname\naverage_stars\nreview_count\n\n\n\n\nCR2y7yEm4X035ZMzrTtN9Q\nJim\n5\n6\n\n\n_9GXoHhdxc30ujPaQwh6Ew\nKelle\n1\n2\n\n\n8mM-nqxjg6pT04kwcjMbsw\nStephanie\n5\n2\n\n\nCh6CdTR2IVaVANr-RglMOg\nT\n5\n2\n\n\nNZrLmHRyiHmyT1JrfzkCOA\nBeth\n1\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT COUNT(*) FROM businesses;\n\n\n1 records\n\n\nCOUNT(*)\n\n\n\n\n11537\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT COUNT(*) FROM reviews;\n\n\n1 records\n\n\nCOUNT(*)\n\n\n\n\n229907\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT COUNT(*) FROM users;\n\n\n1 records\n\n\nCOUNT(*)\n\n\n\n\n43873\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nbusinesses: 11,537 records with variables of id, name, stars, open, review_count, city, longitude, latitude\nreviews: 229,907 records with variables of business_id, user_id, stars\nusers: 43,873 records with variables of user_id, name, average_stars, review_count\n\n\n\n\n\nFind the user with the most reviews. What is the person’s name, and how many reviews did they make?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT user_id, name, average_stars, review_count\nFROM users\nORDER BY review_count DESC\nLIMIT 0, 5;\n\n\n5 records\n\n\nuser_id\nname\naverage_stars\nreview_count\n\n\n\n\nAIVQg9enGug5woxehjmlGg\nKim\n3.77\n5807\n\n\n6HBnx7fTfFlpWyez_P55xA\nKaren\n3.63\n2848\n\n\n7FuLnS_-b79GG-33mwLaMg\nAndrew\n3.64\n2810\n\n\nlxZSVeJz6KEBW1nlA3JKJg\nShiho\n3.84\n2760\n\n\nqbfQRHLvZk5WSkKY0l_lMw\nStephy\n3.87\n2587\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nKim has the most reviews (5,807 reviews!) with an average rating of 3.77 stars.\n\n\n\n\n\nWhat cities are represented in the businesses table? Find out by querying the number of businesses per city. Use LIMIT to start, just in case there are hundreds of cities. Write down a few of the city names. Do you notice anything interesting?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT COUNT(*), city\nFROM businesses\nGROUP BY city\nORDER BY city\nLIMIT 0, 100;\n\n\nDisplaying records 1 - 10\n\n\nCOUNT(*)\ncity\n\n\n\n\n4\nAhwatukee\n\n\n34\nAnthem\n\n\n46\nApache Junction\n\n\n129\nAvondale\n\n\n31\nBuckeye\n\n\n20\nCarefree\n\n\n48\nCasa Grande\n\n\n65\nCave Creek\n\n\n865\nChandler\n\n\n1\nCharleston\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nThere appear to be cities in Phoenix as well as in Pheonix (??). And a few of the city names include the AZ to indicate that they are in Arizona. Before really working with the data, we would want to clean up the city names.\n\n\n\n\n\nFind the businesses in “Carefree” (a city in Arizona). Write down the names of a few of the businesses.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT id, name, stars, open, review_count, city\nFROM businesses\nWHERE city = \"Carefree\"\nLIMIT 0, 50;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\nid\nname\nstars\nopen\nreview_count\ncity\n\n\n\n\nK0v87iFgB3sXSzw6e-BJ5w\nAZ Wine Company\n5\nTRUE\n8\nCarefree\n\n\nnZ0mUQEdez-CHrykD2nNLA\nCarefree Resort & Conference Center\n3\nTRUE\n30\nCarefree\n\n\nc4FLMLP7hMnAbSiW2o_o3A\nSaguaro Grille\n3\nFALSE\n5\nCarefree\n\n\nQygMZmPO8A6OaJYO2a0pnw\nStudio C Hair Salon\n5\nTRUE\n3\nCarefree\n\n\nZ85BGr-jnEWvoI4xAnoh3g\nLowe’s Home Improvement Warehouse of Phoenix\n4\nTRUE\n6\nCarefree\n\n\nSahvCnFp3OvUVZIAYCyckw\n34 Easy St\n4\nFALSE\n3\nCarefree\n\n\njdStuaC_1leN_DNGcQ0yEw\nLatilla\n5\nFALSE\n5\nCarefree\n\n\nAwUMl0PT3mdkPS7huzEUYQ\nBalloon Festival\n1\nTRUE\n4\nCarefree\n\n\nMHPXDXVE_cUYodfPhkadeQ\nBlack Mountain Coffee Shop\n4\nTRUE\n11\nCarefree\n\n\nOvlAlAkiyyCILkq-TylBWg\nThe Sundial Cafe\n3\nTRUE\n7\nCarefree\n\n\n\n\n\n\n\n\n\nCount the number of records resulting when the query connects the users with the reviews using a JOIN. How many records are there? What does that tell you about the two tables?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT COUNT(*)\nFROM users\nJOIN reviews ON users.user_id = reviews.user_id\nLIMIT 0, 100;\n\n\n1 records\n\n\nCOUNT(*)\n\n\n\n\n215879\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nBecause there are fewer records in the join, we know that some reviews were done by users that are not in the users table.\n\n\n\n\n\nHow many users wrote reviews in the reviews table but do not exist in the users table. Hint: use a RIGHT JOIN to keep all the reviews, and then look for the rows where the user_id from the users table IS NULL.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT COUNT(DISTINCT reviews.user_id)\nFROM users\nRIGHT JOIN reviews ON users.user_id = reviews.user_id\nWHERE users.user_id IS NULL;\n\n\n1 records\n\n\nCOUNT(DISTINCT reviews.user_id)\n\n\n\n\n2108\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nThere are 2,108 users who wrote 14,028 reviews and who are not in the users table.\n\n\n\n\n\nWrite a query to ask a question that you think is interesting and uses at least one join. Provide both the question (in words) as well as the SQL code and results."
  },
  {
    "objectID": "handout/lab4_regex_sds261_j24.html#assignment",
    "href": "handout/lab4_regex_sds261_j24.html#assignment",
    "title": "Lab 4 - regular expressions",
    "section": "Assignment",
    "text": "Assignment\n\nGo through the lessons in https://regexone.com/. Nothing to turn in.\nCatch all of the instances of the words color or colour, case insensitive. Test on the given string.\n\n\nstring &lt;- c(\"color\", \"colour\", \"Color\", \"Colour\", \"Colr\", \"cols\")\n\n\n\nMatch any number (including zero) of o’s, as in: ggle, gogle, google, gooogle, …\nMatch at least one o, as in: gogle, google, gooogle, …\n\n\nTest on the given string.\n\nstring &lt;- c(\"ggle\", \"gogle\", \"google\", \"gooogle\", \"goooogle\", \"gooooogle\")\n\n\nValidate dates which are in the format mm/dd/yy or mm/dd/yyyy. Allow for any digits for the values (e.g., month could be 47). As an extra challenge, try to make the numerical values realistic (e.g., months only between 01 and 12). Test on the given string.\n\n\nstring_date &lt;- c(\"01/11/2024\", \"1/11/2024\", \"1/1/24\", \"01/11/24\", \"24/01/4700\" )\n\n\nCheck a command line response so that true, t, yes, y, okay, ok, and 1 are all accepted in any combination of uppercase and lowercase. Test on the given string.\n\n\nstr_affirm &lt;- c(\"true\", \"t\", \"yes\", \"y\", \"okay\", \"ok\", \"1\", \"tRUe\", \"TRUE\", \"T\",\n               \"YES!\", \"yeS\", \"okay...\", \"sure\", \"maybe\")\n\n\nMatch numbers that use the comma as the thousands separator and the dot as the decimal separator. Test on the given string.\n\n\nstring_number &lt;- c(\"12345\", \"12,345\", \"123.45\", \"1,234,567.890\", \"12,345.\")\n\n\nDetermine whether a user entered a North American phone number in a common format, including the local area code. Common formats include 1234567890, 123-456-7890, 123.456.7890, 123 456 7890, (123) 456 7890, and all related combinations. Test on the given string.\n\n\nstring_phone &lt;- c(\"1234567890\", \"1234\", \"456-7890\", \"123-456-7890\", \"123.456.7890\", \"123 456 7890\", \"(123) 456 7890\", \"+1 (123) 456 789\")\n\n\nFind all words that occur inside an html emphasis tag (&lt;em&gt; and &lt;/em&gt;). Test on the given string. (After Friday’s class.)\n\n\nstring_emph &lt;- c(\"&lt;p&gt;&lt;strong&gt;Pellentesque habitant morbi tristique&lt;/strong&gt; senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. &lt;em&gt;Aenean ultricies mi vitae est.&lt;/em&gt; Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, &lt;code&gt;commodo vitae&lt;/code&gt;, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. &lt;a href='#'&gt;Donec non enim&lt;/a&gt; in turpis pulvinar facilisis. Ut felis.&lt;/p&gt;\")"
  },
  {
    "objectID": "handout/lab4_regex_sds261_j24_sol.html",
    "href": "handout/lab4_regex_sds261_j24_sol.html",
    "title": "Lab 4 - regular expressions",
    "section": "",
    "text": "library(tidyverse)\nlibrary(stringr)\nToday’s lab will provide practice working with regular expressions in R.\nThe goals for lab 4 include:"
  },
  {
    "objectID": "handout/lab4_regex_sds261_j24_sol.html#advice-for-turning-in-the-assignment",
    "href": "handout/lab4_regex_sds261_j24_sol.html#advice-for-turning-in-the-assignment",
    "title": "Lab 4 - regular expressions",
    "section": "Advice for turning in the assignment",
    "text": "Advice for turning in the assignment\n\nBe sure to indicate (in the .qmd file) which problem is being answered with which code. A sentence or two with each response goes a long way toward your understanding!\nsave the .Rproj file somewhere you can find it. Don’t keep everything in your downloads folder. Maybe make a folder called SDS261 or something. That folder could live on your Desktop. Or maybe in your Dropbox.\nThe .qmd document should be saved in the R Project as lab4-sds261-yourlastname-yourfirstname.qmd.\n\n\nExample: Let’s say that I want to test whether the string contains a US zip code (of the format: xxxxx or xxxxx-xxxx). I might want to test it against a particular string.\n\nstring_zip &lt;- c(\"01063-6302\", \"91711\", \"6302\", \"01063\", \"zip 01063\")\n\nI would use the str_extract() function (in the stringr package) to test whether my regular expression is correct.\n\nstr_extract(string_zip, \"^\\\\d{5}(-\\\\d{4})?$\")\n\n[1] \"01063-6302\" \"91711\"      NA           \"01063\"      NA          \n\n\nDepending on how strict I was being, I might have kept the last one by leaving out the starting and ending positioning.\n\nstr_extract(string_zip, \"\\\\d{5}(-\\\\d{4})?\")\n\n[1] \"01063-6302\" \"91711\"      NA           \"01063\"      \"01063\"     \n\n\nNote that in R, \\d needs to be escaped to \\\\d. That’s true with any metacharacter which uses a backslash."
  },
  {
    "objectID": "handout/lab4_regex_sds261_j24_sol.html#assignment",
    "href": "handout/lab4_regex_sds261_j24_sol.html#assignment",
    "title": "Lab 4 - regular expressions",
    "section": "Assignment",
    "text": "Assignment\n\nGo through the lessons in https://regexone.com/. Nothing to turn in.\nCatch all of the instances of the words color or colour, case insensitive. Test on the given string.\n\n\nstring &lt;- c(\"color\", \"colour\", \"Color\", \"Colour\", \"Colr\", \"cols\")\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n# Solution\n\nstr_extract(string, \"(?i)colou?r\")\n\n[1] \"color\"  \"colour\" \"Color\"  \"Colour\" NA       NA      \n\n\n\n\n\n\n\nMatch any number (including zero) of o’s, as in: ggle, gogle, google, gooogle, …\nMatch at least one o, as in: gogle, google, gooogle, …\n\n\nTest on the given string.\n\nstring &lt;- c(\"ggle\", \"gogle\", \"google\", \"gooogle\", \"goooogle\", \"gooooogle\")\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n# Solution (a)\n\nstr_extract(string, \"go*gle\")\n\n[1] \"ggle\"      \"gogle\"     \"google\"    \"gooogle\"   \"goooogle\"  \"gooooogle\"\n\n# Solution (b)\n\nstr_extract(string, \"go+gle\")\n\n[1] NA          \"gogle\"     \"google\"    \"gooogle\"   \"goooogle\"  \"gooooogle\"\n\n\n\n\n\n\nValidate dates which are in the format mm/dd/yy or mm/dd/yyyy. Allow for any digits for the values (e.g., month could be 47). As an extra challenge, try to make the numerical values realistic (e.g., months only between 01 and 12). Test on the given string.\n\n\nstring_date &lt;- c(\"01/11/2024\", \"1/11/2024\", \"1/1/24\", \"01/11/24\", \"24/01/4700\" )\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n# Solution: \n\nstr_extract(string_date, \"^[0-1][0-9]/[0-3][0-9]/([0-9]{2})?[0-9]{2}\")\n\n[1] \"01/11/2024\" NA           NA           \"01/11/24\"   NA          \n\n# Another solution\n\nstr_extract(string_date, \"\\\\d{2}/\\\\d{2}/(\\\\d{2}|\\\\d{4})\")\n\n[1] \"01/11/20\" NA         NA         \"01/11/24\" \"24/01/47\"\n\n\n\n\n\n\nCheck a command line response so that true, t, yes, y, okay, ok, and 1 are all accepted in any combination of uppercase and lowercase. Test on the given string.\n\n\nstr_affirm &lt;- c(\"true\", \"t\", \"yes\", \"y\", \"okay\", \"ok\", \"1\", \"tRUe\", \"TRUE\", \"T\",\n               \"YES!\", \"yeS\", \"okay...\", \"sure\", \"maybe\")\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n# Solution: \n\nstr_extract(str_affirm, \"(?i)^(1|t(rue)?|y(es)?|ok(ay)?)$\")\n\n [1] \"true\" \"t\"    \"yes\"  \"y\"    \"okay\" \"ok\"   \"1\"    \"tRUe\" \"TRUE\" \"T\"   \n[11] NA     \"yeS\"  NA     NA     NA    \n\n\n\n\n\n\nMatch numbers that use the comma as the thousands separator and the dot as the decimal separator. Test on the given string.\n\n\nstring_number &lt;- c(\"12345\", \"12,345\", \"123.45\", \"1,234,567.890\", \"12,345.\")\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n# Solution: \n\nstr_extract(string_number, \"^[0-9]{1,3}(,[0-9]{3})*(\\\\.[0-9]*)?$\")\n\n[1] NA              \"12,345\"        \"123.45\"        \"1,234,567.890\"\n[5] \"12,345.\"      \n\n# or if you don't want the last number\n\nstr_extract(string_number, \"^[0-9]{1,3}(,[0-9]{3})*(\\\\.[0-9]+)?$\")\n\n[1] NA              \"12,345\"        \"123.45\"        \"1,234,567.890\"\n[5] NA             \n\n\n\n\n\n\nDetermine whether a user entered a North American phone number in a common format, including the local area code. Common formats include 1234567890, 123-456-7890, 123.456.7890, 123 456 7890, (123) 456 7890, and all related combinations. Test on the given string.\n\n\nstring_phone &lt;- c(\"1234567890\", \"1234\", \"456-7890\", \"123-456-7890\", \"123.456.7890\", \"123 456 7890\", \"(123) 456 7890\", \"+1 (123) 456 789\")\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n# Solution: \n\nstr_extract(string_phone, \"^\\\\(?([0-9]{3})\\\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$\")\n\n[1] \"1234567890\"     NA               NA               \"123-456-7890\"  \n[5] \"123.456.7890\"   \"123 456 7890\"   \"(123) 456 7890\" NA              \n\n\n\n\n\n\nFind all words that occur inside an html emphasis tag (&lt;em&gt; and &lt;/em&gt;). Test on the given string. (After Friday’s class.)\n\n\nstring_emph &lt;- c(\"&lt;p&gt;&lt;strong&gt;Pellentesque habitant morbi tristique&lt;/strong&gt; senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. &lt;em&gt;Aenean ultricies mi vitae est.&lt;/em&gt; Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, &lt;code&gt;commodo vitae&lt;/code&gt;, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. &lt;a href='#'&gt;Donec non enim&lt;/a&gt; in turpis pulvinar facilisis. Ut felis.&lt;/p&gt;\")\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n# Solution: \n\nstr_extract(string_emph, \"(?&lt;=&lt;em&gt;)[\\\\w\\\\s.]+(?=&lt;/em&gt;)\")\n\n[1] \"Aenean ultricies mi vitae est.\""
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#case-insenstive",
    "href": "slides/2024-01-11-regex1.html#case-insenstive",
    "title": "Regular Expressions I",
    "section": "Case insenstive",
    "text": "Case insenstive\n\nMatch only the word meter in “The cemetery is 1 meter from the stop sign.” Also match Meter in “The cemetery is 1 Meter from the stop sign.”"
  },
  {
    "objectID": "slides/2024-01-11-regex1.html#case-insenstive-1",
    "href": "slides/2024-01-11-regex1.html#case-insenstive-1",
    "title": "Regular Expressions I",
    "section": "Case insenstive",
    "text": "Case insenstive\n\nMatch only the word meter in “The cemetery is 1 meter from the stop sign.” Also match Meter in “The cemetery is 1 Meter from the stop sign.”\n\n\nstring &lt;- c(\"The cemetery is 1 meter from the stop sign.\", \n            \"The cemetery is 1 Meter from the stop sign.\")\n\nstr_extract(string, \"(?i)\\\\bmeter\\\\b\")\n\n[1] \"meter\" \"Meter\""
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#regular-expressions-and-sql",
    "href": "slides/2024-01-12-regex2.html#regular-expressions-and-sql",
    "title": "Regular Expressions II",
    "section": "Regular expressions and SQL",
    "text": "Regular expressions and SQL\nBack to the IMDb database…\n\nSELECT production_year, title\n  FROM title\n  WHERE kind_id = 1 AND\n        title REGEXP '(?i)star'\n  LIMIT 0, 20;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nproduction_year\n\n\ntitle\n\n\n\n\n\n\n2005\n\n\n\"Dancing with the Stars\" (I)\n\n\n\n\n2005\n\n\n\"Dancing with the Stars\" (II)\n\n\n\n\n2005\n\n\n\"Dancing with the Stars\" (III)\n\n\n\n\n2017\n\n\n\"Girl Starter\" (II)\n\n\n\n\n2001\n\n\n\"Popstars\" (I)\n\n\n\n\n2001\n\n\n\"Popstars\" (II)\n\n\n\n\n2002\n\n\n\"Popstars\" (I)\n\n\n\n\n2000\n\n\n\"Popstars\" (I)\n\n\n\n\n1959\n\n\n\"Startime\" (II)\n\n\n\n\n1959\n\n\n\"Startime\" (I)"
  },
  {
    "objectID": "slides/2024-01-12-regex2.html#course-project",
    "href": "slides/2024-01-12-regex2.html#course-project",
    "title": "Regular Expressions II",
    "section": "Course project",
    "text": "Course project\nDon’t forget, next week, each person will be working on their own mini project!\n\nUsing SQL queries and joins to wrangle complicated data tables.\nWriting regular expressions to parse observations.\nCreating a SQL database.\n\n\nemail jo.hardin@pomona.edu by Tuesday, Jan 16 with an idea of what you plan to do.\n\nQuestion of interest that you hope to address.\nHolistic description of the dataset(s) (a few sentences).\nDescription of the observational units and columns in each data table.\nFull reference for data citation.\nLink to the resources."
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#duckdb",
    "href": "slides/2024-01-16-creating-db.html#duckdb",
    "title": "Creating Databases",
    "section": "DuckDB",
    "text": "DuckDB\nDuckDB\n\nin-process database management system that runs entirely on your own computer.\nthe data live in your storage (instead of your memory).\nyou don’t have to transfer queries or results over the internet."
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#duckdb-caveat",
    "href": "slides/2024-01-16-creating-db.html#duckdb-caveat",
    "title": "Creating Databases",
    "section": "DuckDB caveat",
    "text": "DuckDB caveat\n\nthe SQL dialect used in DuckDB is slightly different from MySQL\nwrite SELECT * FROM table 10; instead of SELECT * FROM table 0, 10;\nlots of different dialects, depending on the SQL server. Always be aware of the dialect you are using."
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#duckdb-via-r",
    "href": "slides/2024-01-16-creating-db.html#duckdb-via-r",
    "title": "Creating Databases",
    "section": "DuckDB via R",
    "text": "DuckDB via R\n\ninstall.packages(\"duckdb\")  # only once, in the Console, not in the .qmd or .Rmd file\nlibrary(duckdb)             # at the top of the .qmd or .Rmd file\n\nlibrary(DBI)                # we also still need the DBI package\n\n\ncon_duckdb &lt;- DBI::dbConnect(duckdb::duckdb(),\n                             dbdir = \"duck_datab\")\n\n\nthe database has been stored to a database directory called duck_datab which lives in the current R project.\ncan’t open it like a standard folder, but it is where DuckDB stores the database files."
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#preparing-to-load-data",
    "href": "slides/2024-01-16-creating-db.html#preparing-to-load-data",
    "title": "Creating Databases",
    "section": "Preparing to load data",
    "text": "Preparing to load data\nUnlike R, when creating a new data table, SQL requires that you communicate each future variable (column) and that variable’s type. Variable types are not automatically generated!"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#saturday-night-live",
    "href": "slides/2024-01-16-creating-db.html#saturday-night-live",
    "title": "Creating Databases",
    "section": "Saturday Night Live",
    "text": "Saturday Night Live\n\nFigure 1: image credit: NBCConsider the Saturday Night Live datasets available on the snldb GitHub repo."
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#casts-table",
    "href": "slides/2024-01-16-creating-db.html#casts-table",
    "title": "Creating Databases",
    "section": "casts table",
    "text": "casts table\nUse R to understand the data from casts.csv.\n\nglimpse(casts)\n\nRows: 614\nColumns: 8\n$ aid             &lt;chr&gt; \"A. Whitney Brown\", \"A. Whitney Brown\", \"A. Whitney Br…\n$ sid             &lt;dbl&gt; 11, 12, 13, 14, 15, 16, 5, 39, 40, 41, 42, 45, 46, 21,…\n$ featured        &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, …\n$ first_epid      &lt;dbl&gt; 19860222, NA, NA, NA, NA, NA, 19800409, 20140118, NA, …\n$ last_epid       &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ update_anchor   &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE…\n$ n_episodes      &lt;dbl&gt; 8, 20, 13, 20, 20, 20, 5, 11, 21, 21, 21, 18, 17, 20, …\n$ season_fraction &lt;dbl&gt; 0.444, 1.000, 1.000, 1.000, 1.000, 1.000, 0.250, 0.524…"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#loading-data",
    "href": "slides/2024-01-16-creating-db.html#loading-data",
    "title": "Creating Databases",
    "section": "Loading data",
    "text": "Loading data\nImporting .csv files as tables, a series of steps:1\n\na USE statement that ensures we are in the right schema/database.\na series of DROP TABLE statements that drop any old tables with the same names as the ones we are going to create.\na series of CREATE TABLE statements that specify the table structures.\na series of COPY statements that read the data from the .csv files into the appropriate tables.\n\ntaken from MDSR."
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#loading-step-1-use",
    "href": "slides/2024-01-16-creating-db.html#loading-step-1-use",
    "title": "Creating Databases",
    "section": "Loading step 1, USE",
    "text": "Loading step 1, USE\nUse the (local) database that we’ve called duck_datab.\n\n```{sql}\n#| connection: con_duckdb\n\nUSE duck_datab;\n```"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#loading-step-2-refresh",
    "href": "slides/2024-01-16-creating-db.html#loading-step-2-refresh",
    "title": "Creating Databases",
    "section": "Loading step 2, refresh",
    "text": "Loading step 2, refresh\nMake sure to “refresh” the table, in case it already exists. However, be very careful with the DROP TABLE statement, as it removes the casts table.\n\nDROP TABLE IF EXISTS casts;"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#loading-step-3-create-table",
    "href": "slides/2024-01-16-creating-db.html#loading-step-3-create-table",
    "title": "Creating Databases",
    "section": "Loading step 3, CREATE TABLE",
    "text": "Loading step 3, CREATE TABLE\nCarefully define the variable types, whether or not they allow missing values, and what a default value is for that variable. Additionally, identify the key for accessing information.\n\nCREATE TABLE casts (\n  aid VARCHAR(255) NOT NULL DEFAULT '',\n  sid INTEGER NOT NULL DEFAULT 0,\n  featured BOOLEAN NOT NULL DEFAULT 'false',\n  first_epid INTEGER DEFAULT 0,\n  last_epid INTEGER DEFAULT 0,\n  update_anchor BOOLEAN NOT NULL DEFAULT 0,\n  n_episodes INTEGER NOT NULL DEFAULT 0,\n  season_fraction DECIMAL(21,20) NOT NULL DEFAULT 0,\n  PRIMARY KEY (sid, aid)\n);"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#loading-step-4-copy",
    "href": "slides/2024-01-16-creating-db.html#loading-step-4-copy",
    "title": "Creating Databases",
    "section": "Loading step 4, COPY",
    "text": "Loading step 4, COPY\nThe .csv file lives on my computer, so I load it in directly. [n.b., the statement to load in data is different in MySQL.]\n\nCOPY casts FROM 'data/casts.csv' HEADER;"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#checking-the-loading-select",
    "href": "slides/2024-01-16-creating-db.html#checking-the-loading-select",
    "title": "Creating Databases",
    "section": "Checking the loading, SELECT",
    "text": "Checking the loading, SELECT\n\nSELECT * FROM casts LIMIT 8;\n\n\n\n\n\nTable 1: After CREATE TABLE where variable types are set, the COPY command pulls the data into the table. SELECT shows us that the table is as expected.\n\n\naid\nsid\nfeatured\nfirst_epid\nlast_epid\nupdate_anchor\nn_episodes\nseason_fraction\n\n\n\n\nA. Whitney Brown\n11\nTRUE\n19860222\n\nFALSE\n8\n0.444\n\n\nA. Whitney Brown\n12\nTRUE\n\n\nFALSE\n20\n1.000\n\n\nA. Whitney Brown\n13\nTRUE\n\n\nFALSE\n13\n1.000\n\n\nA. Whitney Brown\n14\nTRUE\n\n\nFALSE\n20\n1.000\n\n\nA. Whitney Brown\n15\nTRUE\n\n\nFALSE\n20\n1.000\n\n\nA. Whitney Brown\n16\nTRUE\n\n\nFALSE\n20\n1.000\n\n\nAlan Zweibel\n5\nTRUE\n19800409\n\nFALSE\n5\n0.250\n\n\nSasheer Zamata\n39\nTRUE\n20140118\n\nFALSE\n11\n0.524"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#check-the-database",
    "href": "slides/2024-01-16-creating-db.html#check-the-database",
    "title": "Creating Databases",
    "section": "Check the database",
    "text": "Check the database\nLet’s make sure that the database exists and that the table in the database exists.\n\nSHOW DATABASES;\n\n\n\n\n1 records\n\n\n\n\ndatabase_name\n\n\n\n\n\n\nduck_datab"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#efficiencies",
    "href": "slides/2024-01-16-creating-db.html#efficiencies",
    "title": "Creating Databases",
    "section": "Efficiencies",
    "text": "Efficiencies\n\nEach library (database) has books (tables). Each book (table) has pages (rows). Each page (row) has a unique page number to identify it (key value); to find a particular page, you sort through the page numbers (key values). But it isn’t immediately obvious where the particular page of interest is, you might have to page through the book a little bit to find the page of interest. It would be easier if you had several bookmarks throughout the book to anchor some of the page numbers. For example, if you want page 1047 and you have a bookmark on page 1050, you only have to turn back three pages. The bookmark is an index, it helps you find the desired rows much more quickly.1\n\nAnalogy taken from: https://www.quora.com/profile/Lara-Mazilu"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#key",
    "href": "slides/2024-01-16-creating-db.html#key",
    "title": "Creating Databases",
    "section": "Key",
    "text": "Key\nKeys are unique identifiers for each row, used primarily for connecting tables. Keys are generally not helpful for efficiency, but they are important for data integrity and relationships between tables.\n\nPRIMARY KEY is a column or set of columns that uniquely identify each row. Primary keys cannot be NULL.\nFOREIGN KEY is a column or set of columns that reference a primary key in a different table. A foreign key can be NULL."
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#index",
    "href": "slides/2024-01-16-creating-db.html#index",
    "title": "Creating Databases",
    "section": "Index",
    "text": "Index\n\nEach library (database) has books (tables). Each book (table) has pages (rows). Each page (row) has a unique page number to identify it (key value); to find a particular page, you sort through the page numbers (key values). But it isn’t immediately obvious where the particular page of interest is, you might have to page through the book a little bit to find the page of interest. It would be easier if you had several bookmarks throughout the book to anchor some of the page numbers. For example, if you want page 1047 and you have a bookmark on page 1050, you only have to turn back three pages. The bookmark is an index, it helps you find the desired rows much more quickly.1\n\nAnalogy taken from: https://www.quora.com/profile/Lara-Mazilu"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#find-keys-and-indices",
    "href": "slides/2024-01-16-creating-db.html#find-keys-and-indices",
    "title": "Creating Databases",
    "section": "Find keys and indices",
    "text": "Find keys and indices\nIn MySQL the commands SHOW KEYS and SHOW INDEXES provide information about the keys and indices for each table."
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#best-practice",
    "href": "slides/2024-01-16-creating-db.html#best-practice",
    "title": "Creating Databases",
    "section": "Best practice",
    "text": "Best practice\nIt is always a good idea to terminate the SQL connection when you are done with it.\n\ndbDisconnect(con_duckdb, shutdown = TRUE)"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#check-the-database-1",
    "href": "slides/2024-01-16-creating-db.html#check-the-database-1",
    "title": "Creating Databases",
    "section": "Check the database",
    "text": "Check the database\nLet’s make sure that the database exists and that the table in the database exists.\n\nSHOW TABLES;\n\n\n\n\n1 records\n\n\n\n\nname\n\n\n\n\n\n\ncasts"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#check-the-database-2",
    "href": "slides/2024-01-16-creating-db.html#check-the-database-2",
    "title": "Creating Databases",
    "section": "Check the database",
    "text": "Check the database\nLet’s make sure that the database exists and that the table in the database exists.\n\nDESCRIBE casts;\n\n\n\n\n\nTable 2: DESCRIBE variables in the casts table.\n\n\ncolumn_name\ncolumn_type\nnull\nkey\ndefault\nextra\n\n\n\n\naid\nVARCHAR\nNO\nPRI\n''\n\n\n\nsid\nINTEGER\nNO\nPRI\n0\n\n\n\nfeatured\nBOOLEAN\nNO\n\n'false'\n\n\n\nfirst_epid\nINTEGER\nYES\n\n0\n\n\n\nlast_epid\nINTEGER\nYES\n\n0\n\n\n\nupdate_anchor\nBOOLEAN\nNO\n\n0\n\n\n\nn_episodes\nINTEGER\nNO\n\n0\n\n\n\nseason_fraction\nDECIMAL(21,20)\nNO\n\n0"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#partitioning",
    "href": "slides/2024-01-16-creating-db.html#partitioning",
    "title": "Creating Databases",
    "section": "Partitioning",
    "text": "Partitioning\nAnother way to speed up query retrievals is to partition the data tables. If, for example, the SNL queries were always done by year, then the episodes table could be partitioned such that they are stored as separate tables (one per year). The partitioning functions as an index on year. The user would not be able to tell the difference between the unpartitioned episodes table and the partitioned one. Queries done by year would be faster. Queries done grouped in another way would be slower."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#a-null-example",
    "href": "slides/2024-01-09-clauses.html#a-null-example",
    "title": "SQL clauses",
    "section": "A NULL example",
    "text": "A NULL example\nThe logic of NULL:1\n\nIf you do anything with NULL, you’ll just get NULL. For instance if \\(x\\) is NULL, then \\(x &gt; 3\\), \\(1 = x\\), and \\(x + 4\\) all evaluate to NULL. Even \\(x =\\) NULL evaluates to NULL! if you want to check whether \\(x\\) is NULL, use x IS NULL or x IS NOT NULL.\nNULL short-circuits with boolean operators. That means a boolean expression involving NULL will evaluate to:\n\nTRUE, if it’d evaluate to TRUE regardless of whether the NULL value is really TRUE or FALSE.\nFALSE, if it’d evaluate to FALSE regardless of whether the NULL value is really TRUE or FALSE.\nOr NULL, if it depends on the NULL value.\n\n\ntaken from: https://cs186berkeley.net/notes/note1/#filtering-null-values"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#a-null-example-1",
    "href": "slides/2024-01-09-clauses.html#a-null-example-1",
    "title": "SQL clauses",
    "section": "A NULL example",
    "text": "A NULL example\nConsider the following table and SQL query to evaluate WHERE age &lt;= 20 OR num_dogs = 3:\n\nSELECT * FROM (\n   SELECT 'Ace' AS name, 20 AS age, 4 as num_dogs\n   UNION\n   SELECT 'Ada' AS name, NULL AS age, 3 as num_dogs   \n   UNION\n   SELECT 'Ben' AS name, NULL AS age, NULL as num_dogs\n   UNION\n   SELECT 'Cho' AS name, 27 AS age, NULL as num_dogs\n   ) AS temptable;\n\n\n\n\n4 records\n\n\n\n\nname\n\n\nage\n\n\nnum_dogs\n\n\n\n\n\n\nAce\n\n\n20\n\n\n4\n\n\n\n\nAda\n\n\n\n\n3\n\n\n\n\nBen\n\n\n\n\n\n\n\n\nCho\n\n\n27"
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#a-null-example-2",
    "href": "slides/2024-01-09-clauses.html#a-null-example-2",
    "title": "SQL clauses",
    "section": "A NULL example",
    "text": "A NULL example\nWhere does the WHERE clause do? It tells us that we only want to keep the rows satisfying the age &lt;= 20 OR num_dogs = 3. Let’s consider each row one at a time:\n\nFor Ace, age &lt;= 20 evaluates to TRUE so the claim is satisfied.\nFor Ada, age &lt;= 20 evaluates to NULL but num_dogs = 3 evaluates to TRUE so the claim is satisfied.\nFor Ben, age &lt;= 20 evaluates to NULL and num_dogs = 3 evaluates to NULL so the overall expression is NULL which has a FALSE value.\nFor Cho, age &lt;= 20 evaluates to FALSE and num_dogs = 3 evaluates to NULL so the overall expression evaluates to NULL (because it depends on the value of the NULL).\n\nThus we keep only Ace and Ada."
  },
  {
    "objectID": "slides/2024-01-09-clauses.html#a-null-example-3",
    "href": "slides/2024-01-09-clauses.html#a-null-example-3",
    "title": "SQL clauses",
    "section": "A NULL example",
    "text": "A NULL example\n\nSELECT * FROM (\n   SELECT 'Ace' AS name, 20 AS age, 4 as num_dogs\n   UNION\n   SELECT 'Ada' AS name, NULL AS age, 3 as num_dogs   \n   UNION\n   SELECT 'Ben' AS name, NULL AS age, NULL as num_dogs\n   UNION\n   SELECT 'Cho' AS name, 27 AS age, NULL as num_dogs\n   ) AS temptable\nWHERE age &lt;= 20 OR num_dogs = 3;\n\n\n\n\n2 records\n\n\n\n\nname\n\n\nage\n\n\nnum_dogs\n\n\n\n\n\n\nAce\n\n\n20\n\n\n4\n\n\n\n\nAda\n\n\n\n\n3"
  },
  {
    "objectID": "handout/lab5_creating_db_sds261_j24.html",
    "href": "handout/lab5_creating_db_sds261_j24.html",
    "title": "Lab 5 - creating databases",
    "section": "",
    "text": "Today’s lab will provide practice working with creating SQL databases using DuckDB.\nThe goals for lab 5 include:"
  },
  {
    "objectID": "handout/lab5_creating_db_sds261_j24.html#advice-for-turning-in-the-assignment",
    "href": "handout/lab5_creating_db_sds261_j24.html#advice-for-turning-in-the-assignment",
    "title": "Lab 5 - creating databases",
    "section": "Advice for turning in the assignment",
    "text": "Advice for turning in the assignment\n\nBe sure to indicate (in the .qmd file) which problem is being answered with which code. A sentence or two with each response goes a long way toward your understanding!\nsave the .Rproj file somewhere you can find it. Don’t keep everything in your downloads folder. Maybe make a folder called SDS261 or something. That folder could live on your Desktop. Or maybe in your Dropbox.\nThe .qmd document should be saved in the R Project as lab5-sds261-yourlastname-yourfirstname.qmd.\nSet up a connection to a database of your naming using DuckDB.\n\n\ncon_college &lt;- DBI::dbConnect(duckdb::duckdb(),\n                             dbdir = \"you_name_the_db\")"
  },
  {
    "objectID": "handout/lab5_creating_db_sds261_j24.html#assignment",
    "href": "handout/lab5_creating_db_sds261_j24.html#assignment",
    "title": "Lab 5 - creating databases",
    "section": "Assignment",
    "text": "Assignment\nThe data we will work with today is on college tuition, pay, and diversity. The original data source is the US Department of Education, but it has been compiled as part of TidyTuesday on March 10, 2020. Tuition and fees are for 2018-19. Diversity is for 2014.\n\nDownload the data onto your own computer. In the interest of time, let’s only use three tables: tuition_cost and salary_potential and diversity_school.\n\n\nFollow the first two steps in the notes: USE and DROP TABLE.\n\n\nFor each of the three tables, in the CREATE TABLE operation, carefully define variable types and identify any key variables. Unfortunately, FOREIGN KEYs don’t work here because there is not referential integrity across the tables.\n\n\nUse COPY to load the data from your computer. (Hint: if there is an NA value, SQL doesn’t know that it is actually NULL and wants the variable to be loaded as a character string.)\n\n\nUse SELECT * (with a LIMIT!) to make sure all three tables loaded correctly.\n\n\nAdd an INDEX to the tuition table on state. We won’t discuss until Thursday, but state is better than state_code because state allows you to join with other tables. state is better than type or degree_length because state has a much higher cardinality."
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html",
    "href": "slides/2024-01-16-creating-db.html",
    "title": "Creating Databases",
    "section": "",
    "text": "DuckDB\n\nin-process database management system that runs entirely on your own computer.\nthe data live in your storage (instead of your memory).\nyou don’t have to transfer queries or results over the internet."
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#footnotes",
    "href": "slides/2024-01-16-creating-db.html#footnotes",
    "title": "Creating Databases",
    "section": "Footnotes",
    "text": "Footnotes\n\n\ntaken from MDSR.↩︎"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html",
    "href": "slides/2024-01-17-editing-db.html",
    "title": "Editing Databases",
    "section": "",
    "text": "We will continue to use DuckDB so that we have write access to the files we want to edit.\n\ncon_duckdb &lt;- DBI::dbConnect(duckdb::duckdb(),\n                             dbdir = \"duck_datab\")\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: image credit: NBC\n\n\n\n\n\nConsider the Saturday Night Live datasets available on the snldb GitHub repo.\n\n\n\nThe UPDATE function allows you to change a value in a table across all rows that match a certain criteria.\n\nSELECT * FROM impressions \n   WHERE name LIKE 'Ivanka%';\n\n\n5 records\n\n\nimpid\naid\nname\n\n\n\n\n2598\nScarlett Johansson\nIvanka Trump\n\n\n3716\nEmily Blunt\nIvanka Trump\n\n\n3694\nMargot Robbie\nIvanka Trump\n\n\n3679\nVanessa Bayer\nIvanka Trump\n\n\n2340\nMaya Rudolph\nIvanka Trump\n\n\n\n\n\n\n\n\nFor funsies, let’s change Ivanka Trump to Ivanka Kushner.\n\nUPDATE impressions\n   SET name = 'Ivanka Kushner'\n   WHERE name LIKE 'Ivanka%';\n\n\nSELECT * FROM impressions \n   WHERE name LIKE 'Ivanka%';\n\n\n5 records\n\n\nimpid\naid\nname\n\n\n\n\n2598\nScarlett Johansson\nIvanka Kushner\n\n\n3716\nEmily Blunt\nIvanka Kushner\n\n\n3694\nMargot Robbie\nIvanka Kushner\n\n\n3679\nVanessa Bayer\nIvanka Kushner\n\n\n2340\nMaya Rudolph\nIvanka Kushner\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Watch out!\n\n\n\nBe careful with UPDATE. A careless UPDATE could write over all of the data in your table. There is no undo function.\n\n\n\n\n\nTask: include recent hosts in the hosts table.\nBy searching the SNL archives, we can see that the next host, chronologically was Elon Musk on May 8, 2021.\n\n\n\n\n\n\n\n\nFigure 2: Hosts information from snlarchives.net\n\n\n\n\n\n\n\n\nTask: include recent hosts in the hosts table.\nBy searching the SNL archives, we can see that the next host, chronologically was Elon Musk on May 8, 2021.\n\nSELECT * FROM hosts\n    ORDER BY epid DESC\n    LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\nepid\naid\n\n\n\n\n20210410\nCarey Mulligan\n\n\n20210403\nDaniel Kaluuya\n\n\n20210327\nMaya Rudolph\n\n\n20210227\nNick Jonas\n\n\n20210220\nRege-Jean Page\n\n\n20210213\nRegina King\n\n\n20210206\nDan Levy\n\n\n20210130\nJohn Krasinski\n\n\n20201219\nKristen Wiig\n\n\n20201212\nTimothee Chalamet\n\n\n\n\n\n\n\n\nINSERT allows us to add the relevant information associated with the episode of SNL that Elon Musk hosted.\n\nINSERT INTO hosts (epid, aid)\n   VALUES ('20210508', 'Elon Musk');\n\n\nSELECT * FROM hosts\n    ORDER BY epid DESC\n    LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\nepid\naid\n\n\n\n\n20210508\nElon Musk\n\n\n20210410\nCarey Mulligan\n\n\n20210403\nDaniel Kaluuya\n\n\n20210327\nMaya Rudolph\n\n\n20210227\nNick Jonas\n\n\n20210220\nRege-Jean Page\n\n\n20210213\nRegina King\n\n\n20210206\nDan Levy\n\n\n20210130\nJohn Krasinski\n\n\n20201219\nKristen Wiig\n\n\n\n\n\n\n\n\nIt would be tedious to INSERT all of the most recent host information by hand. Instead, we’ll scrape the SNL archives using the R package rvest, which allows us to pull out the appropriate html elements. The epid and aid are joined together in a tibble, and filtered to only include episodes which are not already in the episodes table.\n\nlibrary(rvest)\n\nrecent_hosts &lt;- read_html(\"http://www.snlarchives.net/Episodes/\") |&gt;\n  html_nodes(\"tr\") |&gt;\n  purrr::map_df( ~ tibble(\n    epid = .x |&gt; html_node(\"a.ms-2.me-2\") |&gt;\n      html_attr(\"href\") |&gt;\n      str_extract(\"\\\\d+\"),\n    aid = .x |&gt; html_node(\"td:nth-child(2)\") |&gt;\n      html_text2() |&gt;\n      str_extract(\"[\\\\w\\\\. \\\\w\\\\.]+(?=/|$)\")\n  )) |&gt;\n  filter(epid &gt; 20210508)\n\n\nwrite_csv(recent_hosts, \"data/recent_hosts.csv\")\n\n\n\n\n\nINSERT INTO hosts\n   SELECT *\n   FROM READ_CSV('data/recent_hosts.csv', AUTO_DETECT = TRUE);\n\n\nSELECT * FROM hosts\n  ORDER BY epid DESC\n  LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\nepid\naid\n\n\n\n\n20240518\nJake Gyllenhaal\n\n\n20240511\nMaya Rudolph\n\n\n20240504\nDua Lipa\n\n\n20240413\nRyan Gosling\n\n\n20240406\nKristen Wiig\n\n\n20240330\nRamy Youssef\n\n\n20240309\nJosh Brolin\n\n\n20240302\nSydney Sweeney\n\n\n20240224\nShane Gillis\n\n\n20240203\nAyo Edebiri\n\n\n\n\n\n\n\n\nYou might change your mind and decide that you really only want hosts from years up to 2022. The DELETE function deletes any rows specified by the WHERE clause.\n\nDELETE FROM hosts\n   WHERE epid &gt; 20221231;\n\n\nSELECT * FROM hosts\n  ORDER BY epid DESC\n  LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\nepid\naid\n\n\n\n\n20221217\nAustin Butler\n\n\n20221210\nMartin Short\n\n\n20221203\nKeke Palmer\n\n\n20221112\nDave Chappelle\n\n\n20221105\nAmy Schumer\n\n\n20221029\nJack Harlow\n\n\n20221015\nMegan Thee Stallion\n\n\n20221008\nBrendan Gleeson\n\n\n20221001\nMiles Teller\n\n\n20220521\nNatasha Lyonne\n\n\n\n\n\n\n\n\nALTER TABLE changes the structure of a table. For example, you can add or delete columns, create or destroy indexes, change the type of existing columns, or rename columns or the table itself.\nMultiple ADD, ALTER, DROP, and CHANGE clauses are permitted in a single ALTER TABLE statement, separated by commas.\nCaveat: I have found DuckDB to be slightly finicky in some of the operations…\n\n\n\n\nALTER TABLE t1\nDROP COLUMN col1,\nDROP COLUMN col2;\n\n\n\n\n\nrename an INT NOT NULL column from a to b and change its definition to use the BIGINT data type while retaining the NOT NULL attribute.\n\n\nALTER TABLE t1 CHANGE a b BIGINT NOT NULL;\n\n\n\n\n\nCHANGE, the syntax requires two column names, so you must specify the same name twice to leave the name unchanged. For example, to change the definition of column b.\n\n\nALTER TABLE t1 CHANGE b b INT NOT NULL;\n\n\n\n\n\nMODIFY is more convenient to change the definition without changing the name because it requires the column name only once.\n\n\nALTER TABLE t1 MODIFY b INT NOT NULL;\n\n\n\n\n\nCHANGE, the syntax requires a column definition, so to leave the definition unchanged, you must respecify the definition the column currently has. For example, to rename an INT NOT NULL column from b to a.\n\n\nALTER TABLE t1 CHANGE b a INT NOT NULL;\n\n\n\n\n\nRENAME COLUMN is more convenient to change the name without changing the definition because it requires only the old and new names.\n\n\nALTER TABLE t1 RENAME COLUMN b TO a;\n\n\n\n\n\ncannot RENAME COLUMN to a column name that already exists. The following are valid.\n\n\n/* swap a and b */\nALTER TABLE t1 RENAME COLUMN a TO b,\n               RENAME COLUMN b TO a;\n\n/* \"rotate\" a, b, c through a cycle */\nALTER TABLE t1 RENAME COLUMN a TO b,\n               RENAME COLUMN b TO c,\n               RENAME COLUMN c TO a;\n\n\n\n\nTemporary tables are used to break down complex queries into smaller, more manageable steps. For example, let’s say we want to JOIN two tables after each has been filtered using different WHERE clauses. The filtered tables can each be saved into their own temporary tables and then the temporary tables can be merged.\nTables in DuckDB are saved (to disk), even when the connection is closed. However, temporary tables are saved in memory (instead of on disk) and are deleted when the connection is closed.\n\n\n\n\nSELECT * FROM episodes LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\nsid\nepid\naired\nepno\n\n\n\n\n46\n20210410\nApril 10, 2021\n17\n\n\n46\n20210403\nApril 3, 2021\n16\n\n\n46\n20210327\nMarch 27, 2021\n15\n\n\n46\n20210227\nFebruary 27, 2021\n14\n\n\n46\n20210220\nFebruary 20, 2021\n13\n\n\n46\n20210213\nFebruary 13, 2021\n12\n\n\n46\n20210206\nFebruary 6, 2021\n11\n\n\n46\n20210130\nJanuary 30, 2021\n10\n\n\n46\n20201219\nDecember 19, 2020\n9\n\n\n46\n20201212\nDecember 12, 2020\n8\n\n\n\n\n\n\n\n\nWe wouldn’t want to wrangle the date every single time we used the data.\n\nCREATE TEMP TABLE episodes_date AS\n    SELECT *, CASE\n             WHEN POSITION(',' IN aired) &gt; 0 THEN\n    EXTRACT(YEAR FROM CAST(\n                SUBSTRING(aired, POSITION(',' IN aired) + 2) || '-' ||\n                CASE\n                    WHEN POSITION('January' IN aired) &gt; 0 THEN '01'\n                    WHEN POSITION('February' IN aired) &gt; 0 THEN '02'\n                    WHEN POSITION('March' IN aired) &gt; 0 THEN '03'\n                    WHEN POSITION('April' IN aired) &gt; 0 THEN '04'\n                    WHEN POSITION('May' IN aired) &gt; 0 THEN '05'\n                    WHEN POSITION('June' IN aired) &gt; 0 THEN '06'\n                    WHEN POSITION('July' IN aired) &gt; 0 THEN '07'\n                    WHEN POSITION('August' IN aired) &gt; 0 THEN '08'\n                    WHEN POSITION('September' IN aired) &gt; 0 THEN '09'\n                    WHEN POSITION('October' IN aired) &gt; 0 THEN '10'\n                    WHEN POSITION('November' IN aired) &gt; 0 THEN '11'\n                    WHEN POSITION('December' IN aired) &gt; 0 THEN '12'\n                    ELSE '01' -- Default to January if no month is found\n                END || '-' ||\n                SUBSTRING(aired, POSITION(' ' IN aired) + 1, 2) AS DATE\n            ))\n            END AS year FROM episodes;\n\n\n\n\nIn case you are curious about the date wrangling code… consider SUBSTRING(aired, POSITION(',' IN aired) + 2)\n\nPOSITION(',' IN aired): This part of the expression uses the POSITION function to find the position of the first occurrence of the comma (,) in the string aired. The result is the index (position) of the comma within the string.\nPOSITION(',' IN aired) + 2: This adds 2 to the index of the comma. The + 2 is used to move the starting point of the substring two positions to the right of the comma. This is done to exclude the comma itself and any following spaces.\nSUBSTRING(aired, POSITION(',' IN aired) + 2): This part uses the SUBSTRING function to extract a substring from the string aired. The starting position of the substring is determined by POSITION(',' IN aired) + 2, and it goes until the end of the string. This effectively removes the part of the string that comes before and including the first comma.\n\nIn summary, the entire expression is extracting a substring from the original string aired, starting from two positions to the right of the first comma and continuing until the end of the string. This can be useful in scenarios where you want to remove or isolate part of a string based on the position of a specific character (in this case, the comma).\n\n\n\n\nSELECT * FROM episodes_date LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\nsid\nepid\naired\nepno\nyear\n\n\n\n\n46\n20210410\nApril 10, 2021\n17\n2021\n\n\n46\n20210403\nApril 3, 2021\n16\n2021\n\n\n46\n20210327\nMarch 27, 2021\n15\n2021\n\n\n46\n20210227\nFebruary 27, 2021\n14\n2021\n\n\n46\n20210220\nFebruary 20, 2021\n13\n2021\n\n\n46\n20210213\nFebruary 13, 2021\n12\n2021\n\n\n46\n20210206\nFebruary 6, 2021\n11\n2021\n\n\n46\n20210130\nJanuary 30, 2021\n10\n2021\n\n\n46\n20201219\nDecember 19, 2020\n9\n2020\n\n\n46\n20201212\nDecember 12, 2020\n8\n2020\n\n\n\n\n\n\n\n\nNow that the year variable has been created in the new temporary table called episodes_date, we can use episode_date to query and find, for example, all of the hosts in 2019.\n\nSELECT hosts.aid, ep.aired, ep.year FROM hosts \nJOIN episodes_date AS ep ON hosts.epid = ep.epid\nWHERE year = 2019\nLIMIT 25;\n\n\nDisplaying records 1 - 10\n\n\naid\naired\nyear\n\n\n\n\nEddie Murphy\nDecember 21, 2019\n2019\n\n\nScarlett Johansson\nDecember 14, 2019\n2019\n\n\nJennifer Lopez\nDecember 7, 2019\n2019\n\n\nWill Ferrell\nNovember 23, 2019\n2019\n\n\nHarry Styles\nNovember 16, 2019\n2019\n\n\nKristen Stewart\nNovember 2, 2019\n2019\n\n\nChance the Rapper\nOctober 26, 2019\n2019\n\n\nDavid Harbour\nOctober 12, 2019\n2019\n\n\nPhoebe Waller-Bridge\nOctober 5, 2019\n2019\n\n\nWoody Harrelson\nSeptember 28, 2019\n2019\n\n\n\n\n\n\n\n\nIt is always a good idea to terminate the SQL connection when you are done with it.\n\ndbDisconnect(con_duckdb, shutdown = TRUE)\n\n\n:::"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#duckdb",
    "href": "slides/2024-01-17-editing-db.html#duckdb",
    "title": "Editing Databases",
    "section": "",
    "text": "DuckDB\n\nin-process database management system that runs entirely on your own computer.\nthe data live in your storage (instead of your memory).\nyou don’t have to transfer queries or results over the internet."
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#duckdb-caveat",
    "href": "slides/2024-01-17-editing-db.html#duckdb-caveat",
    "title": "Editing Databases",
    "section": "DuckDB caveat",
    "text": "DuckDB caveat\n\nthe SQL dialect used in DuckDB is slightly different from MySQL\nwrite SELECT * FROM table 10; instead of SELECT * FROM table 0, 10;\nlots of different dialects, depending on the SQL server. Always be aware of the dialect you are using."
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#duckdb-via-r",
    "href": "slides/2024-01-17-editing-db.html#duckdb-via-r",
    "title": "Editing Databases",
    "section": "DuckDB via R",
    "text": "DuckDB via R\n\ninstall.packages(\"duckdb\")  # only once, in the Console, not in the .qmd or .Rmd file\nlibrary(duckdb)             # at the top of the .qmd or .Rmd file\n\nlibrary(DBI)                # we also still need the DBI package\n\n\ncon_duckdb &lt;- DBI::dbConnect(duckdb::duckdb(),\n                             dbdir = \"duck_datab\")\n\n\nthe database has been stored to a database directory called duck_datab which lives in the current R project.\ncan’t open it like a standard folder, but it is where DuckDB stores the database files."
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#preparing-to-load-data",
    "href": "slides/2024-01-17-editing-db.html#preparing-to-load-data",
    "title": "Editing Databases",
    "section": "Preparing to load data",
    "text": "Preparing to load data\nThe duckdb database is currently empty, so we need to load in some data. The duckdb_read_csv() function in the duckdb R package allows us to load the .csv file (available on GitHub) directly into the database without being loaded as an R object first.\nRecall that in ?@tbl-select-describe we used DESCRIBE to display the variable types of the database table(s). The list includes the variable name (Field), its Type, whether there are NULL values allowed, and whether there are keys or indices defined on the variable. See Table 2 for the DESCRIBE output on the table we are about to import.\nUnlike R, when creating a new data table, SQL requires that you communicate each future variable (column) and that variable’s type. Variable types are not automatically generated!"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#saturday-night-live",
    "href": "slides/2024-01-17-editing-db.html#saturday-night-live",
    "title": "Editing Databases",
    "section": "",
    "text": "Figure 1: image credit: NBC\n\n\n\n\n\nConsider the Saturday Night Live datasets available on the snldb GitHub repo."
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#casts-table",
    "href": "slides/2024-01-17-editing-db.html#casts-table",
    "title": "Editing Databases",
    "section": "casts table",
    "text": "casts table\nUse R to understand the data from casts.csv.\n\ncasts &lt;- readr::read_csv(\"https://raw.githubusercontent.com/hhllcks/snldb/master/output/casts.csv\")\nglimpse(casts)\n\nRows: 614\nColumns: 8\n$ aid             &lt;chr&gt; \"A. Whitney Brown\", \"A. Whitney Brown\", \"A. Whitney Br…\n$ sid             &lt;dbl&gt; 11, 12, 13, 14, 15, 16, 5, 39, 40, 41, 42, 45, 46, 21,…\n$ featured        &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, …\n$ first_epid      &lt;dbl&gt; 19860222, NA, NA, NA, NA, NA, 19800409, 20140118, NA, …\n$ last_epid       &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ update_anchor   &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE…\n$ n_episodes      &lt;dbl&gt; 8, 20, 13, 20, 20, 20, 5, 11, 21, 21, 21, 18, 17, 20, …\n$ season_fraction &lt;dbl&gt; 0.444, 1.000, 1.000, 1.000, 1.000, 1.000, 0.250, 0.524…"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#loading-data",
    "href": "slides/2024-01-17-editing-db.html#loading-data",
    "title": "Editing Databases",
    "section": "Loading data",
    "text": "Loading data\nImporting .csv files as tables, a series of steps:1\n\na USE statement that ensures we are in the right schema/database.\na series of DROP TABLE statements that drop any old tables with the same names as the ones we are going to create.\na series of CREATE TABLE statements that specify the table structures.\na series of COPY statements that read the data from the .csv files into the appropriate tables."
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#loading-step-1-use",
    "href": "slides/2024-01-17-editing-db.html#loading-step-1-use",
    "title": "Editing Databases",
    "section": "Loading step 1, USE",
    "text": "Loading step 1, USE\nUse the (local) database that we’ve called duck_datab.\n\n```{sql}\n#| connection: con_duckdb\n\nUSE duck_datab;\n```"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#loading-step-2-refresh",
    "href": "slides/2024-01-17-editing-db.html#loading-step-2-refresh",
    "title": "Editing Databases",
    "section": "Loading step 2, refresh",
    "text": "Loading step 2, refresh\nMake sure to “refresh” the table, in case it already exists. However, be very careful with the DROP TABLE statement, as it removes the casts table.\n\nDROP TABLE IF EXISTS casts;"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#loading-step-3-create-table",
    "href": "slides/2024-01-17-editing-db.html#loading-step-3-create-table",
    "title": "Editing Databases",
    "section": "Loading step 3, CREATE TABLE",
    "text": "Loading step 3, CREATE TABLE\nCarefully define the variable types, whether or not they allow missing values, and what a default value is for that variable. Additionally, identify the key for accessing information.\n\nCREATE TABLE casts (\n  aid VARCHAR(255) NOT NULL DEFAULT '',\n  sid INTEGER NOT NULL DEFAULT 0,\n  featured BOOLEAN NOT NULL DEFAULT 'false',\n  first_epid INTEGER DEFAULT 0,\n  last_epid INTEGER DEFAULT 0,\n  update_anchor BOOLEAN NOT NULL DEFAULT 0,\n  n_episodes INTEGER NOT NULL DEFAULT 0,\n  season_fraction DECIMAL(21,20) NOT NULL DEFAULT 0,\n  PRIMARY KEY (sid, aid)\n);"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#loading-step-4-copy",
    "href": "slides/2024-01-17-editing-db.html#loading-step-4-copy",
    "title": "Editing Databases",
    "section": "Loading step 4, COPY",
    "text": "Loading step 4, COPY\nThe .csv file lives on my computer, so I load it in directly. [n.b., the statement to load in data is different in MySQL.]\n\nCOPY casts FROM 'data/casts.csv' HEADER;"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#checking-the-loading-select",
    "href": "slides/2024-01-17-editing-db.html#checking-the-loading-select",
    "title": "Editing Databases",
    "section": "Checking the loading, SELECT",
    "text": "Checking the loading, SELECT\n\nSELECT * FROM casts LIMIT 8;\n\n\n\n\n\nTable 1: After CREATE TABLE where variable types are set, the COPY command pulls the data into the table. SELECT shows us that the table is as expected.\n\n\naid\nsid\nfeatured\nfirst_epid\nlast_epid\nupdate_anchor\nn_episodes\nseason_fraction\n\n\n\n\nA. Whitney Brown\n11\nTRUE\n19860222\n\nFALSE\n8\n0.444\n\n\nA. Whitney Brown\n12\nTRUE\n\n\nFALSE\n20\n1.000\n\n\nA. Whitney Brown\n13\nTRUE\n\n\nFALSE\n13\n1.000\n\n\nA. Whitney Brown\n14\nTRUE\n\n\nFALSE\n20\n1.000\n\n\nA. Whitney Brown\n15\nTRUE\n\n\nFALSE\n20\n1.000\n\n\nA. Whitney Brown\n16\nTRUE\n\n\nFALSE\n20\n1.000\n\n\nAlan Zweibel\n5\nTRUE\n19800409\n\nFALSE\n5\n0.250\n\n\nSasheer Zamata\n39\nTRUE\n20140118\n\nFALSE\n11\n0.524"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#check-the-database",
    "href": "slides/2024-01-17-editing-db.html#check-the-database",
    "title": "Editing Databases",
    "section": "Check the database",
    "text": "Check the database\nLet’s make sure that the database exists and that the table in the database exists.\n\nSHOW DATABASES;\n\n\n\n\n1 records\n\n\n\n\ndatabase_name\n\n\n\n\n\n\nduck_datab"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#check-the-database-1",
    "href": "slides/2024-01-17-editing-db.html#check-the-database-1",
    "title": "Editing Databases",
    "section": "Check the database",
    "text": "Check the database\nLet’s make sure that the database exists and that the table in the database exists.\n\nSHOW TABLES;\n\n\n\n\n1 records\n\n\n\n\nname\n\n\n\n\n\n\ncasts"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#check-the-database-2",
    "href": "slides/2024-01-17-editing-db.html#check-the-database-2",
    "title": "Editing Databases",
    "section": "Check the database",
    "text": "Check the database\nLet’s make sure that the database exists and that the table in the database exists.\n\nDESCRIBE casts;\n\n\n\n\n\nTable 2: DESCRIBE variables in the casts table.\n\n\ncolumn_name\ncolumn_type\nnull\nkey\ndefault\nextra\n\n\n\n\naid\nVARCHAR\nNO\nPRI\n''\n\n\n\nsid\nINTEGER\nNO\nPRI\n0\n\n\n\nfeatured\nBOOLEAN\nNO\n\n'false'\n\n\n\nfirst_epid\nINTEGER\nYES\n\n0\n\n\n\nlast_epid\nINTEGER\nYES\n\n0\n\n\n\nupdate_anchor\nBOOLEAN\nNO\n\n0\n\n\n\nn_episodes\nINTEGER\nNO\n\n0\n\n\n\nseason_fraction\nDECIMAL(21,20)\nNO\n\n0"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#efficiencies",
    "href": "slides/2024-01-17-editing-db.html#efficiencies",
    "title": "Editing Databases",
    "section": "Efficiencies",
    "text": "Efficiencies\nIt is worth pointing out a few aspects to loading data into SQL: keys, indices, and partitioning."
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#key",
    "href": "slides/2024-01-17-editing-db.html#key",
    "title": "Editing Databases",
    "section": "Key",
    "text": "Key\nKeys are unique identifiers for each row, used primarily for connecting tables. Keys are generally not helpful for efficiency, but they are important for data integrity and relationships between tables.\n\nPRIMARY KEY is a column or set of columns that uniquely identify each row. Primary keys cannot be NULL.\nFOREIGN KEY is a column or set of columns that reference a primary key in a different table. A foreign key can be NULL."
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#index",
    "href": "slides/2024-01-17-editing-db.html#index",
    "title": "Editing Databases",
    "section": "Index",
    "text": "Index\nIndices are the crux of why SQL is so much more efficient than, say, R. An index is a lookup table that helps SQL keep track of which records contain certain values. By indexing the rows, SQL is able to optimize sorting and joining tables. The index is created in advance (when the table is created) and saved to disk, which can take up substantial space on the disk. Sometimes more than one variable is used to index the table. There are trade-offs to having a lot of indices (disk space but fast wrangling) versus a few indices (slow wrangling but less space)."
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#find-keys-and-indices",
    "href": "slides/2024-01-17-editing-db.html#find-keys-and-indices",
    "title": "Editing Databases",
    "section": "Find keys and indices",
    "text": "Find keys and indices\nIn MySQL the commands SHOW KEYS and SHOW INDEXES provide information about the keys and indices for each table."
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#partitioning",
    "href": "slides/2024-01-17-editing-db.html#partitioning",
    "title": "Editing Databases",
    "section": "Partitioning",
    "text": "Partitioning\nAnother way to speed up query retrievals is to partition the data tables. If, for example, the SNL queries were always done by year, then the episodes table could be partitioned such that they are stored as separate tables (one per year). The partitioning functions as an index on year. The user would not be able to tell the difference between the unpartitioned episodes table and the partitioned one. Queries done by year would be faster. Queries done grouped in another way would be slower."
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#best-practice",
    "href": "slides/2024-01-17-editing-db.html#best-practice",
    "title": "Editing Databases",
    "section": "",
    "text": "It is always a good idea to terminate the SQL connection when you are done with it.\n\ndbDisconnect(con_duckdb, shutdown = TRUE)\n\n\n:::"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#footnotes",
    "href": "slides/2024-01-17-editing-db.html#footnotes",
    "title": "Editing Databases",
    "section": "Footnotes",
    "text": "Footnotes\n\n\ntaken from MDSR.↩︎"
  },
  {
    "objectID": "handout/lab5_creating_db_sds261_j24_sol.html",
    "href": "handout/lab5_creating_db_sds261_j24_sol.html",
    "title": "Lab 5 - creating databases",
    "section": "",
    "text": "Solution\n\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(DBI)\nlibrary(RMariaDB)\nlibrary(dbplyr)\nlibrary(mdsr)\nToday’s lab will provide practice working with creating SQL databases using DuckDB.\nThe goals for lab 5 include:"
  },
  {
    "objectID": "handout/lab5_creating_db_sds261_j24_sol.html#advice-for-turning-in-the-assignment",
    "href": "handout/lab5_creating_db_sds261_j24_sol.html#advice-for-turning-in-the-assignment",
    "title": "Lab 5 - creating databases",
    "section": "Advice for turning in the assignment",
    "text": "Advice for turning in the assignment\n\nBe sure to indicate (in the .qmd file) which problem is being answered with which code. A sentence or two with each response goes a long way toward your understanding!\nsave the .Rproj file somewhere you can find it. Don’t keep everything in your downloads folder. Maybe make a folder called SDS261 or something. That folder could live on your Desktop. Or maybe in your Dropbox.\nThe .qmd document should be saved in the R Project as lab5-sds261-yourlastname-yourfirstname.qmd.\nSet up a connection to a database of your naming using DuckDB.\n\n\ncon_college &lt;- DBI::dbConnect(duckdb::duckdb(),\n                             dbdir = \"you_name_the_db\")"
  },
  {
    "objectID": "handout/lab5_creating_db_sds261_j24_sol.html#assignment",
    "href": "handout/lab5_creating_db_sds261_j24_sol.html#assignment",
    "title": "Lab 5 - creating databases",
    "section": "Assignment",
    "text": "Assignment\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ncon_college &lt;- DBI::dbConnect(duckdb::duckdb(),\n                             dbdir = \"collegeDB\")\n\n\n\n\nThe data we will work with today is on college tuition, pay, and diversity. The original data source is the US Department of Education, but it has been compiled as part of TidyTuesday on March 10, 2020. Tuition and fees are for 2018-19. Diversity is for 2014.\n\nDownload the data onto your own computer. In the interest of time, let’s only use three tables: tuition_cost and salary_potential and diversity_school.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ntuition_cost &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')\n\nsalary_potential &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/salary_potential.csv')\n\ndiversity_school &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/diversity_school.csv')\n\n\n\n\n\nFollow the first two steps in the notes: USE and DROP TABLE.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nUSE collegeDB;\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nDROP TABLE IF EXISTS salary;\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nDROP TABLE IF EXISTS diversity;\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nDROP TABLE IF EXISTS tuition;\n\n\n\n\n\nFor each of the three tables, in the CREATE TABLE operation, carefully define variable types and identify any key variables. Unfortunately, FOREIGN KEYs don’t work here because there is not referential integrity across the tables.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nCREATE TABLE tuition (\n  name VARCHAR(255) NOT NULL DEFAULT '',\n  state VARCHAR(255),\n  state_code VARCHAR(255),\n  type VARCHAR(255),\n  degree_length VARCHAR(255),\n  room_and_board VARCHAR(255),\n  in_state_tuition DOUBLE,\n  in_state_total DOUBLE,\n  out_of_state_tuition DOUBLE,\n  out_of_state_total DOUBLE,\n  PRIMARY KEY (name, state)\n);\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nCREATE TABLE salary (\n  rank DOUBLE,\n  name VARCHAR(255),\n  state_name VARCHAR(255),\n  early_career_pay DOUBLE,\n  mid_career_pay DOUBLE,\n  make_world_better_percent VARCHAR(255),\n  stem_percent DOUBLE\n);\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nCREATE TABLE diversity (\n  name VARCHAR(255),\n  total_enrollment DOUBLE,\n  state VARCHAR(255),\n  category VARCHAR(255),\n  enrollment DOUBLE\n);\n\n\n\n\n\nUse COPY to load the data from your computer. (Hint: if there is an NA value, SQL doesn’t know that it is actually NULL and wants the variable to be loaded as a character string.)\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nCOPY tuition FROM 'data/tuition_cost.csv' HEADER;\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nCOPY salary FROM 'data/salary_potential.csv' HEADER;\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nCOPY diversity FROM 'data/diversity_school.csv' HEADER;\n\n\n\n\n\nUse SELECT * (with a LIMIT!) to make sure all three tables loaded correctly.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT * FROM tuition LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname\nstate\nstate_code\ntype\ndegree_length\nroom_and_board\nin_state_tuition\nin_state_total\nout_of_state_tuition\nout_of_state_total\n\n\n\n\nAaniiih Nakoda College\nMontana\nMT\nPublic\n2 Year\nNA\n2380\n2380\n2380\n2380\n\n\nAbilene Christian University\nTexas\nTX\nPrivate\n4 Year\n10350\n34850\n45200\n34850\n45200\n\n\nAbraham Baldwin Agricultural College\nGeorgia\nGA\nPublic\n2 Year\n8474\n4128\n12602\n12550\n21024\n\n\nAcademy College\nMinnesota\nMN\nFor Profit\n2 Year\nNA\n17661\n17661\n17661\n17661\n\n\nAcademy of Art University\nCalifornia\nCA\nFor Profit\n4 Year\n16648\n27810\n44458\n27810\n44458\n\n\nAdams State University\nColorado\nCO\nPublic\n4 Year\n8782\n9440\n18222\n20456\n29238\n\n\nAdelphi University\nNew York\nNY\nPrivate\n4 Year\n16030\n38660\n54690\n38660\n54690\n\n\nAdirondack Community College\nNew York\nNY\nPublic\n2 Year\n11660\n5375\n17035\n9935\n21595\n\n\nAdrian College\nMichigan\nMI\nPrivate\n4 Year\n11318\n37087\n48405\n37087\n48405\n\n\nAdvanced Technology Institute\nVirginia\nVA\nFor Profit\n2 Year\nNA\n13680\n13680\n13680\n13680\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT * FROM salary LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\nrank\nname\nstate_name\nearly_career_pay\nmid_career_pay\nmake_world_better_percent\nstem_percent\n\n\n\n\n1\nAuburn University\nAlabama\n54400\n104500\n51\n31\n\n\n2\nUniversity of Alabama in Huntsville\nAlabama\n57500\n103900\n59\n45\n\n\n3\nThe University of Alabama\nAlabama\n52300\n97400\n50\n15\n\n\n4\nTuskegee University\nAlabama\n54500\n93500\n61\n30\n\n\n5\nSamford University\nAlabama\n48400\n90500\n52\n3\n\n\n6\nSpring Hill College\nAlabama\n46600\n89100\n53\n12\n\n\n7\nBirmingham Southern College\nAlabama\n49100\n88300\n48\n27\n\n\n8\nUniversity of Alabama at Birmingham\nAlabama\n48600\n87200\n57\n17\n\n\n9\nUniversity of South Alabama\nAlabama\n47700\n86400\n56\n17\n\n\n10\nAlabama A&M University\nAlabama\n48700\n83500\n58\n20\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT * FROM diversity LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\nname\ntotal_enrollment\nstate\ncategory\nenrollment\n\n\n\n\nUniversity of Phoenix-Arizona\n195059\nArizona\nWomen\n134722\n\n\nUniversity of Phoenix-Arizona\n195059\nArizona\nAmerican Indian / Alaska Native\n876\n\n\nUniversity of Phoenix-Arizona\n195059\nArizona\nAsian\n1959\n\n\nUniversity of Phoenix-Arizona\n195059\nArizona\nBlack\n31455\n\n\nUniversity of Phoenix-Arizona\n195059\nArizona\nHispanic\n13984\n\n\nUniversity of Phoenix-Arizona\n195059\nArizona\nNative Hawaiian / Pacific Islander\n1019\n\n\nUniversity of Phoenix-Arizona\n195059\nArizona\nWhite\n58209\n\n\nUniversity of Phoenix-Arizona\n195059\nArizona\nTwo Or More Races\n19039\n\n\nUniversity of Phoenix-Arizona\n195059\nArizona\nUnknown\n65163\n\n\nUniversity of Phoenix-Arizona\n195059\nArizona\nNon-Resident Foreign\n3355\n\n\n\n\n\n\n\n\n\nAdd an INDEX to the tuition table on state. We won’t discuss until Thursday, but state is better than state_code because state allows you to join with other tables. state is better than type or degree_length because state has a much higher cardinality.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nCREATE INDEX state_idx ON tuition (state);"
  },
  {
    "objectID": "handout/lab6_editing_db_sds261_j24.html",
    "href": "handout/lab6_editing_db_sds261_j24.html",
    "title": "Lab 6 - editing databases",
    "section": "",
    "text": "Today’s lab will provide practice working with editing SQL databases using DuckDB.\nThe goals for lab 6 include:"
  },
  {
    "objectID": "handout/lab6_editing_db_sds261_j24.html#advice-for-turning-in-the-assignment",
    "href": "handout/lab6_editing_db_sds261_j24.html#advice-for-turning-in-the-assignment",
    "title": "Lab 6 - editing databases",
    "section": "Advice for turning in the assignment",
    "text": "Advice for turning in the assignment\n\nBe sure to indicate (in the .qmd file) which problem is being answered with which code. A sentence or two with each response goes a long way toward your understanding!\nsave the .Rproj file somewhere you can find it. Don’t keep everything in your downloads folder. Maybe make a folder called SDS261 or something. That folder could live on your Desktop. Or maybe in your Dropbox.\nThe .qmd document should be saved in the R Project as lab6-sds261-yourlastname-yourfirstname.qmd.\nSet up a connection to a database of your naming using DuckDB.\n\n\ncon_college &lt;- DBI::dbConnect(duckdb::duckdb(),\n                             dbdir = \"samenameaslab5\")"
  },
  {
    "objectID": "handout/lab6_editing_db_sds261_j24.html#assignment",
    "href": "handout/lab6_editing_db_sds261_j24.html#assignment",
    "title": "Lab 6 - editing databases",
    "section": "Assignment",
    "text": "Assignment\nThe data we will work with today is on college tuition, pay, and diversity. The original data source is the US Department of Education, but it has been compiled as part of TidyTuesday on March 10, 2020. Tuition and fees are for 2018-19. Diversity is for 2014.\n\nUse the same database from Lab 5. If the database somehow got deleted or corrupted, go back and re-run your code from Lab 5.\n\n\nUse UPDATE to change the NA values to NULL (for room_and_board in the tuition table and make_world_better_percent in the salary table). (Originally I had a follow up task to convert the data type from VARCHAR to DOUBLE as well. However, DuckDB is particularly finicky with those conversions, and so we aren’t going to do it. If/when you work on a SQL server, you might adjust the data type using something like: ALTER TABLE tuition MODIFY room_and_board DOUBLE;.)1\n\n\nUsing INSERT INTO add records to the diversity table. Add ‘Barden University’ in ‘Louisiana’ that has a total enrollment of 10,000 students, half of whom are female. Add an additional value to indicate, if the Bellas are representative of the student population, that Barden University has 1667 Black students.\n\n\n\nCheck to see that the values inserted into the diversity table are correct. In order to tell, use a SELECT clause where you only look at schools from ‘Louisiana’ and sort by the name of the school.\n\n\nUsing the diversty table, DELETE all the records that don’t record race or ethnicity. That is, delete the records that have a category of ‘Total Minority’, ‘Women’, or ‘Non-Resident Foreign’. Again, use a SELECT command to confirm that your code worked.\n\n\nUse ALTER TABLE to change the variable type of make_world_better_percent in the salary table from VARCHAR to DOUBLE. Follow up by running DESCRIBE on the salary table to make sure your change worked. (Note: for some reason, the same code doesn’t seem to work on the tuition table with room_and_board. It says that tuition depends on something. You are welcome to try to make it work on your own computers!)\n\n\nCreate a temporary table (e.g., to use in a follow up SELECT query) that contains only the ‘Private’ universities from the tuition table.\n\n\nCreate a temporary table consisting of the JOIN of all three tables but including only the Smith College data."
  },
  {
    "objectID": "handout/lab6_editing_db_sds261_j24.html#footnotes",
    "href": "handout/lab6_editing_db_sds261_j24.html#footnotes",
    "title": "Lab 6 - editing databases",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nTo change the data type only during a query, use SELECT CAST(room_and_board AS DOUBLE) FROM tuition.↩︎"
  },
  {
    "objectID": "handout/lab6_editing_db_sds261_j24_sol.html",
    "href": "handout/lab6_editing_db_sds261_j24_sol.html",
    "title": "Lab 6 - editing databases",
    "section": "",
    "text": "Solution\n\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(DBI)\nlibrary(RMariaDB)\nlibrary(dbplyr)\nlibrary(mdsr)\nToday’s lab will provide practice working with editing SQL databases using DuckDB.\nThe goals for lab 6 include:"
  },
  {
    "objectID": "handout/lab6_editing_db_sds261_j24_sol.html#advice-for-turning-in-the-assignment",
    "href": "handout/lab6_editing_db_sds261_j24_sol.html#advice-for-turning-in-the-assignment",
    "title": "Lab 6 - editing databases",
    "section": "Advice for turning in the assignment",
    "text": "Advice for turning in the assignment\n\nBe sure to indicate (in the .qmd file) which problem is being answered with which code. A sentence or two with each response goes a long way toward your understanding!\nsave the .Rproj file somewhere you can find it. Don’t keep everything in your downloads folder. Maybe make a folder called SDS261 or something. That folder could live on your Desktop. Or maybe in your Dropbox.\nThe .qmd document should be saved in the R Project as lab6-sds261-yourlastname-yourfirstname.qmd.\nSet up a connection to a database of your naming using DuckDB.\n\n\ncon_college &lt;- DBI::dbConnect(duckdb::duckdb(),\n                             dbdir = \"samenameaslab5\")"
  },
  {
    "objectID": "handout/lab6_editing_db_sds261_j24_sol.html#assignment",
    "href": "handout/lab6_editing_db_sds261_j24_sol.html#assignment",
    "title": "Lab 6 - editing databases",
    "section": "Assignment",
    "text": "Assignment\nThe data we will work with today is on college tuition, pay, and diversity. The original data source is the US Department of Education, but it has been compiled as part of TidyTuesday on March 10, 2020. Tuition and fees are for 2018-19. Diversity is for 2014.\n\nUse the same database from Lab 5. If the database somehow got deleted or corrupted, go back and re-run your code from Lab 5.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ncon_college &lt;- DBI::dbConnect(duckdb::duckdb(),\n                             dbdir = \"collegeDB\")\n\n\n\n\n\nUse UPDATE to change the NA values to NULL (for room_and_board in the tuition table and make_world_better_percent in the salary table). (Originally I had a follow up task to convert the data type from VARCHAR to DOUBLE as well. However, DuckDB is particularly finicky with those conversions, and so we aren’t going to do it. If/when you work on a SQL server, you might adjust the data type using something like: ALTER TABLE tuition MODIFY room_and_board DOUBLE;.)1\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT COUNT(*) AS number_null\nFROM tuition\nWHERE room_and_board IS NULL;\n\n\n1 records\n\n\nnumber_null\n\n\n\n\n1094\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nUPDATE tuition\nSET room_and_board = NULL\nWHERE room_and_board = 'NA'\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT COUNT(*) AS number_null\nFROM tuition\nWHERE room_and_board IS NULL;\n\n\n1 records\n\n\nnumber_null\n\n\n\n\n1094\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT * FROM tuition LIMIT 5;\n\n\n5 records\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname\nstate\nstate_code\ntype\ndegree_length\nroom_and_board\nin_state_tuition\nin_state_total\nout_of_state_tuition\nout_of_state_total\n\n\n\n\nAaniiih Nakoda College\nMontana\nMT\nPublic\n2 Year\nNA\n2380\n2380\n2380\n2380\n\n\nAbilene Christian University\nTexas\nTX\nPrivate\n4 Year\n10350\n34850\n45200\n34850\n45200\n\n\nAbraham Baldwin Agricultural College\nGeorgia\nGA\nPublic\n2 Year\n8474\n4128\n12602\n12550\n21024\n\n\nAcademy College\nMinnesota\nMN\nFor Profit\n2 Year\nNA\n17661\n17661\n17661\n17661\n\n\nAcademy of Art University\nCalifornia\nCA\nFor Profit\n4 Year\n16648\n27810\n44458\n27810\n44458\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT COUNT(*) AS number_null\nFROM salary\nWHERE make_world_better_percent IS NULL;\n\n\n1 records\n\n\nnumber_null\n\n\n\n\n33\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nUPDATE salary\nSET make_world_better_percent = NULL\nWHERE make_world_better_percent = 'NA'\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT COUNT(*) AS number_null\nFROM salary\nWHERE make_world_better_percent IS NULL;\n\n\n1 records\n\n\nnumber_null\n\n\n\n\n33\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT * FROM salary LIMIT 5;\n\n\n5 records\n\n\n\n\n\n\n\n\n\n\n\nrank\nname\nstate_name\nearly_career_pay\nmid_career_pay\nmake_world_better_percent\nstem_percent\n\n\n\n\n1\nAuburn University\nAlabama\n54400\n104500\n51\n31\n\n\n2\nUniversity of Alabama in Huntsville\nAlabama\n57500\n103900\n59\n45\n\n\n3\nThe University of Alabama\nAlabama\n52300\n97400\n50\n15\n\n\n4\nTuskegee University\nAlabama\n54500\n93500\n61\n30\n\n\n5\nSamford University\nAlabama\n48400\n90500\n52\n3\n\n\n\n\n\n\n\n\n\nUsing INSERT INTO add records to the diversity table. Add ‘Barden University’ in ‘Louisiana’ that has a total enrollment of 10,000 students, half of whom are female. Add an additional value to indicate, if the Bellas are representative of the student population, that Barden University has 1667 Black students.\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nINSERT INTO diversity (name, total_enrollment, state, category, enrollment)\n   VALUES('Barden University', 10000, 'Louisiana', 'Women', 5000),\n         ('Barden University', 10000, 'Louisiana', 'Black', 1667);\n\n\n\n\n\nCheck to see that the values inserted into the diversity table are correct. In order to tell, use a SELECT clause where you only look at schools from ‘Louisiana’ and sort by the name of the school.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT * FROM diversity\nWHERE state = 'Louisiana'\nORDER BY name\nLIMIT 50;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\nname\ntotal_enrollment\nstate\ncategory\nenrollment\n\n\n\n\nBarden University\n10000\nLouisiana\nBlack\n1667\n\n\nBarden University\n10000\nLouisiana\nWomen\n5000\n\n\nBarden University\n10000\nLouisiana\nBlack\n1667\n\n\nBarden University\n10000\nLouisiana\nBlack\n1667\n\n\nBarden University\n10000\nLouisiana\nBlack\n1667\n\n\nBaton Rouge Community College\n7740\nLouisiana\nUnknown\n633\n\n\nBaton Rouge Community College\n7740\nLouisiana\nAmerican Indian / Alaska Native\n24\n\n\nBaton Rouge Community College\n7740\nLouisiana\nAsian\n149\n\n\nBaton Rouge Community College\n7740\nLouisiana\nBlack\n3263\n\n\nBaton Rouge Community College\n7740\nLouisiana\nHispanic\n241\n\n\n\n\n\n\n\n\n\nUsing the diversty table, DELETE all the records that don’t record race or ethnicity. That is, delete the records that have a category of ‘Total Minority’, ‘Women’, or ‘Non-Resident Foreign’. Again, use a SELECT command to confirm that your code worked.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nDELETE FROM diversity\nWHERE category = 'Total Minority' OR category = 'Women' OR category = 'Non-Resident Foreign'\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT * FROM diversity\nWHERE state = 'Louisiana'\nORDER BY name\nLIMIT 50;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\nname\ntotal_enrollment\nstate\ncategory\nenrollment\n\n\n\n\nBarden University\n10000\nLouisiana\nBlack\n1667\n\n\nBarden University\n10000\nLouisiana\nBlack\n1667\n\n\nBarden University\n10000\nLouisiana\nBlack\n1667\n\n\nBarden University\n10000\nLouisiana\nBlack\n1667\n\n\nBaton Rouge Community College\n7740\nLouisiana\nUnknown\n633\n\n\nBaton Rouge Community College\n7740\nLouisiana\nAmerican Indian / Alaska Native\n24\n\n\nBaton Rouge Community College\n7740\nLouisiana\nAsian\n149\n\n\nBaton Rouge Community College\n7740\nLouisiana\nBlack\n3263\n\n\nBaton Rouge Community College\n7740\nLouisiana\nHispanic\n241\n\n\nBaton Rouge Community College\n7740\nLouisiana\nNative Hawaiian / Pacific Islander\n12\n\n\n\n\n\n\n\n\n\nUse ALTER TABLE to change the variable type of make_world_better_percent in the salary table from VARCHAR to DOUBLE. Follow up by running DESCRIBE on the salary table to make sure your change worked. (Note: for some reason, the same code doesn’t seem to work on the tuition table with room_and_board. It says that tuition depends on something. You are welcome to try to make it work on your own computers!)\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nALTER TABLE salary ALTER make_world_better_percent TYPE DOUBLE;\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nDESCRIBE salary;\n\n\n7 records\n\n\ncolumn_name\ncolumn_type\nnull\nkey\ndefault\nextra\n\n\n\n\nrank\nDOUBLE\nYES\nNA\nNA\nNA\n\n\nname\nVARCHAR\nYES\nNA\nNA\nNA\n\n\nstate_name\nVARCHAR\nYES\nNA\nNA\nNA\n\n\nearly_career_pay\nDOUBLE\nYES\nNA\nNA\nNA\n\n\nmid_career_pay\nDOUBLE\nYES\nNA\nNA\nNA\n\n\nmake_world_better_percent\nDOUBLE\nYES\nNA\nNA\nNA\n\n\nstem_percent\nDOUBLE\nYES\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nCreate a temporary table (e.g., to use in a follow up SELECT query) that contains only the ‘Private’ universities from the tuition table.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nCREATE TEMP TABLE tuition_private AS\n    SELECT * FROM tuition WHERE type = 'Private';\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT * FROM tuition_private LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname\nstate\nstate_code\ntype\ndegree_length\nroom_and_board\nin_state_tuition\nin_state_total\nout_of_state_tuition\nout_of_state_total\n\n\n\n\nAbilene Christian University\nTexas\nTX\nPrivate\n4 Year\n10350\n34850\n45200\n34850\n45200\n\n\nAdelphi University\nNew York\nNY\nPrivate\n4 Year\n16030\n38660\n54690\n38660\n54690\n\n\nAdrian College\nMichigan\nMI\nPrivate\n4 Year\n11318\n37087\n48405\n37087\n48405\n\n\nAdventist University of Health Sciences\nFlorida\nFL\nPrivate\n4 Year\n4200\n15150\n19350\n15150\n19350\n\n\nAgnes Scott College\nGeorgia\nGA\nPrivate\n4 Year\n12330\n41160\n53490\n41160\n53490\n\n\nAlaska Bible College\nAlaska\nAK\nPrivate\n4 Year\n5700\n9300\n15000\n9300\n15000\n\n\nAlaska Pacific University\nAlaska\nAK\nPrivate\n4 Year\n7300\n20830\n28130\n20830\n28130\n\n\nAlbany College of Pharmacy and Health Sciences\nNew York\nNY\nPrivate\n4 Year\n10920\n35105\n46025\n35105\n46025\n\n\nAlbertus Magnus College\nConnecticut\nCT\nPrivate\n4 Year\n13200\n32060\n45260\n32060\n45260\n\n\nAlbion College\nMichigan\nMI\nPrivate\n4 Year\n12380\n45775\n58155\n45775\n58155\n\n\n\n\n\n\n\n\n\nCreate a temporary table consisting of the JOIN of all three tables but including only the Smith College data.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nCREATE TEMP TABLE smith_data AS\nSELECT tuition.name, category, enrollment, type, \n       degree_length, room_and_board,\n       in_state_tuition, out_of_state_tuition, in_state_total,\n       out_of_state_total, early_career_pay, mid_career_pay,\n       make_world_better_percent, stem_percent,\n       total_enrollment\nFROM tuition\nJOIN salary ON tuition.name = salary.name\nJOIN diversity ON tuition.name = diversity.name\nWHERE tuition.name = 'Smith College'\nLIMIT 20;\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nSELECT * FROM smith_data;\n\n\n8 records\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname\ncategory\nenrollment\ntype\ndegree_length\nroom_and_board\nin_state_tuition\nout_of_state_tuition\nin_state_total\nout_of_state_total\nearly_career_pay\nmid_career_pay\nmake_world_better_percent\nstem_percent\ntotal_enrollment\n\n\n\n\nSmith College\nAmerican Indian / Alaska Native\n5\nPrivate\n4 Year\n17520\n52404\n52404\n69924\n69924\n52700\n98200\n51\n26\n2989\n\n\nSmith College\nAsian\n348\nPrivate\n4 Year\n17520\n52404\n52404\n69924\n69924\n52700\n98200\n51\n26\n2989\n\n\nSmith College\nBlack\n149\nPrivate\n4 Year\n17520\n52404\n52404\n69924\n69924\n52700\n98200\n51\n26\n2989\n\n\nSmith College\nHispanic\n276\nPrivate\n4 Year\n17520\n52404\n52404\n69924\n69924\n52700\n98200\n51\n26\n2989\n\n\nSmith College\nNative Hawaiian / Pacific Islander\n2\nPrivate\n4 Year\n17520\n52404\n52404\n69924\n69924\n52700\n98200\n51\n26\n2989\n\n\nSmith College\nWhite\n1447\nPrivate\n4 Year\n17520\n52404\n52404\n69924\n69924\n52700\n98200\n51\n26\n2989\n\n\nSmith College\nTwo Or More Races\n128\nPrivate\n4 Year\n17520\n52404\n52404\n69924\n69924\n52700\n98200\n51\n26\n2989\n\n\nSmith College\nUnknown\n246\nPrivate\n4 Year\n17520\n52404\n52404\n69924\n69924\n52700\n98200\n51\n26\n2989"
  },
  {
    "objectID": "handout/lab6_editing_db_sds261_j24_sol.html#footnotes",
    "href": "handout/lab6_editing_db_sds261_j24_sol.html#footnotes",
    "title": "Lab 6 - editing databases",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nTo change the data type only during a query, use SELECT CAST(room_and_board AS DOUBLE) FROM tuition.↩︎"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#data-types",
    "href": "slides/2024-01-16-creating-db.html#data-types",
    "title": "Creating Databases",
    "section": "Data types",
    "text": "Data types\n\nNumbers: INTEGER, SMALLINT, NUMERIC, DECIMAL, DOUBLE(precision, scale) precision = # sig digits, scale = # digits the follow decimal.\nString: CHAR, VARCHAR, BINARY, TEXT\nDate: DATE, TIME, DATETIME, TIMESTAMP, YEAR\nBoolean: SMALLINT(1) in MySQL, BOOLEAN in DuckDB"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#check-constraints",
    "href": "slides/2024-01-16-creating-db.html#check-constraints",
    "title": "Creating Databases",
    "section": "CHECK constraints",
    "text": "CHECK constraints\nViolation will result in an error.\n\nCREATE TABLE CountryListCensus (\n    Id INT,\n    CountryName VARCHAR(255) NOT NULL,\n    CountryPopulation INT CHECK(CountryPopulation &gt; 0),\n    LastCensus DATE,\n    NextCensus DATE,\n    CHECK(LastCensus&lt;NextCensus),\n    PRIMARY KEY (Id)\n);"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#creating-keys",
    "href": "slides/2024-01-16-creating-db.html#creating-keys",
    "title": "Creating Databases",
    "section": "Creating KEYs",
    "text": "Creating KEYs\n\nCREATE TABLE table1 (\n  col1 ...,\n  col2 ...,\n  col3 ...,\n  PRIMARY KEY col1,\n  FOREIGN KEY col2 REFERENCES table2(table2col1)\n);\n\nEither or both of the KEYs could be multiple columns.\n\nCREATE TABLE table1 (\n  col1 ...,\n  col2 ...,\n  col3 ...,\n  PRIMARY KEY (col1, col3),\n  FOREIGN KEY (col1, col2) REFERENCES table2(table2col1, table2col4)\n);"
  },
  {
    "objectID": "slides/2024-01-16-creating-db.html#creating-indexes",
    "href": "slides/2024-01-16-creating-db.html#creating-indexes",
    "title": "Creating Databases",
    "section": "Creating INDEXes",
    "text": "Creating INDEXes\nIndexes can be created on one or more variable. A table does not need to have an INDEX (or a KEY).\n\nCREATE INDEX name_of_index ON table (col1);\n\n\nCREATE INDEX name_of_index ON table (col1, col2);"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html",
    "href": "slides/2024-01-18-db-etc.html",
    "title": "SQL Extras",
    "section": "",
    "text": "DuckDB\n\nin-process database management system that runs entirely on your own computer.\nthe data live in your storage (instead of your memory).\nyou don’t have to transfer queries or results over the internet."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#duckdb",
    "href": "slides/2024-01-18-db-etc.html#duckdb",
    "title": "SQL Extras",
    "section": "",
    "text": "DuckDB\n\nin-process database management system that runs entirely on your own computer.\nthe data live in your storage (instead of your memory).\nyou don’t have to transfer queries or results over the internet."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#duckdb-caveat",
    "href": "slides/2024-01-18-db-etc.html#duckdb-caveat",
    "title": "SQL Extras",
    "section": "DuckDB caveat",
    "text": "DuckDB caveat\n\nthe SQL dialect used in DuckDB is slightly different from MySQL\nwrite SELECT * FROM table 10; instead of SELECT * FROM table 0, 10;\nlots of different dialects, depending on the SQL server. Always be aware of the dialect you are using."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#duckdb-via-r",
    "href": "slides/2024-01-18-db-etc.html#duckdb-via-r",
    "title": "SQL Extras",
    "section": "DuckDB via R",
    "text": "DuckDB via R\n\ninstall.packages(\"duckdb\")  # only once, in the Console, not in the .qmd or .Rmd file\nlibrary(duckdb)             # at the top of the .qmd or .Rmd file\n\nlibrary(DBI)                # we also still need the DBI package\n\n\ncon_duckdb &lt;- DBI::dbConnect(duckdb::duckdb(),\n                             dbdir = \"duck_datab\")\n\n\nthe database has been stored to a database directory called duck_datab which lives in the current R project.\ncan’t open it like a standard folder, but it is where DuckDB stores the database files."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#preparing-to-load-data",
    "href": "slides/2024-01-18-db-etc.html#preparing-to-load-data",
    "title": "SQL Extras",
    "section": "Preparing to load data",
    "text": "Preparing to load data\nThe duckdb database is currently empty, so we need to load in some data. The duckdb_read_csv() function in the duckdb R package allows us to load the .csv file (available on GitHub) directly into the database without being loaded as an R object first.\nRecall that in ?@tbl-select-describe we used DESCRIBE to display the variable types of the database table(s). The list includes the variable name (Field), its Type, whether there are NULL values allowed, and whether there are keys or indices defined on the variable. See Table 2 for the DESCRIBE output on the table we are about to import.\nUnlike R, when creating a new data table, SQL requires that you communicate each future variable (column) and that variable’s type. Variable types are not automatically generated!"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#saturday-night-live",
    "href": "slides/2024-01-18-db-etc.html#saturday-night-live",
    "title": "SQL Extras",
    "section": "Saturday Night Live",
    "text": "Saturday Night Live\n\n\n\n\n\nFigure 1: image credit: NBC\n\n\n\n\nConsider the Saturday Night Live datasets available on the snldb GitHub repo."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#casts-table",
    "href": "slides/2024-01-18-db-etc.html#casts-table",
    "title": "SQL Extras",
    "section": "casts table",
    "text": "casts table\nUse R to understand the data from casts.csv.\n\ncasts &lt;- readr::read_csv(\"https://raw.githubusercontent.com/hhllcks/snldb/master/output/casts.csv\")\nglimpse(casts)\n\nRows: 614\nColumns: 8\n$ aid             &lt;chr&gt; \"A. Whitney Brown\", \"A. Whitney Brown\", \"A. Whitney Br…\n$ sid             &lt;dbl&gt; 11, 12, 13, 14, 15, 16, 5, 39, 40, 41, 42, 45, 46, 21,…\n$ featured        &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, …\n$ first_epid      &lt;dbl&gt; 19860222, NA, NA, NA, NA, NA, 19800409, 20140118, NA, …\n$ last_epid       &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ update_anchor   &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE…\n$ n_episodes      &lt;dbl&gt; 8, 20, 13, 20, 20, 20, 5, 11, 21, 21, 21, 18, 17, 20, …\n$ season_fraction &lt;dbl&gt; 0.444, 1.000, 1.000, 1.000, 1.000, 1.000, 0.250, 0.524…"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#data-types",
    "href": "slides/2024-01-18-db-etc.html#data-types",
    "title": "SQL Extras",
    "section": "Data types",
    "text": "Data types\n\nNumbers: INTEGER, SMALLINT, NUMERIC, DECIMAL, DOUBLE(precision, scale) precision = # sig digits, scale = # digits the follow decimal.\nString: CHAR, VARCHAR, BINARY, TEXT\nDate: DATE, TIME, DATETIME, TIMESTAMP, YEAR\nBoolean: SMALLINT(1) in MySQL, BOOLEAN in DuckDB"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#check-constraints",
    "href": "slides/2024-01-18-db-etc.html#check-constraints",
    "title": "SQL Extras",
    "section": "CHECK constraints",
    "text": "CHECK constraints\nViolation will result in an error.\n\nCREATE TABLE CountryListCensus (\n    Id INT,\n    CountryName VARCHAR(255) NOT NULL,\n    CountryPopulation INT CHECK(CountryPopulation &gt; 0),\n    LastCensus DATE,\n    NextCensus DATE,\n    CHECK(LastCensus&lt;NextCensus),\n    PRIMARY KEY (Id)\n);"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#loading-data",
    "href": "slides/2024-01-18-db-etc.html#loading-data",
    "title": "SQL Extras",
    "section": "Loading data",
    "text": "Loading data\nImporting .csv files as tables, a series of steps:1\n\na USE statement that ensures we are in the right schema/database.\na series of DROP TABLE statements that drop any old tables with the same names as the ones we are going to create.\na series of CREATE TABLE statements that specify the table structures.\na series of COPY statements that read the data from the .csv files into the appropriate tables."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#loading-step-1-use",
    "href": "slides/2024-01-18-db-etc.html#loading-step-1-use",
    "title": "SQL Extras",
    "section": "Loading step 1, USE",
    "text": "Loading step 1, USE\nUse the (local) database that we’ve called duck_datab.\n\n```{sql}\n#| connection: con_duckdb\n\nUSE duck_datab;\n```"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#loading-step-2-refresh",
    "href": "slides/2024-01-18-db-etc.html#loading-step-2-refresh",
    "title": "SQL Extras",
    "section": "Loading step 2, refresh",
    "text": "Loading step 2, refresh\nMake sure to “refresh” the table, in case it already exists. However, be very careful with the DROP TABLE statement, as it removes the casts table.\n\nDROP TABLE IF EXISTS casts;"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#loading-step-3-create-table",
    "href": "slides/2024-01-18-db-etc.html#loading-step-3-create-table",
    "title": "SQL Extras",
    "section": "Loading step 3, CREATE TABLE",
    "text": "Loading step 3, CREATE TABLE\nCarefully define the variable types, whether or not they allow missing values, and what a default value is for that variable. Additionally, identify the key for accessing information.\n\nCREATE TABLE casts (\n  aid VARCHAR(255) NOT NULL DEFAULT '',\n  sid INTEGER NOT NULL DEFAULT 0,\n  featured BOOLEAN NOT NULL DEFAULT 'false',\n  first_epid INTEGER DEFAULT 0,\n  last_epid INTEGER DEFAULT 0,\n  update_anchor BOOLEAN NOT NULL DEFAULT 0,\n  n_episodes INTEGER NOT NULL DEFAULT 0,\n  season_fraction DECIMAL(21,20) NOT NULL DEFAULT 0,\n  PRIMARY KEY (sid, aid)\n);"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#loading-step-4-copy",
    "href": "slides/2024-01-18-db-etc.html#loading-step-4-copy",
    "title": "SQL Extras",
    "section": "Loading step 4, COPY",
    "text": "Loading step 4, COPY\nThe .csv file lives on my computer, so I load it in directly. [n.b., the statement to load in data is different in MySQL.]\n\nCOPY casts FROM 'data/casts.csv' HEADER;"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#checking-the-loading-select",
    "href": "slides/2024-01-18-db-etc.html#checking-the-loading-select",
    "title": "SQL Extras",
    "section": "Checking the loading, SELECT",
    "text": "Checking the loading, SELECT\n\nSELECT * FROM casts LIMIT 8;\n\n\n\n\n\nTable 1: After CREATE TABLE where variable types are set, the COPY command pulls the data into the table. SELECT shows us that the table is as expected.\n\n\naid\nsid\nfeatured\nfirst_epid\nlast_epid\nupdate_anchor\nn_episodes\nseason_fraction\n\n\n\n\nA. Whitney Brown\n11\nTRUE\n19860222\n\nFALSE\n8\n0.444\n\n\nA. Whitney Brown\n12\nTRUE\n\n\nFALSE\n20\n1.000\n\n\nA. Whitney Brown\n13\nTRUE\n\n\nFALSE\n13\n1.000\n\n\nA. Whitney Brown\n14\nTRUE\n\n\nFALSE\n20\n1.000\n\n\nA. Whitney Brown\n15\nTRUE\n\n\nFALSE\n20\n1.000\n\n\nA. Whitney Brown\n16\nTRUE\n\n\nFALSE\n20\n1.000\n\n\nAlan Zweibel\n5\nTRUE\n19800409\n\nFALSE\n5\n0.250\n\n\nSasheer Zamata\n39\nTRUE\n20140118\n\nFALSE\n11\n0.524"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#check-the-database",
    "href": "slides/2024-01-18-db-etc.html#check-the-database",
    "title": "SQL Extras",
    "section": "Check the database",
    "text": "Check the database\nLet’s make sure that the database exists and that the table in the database exists.\n\nSHOW DATABASES;\n\n\n\n\n1 records\n\n\n\n\ndatabase_name\n\n\n\n\n\n\nduck_datab"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#check-the-database-1",
    "href": "slides/2024-01-18-db-etc.html#check-the-database-1",
    "title": "SQL Extras",
    "section": "Check the database",
    "text": "Check the database\nLet’s make sure that the database exists and that the table in the database exists.\n\nSHOW TABLES;\n\n\n\n\n1 records\n\n\n\n\nname\n\n\n\n\n\n\ncasts"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#check-the-database-2",
    "href": "slides/2024-01-18-db-etc.html#check-the-database-2",
    "title": "SQL Extras",
    "section": "Check the database",
    "text": "Check the database\nLet’s make sure that the database exists and that the table in the database exists.\n\nDESCRIBE casts;\n\n\n\n\n\nTable 2: DESCRIBE variables in the casts table.\n\n\ncolumn_name\ncolumn_type\nnull\nkey\ndefault\nextra\n\n\n\n\naid\nVARCHAR\nNO\nPRI\n''\n\n\n\nsid\nINTEGER\nNO\nPRI\n0\n\n\n\nfeatured\nBOOLEAN\nNO\n\n'false'\n\n\n\nfirst_epid\nINTEGER\nYES\n\n0\n\n\n\nlast_epid\nINTEGER\nYES\n\n0\n\n\n\nupdate_anchor\nBOOLEAN\nNO\n\n0\n\n\n\nn_episodes\nINTEGER\nNO\n\n0\n\n\n\nseason_fraction\nDECIMAL(21,20)\nNO\n\n0"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#efficiencies",
    "href": "slides/2024-01-18-db-etc.html#efficiencies",
    "title": "SQL Extras",
    "section": "Efficiencies",
    "text": "Efficiencies\nReconsider this analogy:\n\nEach library (database) has books (tables). Each book (table) has pages (rows). Each page (row) has a unique page number to identify it (key value); to find a particular page, you sort through the page numbers (key values). But it isn’t immediately obvious where the particular page of interest is, you might have to page through the book a little bit to find the page of interest. It would be easier if you had several bookmarks throughout the book to anchor some of the page numbers. For example, if you want page 1047 and you have a bookmark on page 1050, you only have to turn back three pages. The bookmark is an index, it helps you find the desired rows much more quickly.1\n\nAnalogy taken from: https://www.quora.com/profile/Lara-Mazilu"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#key",
    "href": "slides/2024-01-18-db-etc.html#key",
    "title": "SQL Extras",
    "section": "Key",
    "text": "Key\nKeys are unique identifiers for each row, used primarily for connecting tables. Keys are generally not helpful for efficiency, but they are important for data integrity and relationships between tables.\n\nPRIMARY KEY is a column or set of columns that uniquely identify each row. Primary keys cannot be NULL.\nFOREIGN KEY is a column or set of columns that reference a primary key in a different table. A foreign key can be NULL."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#index",
    "href": "slides/2024-01-18-db-etc.html#index",
    "title": "SQL Extras",
    "section": "Index",
    "text": "Index\nIndices are the crux of why SQL is so much more efficient than, say, R. An index is a lookup table that helps SQL keep track of which records contain certain values. By indexing the rows, SQL is able to optimize sorting and joining tables. The index is created in advance (when the table is created) and saved to disk, which can take up substantial space on the disk. Sometimes more than one variable is used to index the table. There are trade-offs to having a lot of indices (disk space but fast wrangling) versus a few indices (slow wrangling but less space)."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#find-keys-and-indices",
    "href": "slides/2024-01-18-db-etc.html#find-keys-and-indices",
    "title": "SQL Extras",
    "section": "Find keys and indices",
    "text": "Find keys and indices\nIn MySQL the commands SHOW KEYS and SHOW INDEXES provide information about the keys and indices for each table."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#partitioning",
    "href": "slides/2024-01-18-db-etc.html#partitioning",
    "title": "SQL Extras",
    "section": "Partitioning",
    "text": "Partitioning\nAnother way to speed up query retrievals is to partition the data tables. If, for example, the SNL queries were always done by year, then the episodes table could be partitioned such that they are stored as separate tables (one per year). The partitioning functions as an index on year. The user would not be able to tell the difference between the unpartitioned episodes table and the partitioned one. However, queries done by year would be faster. Queries done grouped in another way would be slower."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#best-practice",
    "href": "slides/2024-01-18-db-etc.html#best-practice",
    "title": "SQL Extras",
    "section": "Best practice",
    "text": "Best practice\nIt is always a good idea to terminate the SQL connection when you are done with it.\n\ndbDisconnect(con_air, shutdown = TRUE)"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#footnotes",
    "href": "slides/2024-01-18-db-etc.html#footnotes",
    "title": "SQL Extras",
    "section": "Footnotes",
    "text": "Footnotes\n\n\ntaken from MDSR.↩︎"
  },
  {
    "objectID": "handout/lab5_creating_db_sds261_j24.html#disconnect-from-the-server",
    "href": "handout/lab5_creating_db_sds261_j24.html#disconnect-from-the-server",
    "title": "Lab 5 - creating databases",
    "section": "Disconnect from the server",
    "text": "Disconnect from the server"
  },
  {
    "objectID": "handout/lab5_creating_db_sds261_j24_sol.html#disconnect-from-the-server",
    "href": "handout/lab5_creating_db_sds261_j24_sol.html#disconnect-from-the-server",
    "title": "Lab 5 - creating databases",
    "section": "Disconnect from the server",
    "text": "Disconnect from the server"
  },
  {
    "objectID": "handout/lab6_editing_db_sds261_j24.html#disconnect-from-the-server",
    "href": "handout/lab6_editing_db_sds261_j24.html#disconnect-from-the-server",
    "title": "Lab 6 - editing databases",
    "section": "Disconnect from the server",
    "text": "Disconnect from the server\n\ndbDisconnect(con_college, shutdown = TRUE)"
  },
  {
    "objectID": "handout/lab6_editing_db_sds261_j24_sol.html#disconnect-from-the-server",
    "href": "handout/lab6_editing_db_sds261_j24_sol.html#disconnect-from-the-server",
    "title": "Lab 6 - editing databases",
    "section": "Disconnect from the server",
    "text": "Disconnect from the server\n\ndbDisconnect(con_college, shutdown = TRUE)"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#changing-data",
    "href": "slides/2024-01-17-editing-db.html#changing-data",
    "title": "Editing Databases",
    "section": "",
    "text": "The UPDATE function allows you to change a value in a table across all rows that match a certain criteria.\n\nSELECT * FROM impressions \n   WHERE name LIKE 'Ivanka%';\n\n\n5 records\n\n\nimpid\naid\nname\n\n\n\n\n2598\nScarlett Johansson\nIvanka Trump\n\n\n3716\nEmily Blunt\nIvanka Trump\n\n\n3694\nMargot Robbie\nIvanka Trump\n\n\n3679\nVanessa Bayer\nIvanka Trump\n\n\n2340\nMaya Rudolph\nIvanka Trump"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#update",
    "href": "slides/2024-01-17-editing-db.html#update",
    "title": "Editing Databases",
    "section": "",
    "text": "For funsies, let’s change Ivanka Trump to Ivanka Kushner.\n\nUPDATE impressions\n   SET name = 'Ivanka Kushner'\n   WHERE name LIKE 'Ivanka%';\n\n\nSELECT * FROM impressions \n   WHERE name LIKE 'Ivanka%';\n\n\n5 records\n\n\nimpid\naid\nname\n\n\n\n\n2598\nScarlett Johansson\nIvanka Kushner\n\n\n3716\nEmily Blunt\nIvanka Kushner\n\n\n3694\nMargot Robbie\nIvanka Kushner\n\n\n3679\nVanessa Bayer\nIvanka Kushner\n\n\n2340\nMaya Rudolph\nIvanka Kushner"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#update-1",
    "href": "slides/2024-01-17-editing-db.html#update-1",
    "title": "Editing Databases",
    "section": "",
    "text": "Watch out!\n\n\n\nBe careful with UPDATE. A careless UPDATE could write over all of the data in your table. There is no undo function."
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#inserting-data",
    "href": "slides/2024-01-17-editing-db.html#inserting-data",
    "title": "Editing Databases",
    "section": "",
    "text": "Task: include recent hosts in the hosts table.\nBy searching the SNL archives, we can see that the next host, chronologically was Elon Musk on May 8, 2021.\n\n\n\n\n\n\n\n\nFigure 2: Hosts information from snlarchives.net"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#inserting-data-1",
    "href": "slides/2024-01-17-editing-db.html#inserting-data-1",
    "title": "Editing Databases",
    "section": "",
    "text": "Task: include recent hosts in the hosts table.\nBy searching the SNL archives, we can see that the next host, chronologically was Elon Musk on May 8, 2021.\n\nSELECT * FROM hosts\n    ORDER BY epid DESC\n    LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\nepid\naid\n\n\n\n\n20210410\nCarey Mulligan\n\n\n20210403\nDaniel Kaluuya\n\n\n20210327\nMaya Rudolph\n\n\n20210227\nNick Jonas\n\n\n20210220\nRege-Jean Page\n\n\n20210213\nRegina King\n\n\n20210206\nDan Levy\n\n\n20210130\nJohn Krasinski\n\n\n20201219\nKristen Wiig\n\n\n20201212\nTimothee Chalamet"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#inserting-data-2",
    "href": "slides/2024-01-17-editing-db.html#inserting-data-2",
    "title": "Editing Databases",
    "section": "",
    "text": "INSERT allows us to add the relevant information associated with the episode of SNL that Elon Musk hosted.\n\nINSERT INTO hosts (epid, aid)\n   VALUES ('20210508', 'Elon Musk');\n\n\nSELECT * FROM hosts\n    ORDER BY epid DESC\n    LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\nepid\naid\n\n\n\n\n20210508\nElon Musk\n\n\n20210410\nCarey Mulligan\n\n\n20210403\nDaniel Kaluuya\n\n\n20210327\nMaya Rudolph\n\n\n20210227\nNick Jonas\n\n\n20210220\nRege-Jean Page\n\n\n20210213\nRegina King\n\n\n20210206\nDan Levy\n\n\n20210130\nJohn Krasinski\n\n\n20201219\nKristen Wiig"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#inserting-data-3",
    "href": "slides/2024-01-17-editing-db.html#inserting-data-3",
    "title": "Editing Databases",
    "section": "",
    "text": "It would be tedious to INSERT all of the most recent host information by hand. Instead, we’ll scrape the SNL archives using the R package rvest, which allows us to pull out the appropriate html elements. The epid and aid are joined together in a tibble, and filtered to only include episodes which are not already in the episodes table.\n\nlibrary(rvest)\n\nrecent_hosts &lt;- read_html(\"http://www.snlarchives.net/Episodes/\") |&gt;\n  html_nodes(\"tr\") |&gt;\n  purrr::map_df( ~ tibble(\n    epid = .x |&gt; html_node(\"a.ms-2.me-2\") |&gt;\n      html_attr(\"href\") |&gt;\n      str_extract(\"\\\\d+\"),\n    aid = .x |&gt; html_node(\"td:nth-child(2)\") |&gt;\n      html_text2() |&gt;\n      str_extract(\"[\\\\w\\\\. \\\\w\\\\.]+(?=/|$)\")\n  )) |&gt;\n  filter(epid &gt; 20210508)\n\n\nwrite_csv(recent_hosts, \"data/recent_hosts.csv\")"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#deleting-data",
    "href": "slides/2024-01-17-editing-db.html#deleting-data",
    "title": "Editing Databases",
    "section": "",
    "text": "You might change your mind and decide that you really only want hosts from years up to 2022. The DELETE function deletes any rows specified by the WHERE clause.\n\nDELETE FROM hosts\n   WHERE epid &gt; 20221231;\n\n\nSELECT * FROM hosts\n  ORDER BY epid DESC\n  LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\nepid\naid\n\n\n\n\n20221217\nAustin Butler\n\n\n20221210\nMartin Short\n\n\n20221203\nKeke Palmer\n\n\n20221112\nDave Chappelle\n\n\n20221105\nAmy Schumer\n\n\n20221029\nJack Harlow\n\n\n20221015\nMegan Thee Stallion\n\n\n20221008\nBrendan Gleeson\n\n\n20221001\nMiles Teller\n\n\n20220521\nNatasha Lyonne"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#altering-the-table",
    "href": "slides/2024-01-17-editing-db.html#altering-the-table",
    "title": "Editing Databases",
    "section": "",
    "text": "ALTER TABLE changes the structure of a table. For example, you can add or delete columns, create or destroy indexes, change the type of existing columns, or rename columns or the table itself.\nMultiple ADD, ALTER, DROP, and CHANGE clauses are permitted in a single ALTER TABLE statement, separated by commas.\nCaveat: I have found DuckDB to be slightly finicky in some of the operations…"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#inserting-data-4",
    "href": "slides/2024-01-17-editing-db.html#inserting-data-4",
    "title": "Editing Databases",
    "section": "",
    "text": "INSERT INTO hosts\n   SELECT *\n   FROM READ_CSV('data/recent_hosts.csv', AUTO_DETECT = TRUE);\n\n\nSELECT * FROM hosts\n  ORDER BY epid DESC\n  LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\nepid\naid\n\n\n\n\n20240518\nJake Gyllenhaal\n\n\n20240511\nMaya Rudolph\n\n\n20240504\nDua Lipa\n\n\n20240413\nRyan Gosling\n\n\n20240406\nKristen Wiig\n\n\n20240330\nRamy Youssef\n\n\n20240309\nJosh Brolin\n\n\n20240302\nSydney Sweeney\n\n\n20240224\nShane Gillis\n\n\n20240203\nAyo Edebiri"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#altering-the-table-drop-columns",
    "href": "slides/2024-01-17-editing-db.html#altering-the-table-drop-columns",
    "title": "Editing Databases",
    "section": "",
    "text": "ALTER TABLE t1\nDROP COLUMN col1,\nDROP COLUMN col2;"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#altering-the-table-change-name-and-definition",
    "href": "slides/2024-01-17-editing-db.html#altering-the-table-change-name-and-definition",
    "title": "Editing Databases",
    "section": "",
    "text": "rename an INT NOT NULL column from a to b and change its definition to use the BIGINT data type while retaining the NOT NULL attribute.\n\n\nALTER TABLE t1 CHANGE a b BIGINT NOT NULL;"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#altering-the-table-change-definition-not-name",
    "href": "slides/2024-01-17-editing-db.html#altering-the-table-change-definition-not-name",
    "title": "Editing Databases",
    "section": "",
    "text": "CHANGE, the syntax requires two column names, so you must specify the same name twice to leave the name unchanged. For example, to change the definition of column b.\n\n\nALTER TABLE t1 CHANGE b b INT NOT NULL;"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#altering-the-table-modify-definition",
    "href": "slides/2024-01-17-editing-db.html#altering-the-table-modify-definition",
    "title": "Editing Databases",
    "section": "",
    "text": "MODIFY is more convenient to change the definition without changing the name because it requires the column name only once.\n\n\nALTER TABLE t1 MODIFY b INT NOT NULL;"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#altering-the-table-change-name-not-definition",
    "href": "slides/2024-01-17-editing-db.html#altering-the-table-change-name-not-definition",
    "title": "Editing Databases",
    "section": "",
    "text": "CHANGE, the syntax requires a column definition, so to leave the definition unchanged, you must respecify the definition the column currently has. For example, to rename an INT NOT NULL column from b to a.\n\n\nALTER TABLE t1 CHANGE b a INT NOT NULL;"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#altering-the-table-rename-column-name-not-definition",
    "href": "slides/2024-01-17-editing-db.html#altering-the-table-rename-column-name-not-definition",
    "title": "Editing Databases",
    "section": "",
    "text": "RENAME COLUMN is more convenient to change the name without changing the definition because it requires only the old and new names.\n\n\nALTER TABLE t1 RENAME COLUMN b TO a;"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#altering-the-table-rename-column-multiple-columns",
    "href": "slides/2024-01-17-editing-db.html#altering-the-table-rename-column-multiple-columns",
    "title": "Editing Databases",
    "section": "",
    "text": "cannot RENAME COLUMN to a column name that already exists. The following are valid.\n\n\n/* swap a and b */\nALTER TABLE t1 RENAME COLUMN a TO b,\n               RENAME COLUMN b TO a;\n\n/* \"rotate\" a, b, c through a cycle */\nALTER TABLE t1 RENAME COLUMN a TO b,\n               RENAME COLUMN b TO c,\n               RENAME COLUMN c TO a;"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#temporary-tables",
    "href": "slides/2024-01-17-editing-db.html#temporary-tables",
    "title": "Editing Databases",
    "section": "",
    "text": "Temporary tables are used to break down complex queries into smaller, more manageable steps. For example, let’s say we want to JOIN two tables after each has been filtered using different WHERE clauses. The filtered tables can each be saved into their own temporary tables and then the temporary tables can be merged.\nTables in DuckDB are saved (to disk), even when the connection is closed. However, temporary tables are saved in memory (instead of on disk) and are deleted when the connection is closed."
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#temporary-tables-1",
    "href": "slides/2024-01-17-editing-db.html#temporary-tables-1",
    "title": "Editing Databases",
    "section": "",
    "text": "We wouldn’t want to wrangle the date every single time we used the data.\n\nCREATE TEMP TABLE episodes_date AS\n    SELECT *, CASE\n             WHEN POSITION(',' IN aired) &gt; 0 THEN\n    EXTRACT(YEAR FROM CAST(\n                SUBSTRING(aired, POSITION(',' IN aired) + 2) || '-' ||\n                CASE\n                    WHEN POSITION('January' IN aired) &gt; 0 THEN '01'\n                    WHEN POSITION('February' IN aired) &gt; 0 THEN '02'\n                    WHEN POSITION('March' IN aired) &gt; 0 THEN '03'\n                    WHEN POSITION('April' IN aired) &gt; 0 THEN '04'\n                    WHEN POSITION('May' IN aired) &gt; 0 THEN '05'\n                    WHEN POSITION('June' IN aired) &gt; 0 THEN '06'\n                    WHEN POSITION('July' IN aired) &gt; 0 THEN '07'\n                    WHEN POSITION('August' IN aired) &gt; 0 THEN '08'\n                    WHEN POSITION('September' IN aired) &gt; 0 THEN '09'\n                    WHEN POSITION('October' IN aired) &gt; 0 THEN '10'\n                    WHEN POSITION('November' IN aired) &gt; 0 THEN '11'\n                    WHEN POSITION('December' IN aired) &gt; 0 THEN '12'\n                    ELSE '01' -- Default to January if no month is found\n                END || '-' ||\n                SUBSTRING(aired, POSITION(' ' IN aired) + 1, 2) AS DATE\n            ))\n            END AS year FROM episodes;"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#temporary-tables-hosts",
    "href": "slides/2024-01-17-editing-db.html#temporary-tables-hosts",
    "title": "Editing Databases",
    "section": "Temporary Tables (hosts)",
    "text": "Temporary Tables (hosts)\n\nSELECT * FROM hosts LIMIT 10;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nepid\n\n\naid\n\n\n\n\n\n\n20210410\n\n\nCarey Mulligan\n\n\n\n\n20210403\n\n\nDaniel Kaluuya\n\n\n\n\n20210327\n\n\nMaya Rudolph\n\n\n\n\n20210227\n\n\nNick Jonas\n\n\n\n\n20210220\n\n\nRege-Jean Page\n\n\n\n\n20210213\n\n\nRegina King\n\n\n\n\n20210206\n\n\nDan Levy\n\n\n\n\n20210130\n\n\nJohn Krasinski\n\n\n\n\n20201219\n\n\nKristen Wiig\n\n\n\n\n20201212\n\n\nTimothee Chalamet"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#temporary-tables-episodes",
    "href": "slides/2024-01-17-editing-db.html#temporary-tables-episodes",
    "title": "Editing Databases",
    "section": "",
    "text": "SELECT * FROM episodes LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\nsid\nepid\naired\nepno\n\n\n\n\n46\n20210410\nApril 10, 2021\n17\n\n\n46\n20210403\nApril 3, 2021\n16\n\n\n46\n20210327\nMarch 27, 2021\n15\n\n\n46\n20210227\nFebruary 27, 2021\n14\n\n\n46\n20210220\nFebruary 20, 2021\n13\n\n\n46\n20210213\nFebruary 13, 2021\n12\n\n\n46\n20210206\nFebruary 6, 2021\n11\n\n\n46\n20210130\nJanuary 30, 2021\n10\n\n\n46\n20201219\nDecember 19, 2020\n9\n\n\n46\n20201212\nDecember 12, 2020\n8"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#temporary-table-exists",
    "href": "slides/2024-01-17-editing-db.html#temporary-table-exists",
    "title": "Editing Databases",
    "section": "",
    "text": "SELECT * FROM episodes_date LIMIT 10;\n\n\nDisplaying records 1 - 10\n\n\nsid\nepid\naired\nepno\nyear\n\n\n\n\n46\n20210410\nApril 10, 2021\n17\n2021\n\n\n46\n20210403\nApril 3, 2021\n16\n2021\n\n\n46\n20210327\nMarch 27, 2021\n15\n2021\n\n\n46\n20210227\nFebruary 27, 2021\n14\n2021\n\n\n46\n20210220\nFebruary 20, 2021\n13\n2021\n\n\n46\n20210213\nFebruary 13, 2021\n12\n2021\n\n\n46\n20210206\nFebruary 6, 2021\n11\n2021\n\n\n46\n20210130\nJanuary 30, 2021\n10\n2021\n\n\n46\n20201219\nDecember 19, 2020\n9\n2020\n\n\n46\n20201212\nDecember 12, 2020\n8\n2020"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#using-a-temporary-table",
    "href": "slides/2024-01-17-editing-db.html#using-a-temporary-table",
    "title": "Editing Databases",
    "section": "",
    "text": "Now that the year variable has been created in the new temporary table called episodes_date, we can use episode_date to query and find, for example, all of the hosts in 2019.\n\nSELECT hosts.aid, ep.aired, ep.year FROM hosts \nJOIN episodes_date AS ep ON hosts.epid = ep.epid\nWHERE year = 2019\nLIMIT 25;\n\n\nDisplaying records 1 - 10\n\n\naid\naired\nyear\n\n\n\n\nEddie Murphy\nDecember 21, 2019\n2019\n\n\nScarlett Johansson\nDecember 14, 2019\n2019\n\n\nJennifer Lopez\nDecember 7, 2019\n2019\n\n\nWill Ferrell\nNovember 23, 2019\n2019\n\n\nHarry Styles\nNovember 16, 2019\n2019\n\n\nKristen Stewart\nNovember 2, 2019\n2019\n\n\nChance the Rapper\nOctober 26, 2019\n2019\n\n\nDavid Harbour\nOctober 12, 2019\n2019\n\n\nPhoebe Waller-Bridge\nOctober 5, 2019\n2019\n\n\nWoody Harrelson\nSeptember 28, 2019\n2019"
  },
  {
    "objectID": "slides/2024-01-17-editing-db.html#what-does-position-do",
    "href": "slides/2024-01-17-editing-db.html#what-does-position-do",
    "title": "Editing Databases",
    "section": "",
    "text": "In case you are curious about the date wrangling code… consider SUBSTRING(aired, POSITION(',' IN aired) + 2)\n\nPOSITION(',' IN aired): This part of the expression uses the POSITION function to find the position of the first occurrence of the comma (,) in the string aired. The result is the index (position) of the comma within the string.\nPOSITION(',' IN aired) + 2: This adds 2 to the index of the comma. The + 2 is used to move the starting point of the substring two positions to the right of the comma. This is done to exclude the comma itself and any following spaces.\nSUBSTRING(aired, POSITION(',' IN aired) + 2): This part uses the SUBSTRING function to extract a substring from the string aired. The starting position of the substring is determined by POSITION(',' IN aired) + 2, and it goes until the end of the string. This effectively removes the part of the string that comes before and including the first comma.\n\nIn summary, the entire expression is extracting a substring from the original string aired, starting from two positions to the right of the first comma and continuing until the end of the string. This can be useful in scenarios where you want to remove or isolate part of a string based on the position of a specific character (in this case, the comma)."
  },
  {
    "objectID": "handout/tempqmd.html",
    "href": "handout/tempqmd.html",
    "title": "Untitled",
    "section": "",
    "text": "words here are perfect\n\nrnorm(10)\n\n [1]  0.32076290 -0.27356519  1.32280634 -0.53182529 -0.36214646  0.30805779\n [7]  0.53618050 -0.66224235 -0.04290013  0.07816006\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#back-to-the-flights",
    "href": "slides/2024-01-18-db-etc.html#back-to-the-flights",
    "title": "SQL Extras",
    "section": "Back to the flights",
    "text": "Back to the flights\nThe examples below use the airlines database, including the flights, carriers, airports, and planes tables."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#keys",
    "href": "slides/2024-01-18-db-etc.html#keys",
    "title": "SQL Extras",
    "section": "KEYs",
    "text": "KEYs\nKeys are unique identifiers for each row, used primarily for connecting tables. Keys are generally not helpful for efficiency, but they are important for data integrity and relationships between tables. A key is a pointer that identifies a record. In practice, a key is one or more columns that are earmarked to uniquely identify a record in a table. Keys serve two main purposes:\n\nThey provide constraints on the column such as that it can’t store duplicate or null values.\nThey are also used to generate relationships among different tables."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#indexes",
    "href": "slides/2024-01-18-db-etc.html#indexes",
    "title": "SQL Extras",
    "section": "INDEXes",
    "text": "INDEXes\n\nBy indexing the rows, SQL is able to optimize sorting and joining tables.\nThe index is created in advance (when the table is created) and saved to disk, which can take up substantial space on the disk.\nSometimes more than one variable is used to index the table.\nThere are trade-offs to having a lot of indexes (disk space but fast wrangling) versus a few indexes (slow wrangling but less space).\nA table may have more than one index but you shouldn’t add indexes to every column in a table, as these have to be updated for every addition/update/delete to the column.\nIndexes should be added to columns that are frequently included in queries."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#show-indexes",
    "href": "slides/2024-01-18-db-etc.html#show-indexes",
    "title": "SQL Extras",
    "section": "SHOW INDEXES",
    "text": "SHOW INDEXES\nNotice that the planes table has a single PRIMARY key. That primary key is used to index the table. The flights table has no PRIMARY key, but it does have six different indexes: Year, Date, Origin, Dest, Carrier, and tailNum.\n\nSHOW INDEXES FROM planes;\n\n\n\n\n1 records\n\n\n\n\nTable\n\n\nNon_unique\n\n\nKey_name\n\n\nSeq_in_index\n\n\nColumn_name\n\n\nCollation\n\n\nCardinality\n\n\nSub_part\n\n\nPacked\n\n\nNull\n\n\nIndex_type\n\n\nComment\n\n\nIndex_comment\n\n\n\n\n\n\nplanes\n\n\n0\n\n\nPRIMARY\n\n\n1\n\n\ntailnum\n\n\nA\n\n\n3322\n\n\n\n\n\n\n\n\nBTREE\n\n\n\n\n\n\n\n\n\n\n\n\nSHOW INDEXES FROM flights;\n\n\n\n\n8 records\n\n\n\n\nTable\n\n\nNon_unique\n\n\nKey_name\n\n\nSeq_in_index\n\n\nColumn_name\n\n\nCollation\n\n\nCardinality\n\n\nSub_part\n\n\nPacked\n\n\nNull\n\n\nIndex_type\n\n\nComment\n\n\nIndex_comment\n\n\n\n\n\n\nflights\n\n\n1\n\n\nYear\n\n\n1\n\n\nyear\n\n\nA\n\n\n7\n\n\n\n\n\n\nYES\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\nDate\n\n\n1\n\n\nyear\n\n\nA\n\n\n7\n\n\n\n\n\n\nYES\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\nDate\n\n\n2\n\n\nmonth\n\n\nA\n\n\n89\n\n\n\n\n\n\nYES\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\nDate\n\n\n3\n\n\nday\n\n\nA\n\n\n2712\n\n\n\n\n\n\nYES\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\nOrigin\n\n\n1\n\n\norigin\n\n\nA\n\n\n2267\n\n\n\n\n\n\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\nDest\n\n\n1\n\n\ndest\n\n\nA\n\n\n2267\n\n\n\n\n\n\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\nCarrier\n\n\n1\n\n\ncarrier\n\n\nA\n\n\n134\n\n\n\n\n\n\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\ntailNum\n\n\n1\n\n\ntailnum\n\n\nA\n\n\n37862\n\n\n\n\n\n\nYES\n\n\nBTREE"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#show-indexes-1",
    "href": "slides/2024-01-18-db-etc.html#show-indexes-1",
    "title": "SQL Extras",
    "section": "SHOW INDEXES",
    "text": "SHOW INDEXES\nThe values output by SHOW INDEXES are:1\n\nTable: The name of the table.\nNon_unique: 0 if the index cannot contain duplicates, 1 if it can.\nKey_name: The name of the index. If the index is the primary key, the name is always PRIMARY.\nSeq_in_index: The column sequence number in the index, starting with 1.\nColumn_name: The column name. See also the description for the Expression column.\nCollation: How the column is sorted in the index. This can have values A (ascending), D (descending), or NULL (not sorted).\nCardinality: An estimate of the number of unique values in the index.\nSub_part: The index prefix. That is, the number of indexed characters if the column is only partly indexed, NULL if the entire column is indexed.\nPacked: Indicates how the key is packed. NULL if it is not.\nNull: Contains YES if the column may contain NULL values and ’’ if not.\nIndex_type: The index method used (BTREE, FULLTEXT, HASH, RTREE).\nComment: Information about the index not described in its own column, such as disabled if the index is disabled.\nIndex_comment: Any comment provided for the index with a COMMENT attribute when the index was created.\n\nTaken from: https://dev.mysql.com/doc/refman/8.0/en/show-index.html"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#querying-quickly",
    "href": "slides/2024-01-18-db-etc.html#querying-quickly",
    "title": "SQL Extras",
    "section": "Querying quickly",
    "text": "Querying quickly\nIndexes are built to accommodate the specific queries that are most likely to be run. However, you might not know which queries are going to be run, so it isn’t always obviously how to index a table.\n\nSHOW INDEXES FROM flights;\n\n\n\n\n8 records\n\n\n\n\nTable\n\n\nNon_unique\n\n\nKey_name\n\n\nSeq_in_index\n\n\nColumn_name\n\n\nCollation\n\n\nCardinality\n\n\nSub_part\n\n\nPacked\n\n\nNull\n\n\nIndex_type\n\n\nComment\n\n\nIndex_comment\n\n\n\n\n\n\nflights\n\n\n1\n\n\nYear\n\n\n1\n\n\nyear\n\n\nA\n\n\n7\n\n\n\n\n\n\nYES\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\nDate\n\n\n1\n\n\nyear\n\n\nA\n\n\n7\n\n\n\n\n\n\nYES\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\nDate\n\n\n2\n\n\nmonth\n\n\nA\n\n\n89\n\n\n\n\n\n\nYES\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\nDate\n\n\n3\n\n\nday\n\n\nA\n\n\n2712\n\n\n\n\n\n\nYES\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\nOrigin\n\n\n1\n\n\norigin\n\n\nA\n\n\n2267\n\n\n\n\n\n\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\nDest\n\n\n1\n\n\ndest\n\n\nA\n\n\n2267\n\n\n\n\n\n\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\nCarrier\n\n\n1\n\n\ncarrier\n\n\nA\n\n\n134\n\n\n\n\n\n\n\n\nBTREE\n\n\n\n\n\n\n\n\nflights\n\n\n1\n\n\ntailNum\n\n\n1\n\n\ntailnum\n\n\nA\n\n\n37862\n\n\n\n\n\n\nYES\n\n\nBTREE"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#explain-with-distance",
    "href": "slides/2024-01-18-db-etc.html#explain-with-distance",
    "title": "SQL Extras",
    "section": "EXPLAIN with distance",
    "text": "EXPLAIN with distance\nEXPLAIN communicates how onerous the query is, without actually running it—saving you the time of having to wait for it to execute.\n\nEXPLAIN SELECT * FROM flights WHERE distance &gt; 3000;\n\n\n\n\n1 records\n\n\n\n\nid\n\n\nselect_type\n\n\ntable\n\n\npartitions\n\n\ntype\n\n\npossible_keys\n\n\nkey\n\n\nkey_len\n\n\nref\n\n\nrows\n\n\nfiltered\n\n\nExtra\n\n\n\n\n\n\n1\n\n\nSIMPLE\n\n\nflights\n\n\np1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32\n\n\nALL\n\n\n\n\n\n\n\n\n\n\n47932811\n\n\n33.3\n\n\nUsing where\n\n\n\n\n\n\n\nIf we were to run a query for long flights using the distance column the server will have to inspect each of the 48 million rows, because distance is not indexed. A query on a non-indexed variable is the slowest possible search and is often called a table scan. The 48 million number that you see in the rows column is an estimate of the number of rows that MySQL will have to consult in order to process your query. In general, more rows mean a slower query."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#explain-with-year",
    "href": "slides/2024-01-18-db-etc.html#explain-with-year",
    "title": "SQL Extras",
    "section": "EXPLAIN with year",
    "text": "EXPLAIN with year\nA search for recent flights using the year column, which has an index built on it, considers many fewer rows (about 6.3 million, those flights in 2013).\n\nEXPLAIN SELECT * FROM flights WHERE year = 2013;\n\n\n\n\n1 records\n\n\n\n\nid\n\n\nselect_type\n\n\ntable\n\n\npartitions\n\n\ntype\n\n\npossible_keys\n\n\nkey\n\n\nkey_len\n\n\nref\n\n\nrows\n\n\nfiltered\n\n\nExtra\n\n\n\n\n\n\n1\n\n\nSIMPLE\n\n\nflights\n\n\np27\n\n\nALL\n\n\nYear,Date\n\n\n\n\n\n\n\n\n6369482\n\n\n100\n\n\nUsing where"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#explain-with-year-and-month",
    "href": "slides/2024-01-18-db-etc.html#explain-with-year-and-month",
    "title": "SQL Extras",
    "section": "EXPLAIN with year and month",
    "text": "EXPLAIN with year and month\nIn a search by year and month, SQL uses the Date index. Only 700,000 rows are searched, those in June of 2013.\n\nEXPLAIN SELECT * FROM flights WHERE year = 2013 AND month = 6;\n\n\n\n\n1 records\n\n\n\n\nid\n\n\nselect_type\n\n\ntable\n\n\npartitions\n\n\ntype\n\n\npossible_keys\n\n\nkey\n\n\nkey_len\n\n\nref\n\n\nrows\n\n\nfiltered\n\n\nExtra\n\n\n\n\n\n\n1\n\n\nSIMPLE\n\n\nflights\n\n\np27\n\n\nref\n\n\nYear,Date\n\n\nDate\n\n\n6\n\n\nconst,const\n\n\n714535\n\n\n100"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#explain-with-month",
    "href": "slides/2024-01-18-db-etc.html#explain-with-month",
    "title": "SQL Extras",
    "section": "EXPLAIN with month",
    "text": "EXPLAIN with month\nIf we search for particular months across all years, the indexing does not help at all. The query results in a table scan.\n\nEXPLAIN SELECT * FROM flights WHERE month = 6;\n\n\n\n\n1 records\n\n\n\n\nid\n\n\nselect_type\n\n\ntable\n\n\npartitions\n\n\ntype\n\n\npossible_keys\n\n\nkey\n\n\nkey_len\n\n\nref\n\n\nrows\n\n\nfiltered\n\n\nExtra\n\n\n\n\n\n\n1\n\n\nSIMPLE\n\n\nflights\n\n\np1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32\n\n\nALL\n\n\n\n\n\n\n\n\n\n\n47932811\n\n\n10\n\n\nUsing where\n\n\n\n\n\n\n\nAlthough month is part of the Date index, it is the second column in the index, and thus it doesn’t help us when we aren’t filtering on year. Thus, if it were common for our users to search on month without year, it would probably be worth building an index on month. Were we to actually run these queries, there would be a significant difference in computational time."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#explain-with-join---faster",
    "href": "slides/2024-01-18-db-etc.html#explain-with-join---faster",
    "title": "SQL Extras",
    "section": "EXPLAIN with JOIN - faster",
    "text": "EXPLAIN with JOIN - faster\nThe cardinality of the index on tailnum is large (the number of rows in flights associated with each unique value of tailnum is small).\n\nEXPLAIN \n  SELECT * FROM planes p \n  LEFT JOIN flights o ON p.tailnum = o.TailNum\n  WHERE manufacturer = 'BOEING';\n\n\n\n\n2 records\n\n\n\n\nid\n\n\nselect_type\n\n\ntable\n\n\npartitions\n\n\ntype\n\n\npossible_keys\n\n\nkey\n\n\nkey_len\n\n\nref\n\n\nrows\n\n\nfiltered\n\n\nExtra\n\n\n\n\n\n\n1\n\n\nSIMPLE\n\n\np\n\n\n\n\nALL\n\n\n\n\n\n\n\n\n\n\n3322\n\n\n10\n\n\nUsing where\n\n\n\n\n1\n\n\nSIMPLE\n\n\no\n\n\np1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32\n\n\nref\n\n\ntailNum\n\n\ntailNum\n\n\n9\n\n\nairlines.p.tailnum\n\n\n1266\n\n\n100"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#explain-with-join---slower",
    "href": "slides/2024-01-18-db-etc.html#explain-with-join---slower",
    "title": "SQL Extras",
    "section": "EXPLAIN with JOIN - slower",
    "text": "EXPLAIN with JOIN - slower\n\nThe cardinality of the index on year is small (the number of rows in flights associated with each unique year is large).\n\n\nEXPLAIN \n  SELECT * FROM planes p \n  LEFT JOIN flights o ON p.Year = o.Year\n  WHERE manufacturer = 'BOEING';\n\n\n\n\n2 records\n\n\n\n\nid\n\n\nselect_type\n\n\ntable\n\n\npartitions\n\n\ntype\n\n\npossible_keys\n\n\nkey\n\n\nkey_len\n\n\nref\n\n\nrows\n\n\nfiltered\n\n\nExtra\n\n\n\n\n\n\n1\n\n\nSIMPLE\n\n\np\n\n\n\n\nALL\n\n\n\n\n\n\n\n\n\n\n3322\n\n\n10\n\n\nUsing where\n\n\n\n\n1\n\n\nSIMPLE\n\n\no\n\n\np1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32\n\n\nref\n\n\nYear,Date\n\n\nYear\n\n\n3\n\n\nairlines.p.year\n\n\n6450117\n\n\n100\n\n\nUsing where"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#sql-in-dbplyr",
    "href": "slides/2024-01-18-db-etc.html#sql-in-dbplyr",
    "title": "SQL Extras",
    "section": "SQL in dbplyr",
    "text": "SQL in dbplyr\nAs mentioned previously, dbplyr doesn’t translate every R command into SQL. After all, SQL is not a statistical software and doesn’t, for example, have a mechanism for creating data visualizations. To track which R commands are connected to SQL see the dbplyr reference sheet."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#median",
    "href": "slides/2024-01-18-db-etc.html#median",
    "title": "SQL Extras",
    "section": "Median",
    "text": "Median\nLet’s start with an example, calculating the median altitude in the airports table.1\n\nairports &lt;- tbl(con_air, \"airports\")\n\nhead(airports)\n\n# Source:   SQL [6 x 9]\n# Database: mysql  [mdsr_public@mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com:NA/airlines]\n  faa   name                           lat   lon   alt    tz dst   city  country\n  &lt;chr&gt; &lt;chr&gt;                        &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;  \n1 04G   Lansdowne Airport             41.1 -80.6  1044    -5 A     Youn… United…\n2 06A   Moton Field Municipal Airpo…  32.5 -85.7   264    -6 A     Tusk… United…\n3 06C   Schaumburg Regional           42.0 -88.1   801    -6 A     Scha… United…\n4 06N   Randall Airport               41.4 -74.4   523    -5 A     Midd… United…\n5 09J   Jekyll Island Airport         31.1 -81.4    11    -5 A     Jeky… United…\n6 0A9   Elizabethton Municipal Airp…  36.4 -82.2  1593    -5 A     Eliz… United…\n\n\nExample taken from: https://sebhastian.com/mysql-median/"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#median-1",
    "href": "slides/2024-01-18-db-etc.html#median-1",
    "title": "SQL Extras",
    "section": "Median",
    "text": "Median\nIt looks like show_query() is providing SQL code for calculating the median!\n\nmedian_query &lt;- airports |&gt;\n  summarize(med_alt = median(alt, na.rm = TRUE))\n\nshow_query(median_query)\n\n&lt;SQL&gt;\nSELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY `alt`) AS `med_alt`\nFROM `airports`"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#median-2",
    "href": "slides/2024-01-18-db-etc.html#median-2",
    "title": "SQL Extras",
    "section": "Median",
    "text": "Median\nBut when the SQL code is run, it doesn’t seem to work.\n\nSELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY `alt`) AS `med_alt`\nFROM `airports`;\n\nError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'GROUP (ORDER BY `alt`) AS `med_alt`\nFROM `airports`' at line 1 [1064]"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#median-3",
    "href": "slides/2024-01-18-db-etc.html#median-3",
    "title": "SQL Extras",
    "section": "Median",
    "text": "Median\nWhat happens when we computer the median on the tbl?\n\nairports |&gt;\n  summarize(med_alt = median(alt, na.rm = TRUE))\n\nError in `collect()`:\n! Failed to collect lazy table.\nCaused by error:\n! You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'GROUP (ORDER BY `alt`) AS `med_alt`\nFROM `airports`\nLIMIT 7' at line 1 [1064]"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#median-4",
    "href": "slides/2024-01-18-db-etc.html#median-4",
    "title": "SQL Extras",
    "section": "Median",
    "text": "Median\nHow can the median be calculated in SQL?\n\nSET @row_index := -1;\n\n\nSELECT AVG(subquery.alt) AS median_value\nFROM (\nSELECT @row_index:=@row_index + 1 AS row_index, alt\n  FROM airports\n  ORDER BY alt\n) AS subquery\nWHERE subquery.row_index IN (FLOOR(@row_index / 2), CEIL(@row_index / 2));\n\n\n\n\n1 records\n\n\n\n\nmedian_value\n\n\n\n\n\n\n476"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#median-5",
    "href": "slides/2024-01-18-db-etc.html#median-5",
    "title": "SQL Extras",
    "section": "Median",
    "text": "Median\nLet’s break down what the code is doing… First, set the row_index to -1 and iterate through by adding +1 for each row. Then concatenate the row_index information onto our table of interest. (Basically, create a column that gives a row value to the dataset, sorted by altitude.)\n\nSET @row_index := -1;\n\n\nSELECT @row_index:=@row_index + 1 AS row_index, alt\n  FROM airports\n  ORDER BY alt\n  LIMIT 10;\n\n\n\n\nDisplaying records 1 - 10\n\n\n\n\nrow_index\n\n\nalt\n\n\n\n\n\n\n0\n\n\n-54\n\n\n\n\n1\n\n\n-42\n\n\n\n\n2\n\n\n0\n\n\n\n\n3\n\n\n0\n\n\n\n\n4\n\n\n0\n\n\n\n\n5\n\n\n0\n\n\n\n\n6\n\n\n0\n\n\n\n\n7\n\n\n0\n\n\n\n\n8\n\n\n0\n\n\n\n\n9\n\n\n0"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#median-6",
    "href": "slides/2024-01-18-db-etc.html#median-6",
    "title": "SQL Extras",
    "section": "Median",
    "text": "Median\nNext, filter the data to include only the middle row or two rows.\n\nSET @row_index := -1;\n\n\nSELECT *\nFROM (\nSELECT @row_index:=@row_index + 1 AS row_index, alt\n  FROM airports\n  ORDER BY alt\n) AS subquery\nWHERE subquery.row_index IN (FLOOR(@row_index / 2), CEIL(@row_index / 2));\n\n\n\n\n2 records\n\n\n\n\nrow_index\n\n\nalt\n\n\n\n\n\n\n728\n\n\n474\n\n\n\n\n729\n\n\n477"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#median-7",
    "href": "slides/2024-01-18-db-etc.html#median-7",
    "title": "SQL Extras",
    "section": "Median",
    "text": "Median\nThe last step is to average the middle row(s). If only one row is pulled out in the previous query, then only one row will be averaged (which the computer does happily).\n\nSET @row_index := -1;\n\n\nSELECT AVG(subquery.alt) AS median_value\nFROM (\nSELECT @row_index:=@row_index + 1 AS row_index, alt\n  FROM airports\n  ORDER BY alt\n) AS subquery\nWHERE subquery.row_index IN (FLOOR(@row_index / 2), CEIL(@row_index / 2));\n\n\n\n\n1 records\n\n\n\n\nmedian_value\n\n\n\n\n\n\n476"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#case-when-and-ifelse",
    "href": "slides/2024-01-18-db-etc.html#case-when-and-ifelse",
    "title": "SQL Extras",
    "section": "CASE WHEN and ifelse()",
    "text": "CASE WHEN and ifelse()\nConsider the various R functions that create new variables based on an original variable.\n\nairports |&gt;\n  mutate(sea = ifelse(alt &gt; 500, \"above sea\", \"near sea\")) |&gt;\n  head(5)\n\n# Source:   SQL [5 x 10]\n# Database: mysql  [mdsr_public@mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com:NA/airlines]\n  faa   name                     lat   lon   alt    tz dst   city  country sea  \n  &lt;chr&gt; &lt;chr&gt;                  &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;\n1 04G   Lansdowne Airport       41.1 -80.6  1044    -5 A     Youn… United… abov…\n2 06A   Moton Field Municipal…  32.5 -85.7   264    -6 A     Tusk… United… near…\n3 06C   Schaumburg Regional     42.0 -88.1   801    -6 A     Scha… United… abov…\n4 06N   Randall Airport         41.4 -74.4   523    -5 A     Midd… United… abov…\n5 09J   Jekyll Island Airport   31.1 -81.4    11    -5 A     Jeky… United… near…"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#case-when-and-ifelse-1",
    "href": "slides/2024-01-18-db-etc.html#case-when-and-ifelse-1",
    "title": "SQL Extras",
    "section": "CASE WHEN and ifelse()",
    "text": "CASE WHEN and ifelse()\n\nif_query &lt;- airports |&gt;\n  mutate(sea = ifelse(alt &gt; 500, \"above sea\", \"near sea\"))\n\nshow_query(if_query)\n\n&lt;SQL&gt;\nSELECT\n  *,\n  CASE WHEN (`alt` &gt; 500.0) THEN 'above sea' WHEN NOT (`alt` &gt; 500.0) THEN 'near sea' END AS `sea`\nFROM `airports`"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#case-when-and-ifelse-2",
    "href": "slides/2024-01-18-db-etc.html#case-when-and-ifelse-2",
    "title": "SQL Extras",
    "section": "CASE WHEN and ifelse()",
    "text": "CASE WHEN and ifelse()\n\nSELECT *,\nCASE WHEN (`alt` &gt; 500.0) THEN 'above sea' WHEN NOT (`alt` &gt; 500.0) THEN 'near sea' END AS `sea`\nFROM `airports` \nLIMIT 5;\n\n\n\n\n5 records\n\n\n\n\nfaa\n\n\nname\n\n\nlat\n\n\nlon\n\n\nalt\n\n\ntz\n\n\ndst\n\n\ncity\n\n\ncountry\n\n\nsea\n\n\n\n\n\n\n04G\n\n\nLansdowne Airport\n\n\n41.1\n\n\n-80.6\n\n\n1044\n\n\n-5\n\n\nA\n\n\nYoungstown\n\n\nUnited States\n\n\nabove sea\n\n\n\n\n06A\n\n\nMoton Field Municipal Airport\n\n\n32.5\n\n\n-85.7\n\n\n264\n\n\n-6\n\n\nA\n\n\nTuskegee\n\n\nUnited States\n\n\nnear sea\n\n\n\n\n06C\n\n\nSchaumburg Regional\n\n\n42.0\n\n\n-88.1\n\n\n801\n\n\n-6\n\n\nA\n\n\nSchaumburg\n\n\nUnited States\n\n\nabove sea\n\n\n\n\n06N\n\n\nRandall Airport\n\n\n41.4\n\n\n-74.4\n\n\n523\n\n\n-5\n\n\nA\n\n\nMiddletown\n\n\nUnited States\n\n\nabove sea\n\n\n\n\n09J\n\n\nJekyll Island Airport\n\n\n31.1\n\n\n-81.4\n\n\n11\n\n\n-5\n\n\nA\n\n\nJekyll Island\n\n\nUnited States\n\n\nnear sea"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#other-functions",
    "href": "slides/2024-01-18-db-etc.html#other-functions",
    "title": "SQL Extras",
    "section": "Other functions",
    "text": "Other functions\ndistinct() / head()"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#case-when-and-case_when",
    "href": "slides/2024-01-18-db-etc.html#case-when-and-case_when",
    "title": "SQL Extras",
    "section": "CASE WHEN and case_when()",
    "text": "CASE WHEN and case_when()\n\nairports |&gt;\n  mutate(sea = case_when(\n    alt &lt; 500 ~ \"near sea\",\n    alt &lt; 2000 ~ \"low alt\",\n    alt &lt; 3000 ~ \"mod alt\",\n    alt &lt; 5500 ~ \"high alt\",\n    alt &gt; 5500 ~ \"extreme alt\")) |&gt;\n  head(5)\n\n# Source:   SQL [5 x 10]\n# Database: mysql  [mdsr_public@mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com:NA/airlines]\n  faa   name                     lat   lon   alt    tz dst   city  country sea  \n  &lt;chr&gt; &lt;chr&gt;                  &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;\n1 04G   Lansdowne Airport       41.1 -80.6  1044    -5 A     Youn… United… low …\n2 06A   Moton Field Municipal…  32.5 -85.7   264    -6 A     Tusk… United… near…\n3 06C   Schaumburg Regional     42.0 -88.1   801    -6 A     Scha… United… low …\n4 06N   Randall Airport         41.4 -74.4   523    -5 A     Midd… United… low …\n5 09J   Jekyll Island Airport   31.1 -81.4    11    -5 A     Jeky… United… near…"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#case-when-and-case_when-1",
    "href": "slides/2024-01-18-db-etc.html#case-when-and-case_when-1",
    "title": "SQL Extras",
    "section": "CASE WHEN and case_when()",
    "text": "CASE WHEN and case_when()\n\ncw_query &lt;- airports |&gt;\n  mutate(sea = case_when(\n    alt &lt; 500 ~ \"near sea\",\n    alt &lt; 2000 ~ \"low alt\",\n    alt &lt; 3000 ~ \"mod alt\",\n    alt &lt; 5500 ~ \"high alt\",\n    alt &gt; 5500 ~ \"extreme alt\"))\n\nshow_query(cw_query)\n\n&lt;SQL&gt;\nSELECT\n  *,\n  CASE\nWHEN (`alt` &lt; 500.0) THEN 'near sea'\nWHEN (`alt` &lt; 2000.0) THEN 'low alt'\nWHEN (`alt` &lt; 3000.0) THEN 'mod alt'\nWHEN (`alt` &lt; 5500.0) THEN 'high alt'\nWHEN (`alt` &gt; 5500.0) THEN 'extreme alt'\nEND AS `sea`\nFROM `airports`"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#case-when-and-case_when-2",
    "href": "slides/2024-01-18-db-etc.html#case-when-and-case_when-2",
    "title": "SQL Extras",
    "section": "CASE WHEN and case_when()",
    "text": "CASE WHEN and case_when()\n\nSELECT\n  *,\n  CASE\nWHEN (`alt` &lt; 500.0) THEN 'near sea'\nWHEN (`alt` &lt; 2000.0) THEN 'low alt'\nWHEN (`alt` &lt; 3000.0) THEN 'mod alt'\nWHEN (`alt` &lt; 5500.0) THEN 'high alt'\nWHEN (`alt` &gt; 5500.0) THEN 'extreme alt'\nEND AS `sea`\nFROM `airports`\nLIMIT 5;\n\n\n\n\n5 records\n\n\n\n\nfaa\n\n\nname\n\n\nlat\n\n\nlon\n\n\nalt\n\n\ntz\n\n\ndst\n\n\ncity\n\n\ncountry\n\n\nsea\n\n\n\n\n\n\n04G\n\n\nLansdowne Airport\n\n\n41.1\n\n\n-80.6\n\n\n1044\n\n\n-5\n\n\nA\n\n\nYoungstown\n\n\nUnited States\n\n\nlow alt\n\n\n\n\n06A\n\n\nMoton Field Municipal Airport\n\n\n32.5\n\n\n-85.7\n\n\n264\n\n\n-6\n\n\nA\n\n\nTuskegee\n\n\nUnited States\n\n\nnear sea\n\n\n\n\n06C\n\n\nSchaumburg Regional\n\n\n42.0\n\n\n-88.1\n\n\n801\n\n\n-6\n\n\nA\n\n\nSchaumburg\n\n\nUnited States\n\n\nlow alt\n\n\n\n\n06N\n\n\nRandall Airport\n\n\n41.4\n\n\n-74.4\n\n\n523\n\n\n-5\n\n\nA\n\n\nMiddletown\n\n\nUnited States\n\n\nlow alt\n\n\n\n\n09J\n\n\nJekyll Island Airport\n\n\n31.1\n\n\n-81.4\n\n\n11\n\n\n-5\n\n\nA\n\n\nJekyll Island\n\n\nUnited States\n\n\nnear sea"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#case-when-and-cut",
    "href": "slides/2024-01-18-db-etc.html#case-when-and-cut",
    "title": "SQL Extras",
    "section": "CASE WHEN and cut()",
    "text": "CASE WHEN and cut()\n\nairports |&gt;\n  mutate(sea = cut(\n    alt,\n    breaks = c(-Inf, 500, 2000, 3000, 5500, Inf),\n    labels = c(\"near sea\", \"low alt\", \"mod alt\", \"high alt\", \"extreme alt\")\n  )\n)|&gt;\n  head(5)\n\n# Source:   SQL [5 x 10]\n# Database: mysql  [mdsr_public@mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com:NA/airlines]\n  faa   name                     lat   lon   alt    tz dst   city  country sea  \n  &lt;chr&gt; &lt;chr&gt;                  &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;\n1 04G   Lansdowne Airport       41.1 -80.6  1044    -5 A     Youn… United… low …\n2 06A   Moton Field Municipal…  32.5 -85.7   264    -6 A     Tusk… United… near…\n3 06C   Schaumburg Regional     42.0 -88.1   801    -6 A     Scha… United… low …\n4 06N   Randall Airport         41.4 -74.4   523    -5 A     Midd… United… low …\n5 09J   Jekyll Island Airport   31.1 -81.4    11    -5 A     Jeky… United… near…"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#case-when-and-case_when-3",
    "href": "slides/2024-01-18-db-etc.html#case-when-and-case_when-3",
    "title": "SQL Extras",
    "section": "CASE WHEN and case_when()",
    "text": "CASE WHEN and case_when()\n\ncw_query &lt;- airports |&gt;\n  mutate(sea = cut(\n    alt,\n    breaks = c(-Inf, 500, 2000, 3000, 5500, Inf),\n    labels = c(\"near sea\", \"low alt\", \"mod alt\", \"high alt\", \"extreme alt\")\n  )\n)\n\nshow_query(cw_query)\n\n&lt;SQL&gt;\nSELECT\n  *,\n  CASE\nWHEN (`alt` &lt;= 500.0) THEN 'near sea'\nWHEN (`alt` &lt;= 2000.0) THEN 'low alt'\nWHEN (`alt` &lt;= 3000.0) THEN 'mod alt'\nWHEN (`alt` &lt;= 5500.0) THEN 'high alt'\nWHEN (`alt` &gt; 5500.0) THEN 'extreme alt'\nEND AS `sea`\nFROM `airports`"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#case-when-and-case_when-4",
    "href": "slides/2024-01-18-db-etc.html#case-when-and-case_when-4",
    "title": "SQL Extras",
    "section": "CASE WHEN and case_when()",
    "text": "CASE WHEN and case_when()\n\nSELECT\n  *,\n  CASE\nWHEN (`alt` &lt;= 500.0) THEN 'near sea'\nWHEN (`alt` &lt;= 2000.0) THEN 'low alt'\nWHEN (`alt` &lt;= 3000.0) THEN 'mod alt'\nWHEN (`alt` &lt;= 5500.0) THEN 'high alt'\nWHEN (`alt` &gt; 5500.0) THEN 'extreme alt'\nEND AS `sea`\nFROM `airports`\nLIMIT 5;\n\n\n\n\n5 records\n\n\n\n\nfaa\n\n\nname\n\n\nlat\n\n\nlon\n\n\nalt\n\n\ntz\n\n\ndst\n\n\ncity\n\n\ncountry\n\n\nsea\n\n\n\n\n\n\n04G\n\n\nLansdowne Airport\n\n\n41.1\n\n\n-80.6\n\n\n1044\n\n\n-5\n\n\nA\n\n\nYoungstown\n\n\nUnited States\n\n\nlow alt\n\n\n\n\n06A\n\n\nMoton Field Municipal Airport\n\n\n32.5\n\n\n-85.7\n\n\n264\n\n\n-6\n\n\nA\n\n\nTuskegee\n\n\nUnited States\n\n\nnear sea\n\n\n\n\n06C\n\n\nSchaumburg Regional\n\n\n42.0\n\n\n-88.1\n\n\n801\n\n\n-6\n\n\nA\n\n\nSchaumburg\n\n\nUnited States\n\n\nlow alt\n\n\n\n\n06N\n\n\nRandall Airport\n\n\n41.4\n\n\n-74.4\n\n\n523\n\n\n-5\n\n\nA\n\n\nMiddletown\n\n\nUnited States\n\n\nlow alt\n\n\n\n\n09J\n\n\nJekyll Island Airport\n\n\n31.1\n\n\n-81.4\n\n\n11\n\n\n-5\n\n\nA\n\n\nJekyll Island\n\n\nUnited States\n\n\nnear sea"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#distinct",
    "href": "slides/2024-01-18-db-etc.html#distinct",
    "title": "SQL Extras",
    "section": "distinct()",
    "text": "distinct()\nHow many distinct time zones are there in the airports table?\n\nairports |&gt;\n  select(tz) |&gt;\n  distinct()\n\n# Source:   SQL [?? x 1]\n# Database: mysql  [mdsr_public@mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com:NA/airlines]\n     tz\n  &lt;int&gt;\n1    -5\n2    -6\n3    -8\n4    -7\n5    -9\n6   -10\n# ℹ more rows"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#distinct-1",
    "href": "slides/2024-01-18-db-etc.html#distinct-1",
    "title": "SQL Extras",
    "section": "distinct()",
    "text": "distinct()\nHow many distinct time zones are there in the airports table?\n\ndist_query &lt;- airports |&gt;\n  select(tz) |&gt;\n  distinct()\n\nshow_query(dist_query)\n\n&lt;SQL&gt;\nSELECT DISTINCT `tz`\nFROM `airports`"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#distinct-2",
    "href": "slides/2024-01-18-db-etc.html#distinct-2",
    "title": "SQL Extras",
    "section": "distinct()",
    "text": "distinct()\nHow many distinct time zones are there in the airports table?\n\nSELECT DISTINCT `tz`\nFROM `airports`;\n\n\n\n\n7 records\n\n\n\n\ntz\n\n\n\n\n\n\n-5\n\n\n\n\n-6\n\n\n\n\n-8\n\n\n\n\n-7\n\n\n\n\n-9\n\n\n\n\n-10\n\n\n\n\n8"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#limit-as-head",
    "href": "slides/2024-01-18-db-etc.html#limit-as-head",
    "title": "SQL Extras",
    "section": "LIMIT as head()",
    "text": "LIMIT as head()\n\nairports |&gt;\n  head(5)\n\n# Source:   SQL [5 x 9]\n# Database: mysql  [mdsr_public@mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com:NA/airlines]\n  faa   name                           lat   lon   alt    tz dst   city  country\n  &lt;chr&gt; &lt;chr&gt;                        &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;  \n1 04G   Lansdowne Airport             41.1 -80.6  1044    -5 A     Youn… United…\n2 06A   Moton Field Municipal Airpo…  32.5 -85.7   264    -6 A     Tusk… United…\n3 06C   Schaumburg Regional           42.0 -88.1   801    -6 A     Scha… United…\n4 06N   Randall Airport               41.4 -74.4   523    -5 A     Midd… United…\n5 09J   Jekyll Island Airport         31.1 -81.4    11    -5 A     Jeky… United…"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#limit-as-head-1",
    "href": "slides/2024-01-18-db-etc.html#limit-as-head-1",
    "title": "SQL Extras",
    "section": "LIMIT as head()",
    "text": "LIMIT as head()\n\nhead_query &lt;- airports |&gt;\n  head(5)\n\nshow_query(head_query)\n\n&lt;SQL&gt;\nSELECT *\nFROM `airports`\nLIMIT 5"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#limit-as-head-2",
    "href": "slides/2024-01-18-db-etc.html#limit-as-head-2",
    "title": "SQL Extras",
    "section": "LIMIT as head()",
    "text": "LIMIT as head()\n\nSELECT *\nFROM `airports`\nLIMIT 5;\n\n\n\n\n5 records\n\n\n\n\nfaa\n\n\nname\n\n\nlat\n\n\nlon\n\n\nalt\n\n\ntz\n\n\ndst\n\n\ncity\n\n\ncountry\n\n\n\n\n\n\n04G\n\n\nLansdowne Airport\n\n\n41.1\n\n\n-80.6\n\n\n1044\n\n\n-5\n\n\nA\n\n\nYoungstown\n\n\nUnited States\n\n\n\n\n06A\n\n\nMoton Field Municipal Airport\n\n\n32.5\n\n\n-85.7\n\n\n264\n\n\n-6\n\n\nA\n\n\nTuskegee\n\n\nUnited States\n\n\n\n\n06C\n\n\nSchaumburg Regional\n\n\n42.0\n\n\n-88.1\n\n\n801\n\n\n-6\n\n\nA\n\n\nSchaumburg\n\n\nUnited States\n\n\n\n\n06N\n\n\nRandall Airport\n\n\n41.4\n\n\n-74.4\n\n\n523\n\n\n-5\n\n\nA\n\n\nMiddletown\n\n\nUnited States\n\n\n\n\n09J\n\n\nJekyll Island Airport\n\n\n31.1\n\n\n-81.4\n\n\n11\n\n\n-5\n\n\nA\n\n\nJekyll Island\n\n\nUnited States"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#ggplot",
    "href": "slides/2024-01-18-db-etc.html#ggplot",
    "title": "SQL Extras",
    "section": "ggplot()",
    "text": "ggplot()\n\nairports |&gt;\n  ggplot(aes(x = lon, y = lat)) +\n  geom_point()"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#ggplot-1",
    "href": "slides/2024-01-18-db-etc.html#ggplot-1",
    "title": "SQL Extras",
    "section": "ggplot()",
    "text": "ggplot()\n\nairports |&gt;\n  filter(lon &lt; 0) |&gt;\n  ggplot(aes(x = lon, y = lat)) +\n  geom_point()"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#ggplot-2",
    "href": "slides/2024-01-18-db-etc.html#ggplot-2",
    "title": "SQL Extras",
    "section": "ggplot()",
    "text": "ggplot()\n\ngg_query &lt;- airports |&gt;\n  filter(lon &lt; 0) |&gt;\n  ggplot(aes(x = lon, y = lat)) +\n  geom_point()\n\nshow_query(gg_query)\n\nError in UseMethod(\"show_query\"): no applicable method for 'show_query' applied to an object of class \"c('gg', 'ggplot')\""
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#case-when-and-cut-1",
    "href": "slides/2024-01-18-db-etc.html#case-when-and-cut-1",
    "title": "SQL Extras",
    "section": "CASE WHEN and cut()",
    "text": "CASE WHEN and cut()\n\ncw_query &lt;- airports |&gt;\n  mutate(sea = cut(\n    alt,\n    breaks = c(-Inf, 500, 2000, 3000, 5500, Inf),\n    labels = c(\"near sea\", \"low alt\", \"mod alt\", \"high alt\", \"extreme alt\")\n  )\n)\n\nshow_query(cw_query)\n\n&lt;SQL&gt;\nSELECT\n  *,\n  CASE\nWHEN (`alt` &lt;= 500.0) THEN 'near sea'\nWHEN (`alt` &lt;= 2000.0) THEN 'low alt'\nWHEN (`alt` &lt;= 3000.0) THEN 'mod alt'\nWHEN (`alt` &lt;= 5500.0) THEN 'high alt'\nWHEN (`alt` &gt; 5500.0) THEN 'extreme alt'\nEND AS `sea`\nFROM `airports`"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#case-when-and-cut-2",
    "href": "slides/2024-01-18-db-etc.html#case-when-and-cut-2",
    "title": "SQL Extras",
    "section": "CASE WHEN and cut()",
    "text": "CASE WHEN and cut()\n\nSELECT\n  *,\n  CASE\nWHEN (`alt` &lt;= 500.0) THEN 'near sea'\nWHEN (`alt` &lt;= 2000.0) THEN 'low alt'\nWHEN (`alt` &lt;= 3000.0) THEN 'mod alt'\nWHEN (`alt` &lt;= 5500.0) THEN 'high alt'\nWHEN (`alt` &gt; 5500.0) THEN 'extreme alt'\nEND AS `sea`\nFROM `airports`\nLIMIT 5;\n\n\n\n\n5 records\n\n\n\n\nfaa\n\n\nname\n\n\nlat\n\n\nlon\n\n\nalt\n\n\ntz\n\n\ndst\n\n\ncity\n\n\ncountry\n\n\nsea\n\n\n\n\n\n\n04G\n\n\nLansdowne Airport\n\n\n41.1\n\n\n-80.6\n\n\n1044\n\n\n-5\n\n\nA\n\n\nYoungstown\n\n\nUnited States\n\n\nlow alt\n\n\n\n\n06A\n\n\nMoton Field Municipal Airport\n\n\n32.5\n\n\n-85.7\n\n\n264\n\n\n-6\n\n\nA\n\n\nTuskegee\n\n\nUnited States\n\n\nnear sea\n\n\n\n\n06C\n\n\nSchaumburg Regional\n\n\n42.0\n\n\n-88.1\n\n\n801\n\n\n-6\n\n\nA\n\n\nSchaumburg\n\n\nUnited States\n\n\nlow alt\n\n\n\n\n06N\n\n\nRandall Airport\n\n\n41.4\n\n\n-74.4\n\n\n523\n\n\n-5\n\n\nA\n\n\nMiddletown\n\n\nUnited States\n\n\nlow alt\n\n\n\n\n09J\n\n\nJekyll Island Airport\n\n\n31.1\n\n\n-81.4\n\n\n11\n\n\n-5\n\n\nA\n\n\nJekyll Island\n\n\nUnited States\n\n\nnear sea"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#cardinality-x-rows",
    "href": "slides/2024-01-18-db-etc.html#cardinality-x-rows",
    "title": "SQL Extras",
    "section": "Cardinality x rows",
    "text": "Cardinality x rows\nThe Cardinality from SHOW INDEXES times the rows from EXPLAIN is roughly the total number of rows in the dataframe."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#median-8",
    "href": "slides/2024-01-18-db-etc.html#median-8",
    "title": "SQL Extras",
    "section": "Median",
    "text": "Median\nTake-aways:\n\ndbplyr is not able to translate the median() function into SQL.\nThe median is actually really hard to calculate! In particular, it is hard to calculate the median in one pass through the data."
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#take-away-message",
    "href": "slides/2024-01-18-db-etc.html#take-away-message",
    "title": "SQL Extras",
    "section": "Take-away message",
    "text": "Take-away message\n\ndbplyr is awesome and can often be helpful in figuring out SQL syntax\nsometimes dbplyr will provide SQL syntax that does not work (see the median example)\nsometimes there is no SQL syntax to match the R task of interest (see ggplot)"
  },
  {
    "objectID": "slides/2024-01-18-db-etc.html#section",
    "href": "slides/2024-01-18-db-etc.html#section",
    "title": "SQL Extras",
    "section": "47",
    "text": "47\nPomona’s number is 47, and I wanted to have a 47th slide.\n\n\nFigure 1: image credit: Jo Hardin"
  },
  {
    "objectID": "syllabus.html#ds002r-fall-2024",
    "href": "syllabus.html#ds002r-fall-2024",
    "title": "syllabus",
    "section": "",
    "text": "Jo Hardin 2351 Estella jo.hardin@pomona.edu\nClass: Mondays & Wednesday, 11-12:15pm\nOffice Hours: (Estella 2351)\nMonday: 2:30-4:30pm\nTuesday: 9-11am\nThursday: 1-3pm\nMentor Sessions:\nSunday & Tuesday 6-8pm\nEstella 2141\nMentors: Maren Rusk & Julia Aceron\n\n\n\n\n\nArtwork by @allison_horst."
  },
  {
    "objectID": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "href": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "title": "Attribution-ShareAlike 4.0 International",
    "section": "Creative Commons Attribution-ShareAlike 4.0 International Public License",
    "text": "Creative Commons Attribution-ShareAlike 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\n\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nBY-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses, approved by Creative Commons as essentially the equivalent of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicense Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\n\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\nA. reproduce and Share the Licensed Material, in whole or in part; and\nB. produce, reproduce, and Share Adapted Material.\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material.\nDownstream recipients.\nA. Offer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nB. __Additional offer from the Licensor – Adapted Material. Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter’s License You apply.\nC. No downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\nA. retain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nB. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nC. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\n\nShareAlike.\n\nIn addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply.\n\nThe Adapter’s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-SA Compatible License.\nYou must include the text of, or the URI or hyperlink to, the Adapter’s License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material.\nYou may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter’s License You apply.\n\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\n\n\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUnless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You.\nTo the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\n\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\n\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.t stated herein are separate from and independent of the terms and conditions of this Public License.\n\n\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org"
  },
  {
    "objectID": "project2.html",
    "href": "project2.html",
    "title": "Project 2",
    "section": "",
    "text": "You will find a data set containing string / character data. The data could be on newspaper articles, tweets, songs, scripts, movie reviews, or anything else you can imagine. Then you will answer questions of interest and tell a story about your data using the string and regular expression skills you have developed.\nYour analysis must contain the following elements:\n\nat least 3 str_*() functions (3 different functions)\nat least 3 regular expressions\nat least 1 lookaround\nat least 2 illustrative, well-labeled plots or tables\na description of what insights can be gained from your plots and tables\na reference / documentation of the data source.\n\nLogistics:\n\nplease include all your code used in the analysis (but feel free to use code folding1.)\nmake sure that all graphs are well-labeled (including x and y axes, title of the graph, and accurate and succinct labels for color and fill).\ndo not include error or warning messages (see HW YAML for code).\ninclude a few sentences describing each of your plots or tables. That is, tell the reader what they see when they look at the plot. Your narrative description should be in the text part of the qmd file, not as a comment in an R chunk.\nplease include the source of the data (which might include, for example, both the link to the data source (e.g., TidyTuesday page) + the original source of the data (e.g., NYT)).\nif you are working with a (local) copy of the .csv file (as opposed to, for example, a link to the dataset on TidyTuesday’s GitHub site), then the .csv file should live in your GitHub repository for your website. And you should read the data in from that local copy. That is, the dataset should not live in your Downloads."
  },
  {
    "objectID": "project3.html",
    "href": "project3.html",
    "title": "Project 3",
    "section": "",
    "text": "For Project 3 you will conduct a small simulation study which does one of the following tasks (you can choose!):\nYour simulation study should contain the following elements:\nLogistics:"
  },
  {
    "objectID": "project5.html",
    "href": "project5.html",
    "title": "Project 5",
    "section": "",
    "text": "You will use SQL to query a database which is a compilation of the Stanford Open Policing Project, published in Pierson et al. (2020).\nRecall that there are 88 tables in the SQL database. The data come from 42 different states and include both city PD as well as highway patrol traffic incidents. You can find some information on the data tables on the SOPP website."
  },
  {
    "objectID": "images/ma154-hwtest.html",
    "href": "images/ma154-hwtest.html",
    "title": "Math 154 - Test HW",
    "section": "",
    "text": ":::\n\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "project4.html",
    "href": "project4.html",
    "title": "Project 4",
    "section": "",
    "text": "Project 4 examines ethics and power in the data science context. You will investigate a particular data science ethical quandary and the power dynamics within. Our work is grounded in the following two quotes from Data Feminism. The first asks about who and the second asks about why."
  },
  {
    "objectID": "project1.html",
    "href": "project1.html",
    "title": "Mini-Project 1",
    "section": "",
    "text": "Part of being a successful data scientist is communicating your work and demonstrating that you know how to communicate your work. To that end, you will each be creating your own website with some of the course projects (see caveat below!).\nYou will produce a personal website using Quarto that contains, at a minimum, a Home/About page with a picture or image (doesn’t have to be of you, could be some kind of art, etc., but make sure you have permission to post whatever image you include), some basic information about you, and a link to the GitHub repo that contains the R code for your website.\nThen, in the Menu bar, you should have a selection called “Data Viz” with two sub-selections, each being a TidyTuesday analysis."
  },
  {
    "objectID": "R-tip.html",
    "href": "R-tip.html",
    "title": "R tip-of-the-day",
    "section": "",
    "text": "Artwork by @allison_horst.\n\n\n\n\n\n\n\n\n\n\n\n\n\nnumber\ntip\ndescription\nmisc\n\n\n\n\nTip 1\ncmd + opt + i\nadds a new R chunk\ncntrl + alt + i for PC\n\n\nTip 2\nTools -&gt; Global Options… -&gt; Appearance\nallows for dark mode, plus other options!\n\n\n\nTip 3\ncmd + opt + c\nruns the chunk\ncntrl + opt + c on PC\n\n\nTip 4\n\nwithin the viewer, sorts the data wrt a variable\nclick on the variable name\n\n\nTip 5\ncmd + shift + C\ncomments the line\ncntrl + shift + C for PC\n\n\nTip 6\ncmd + shift + enter\nruns the current chunk\ncntrl + shift + enter for PC\n\n\nTip 7\n\nchanges the viewer output\ngear near Render\n\n\nTip 8\ncmd + shift + opt + j\nwindow to jump between chunks\ncntrl + shift + opt + j for PC\n\n\nTip 9\ncmd + shift + M\nproduces a pipe\ncntrl + shift + M for PC  Tools -&gt; Global Options… -&gt; Code to get the native pipe\n\n\nTip 10\nhighlight with mouse and hit quotation\nwill put quotes around the highlighted phrase\n\n\n\nTip 11\nhighlight with mouse and hit parenthesis\nwill put parentheses around the highlighted phrase\n\n\n\nTip 12\ncmd + opt + B\nruns code start to line\ncntrl + opt + B on PC  (This one did not work on my keyboard)\n\n\nTip 13\ncmd + opt + E\nruns code line to end\ncntrl + opt + E on PC  (This one did not work on my keyboard)\n\n\n\n\n\n\n\n\n\n\nReuseCC-BY-SA-4.0"
  },
  {
    "objectID": "syllabus.html#links-to-resources",
    "href": "syllabus.html#links-to-resources",
    "title": "syllabus",
    "section": "",
    "text": "Best and most comprehensive Git help: http://happygitwithr.com/\nVersion control with Git\nMore on Git\nOnline Git book with lots of info\n\n\n\n\n\n\n\n\nA fantastic ggplot2 tutorial\nGreat tutorials through the Coding Club\nGoogle for R\nIncredibly helpful cheatsheets from RStudio.\n\ndata wrangling\nggplot2\nShiny\nQuarto\nRStudio IDE\n\n\n\n\n\n\n\n\nW3 schools Introduction to SQL\nW3 schools SQL Exercises, Practice, Solution\nR packages for working with databases\nIntroduction to dbplyr\n\n\n\n\n\n\n\nstringr vignette\nstringr package\nJenny Bryan et al.’s STAT 545 notes\nregexpal\n\nRegExr\nRegexOne\n\n\n\n\nHomework assignments will be graded out of 5 points, which are based on a combination of accuracy and effort. Below are rough guidelines for grading.\n[5] All problems completed with detailed solutions provided and 75% or more of the problems are fully correct. Additionally, there are no extraneous messages, warnings, or printed lists of numbers.\n[4] All problems completed with detailed solutions and 50-75% correct; OR close to all problems completed and 75%-100% correct. Or all problems are completed and there are extraneous messages, warnings, or printed lists of numbers. [Here is an example of extraneous messages and printed lists of numbers.]\n[3] Close to all problems completed with less than 75% correct. OR an assignment that didn’t make it all the way to Canvas as the correctly rendered pdf.\n[2] More than half but fewer than all problems completed and &gt; 75% correct.\n[1] More than half but fewer than all problems completed and &lt; 75% correct; OR less than half of problems completed.\n[0] No work submitted, OR half or less than half of the problems submitted and without any detail/work shown to explain the solutions. You will get a zero if your file is not compiled and submitted on GitHub."
  },
  {
    "objectID": "syllabus.html#projects",
    "href": "syllabus.html#projects",
    "title": "syllabus",
    "section": "",
    "text": "There will be 5 mini-projects (due roughly every other week). You will also compile the projects, reflect on the process, and present your work to your classrmates. Project information is available here: DS 002R Projects"
  },
  {
    "objectID": "syllabus.html#computing",
    "href": "syllabus.html#computing",
    "title": "syllabus",
    "section": "",
    "text": "GitHub will be used as a way to practice reproducible and collaborative science. There may be a slight learning curve, but knowing Git will be an extremely useful skill as you venture beyond this class.\nR will be used for all homework assignments. R is freely available at http://www.r-project.org/ and is already installed on college computers. Additionally, you need to install R Studio in order to use Quarto, https://posit.co/downloads/. If you are not already familiar with R, please work through some of the materials provided ASAP.\nYou are welcome to use Pomona’s R Studio server at https://rstudio.campus.pomona.edu/ (or https://rstudio.pomona.edu if you are off campus). If you use the server, you can connect directly to your Git account without installing Git locally on your own computer. [If you are not a Pomona student, you will need to get an account from Pomona’s ITS. Go to ITS, tell them that you are taking a Pomona course, and ask for an account for using RStudio.]"
  },
  {
    "objectID": "syllabus.html#engagement",
    "href": "syllabus.html#engagement",
    "title": "syllabus",
    "section": "",
    "text": "This class will be interactive, and your engagement is expected (every day in class). Although notes will be posted, your engagement is an integral part of the in-class learning process.\nIn class: after answering one question, wait until 5 other people have spoken before answering another question. [Feel free to ask as many questions as often as you like!]\nTo get full participation points, you will be expected to contribute at least one R tip of the day, sometime during the semester."
  },
  {
    "objectID": "syllabus.html#academic-honesty",
    "href": "syllabus.html#academic-honesty",
    "title": "syllabus",
    "section": "",
    "text": "You are on your honor to present only your work as part of your course assessments. Below, I’ve provided Pomona’s academic honesty policy. But before the policy, I’ve given some thoughts on cheating which I have taken from Nick Ball’s CHEM 147 Collective (thank you, Prof Ball!). Prof Ball gives us all something to think about when we are learning in a classroom as well as on our journey to become scientists and professionals:\nThere are many known reasons why we may feel the need to “cheat” on problem sets or exams:\n\n\nAn academic environment that values grades above learning.\nFinancial aid is critical for remaining in school that places undue pressure on maintaining a high GPA.\nNavigating school, work, and/or family obligations that have diverted focus from class.\nChallenges balancing coursework and mental health.\nBalancing academic, family, peer, or personal issues.\n\n\nBeing accused of cheating – whether it has occurred or not – can be devastating for students. The college requires me to respond to potential academic dishonesty with a process that is very long and damaging. As your instructor, I care about you and want to offer alternatives to prevent us from having to go through this process. If you find yourself in a situation where “cheating” seems like the only option:\nPlease come talk to me. We will figure this out together.\nPomona College is an academic community, all of whose members are expected to abide by ethical standards both in their conduct and in their exercise of responsibilities toward other members of the community. The college expects students to understand and adhere to basic standards of honesty and academic integrity. These standards include, but are not limited to, the following:\n\n\nIn projects and assignments prepared independently, students never represent the ideas or the language of others as their own.\nStudents do not destroy or alter either the work of other students or the educational resources and materials of the College.\nStudents neither give nor receive assistance in examinations.\nStudents do not take unfair advantage of fellow students by representing work completed for one course as original work for another or by deliberately disregarding course rules and regulations.\nIn laboratory or research projects involving the collection of data, students accurately report data observed and do not alter these data for any reason."
  },
  {
    "objectID": "syllabus.html#advice",
    "href": "syllabus.html#advice",
    "title": "syllabus",
    "section": "",
    "text": "Please email and / or set up a time to talk if you have any questions about or difficulty with the material, the computing, or the course. Talk to me as soon as possible if you find yourself struggling. The material will build on itself, so it will be much easier to catch up if the concepts get clarified earlier rather than later. This semester is going to be fun. Let’s do it.\n\n\n\n\n\n\nGrading\n\n\n\n\n30% Homework\n30% Quizzes\n30% Projects & Final Presentation\n10% Class engagement"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#course-structure",
    "href": "slides/2024-08-26-intro.html#course-structure",
    "title": "Introduction to DS002R",
    "section": "Course structure",
    "text": "Course structure\n\nbi-weekly HW (to GitHub + Gradescope)\nbi-weekly quizzes\nmini-projects\nin-class activities / clickers\nethical considerations"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#additional-details",
    "href": "slides/2024-08-26-intro.html#additional-details",
    "title": "Introduction to DS002R",
    "section": "Additional details",
    "text": "Additional details\n\nCanvas has all the links\n\ncourse website – almost everything\nclass notes\nCanvas page – solutions and assignments\n\nno computers (tablets fine)\ngood communication\nTidyTuesday"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#syllabus",
    "href": "slides/2024-08-26-intro.html#syllabus",
    "title": "Introduction to DS002R",
    "section": "Syllabus",
    "text": "Syllabus\n\n\n\noffice hours\nmentor sessions\nanonymous feedback\ndates for assignments\n\n\n\nlinks to resources\nHW grading\nproject information\n\n\n\n\n\n\n\n\nImportant\n\n\nI need your GitHub user name - please email it to me."
  },
  {
    "objectID": "slides/2024-08-26-intro.html#v1.0---drew-conway",
    "href": "slides/2024-08-26-intro.html#v1.0---drew-conway",
    "title": "Introduction to DS002R",
    "section": "V1.0 - Drew Conway",
    "text": "V1.0 - Drew Conway\n\n2010: http://drewconway.com/zia/2013/3/26/the-data-science-venn-diagram"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#v2.0---steve-geringer",
    "href": "slides/2024-08-26-intro.html#v2.0---steve-geringer",
    "title": "Introduction to DS002R",
    "section": "V2.0 - Steve Geringer",
    "text": "V2.0 - Steve Geringer\n\n2014: http://www.anlytcs.com/2014/01/data-science-venn-diagram-v20.html"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#v3.0---writuparna-banerjee",
    "href": "slides/2024-08-26-intro.html#v3.0---writuparna-banerjee",
    "title": "Introduction to DS002R",
    "section": "V3.0 - Writuparna Banerjee",
    "text": "V3.0 - Writuparna Banerjee\n\n2020: https://medium.com/@writuparnabanerjee/the-difference-in-the-career-options-in-data-science-data-scientist-vs-data-engineer-vs-data-33209d0ac880"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#v4.0---joel-grus",
    "href": "slides/2024-08-26-intro.html#v4.0---joel-grus",
    "title": "Introduction to DS002R",
    "section": "V4.0 - Joel Grus",
    "text": "V4.0 - Joel Grus\n\n2013: https://posit.co/wp-content/themes/Posit/public/markdown-blogs/role-of-the-data-scientist/index.html?wtime=%7Bseek_to_second_number%7D"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#data-science-overview",
    "href": "slides/2024-08-26-intro.html#data-science-overview",
    "title": "Introduction to DS002R",
    "section": "Data Science Overview",
    "text": "Data Science Overview\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#data-science-in-ds-002r",
    "href": "slides/2024-08-26-intro.html#data-science-in-ds-002r",
    "title": "Introduction to DS002R",
    "section": "Data Science in DS 002R",
    "text": "Data Science in DS 002R\n\n\n\n\n\n\n\n\n\n\n\n\n\nDS workflow\nin DS002R\nbeyond DS002R\n\n\n\n\ndata acquisition\nweb scraping, relational databases\nAPIs\n\n\ndata exploration\nwrangling, strings, regular expressions\nnatural language processing\n\n\ndata visualization\ngrammar of graphics\nanimations\n\n\ndata conclusions\niteration, permutation tests\npredictive modeling, machine learning, AI\n\n\ndata communication\nyes!\nyes!"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#tidy-data",
    "href": "slides/2024-08-26-intro.html#tidy-data",
    "title": "Introduction to DS002R",
    "section": "Tidy data",
    "text": "Tidy data\n\neach row = a unit of observation (here, a penguin)\neach column = a measure on some variable of interest, either quantitative (numbers with units) or categorical (discrete possibilities or categories)\neach entry contains a single data value; no analysis, summaries, footnotes, comments, etc, and only one value per cell"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#definition-of-datum",
    "href": "slides/2024-08-26-intro.html#definition-of-datum",
    "title": "Introduction to DS002R",
    "section": "Definition of datum",
    "text": "Definition of datum\nThe definition of datum can be much broader:\n\nDefinition of datum from the Oxford English Dictionary"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#tidying-data",
    "href": "slides/2024-08-26-intro.html#tidying-data",
    "title": "Introduction to DS002R",
    "section": "Tidying data",
    "text": "Tidying data\nHow would you wrangle each data example into a tidy format?\n\nthe emails in your inbox\n\nsocial media texts\n\nimages\n\nvideos\n\naudio files"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#data-science-in-the-wild",
    "href": "slides/2024-08-26-intro.html#data-science-in-the-wild",
    "title": "Introduction to DS002R",
    "section": "Data Science in the Wild",
    "text": "Data Science in the Wild\nData science extracts knowledge from within a particular domain of inquiry. Examples from Pomona!\n\nShannon Burns (Psychological Science and Neuroscience) uses data to understand brain processes of social communication.\nCharlotte Chang uses data to study and improve earth stewardship.\nAnthony (Tony) Clark (Computer Science) uses data to improve the safety and reliability of mobile robots.\nManisha Goel (Economics) uses data to understand how people’s identities shape the fortunes of businesses where they work.\nJun Lang (Asian Languages and Literatures) uses data to analyze (1) the intersection of language, gender, and society, and (2) second language acquisition and pedagogy.\nFrank Pericolosi (Physical Education) uses data to improve his team’s chances on the field.\nAmi Radunskaya (Mathematics) uses data to model tumor growth and treatment.\nYuqing Zhu (Neuroscience) uses data to figure out how a jumble of neurons becomes smart."
  },
  {
    "objectID": "slides/2024-08-26-intro.html#reproducibility",
    "href": "slides/2024-08-26-intro.html#reproducibility",
    "title": "Introduction to DS002R",
    "section": "Reproducibility",
    "text": "Reproducibility\nWhat does it mean for a data analysis to be “reproducible”?\nShort-term goals:\n\nAre the tables and figures reproducible from the code and data?\nDoes the code actually do what you think it does?\nIn addition to what was done, is it clear why it was done?\n\nLong-term goals:\n\nCan the code be used for other data?\nCan you extend the code to do other things?"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#the-reproducible-data-analysis-process",
    "href": "slides/2024-08-26-intro.html#the-reproducible-data-analysis-process",
    "title": "Introduction to DS002R",
    "section": "The reproducible data analysis process",
    "text": "The reproducible data analysis process\n\nScriptability \\(\\rightarrow\\) R\nLiterate programming (code, narrative, output in one place) \\(\\rightarrow\\) Quarto (via R Studio)\nVersion control \\(\\rightarrow\\) Git / GitHub"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#learning-goals",
    "href": "slides/2024-08-26-intro.html#learning-goals",
    "title": "Introduction to DS002R",
    "section": "Learning goals",
    "text": "Learning goals\nBy the end of the course, you will be able to…\n\n\ngain insight from data\ngain insight from data, reproducibly\ngain insight from data, reproducibly, using modern programming tools and techniques\ngain insight from data, reproducibly (with literate programming and version control), using modern programming tools and techniques"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#reproducibility-checklist",
    "href": "slides/2024-08-26-intro.html#reproducibility-checklist",
    "title": "Introduction to DS002R",
    "section": "Reproducibility checklist",
    "text": "Reproducibility checklist\n\nWhat does it mean for a data analysis to be “reproducible”?\n\nShort-term goals:\n\nAre the tables and figures reproducible from the code and data?\nDoes the code actually do what you think it does?\nIn addition to what was done, is it clear why it was done?\n\nLong-term goals:\n\nCan the code be used for other data?\nCan you extend the code to do other things?"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#toolkit-for-reproducibility",
    "href": "slides/2024-08-26-intro.html#toolkit-for-reproducibility",
    "title": "Introduction to DS002R",
    "section": "Toolkit for reproducibility",
    "text": "Toolkit for reproducibility\n\nScriptability \\(\\rightarrow\\) R\nLiterate programming (code, narrative, output in one place) \\(\\rightarrow\\) Quarto\nVersion control \\(\\rightarrow\\) Git / GitHub"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#r-and-rstudio-1",
    "href": "slides/2024-08-26-intro.html#r-and-rstudio-1",
    "title": "Introduction to DS002R",
    "section": "R and RStudio",
    "text": "R and RStudio\n\n\n\n\n\n\n\n\nR is an open-source statistical programming language\nR is also an environment for statistical computing and graphics\nIt’s easily extensible with packages\n\n\n\n\nRStudio is a convenient interface for R called an IDE (integrated development environment), e.g. “I write R code in the RStudio IDE”\nRStudio is not a requirement for programming with R, but it’s very commonly used by R programmers and data scientists"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#r-vs.-rstudio",
    "href": "slides/2024-08-26-intro.html#r-vs.-rstudio",
    "title": "Introduction to DS002R",
    "section": "R vs. RStudio",
    "text": "R vs. RStudio\n\n\n\n\n\n\n\nSource: Modern Dive."
  },
  {
    "objectID": "slides/2024-08-26-intro.html#r-packages",
    "href": "slides/2024-08-26-intro.html#r-packages",
    "title": "Introduction to DS002R",
    "section": "R packages",
    "text": "R packages\n\nPackages: Fundamental units of reproducible R code, including reusable R functions, the documentation that describes how to use them, and sample data1\nAs of August 26, 2024, there are 21,145 R packages available on CRAN (the Comprehensive R Archive Network)2\nWe’re going to work with a small (but important) subset of these!\n\n\n\n1 Wickham and Bryan, R Packages.\n2 CRAN contributed packages."
  },
  {
    "objectID": "slides/2024-08-26-intro.html#tour-r-rstudio",
    "href": "slides/2024-08-26-intro.html#tour-r-rstudio",
    "title": "Introduction to DS002R",
    "section": "Tour: R + RStudio",
    "text": "Tour: R + RStudio"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#tour-recap-r-rstudio",
    "href": "slides/2024-08-26-intro.html#tour-recap-r-rstudio",
    "title": "Introduction to DS002R",
    "section": "Tour recap: R + RStudio",
    "text": "Tour recap: R + RStudio"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#a-short-list-for-now-of-r-essentials",
    "href": "slides/2024-08-26-intro.html#a-short-list-for-now-of-r-essentials",
    "title": "Introduction to DS002R",
    "section": "A short list (for now) of R essentials",
    "text": "A short list (for now) of R essentials\n\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses:\n\n\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n\n\n\nPackages are installed with the install.packages() function and loaded with the library function, once per session:\n\n\ninstall.packages(\"package_name\")\nlibrary(package_name)"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#r-essentials-continued",
    "href": "slides/2024-08-26-intro.html#r-essentials-continued",
    "title": "Introduction to DS002R",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\n\nColumns (variables) in data frames are accessed with $:\n\n\ndataframe$var_name\n\n\n\nObject documentation can be accessed with ?\n\n\n?mean"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#tidyverse",
    "href": "slides/2024-08-26-intro.html#tidyverse",
    "title": "Introduction to DS002R",
    "section": "tidyverse",
    "text": "tidyverse\n\n\n\n\ntidyverse.org\n\nThe tidyverse is an opinionated collection of R packages designed for data science\nAll packages share an underlying philosophy and a common grammar"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#quarto-1",
    "href": "slides/2024-08-26-intro.html#quarto-1",
    "title": "Introduction to DS002R",
    "section": "Quarto",
    "text": "Quarto\n\nFully reproducible reports – each time you Render, the analysis is run from the beginning\nCode goes in chunks\nNarrative goes outside of chunks"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#tour-quarto",
    "href": "slides/2024-08-26-intro.html#tour-quarto",
    "title": "Introduction to DS002R",
    "section": "Tour: Quarto",
    "text": "Tour: Quarto"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#tour-recap-quarto",
    "href": "slides/2024-08-26-intro.html#tour-recap-quarto",
    "title": "Introduction to DS002R",
    "section": "Tour recap: Quarto",
    "text": "Tour recap: Quarto"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#environments",
    "href": "slides/2024-08-26-intro.html#environments",
    "title": "Introduction to DS002R",
    "section": "Environments",
    "text": "Environments\n\n\n\n\n\n\nImportant\n\n\nThe environment of your Quarto document is separate from the Console!\n\n\n\nRemember this, and expect it to bite you a few times as you’re learning to work with Quarto!"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#environments-1",
    "href": "slides/2024-08-26-intro.html#environments-1",
    "title": "Introduction to DS002R",
    "section": "Environments",
    "text": "Environments\n\n\nFirst, run the following in the console:\n\nx &lt;- 2\nx * 3\n\n\n\nAll looks good, eh?\n\n\nThen, add the following in an R chunk in your Quarto document\n\nx * 3\n\n\n\nWhat happens? Why the error?"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#how-will-we-use-quarto",
    "href": "slides/2024-08-26-intro.html#how-will-we-use-quarto",
    "title": "Introduction to DS002R",
    "section": "How will we use Quarto?",
    "text": "How will we use Quarto?\n\nEvery assignment is an Quarto document.\nYou’ll always have a template Quarto document to start with.\nThe amount of scaffolding in the template will decrease over the semester."
  },
  {
    "objectID": "slides/2024-08-26-intro.html#git-and-github",
    "href": "slides/2024-08-26-intro.html#git-and-github",
    "title": "Introduction to DS002R",
    "section": "Git and GitHub",
    "text": "Git and GitHub\n\n\n\n\n\n\n\n\nGit is a version control system – like “Track Changes” features from Microsoft Word, on steroids\nIt’s not the only version control system, but it’s a very popular one\n\n\n\n\n\n\n\n\nGitHub is the home for your Git-based projects on the internet – like DropBox but much, much better\nWe will use GitHub as a platform for web hosting and collaboration (and as our course management system!)"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#versioning---done-badly",
    "href": "slides/2024-08-26-intro.html#versioning---done-badly",
    "title": "Introduction to DS002R",
    "section": "Versioning - done badly",
    "text": "Versioning - done badly"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#versioning---done-better",
    "href": "slides/2024-08-26-intro.html#versioning---done-better",
    "title": "Introduction to DS002R",
    "section": "Versioning - done better",
    "text": "Versioning - done better"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#versioning---done-even-better",
    "href": "slides/2024-08-26-intro.html#versioning---done-even-better",
    "title": "Introduction to DS002R",
    "section": "Versioning - done even better",
    "text": "Versioning - done even better\nwith human readable messages"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#how-will-we-use-git-and-github",
    "href": "slides/2024-08-26-intro.html#how-will-we-use-git-and-github",
    "title": "Introduction to DS002R",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#how-will-we-use-git-and-github-1",
    "href": "slides/2024-08-26-intro.html#how-will-we-use-git-and-github-1",
    "title": "Introduction to DS002R",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#how-will-we-use-git-and-github-2",
    "href": "slides/2024-08-26-intro.html#how-will-we-use-git-and-github-2",
    "title": "Introduction to DS002R",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#how-will-we-use-git-and-github-3",
    "href": "slides/2024-08-26-intro.html#how-will-we-use-git-and-github-3",
    "title": "Introduction to DS002R",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#git-and-github-tips",
    "href": "slides/2024-08-26-intro.html#git-and-github-tips",
    "title": "Introduction to DS002R",
    "section": "Git and GitHub tips",
    "text": "Git and GitHub tips\n\n\nThere are millions of git commands – ok, that’s an exaggeration, but there are a lot of them – and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.\nWe will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line – skip that and move on to the next resource unless you feel comfortable trying it out.\nThere is a great resource for working with git and R: happygitwithr.com. Some of the content in there is beyond the scope of this course, but it’s a good place to look for help."
  },
  {
    "objectID": "slides/2024-08-26-intro.html#tour-git-github",
    "href": "slides/2024-08-26-intro.html#tour-git-github",
    "title": "Introduction to DS002R",
    "section": "Tour: Git + GitHub",
    "text": "Tour: Git + GitHub"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#examining-data-visualization",
    "href": "slides/2024-08-26-intro.html#examining-data-visualization",
    "title": "Introduction to DS002R",
    "section": "Examining data visualization",
    "text": "Examining data visualization\n\n\nDiscuss the following for the visualization.\n\n\n\n\n\nSource: Twitter"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#ae-02-bechdel-dataviz",
    "href": "slides/2024-08-26-intro.html#ae-02-bechdel-dataviz",
    "title": "Introduction to DS002R",
    "section": "ae-02-bechdel-dataviz",
    "text": "ae-02-bechdel-dataviz\n\n\nGo to the course GitHub org and find your ae repo (repo name will be suffixed with your GitHub name).\nClone the repo in your container, open the Quarto document in the repo, and follow along and complete the exercises.\nRender, commit, and push your edits by the AE deadline (end of this week)"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#recap-of-ae",
    "href": "slides/2024-08-26-intro.html#recap-of-ae",
    "title": "Introduction to DS002R",
    "section": "Recap of AE",
    "text": "Recap of AE\n\nConstruct plots with ggplot().\nLayers of ggplots are separated by +s.\nThe formula is (almost) always as follows:\n\n\nggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +\n  geom_XXX()\n\n\nAesthetic attributes of a geometries (color, size, transparency, etc.) can be mapped to variables in the data or set by the user, e.g. color = binary vs. color = \"pink\".\nUse facet_wrap() when faceting (creating small multiples) by one variable and facet_grid() when faceting by two variables."
  },
  {
    "objectID": "slides/2024-08-26-intro.html#activity",
    "href": "slides/2024-08-26-intro.html#activity",
    "title": "Introduction to DS002R",
    "section": "Activity",
    "text": "Activity\n\nWhat problem or task would you like to investigate using data?\nWhat would be hard about executing the project?\nWhat are the potential ethical frameworks to consider?\nHow would you define success?"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#data-science-process",
    "href": "slides/2024-08-26-intro.html#data-science-process",
    "title": "Introduction to DS002R",
    "section": "Data Science Process",
    "text": "Data Science Process"
  },
  {
    "objectID": "slides/2024-08-26-intro.html#data-science",
    "href": "slides/2024-08-26-intro.html#data-science",
    "title": "Introduction to DS002R",
    "section": "Data Science ",
    "text": "Data Science"
  },
  {
    "objectID": "slides/2024-09-09-wrangling1.html#tidy-data",
    "href": "slides/2024-09-09-wrangling1.html#tidy-data",
    "title": "Data Wrangling",
    "section": "",
    "text": "each row = a unit of observation (here, a penguin)\neach column = a measure on some variable of interest, either quantitative (numbers with units) or categorical (discrete possibilities or categories)\neach entry contains a single data value; no analysis, summaries, footnotes, comments, etc, and only one value per cell"
  },
  {
    "objectID": "slides/2024-09-09-wrangling1.html#definition-of-datum",
    "href": "slides/2024-09-09-wrangling1.html#definition-of-datum",
    "title": "Data Wrangling",
    "section": "",
    "text": "The definition of datum can be much broader:\n\n\n\n\n\nDefinition of datum from the Oxford English Dictionary"
  },
  {
    "objectID": "slides/2024-09-09-wrangling1.html#tidying-data",
    "href": "slides/2024-09-09-wrangling1.html#tidying-data",
    "title": "Data Wrangling",
    "section": "",
    "text": "How would you wrangle each data example into a tidy format?\n\nthe emails in your inbox\n\nsocial media texts\n\nimages\n\nvideos\n\naudio files\n\n\n:::"
  },
  {
    "objectID": "slides/2024-09-09-wrangling1.html",
    "href": "slides/2024-09-09-wrangling1.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "species\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n2007\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n2007\n\n\nAdelie\nTorgersen\n40.3\n18.0\n195\n3250\nfemale\n2007\n\n\nAdelie\nTorgersen\nNA\nNA\nNA\nNA\nNA\n2007\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n2007\n\n\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale\n2007\n\n\n\n\n\n\n\n\n\n\n\neach row = a unit of observation (here, a penguin)\neach column = a measure on some variable of interest, either quantitative (numbers with units) or categorical (discrete possibilities or categories)\neach entry contains a single data value; no analysis, summaries, footnotes, comments, etc, and only one value per cell\n\n\n\n\nThe definition of datum can be much broader:\n\n\n\n\n\nDefinition of datum from the Oxford English Dictionary\n\n\n\n\n\n\n\nHow would you wrangle each data example into a tidy format?\n\nthe emails in your inbox\n\nsocial media texts\n\nimages\n\nvideos\n\naudio files\n\n\n:::"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#nssd",
    "href": "slides/2024-08-28-daataviz.html#nssd",
    "title": "Better Data Visualizations",
    "section": "NSSD:",
    "text": "NSSD:\n\nWhat was Hilary trying to answer in her data collection?\nName two of Hilary’s main hurdles in gathering accurate data.\nWhich is better: high touch (manual) or low touch (automatic) data collection? Why?\nWhat additional covariates are needed / desired? Any problems with them?\nHow much data does she need?"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#grammar-of-graphics",
    "href": "slides/2024-08-28-daataviz.html#grammar-of-graphics",
    "title": "Better Data Visualizations",
    "section": "Grammar of graphics",
    "text": "Grammar of graphics\nYau (2013) gives us nine visual cues, and Wickham (2014) translates them into a language using ggplot2.\n\nVisual Cues: the aspects of the figure where we should focus.\nPosition (numerical) where in relation to other things?\nLength (numerical) how big (in one dimension)?\nAngle (numerical) how wide? parallel to something else?\nDirection (numerical) at what slope? In a time series, going up or down?\nShape (categorical) belonging to what group?\nArea (numerical) how big (in two dimensions)? Beware of improper scaling!\nVolume (numerical) how big (in three dimensions)? Beware of improper scaling!\nShade (either) to what extent? how severely?\nColor (either) to what extent? how severely? Beware of red/green color blindness.\nCoordinate System: rectangular, polar, geographic, etc.\nScale: numeric (linear? logarithmic?), categorical (ordered?), time\nContext: in comparison to what (think back to ideas from Tufte)"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#pieces-of-the-graph",
    "href": "slides/2024-08-28-daataviz.html#pieces-of-the-graph",
    "title": "Better Data Visualizations",
    "section": "Pieces of the Graph",
    "text": "Pieces of the Graph\n\n\nVisual Cues of Yau (2013):\nPosition (numerical)\nLength (numerical)\nAngle (numerical)\nDirection (numerical)\nShape (categorical)\nArea (numerical)\nVolume (numerical)\nShade (either)\nColor (either)"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#order-matters",
    "href": "slides/2024-08-28-daataviz.html#order-matters",
    "title": "Better Data Visualizations",
    "section": "Order Matters",
    "text": "Order Matters"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#cues-together",
    "href": "slides/2024-08-28-daataviz.html#cues-together",
    "title": "Better Data Visualizations",
    "section": "Cues Together",
    "text": "Cues Together"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#attributes",
    "href": "slides/2024-08-28-daataviz.html#attributes",
    "title": "Better Data Visualizations",
    "section": "Attributes",
    "text": "Attributes\nAttributes can focus your reader’s attention.1\n\nimage credit: Better Data Visualization by Schwabish"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#advice-for-plotting",
    "href": "slides/2024-08-28-daataviz.html#advice-for-plotting",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\n\n\n\nAvoid having other graph elements interfere with data\nUse visually prominent symbols\nAvoid over-plotting (One way to avoid over plotting: jitter the values)\nDifferent values of data may obscure each other\nInclude all or nearly all of the data\nFill data region"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#advice-for-plotting-1",
    "href": "slides/2024-08-28-daataviz.html#advice-for-plotting-1",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\n\n\n\nChart junk & stuff that adds no meaning, e.g. butterflies on top of barplots, background images\nExtra tick marks and grid lines\nUnnecessary text and arrows\nDecimal places beyond the measurement error or the level of difference"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#advice-for-plotting-2",
    "href": "slides/2024-08-28-daataviz.html#advice-for-plotting-2",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\n\n\n\nPut juxtaposed plots on same scale\nMake it easy to distinguish elements of superposed plots (e.g. color)\nEmphasizes the important difference\nComparison: volume, area, height (be careful, volume can seem bigger than you mean it to)"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#advice-for-plotting-3",
    "href": "slides/2024-08-28-daataviz.html#advice-for-plotting-3",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\n\n\n\nKeep scales on x and y axes the same for both plots to facilitate the comparison\nZoom in to focus on the region that contains the bulk of the data\nKeep the scale the same throughout the plot (i.e. don’t change it mid-axis)\nOrigin need not be on the scale\nChoose a scale that improves resolution\nAvoid jiggling the baseline"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#advice-for-plotting-4",
    "href": "slides/2024-08-28-daataviz.html#advice-for-plotting-4",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\n\n\n\nDescribe what you see in the caption\nAdd context with reference markers (lines and points) including text\nAdd legends and labels\nUse color and plotting symbols to add more information\nPlot the same thing more than once in different ways/scales\nReduce clutter"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#advice-for-plotting-5",
    "href": "slides/2024-08-28-daataviz.html#advice-for-plotting-5",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\nCaptions should\n\n\n\nBe comprehensive\nSelf-contained\nDescribe what has been graphed\nDraw attention to important features\nDescribe conclusions drawn from graph"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#advice-for-plotting-6",
    "href": "slides/2024-08-28-daataviz.html#advice-for-plotting-6",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\nCaptions should\nGood Plot Making Practice\n\n\n\nPut major conclusions in graphical form\nProvide reference information\nProof read for clarity and consistency\nGraphing is an iterative process\nMultiplicity is OK, i.e. two plots of the same variable may provide different messages\nMake plots data rich"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#getting-help",
    "href": "slides/2024-08-28-daataviz.html#getting-help",
    "title": "Better Data Visualizations",
    "section": "Getting help",
    "text": "Getting help\n\nOne of the best ways to get started with ggplot is to Google what you want to do with the word ggplot. Then look through the images that come up. More often than not, the associated code is there. There are also ggplot galleries of images, one of them is here: https://plot.ly/ggplot2/\nLook at the end of this presentation and the syllabus. More help options there."
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#what-are-the-visual-cues-on-this-plot",
    "href": "slides/2024-08-28-daataviz.html#what-are-the-visual-cues-on-this-plot",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color\n\nCoordinate System? Scale?"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#what-are-the-visual-cues-on-this-plot-1",
    "href": "slides/2024-08-28-daataviz.html#what-are-the-visual-cues-on-this-plot-1",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color\n\nCoordinate System? Scale?"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#what-are-the-visual-cues-on-this-plot-2",
    "href": "slides/2024-08-28-daataviz.html#what-are-the-visual-cues-on-this-plot-2",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color\n\nCoordinate System? Scale?"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#the-grammar-of-graphics-ggplot",
    "href": "slides/2024-08-28-daataviz.html#the-grammar-of-graphics-ggplot",
    "title": "Better Data Visualizations",
    "section": "The grammar of graphics ggplot",
    "text": "The grammar of graphics ggplot\ngeom: the geometric “shape” used to display data\n\nbar, point, line, ribbon, text, etc.\n\naesthetic: an attribute controlling how geom is displayed with respect to variables\n\nx position, y position, color, fill, shape, size, etc.\n\n\nguide: helps user convert visual data back into raw data (legends, axes)\nstat: a transformation applied to data before geom gets it\n\nexample: histograms work on binned data"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#set-up",
    "href": "slides/2024-08-28-daataviz.html#set-up",
    "title": "Better Data Visualizations",
    "section": "Set up",
    "text": "Set up\n\nlibrary(mosaic)\ndata(Births78)     # restore fresh version of Births78\nhead(Births78, 3)\n\n        date births wday year month day_of_year day_of_month day_of_week\n1 1978-01-01   7701  Sun 1978     1           1            1           1\n2 1978-01-02   7527  Mon 1978     1           2            2           2\n3 1978-01-03   8825  Tue 1978     1           3            3           3"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot",
    "href": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nTwo Questions:\n\nWhat do we want R to do? (What is the goal?)\nWhat does R need to know?"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-1",
    "href": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-1",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nGoal: scatterplot = a plot with points\nWhat does R need to know?\n\ndata source: Births78\naesthetics:\n\ndate -&gt; x\nbirths -&gt; y\npoints (!)"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-2",
    "href": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-2",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78, \n       aes(x = date, y = births)) + \n  geom_point() +\n  ggtitle(\"US Births in 1978\")\n\nggplot() +\n  geom_point(data = Births78, \n             aes(x = date, y = births)) +\n  ggtitle(\"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-3",
    "href": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-3",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nWhat has changed?\n\nnew aesthetic: mapping color to day of week\n\nAdding day of week to the data set\nThe wday() function in the lubridate package computes the day of the week from a date."
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-4",
    "href": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-4",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nBirths78 &lt;-  \n  Births78 |&gt; \n  mutate(day_of_week = \n           wday(date, \n                label=TRUE))\n\nggplot(data = Births78,\n       aes(x = date\n           y = births, \n           color = day_of_week)) +\n  geom_point() +\n  ggtitle(\"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-5",
    "href": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-5",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-6",
    "href": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-6",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nlines instead of dots!\n\nggplot(data = Births78,\n         aes(x = date, \n             y = births,\n             color = day_of_week)) +\n  geom_line() +\n  ggtitle(\"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-7",
    "href": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-7",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-8",
    "href": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-8",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nNow there are two layers: one with points and one with lines\n\nggplot(data = Births78,\n       aes(x = date,\n           y = births,\n           color = day_of_week)) + \n  geom_point() +  \n  geom_line()+\n  ggtitle(\"US Births in 1978\")\n\n\nThe layers are placed one on top of the other: the points are below and the lines are above.\ndata and aes specified in ggplot() affect all geoms"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#what-does-this-code-do",
    "href": "slides/2024-08-28-daataviz.html#what-does-this-code-do",
    "title": "Better Data Visualizations",
    "section": "What does this code do?",
    "text": "What does this code do?\n\nggplot(data = Births78,\n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point() +\n  ggtitle(\"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#what-does-this-code-do-1",
    "href": "slides/2024-08-28-daataviz.html#what-does-this-code-do-1",
    "title": "Better Data Visualizations",
    "section": "What does this code do?",
    "text": "What does this code do?\n\nggplot(data = Births78,\n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point()  +\n  ggtitle(\"US Births in 1978\")\n\n\nThis is mapping the color aesthetic to a new variable with only one value (“navy”).\nSo all the dots get set to the same color, but it’s not navy."
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#setting-vs.-mapping",
    "href": "slides/2024-08-28-daataviz.html#setting-vs.-mapping",
    "title": "Better Data Visualizations",
    "section": "Setting vs. Mapping",
    "text": "Setting vs. Mapping\nIf we want to set the color to be navy for all of the dots, we do it outside the aes() designation:\n\nggplot(data = Births78,\n       aes(x = date, y = births)) +   # map variables \n  geom_point(color = \"navy\")    +   # set attributes\n  ggtitle(\"US Births in 1978\")\n\n\n\nNote that color = \"navy\" is now outside of the aesthetics list. That’s how ggplot2 distinguishes between mapping and setting."
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-9",
    "href": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-9",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-10",
    "href": "slides/2024-08-28-daataviz.html#how-do-we-make-this-plot-10",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78,\n       aes(x = date,\n           y = births)) + \n  geom_line(aes(color = day_of_week)) +      \n  geom_point(color = \"navy\")  +         \n  ggtitle(\"US Births in 1978\")\n\n\nggplot() establishes the default data and aesthetics for the geoms, but each geom may change these defaults.\ngood practice: put into ggplot() the things that affect all (or most) of the layers; rest in geom_XXXX()"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#setting-vs.-mapping-again",
    "href": "slides/2024-08-28-daataviz.html#setting-vs.-mapping-again",
    "title": "Better Data Visualizations",
    "section": "Setting vs. Mapping (again)",
    "text": "Setting vs. Mapping (again)\nInformation gets passed to the plot via:\n\nmap the variable information inside the aes (aesthetic) command\nset the non-variable information outside the aes (aesthetic) command"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#other-geoms",
    "href": "slides/2024-08-28-daataviz.html#other-geoms",
    "title": "Better Data Visualizations",
    "section": "Other geoms",
    "text": "Other geoms\n\napropos(\"^geom_\")\n\n [1] \"geom_abline\"                  \"geom_area\"                   \n [3] \"geom_ash\"                     \"geom_bar\"                    \n [5] \"geom_bin_2d\"                  \"geom_bin2d\"                  \n [7] \"geom_blank\"                   \"geom_boxplot\"                \n [9] \"geom_bracket\"                 \"geom_col\"                    \n[11] \"geom_contour\"                 \"geom_contour_filled\"         \n[13] \"geom_count\"                   \"geom_crossbar\"               \n[15] \"geom_curve\"                   \"geom_density\"                \n[17] \"geom_density_2d\"              \"geom_density_2d_filled\"      \n[19] \"geom_density_line\"            \"geom_density_ridges\"         \n[21] \"geom_density_ridges_gradient\" \"geom_density_ridges2\"        \n[23] \"geom_density2d\"               \"geom_density2d_filled\"       \n[25] \"geom_dotplot\"                 \"geom_errorbar\"               \n[27] \"geom_errorbarh\"               \"geom_exec\"                   \n[29] \"geom_freqpoly\"                \"geom_function\"               \n[31] \"geom_hex\"                     \"geom_histogram\"              \n[33] \"geom_hline\"                   \"geom_jitter\"                 \n[35] \"geom_label\"                   \"geom_label_repel\"            \n[37] \"geom_line\"                    \"geom_linerange\"              \n[39] \"geom_lm\"                      \"geom_map\"                    \n[41] \"geom_mosaic\"                  \"geom_mosaic_jitter\"          \n[43] \"geom_mosaic_text\"             \"geom_path\"                   \n[45] \"geom_pictogram\"               \"geom_point\"                  \n[47] \"geom_pointrange\"              \"geom_polygon\"                \n[49] \"geom_pwc\"                     \"geom_qq\"                     \n[51] \"geom_qq_line\"                 \"geom_quantile\"               \n[53] \"geom_rangeframe\"              \"geom_raster\"                 \n[55] \"geom_rect\"                    \"geom_ribbon\"                 \n[57] \"geom_ridgeline\"               \"geom_ridgeline_gradient\"     \n[59] \"geom_rug\"                     \"geom_segment\"                \n[61] \"geom_sf\"                      \"geom_sf_label\"               \n[63] \"geom_sf_text\"                 \"geom_signif\"                 \n[65] \"geom_smooth\"                  \"geom_spline\"                 \n[67] \"geom_spoke\"                   \"geom_step\"                   \n[69] \"geom_stripped_cols\"           \"geom_stripped_rows\"          \n[71] \"geom_text\"                    \"geom_text_repel\"             \n[73] \"geom_tile\"                    \"geom_tufteboxplot\"           \n[75] \"geom_violin\"                  \"geom_vline\"                  \n[77] \"geom_vridgeline\"              \"geom_waffle\""
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#other-geoms-1",
    "href": "slides/2024-08-28-daataviz.html#other-geoms-1",
    "title": "Better Data Visualizations",
    "section": "Other geoms",
    "text": "Other geoms\nhelp pages will tell you their aesthetics, default stats, etc.\n\n?geom_area             # for example"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#lets-try-geom_area",
    "href": "slides/2024-08-28-daataviz.html#lets-try-geom_area",
    "title": "Better Data Visualizations",
    "section": "Let’s try geom_area",
    "text": "Let’s try geom_area\n\n\n\nggplot(data = Births78,\n       aes(x = date,\n           y = births, \n           fill = day_of_week)) + \n  geom_area()+\n  ggtitle(\"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#lets-try-geom_area-1",
    "href": "slides/2024-08-28-daataviz.html#lets-try-geom_area-1",
    "title": "Better Data Visualizations",
    "section": "Let’s try geom_area",
    "text": "Let’s try geom_area\n\n\n\nggplot(data = Births78,\n       aes(x = date, y = births, fill = day_of_week)) + \n  geom_area()+\n  ggtitle(\"US Births in 1978\")\n\n\n\n\n\n\n\n\n\n… not a good plot\n\noverplotting is hiding much of the data\nextending y-axis to 0 may or may not be desirable."
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#side-note-what-makes-a-plot-good",
    "href": "slides/2024-08-28-daataviz.html#side-note-what-makes-a-plot-good",
    "title": "Better Data Visualizations",
    "section": "Side note: what makes a plot good?",
    "text": "Side note: what makes a plot good?\nMost (all?) graphics are intended to help us make comparisons\n\nHow does something change over time?\nDo my treatments matter? How much?\nDo treatment and control respond the same way?\n\n\n\n\n\n\n\nKey plot metric\n\n\nDoes my plot make the comparisons I am interested in:\n\neasily, and\naccurately?"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#time-for-some-different-data",
    "href": "slides/2024-08-28-daataviz.html#time-for-some-different-data",
    "title": "Better Data Visualizations",
    "section": "Time for some different data",
    "text": "Time for some different data\nHELPrct: Health Evaluation and Linkage to Primary care randomized clinical trial. Subjects admitted for treatment for addiction to one of three substances.\n\nhead(HELPrct)\n\n  age anysubstatus anysub cesd d1 daysanysub dayslink drugrisk e2b female\n1  37            1    yes   49  3        177      225        0  NA      0\n2  37            1    yes   30 22          2       NA        0  NA      0\n3  26            1    yes   39  0          3      365       20  NA      0\n4  39            1    yes   15  2        189      343        0   1      1\n5  32            1    yes   39 12          2       57        0   1      0\n6  47            1    yes    6  1         31      365        0  NA      1\n     sex g1b homeless i1 i2 id indtot linkstatus link   mcs  pcs pss_fr racegrp\n1   male yes   housed 13 26  1     39          1  yes 25.11 58.4      0   black\n2   male yes homeless 56 62  2     43         NA &lt;NA&gt; 26.67 36.0      1   white\n3   male  no   housed  0  0  3     41          0   no  6.76 74.8     13   black\n4 female  no   housed  5  5  4     28          0   no 43.97 61.9     11   white\n5   male  no homeless 10 13  5     38          1  yes 21.68 37.3     10   black\n6 female  no   housed  4  4  6     29          0   no 55.51 46.5      5   black\n  satreat sexrisk substance treat avg_drinks max_drinks hospitalizations\n1      no       4   cocaine   yes         13         26                3\n2      no       7   alcohol   yes         56         62               22\n3      no       2    heroin    no          0          0                0\n4     yes       4    heroin    no          5          5                2\n5      no       6   cocaine    no         10         13               12\n6      no       5   cocaine   yes          4          4                1"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#who-are-the-people-in-the-study",
    "href": "slides/2024-08-28-daataviz.html#who-are-the-people-in-the-study",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = substance)) + \n  geom_bar()+\n  ggtitle(\"HELP trial\")\n\n\nHmm. What’s up with y?\n\nstat_bin() is being applied to the data before the geom_bar() gets to do its thing. Binning creates the y values."
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#who-are-the-people-in-the-study-1",
    "href": "slides/2024-08-28-daataviz.html#who-are-the-people-in-the-study-1",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = substance,\n           fill = children)) + \n  geom_bar()+\n  ggtitle(\"HELP trial\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#who-are-the-people-in-the-study-2",
    "href": "slides/2024-08-28-daataviz.html#who-are-the-people-in-the-study-2",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(HELP_data,\n       aes(x = substance,\n           fill = children)) + \n  geom_bar(position = \"fill\") +\n  ylab(\"actually, percent\")+\n  ggtitle(\"HELP trial\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-old-are-people-in-the-help-study",
    "href": "slides/2024-08-28-daataviz.html#how-old-are-people-in-the-help-study",
    "title": "Better Data Visualizations",
    "section": "How old are people in the HELP study?",
    "text": "How old are people in the HELP study?\n\n\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_histogram()+\n  ggtitle(\"HELP trial\")\n\nNotice the messages\n\nstat_bin: Histograms are not mapping the raw data but binned data.\nstat_bin() performs the data transformation.\nbinwidth: a default binwidth has been selected, but we should really choose our own."
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#setting-the-binwidth-manually",
    "href": "slides/2024-08-28-daataviz.html#setting-the-binwidth-manually",
    "title": "Better Data Visualizations",
    "section": "Setting the binwidth manually",
    "text": "Setting the binwidth manually\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_histogram(binwidth = 2)+\n  ggtitle(\"HELP trial\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-old-are-people-in-the-help-study-other-geoms",
    "href": "slides/2024-08-28-daataviz.html#how-old-are-people-in-the-help-study-other-geoms",
    "title": "Better Data Visualizations",
    "section": "How old are people in the HELP study? – Other geoms",
    "text": "How old are people in the HELP study? – Other geoms\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_freqpoly(binwidth = 2)+\n  ggtitle(\"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_density()+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#selecting-stat-and-geom-manually",
    "href": "slides/2024-08-28-daataviz.html#selecting-stat-and-geom-manually",
    "title": "Better Data Visualizations",
    "section": "Selecting stat and geom manually",
    "text": "Selecting stat and geom manually\nEvery geom comes with a default stat\n\nfor simple cases, the stat is stat_identity() which does nothing\nwe can mix and match geoms and stats however we like\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_line(stat = \"density\")+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#selecting-stat-and-geom-manually-1",
    "href": "slides/2024-08-28-daataviz.html#selecting-stat-and-geom-manually-1",
    "title": "Better Data Visualizations",
    "section": "Selecting stat and geom manually",
    "text": "Selecting stat and geom manually\nEvery stat comes with a default geom, every geom with a default stat\n\nwe can specify stats instead of geom, if we prefer\nwe can mix and match geoms and stats however we like\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  stat_density(geom = \"line\")+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#more-combinations",
    "href": "slides/2024-08-28-daataviz.html#more-combinations",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_point(stat = \"bin\", binwidth = 3) + \n  geom_line(stat = \"bin\", binwidth = 3)  +\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#more-combinations-1",
    "href": "slides/2024-08-28-daataviz.html#more-combinations-1",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_area(stat = \"bin\", binwidth = 3)  +\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#more-combinations-2",
    "href": "slides/2024-08-28-daataviz.html#more-combinations-2",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_point(stat = \"bin\", \n             binwidth = 3, \n             aes(size = ..count..)) +\n  geom_line(stat = \"bin\", binwidth = 3) +\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-much-drinking-i1",
    "href": "slides/2024-08-28-daataviz.html#how-much-drinking-i1",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_histogram()+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-much-drinking-i1-1",
    "href": "slides/2024-08-28-daataviz.html#how-much-drinking-i1-1",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_density()+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#how-much-drinking-i1-2",
    "href": "slides/2024-08-28-daataviz.html#how-much-drinking-i1-2",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_area(stat = \"density\")+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#covariates-adding-in-more-variables",
    "href": "slides/2024-08-28-daataviz.html#covariates-adding-in-more-variables",
    "title": "Better Data Visualizations",
    "section": "Covariates: Adding in more variables",
    "text": "Covariates: Adding in more variables\nUsing color and linetype:\n\nggplot(data = HELP_data,\n       aes(x = i1,\n           color = substance,\n           linetype = children)) + \n  geom_line(stat = \"density\")+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#using-color-and-facets",
    "href": "slides/2024-08-28-daataviz.html#using-color-and-facets",
    "title": "Better Data Visualizations",
    "section": "Using color and facets",
    "text": "Using color and facets\n\nggplot(data = HELP_data,\n       aes(x = i1, color = substance)) + \n  geom_line(stat = \"density\") + \n  facet_grid( . ~ children )+\n  ggtitle(\"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = i1, color = substance)) + \n  geom_line(stat = \"density\") + \n  facet_grid( children ~ . )+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#boxplots",
    "href": "slides/2024-08-28-daataviz.html#boxplots",
    "title": "Better Data Visualizations",
    "section": "Boxplots",
    "text": "Boxplots\nBoxplots use stat_quantile() (five number summary).\nThe quantitative variable must be y, and there must be an additional x variable.\n\nHELP_data |&gt; \n  ggplot(aes(x = substance, y = age, color = children)) + \n  geom_boxplot()+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#horizontal-boxplots",
    "href": "slides/2024-08-28-daataviz.html#horizontal-boxplots",
    "title": "Better Data Visualizations",
    "section": "Horizontal boxplots",
    "text": "Horizontal boxplots\nHorizontal boxplots are obtained by flipping the coordinate system:\n\ncoord_flip() may be used with other plots as well to reverse the roles of x and y on the plot.\n\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot() +\n  coord_flip()+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#axes-scaling-with-boxplots",
    "href": "slides/2024-08-28-daataviz.html#axes-scaling-with-boxplots",
    "title": "Better Data Visualizations",
    "section": "Axes scaling with boxplots",
    "text": "Axes scaling with boxplots\nWe can scale the continuous axis\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot() +\n  coord_trans(y = \"exp\")+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#give-me-some-space",
    "href": "slides/2024-08-28-daataviz.html#give-me-some-space",
    "title": "Better Data Visualizations",
    "section": "Give me some space",
    "text": "Give me some space\nWe’ve triggered a new feature: dodge (for dodging things left/right). We can control how much if we set the dodge manually.\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot(position = position_dodge(width=1)) +\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#issues-with-bigger-data",
    "href": "slides/2024-08-28-daataviz.html#issues-with-bigger-data",
    "title": "Better Data Visualizations",
    "section": "Issues with bigger data",
    "text": "Issues with bigger data\n\nAlthough we can see a generally positive association (as we would expect), the overplotting may be hiding information.\n\n\nlibrary(NHANES)\ndim(NHANES)\n\n[1] 10000    76\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_point() + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#using-alpha-opacity",
    "href": "slides/2024-08-28-daataviz.html#using-alpha-opacity",
    "title": "Better Data Visualizations",
    "section": "Using alpha (opacity)",
    "text": "Using alpha (opacity)\nOne way to deal with overplotting is to set the opacity low.\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_point(alpha=0.01) + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#geom_density2d",
    "href": "slides/2024-08-28-daataviz.html#geom_density2d",
    "title": "Better Data Visualizations",
    "section": "geom_density2d",
    "text": "geom_density2d\nAlternatively (or simultaneously) we might prefer a different geom altogether.\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_density2d() + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#multiple-layers",
    "href": "slides/2024-08-28-daataviz.html#multiple-layers",
    "title": "Better Data Visualizations",
    "section": "Multiple layers",
    "text": "Multiple layers\n\n\n\nggplot(data = HELP_data, \n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_point(alpha=.6) +\n  coord_flip()+\n  ggtitle(\"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_jitter(alpha=.6, width = 0.1) +\n  coord_flip()+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#multiple-layers-1",
    "href": "slides/2024-08-28-daataviz.html#multiple-layers-1",
    "title": "Better Data Visualizations",
    "section": "Multiple layers",
    "text": "Multiple layers\n\nggplot(data = HELP_data,\n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_point(alpha=.6, \n             position = position_jitter(width=.1, height=0)) +\n  coord_flip()+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#things-i-havent-mentioned-much",
    "href": "slides/2024-08-28-daataviz.html#things-i-havent-mentioned-much",
    "title": "Better Data Visualizations",
    "section": "Things I haven’t mentioned (much)",
    "text": "Things I haven’t mentioned (much)\n\ncoords (coord_flip() is good to know about)\nthemes (for customizing appearance)\nposition (position_dodge(), position_jitterdodge(), position_stack(), etc.)\ntransforming axes"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#themes",
    "href": "slides/2024-08-28-daataviz.html#themes",
    "title": "Better Data Visualizations",
    "section": "themes",
    "text": "themes\n\nlibrary(ggthemes)\nggplot(Births78, aes(x = date, y = births)) + \n  geom_point() + \n  theme_wsj()"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#jitterdodge",
    "href": "slides/2024-08-28-daataviz.html#jitterdodge",
    "title": "Better Data Visualizations",
    "section": "jitterdodge()",
    "text": "jitterdodge()\n\nggplot(data = HELP_data, \n       aes(x = substance, y = age, color = children)) +\n  geom_boxplot(coef = 10, position = position_dodge()) +\n  geom_point(aes(color = children, \n                 fill = children), \n             position = position_jitterdodge()) +\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#a-little-bit-of-everything",
    "href": "slides/2024-08-28-daataviz.html#a-little-bit-of-everything",
    "title": "Better Data Visualizations",
    "section": "A little bit of everything",
    "text": "A little bit of everything\n\nggplot(data = HELP_data, aes(x = substance, y = age, color = children)) +\n  geom_boxplot(coef = 10, position = position_dodge(width=1)) +\n  geom_point(aes(fill = children), alpha=.5, \n             position = position_jitterdodge(dodge.width=1, jitter.width = 0.2)) + \n  facet_wrap(~homeless)+\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#want-to-learn-more",
    "href": "slides/2024-08-28-daataviz.html#want-to-learn-more",
    "title": "Better Data Visualizations",
    "section": "Want to learn more?",
    "text": "Want to learn more?\n\ndocs.ggplot2.org/\nR for Data Science by Hadley Wickham and Garrett Grolemund"
  },
  {
    "objectID": "slides/2024-08-28-daataviz.html#whats-around-the-corner",
    "href": "slides/2024-08-28-daataviz.html#whats-around-the-corner",
    "title": "Better Data Visualizations",
    "section": "What’s around the corner?",
    "text": "What’s around the corner?\nshiny\n\ninteractive graphics / modeling\nhttps://shiny.rstudio.com/\n\nplotly\n\nPlotly is an R package for creating interactive web-based graphs via plotly’s JavaScript graphing library, plotly.js. The plotly R libary contains the ggplotly function , which will convert ggplot2 figures into a Plotly object. Furthermore, you have the option of manipulating the Plotly object with the style function.\n\n\nhttps://plot.ly/ggplot2/getting-started/\n\ngganimate\n\ngganimate tutorial"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#nssd",
    "href": "slides/2024-08-28-dataviz.html#nssd",
    "title": "Better Data Visualizations",
    "section": "NSSD:",
    "text": "NSSD:\n\nWhat was Hilary trying to answer in her data collection?\nName two of Hilary’s main hurdles in gathering accurate data.\nWhich is better: high touch (manual) or low touch (automatic) data collection? Why?\nWhat additional covariates are needed / desired? Any problems with them?\nHow much data does she need?"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#grammar-of-graphics",
    "href": "slides/2024-08-28-dataviz.html#grammar-of-graphics",
    "title": "Better Data Visualizations",
    "section": "Grammar of graphics",
    "text": "Grammar of graphics\nYau (2013) gives us nine visual cues, and Wickham (2014) translates them into a language using ggplot2.\n\nVisual Cues: the aspects of the figure where we should focus.\nPosition (numerical) where in relation to other things?\nLength (numerical) how big (in one dimension)?\nAngle (numerical) how wide? parallel to something else?\nDirection (numerical) at what slope? In a time series, going up or down?\nShape (categorical) belonging to what group?\nArea (numerical) how big (in two dimensions)? Beware of improper scaling!\nVolume (numerical) how big (in three dimensions)? Beware of improper scaling!\nShade (either) to what extent? how severely?\nColor (either) to what extent? how severely? Beware of red/green color blindness.\nCoordinate System: rectangular, polar, geographic, etc.\nScale: numeric (linear? logarithmic?), categorical (ordered?), time\nContext: in comparison to what (think back to ideas from Tufte)"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#pieces-of-the-graph",
    "href": "slides/2024-08-28-dataviz.html#pieces-of-the-graph",
    "title": "Better Data Visualizations",
    "section": "Pieces of the Graph",
    "text": "Pieces of the Graph\n\n\nVisual Cues of Yau (2013):\nPosition (numerical)\nLength (numerical)\nAngle (numerical)\nDirection (numerical)\nShape (categorical)\nArea (numerical)\nVolume (numerical)\nShade (either)\nColor (either)"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#order-matters",
    "href": "slides/2024-08-28-dataviz.html#order-matters",
    "title": "Better Data Visualizations",
    "section": "Order Matters",
    "text": "Order Matters"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#cues-together",
    "href": "slides/2024-08-28-dataviz.html#cues-together",
    "title": "Better Data Visualizations",
    "section": "Cues Together",
    "text": "Cues Together"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#attributes",
    "href": "slides/2024-08-28-dataviz.html#attributes",
    "title": "Better Data Visualizations",
    "section": "Attributes",
    "text": "Attributes\nAttributes can focus your reader’s attention.1\n\n\n\n\n\n\n\n\n\nimage credit: Better Data Visualization by Schwabish"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#advice-for-plotting",
    "href": "slides/2024-08-28-dataviz.html#advice-for-plotting",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\n\n\n\nAvoid having other graph elements interfere with data\nUse visually prominent symbols\nAvoid over-plotting (One way to avoid over plotting: jitter the values)\nDifferent values of data may obscure each other\nInclude all or nearly all of the data\nFill data region"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#advice-for-plotting-1",
    "href": "slides/2024-08-28-dataviz.html#advice-for-plotting-1",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\n\n\n\nChart junk & stuff that adds no meaning, e.g. butterflies on top of barplots, background images\nExtra tick marks and grid lines\nUnnecessary text and arrows\nDecimal places beyond the measurement error or the level of difference"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#advice-for-plotting-2",
    "href": "slides/2024-08-28-dataviz.html#advice-for-plotting-2",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\n\n\n\nPut juxtaposed plots on same scale\nMake it easy to distinguish elements of superposed plots (e.g. color)\nEmphasizes the important difference\nComparison: volume, area, height (be careful, volume can seem bigger than you mean it to)"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#advice-for-plotting-3",
    "href": "slides/2024-08-28-dataviz.html#advice-for-plotting-3",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\n\n\n\nKeep scales on x and y axes the same for both plots to facilitate the comparison\nZoom in to focus on the region that contains the bulk of the data\nKeep the scale the same throughout the plot (i.e. don’t change it mid-axis)\nOrigin need not be on the scale\nChoose a scale that improves resolution\nAvoid jiggling the baseline"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#advice-for-plotting-4",
    "href": "slides/2024-08-28-dataviz.html#advice-for-plotting-4",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\n\n\n\nDescribe what you see in the caption\nAdd context with reference markers (lines and points) including text\nAdd legends and labels\nUse color and plotting symbols to add more information\nPlot the same thing more than once in different ways/scales\nReduce clutter"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#advice-for-plotting-5",
    "href": "slides/2024-08-28-dataviz.html#advice-for-plotting-5",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\nCaptions should\n\n\n\nBe comprehensive\nSelf-contained\nDescribe what has been graphed\nDraw attention to important features\nDescribe conclusions drawn from graph"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#advice-for-plotting-6",
    "href": "slides/2024-08-28-dataviz.html#advice-for-plotting-6",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\nCaptions should\nGood Plot Making Practice\n\n\n\nPut major conclusions in graphical form\nProvide reference information\nProof read for clarity and consistency\nGraphing is an iterative process\nMultiplicity is OK, i.e. two plots of the same variable may provide different messages\nMake plots data rich"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#getting-help",
    "href": "slides/2024-08-28-dataviz.html#getting-help",
    "title": "Better Data Visualizations",
    "section": "Getting help",
    "text": "Getting help\n\nOne of the best ways to get started with ggplot is to Google what you want to do with the word ggplot. Then look through the images that come up. More often than not, the associated code is there. There are also ggplot galleries of images, one of them is here: https://plot.ly/ggplot2/\nLook at the end of this presentation and the syllabus. More help options there."
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#what-are-the-visual-cues-on-this-plot",
    "href": "slides/2024-08-28-dataviz.html#what-are-the-visual-cues-on-this-plot",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#what-are-the-visual-cues-on-this-plot-1",
    "href": "slides/2024-08-28-dataviz.html#what-are-the-visual-cues-on-this-plot-1",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#what-are-the-visual-cues-on-this-plot-2",
    "href": "slides/2024-08-28-dataviz.html#what-are-the-visual-cues-on-this-plot-2",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#the-grammar-of-graphics-ggplot",
    "href": "slides/2024-08-28-dataviz.html#the-grammar-of-graphics-ggplot",
    "title": "Better Data Visualizations",
    "section": "The grammar of graphics ggplot",
    "text": "The grammar of graphics ggplot\ngeom: the geometric “shape” used to display data\n\nbar, point, line, ribbon, text, etc.\n\naesthetic: an attribute controlling how geom is displayed with respect to variables\n\nx position, y position, color, fill, shape, size, etc.\n\n\nguide: helps user convert visual data back into raw data (legends, axes)\nstat: a transformation applied to data before geom gets it\n\nexample: histograms work on binned data"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#set-up",
    "href": "slides/2024-08-28-dataviz.html#set-up",
    "title": "Better Data Visualizations",
    "section": "Set up",
    "text": "Set up\n\nlibrary(mosaic)\ndata(Births78)\n\n\nhead(Births78)\n\n\n\n\n\n\n\n\n\n\ndate\nbirths\nwday\nyear\nmonth\nday_of_year\nday_of_month\nday_of_week\n\n\n\n\n1978-01-01\n7701\nSun\n1978\n1\n1\n1\n1\n\n\n1978-01-02\n7527\nMon\n1978\n1\n2\n2\n2\n\n\n1978-01-03\n8825\nTue\n1978\n1\n3\n3\n3\n\n\n1978-01-04\n8859\nWed\n1978\n1\n4\n4\n4\n\n\n1978-01-05\n9043\nThu\n1978\n1\n5\n5\n5\n\n\n1978-01-06\n9208\nFri\n1978\n1\n6\n6\n6"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot",
    "href": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nTwo Questions:\n\nWhat do we want R to do? (What is the goal?)\nWhat does R need to know?"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-1",
    "href": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-1",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nGoal: scatterplot = a plot with points\nWhat does R need to know?\n\ndata source: Births78\naesthetics:\n\ndate -&gt; x\nbirths -&gt; y\npoints (!)"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-2",
    "href": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-2",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78, \n       aes(x = date, y = births)) + \n  geom_point() +\n  labs(title = \"US Births in 1978\")\n\nggplot() +\n  geom_point(data = Births78, \n             aes(x = date, y = births)) +\n  labs(title = \"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-3",
    "href": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-3",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nWhat has changed?\n\nnew aesthetic: mapping color to day of week"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-4",
    "href": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-4",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78,\n       aes(x = date,\n           y = births, \n           color = wday)) +\n  geom_point() +\n  labs(title = \"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-5",
    "href": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-5",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-6",
    "href": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-6",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nlines instead of dots!\n\nggplot(data = Births78,\n         aes(x = date, \n             y = births,\n             color = wday)) +\n  geom_line() +\n  labs(title = \"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-7",
    "href": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-7",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-8",
    "href": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-8",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nNow there are two layers: one with points and one with lines\n\nggplot(data = Births78,\n       aes(x = date,\n           y = births,\n           color = wday)) + \n  geom_point() +  \n  geom_line()+\n  labs(title = \"US Births in 1978\")\n\n\nThe layers are placed one on top of the other: the points are below and the lines are above.\ndata and aes specified in ggplot() affect all geoms"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#what-does-this-code-do",
    "href": "slides/2024-08-28-dataviz.html#what-does-this-code-do",
    "title": "Better Data Visualizations",
    "section": "What does this code do?",
    "text": "What does this code do?\n\nggplot(data = Births78,\n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point() +\n  labs(title = \"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#what-does-this-code-do-1",
    "href": "slides/2024-08-28-dataviz.html#what-does-this-code-do-1",
    "title": "Better Data Visualizations",
    "section": "What does this code do?",
    "text": "What does this code do?\n\nggplot(data = Births78,\n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point()  +\n  labs(title = \"US Births in 1978\")\n\n\nThis is mapping the color aesthetic to a new variable with only one value (“navy”).\nSo all the dots get set to the same color, but it’s not navy."
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#setting-vs.-mapping",
    "href": "slides/2024-08-28-dataviz.html#setting-vs.-mapping",
    "title": "Better Data Visualizations",
    "section": "Setting vs. Mapping",
    "text": "Setting vs. Mapping\nIf we want to set the color to be navy for all of the dots, we do it outside the aes() designation:\n\nggplot(data = Births78,\n       aes(x = date, y = births)) +   # map variables \n  geom_point(color = \"navy\")    +   # set attributes\n  labs(title = \"US Births in 1978\")\n\n\n\nNote that color = \"navy\" is now outside of the aesthetics list. That’s how ggplot2 distinguishes between mapping and setting."
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-9",
    "href": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-9",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-10",
    "href": "slides/2024-08-28-dataviz.html#how-do-we-make-this-plot-10",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78,\n       aes(x = date,\n           y = births)) + \n  geom_line(aes(color = wday)) +      \n  geom_point(color = \"navy\")  +         \n  labs(title = \"US Births in 1978\")\n\n\nggplot() establishes the default data and aesthetics for the geoms, but each geom may change these defaults.\ngood practice: put into ggplot() the things that affect all (or most) of the layers; rest in geom_XXXX()"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#setting-vs.-mapping-again",
    "href": "slides/2024-08-28-dataviz.html#setting-vs.-mapping-again",
    "title": "Better Data Visualizations",
    "section": "Setting vs. Mapping (again)",
    "text": "Setting vs. Mapping (again)\nInformation gets passed to the plot via:\n\nmap the variable information inside the aes (aesthetic) command\nset the non-variable information outside the aes (aesthetic) command"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#other-geoms",
    "href": "slides/2024-08-28-dataviz.html#other-geoms",
    "title": "Better Data Visualizations",
    "section": "Other geoms",
    "text": "Other geoms\n\napropos(\"^geom_\")\n\n [1] \"geom_abline\"                  \"geom_area\"                   \n [3] \"geom_ash\"                     \"geom_bar\"                    \n [5] \"geom_bin_2d\"                  \"geom_bin2d\"                  \n [7] \"geom_blank\"                   \"geom_boxplot\"                \n [9] \"geom_bracket\"                 \"geom_col\"                    \n[11] \"geom_contour\"                 \"geom_contour_filled\"         \n[13] \"geom_count\"                   \"geom_crossbar\"               \n[15] \"geom_curve\"                   \"geom_density\"                \n[17] \"geom_density_2d\"              \"geom_density_2d_filled\"      \n[19] \"geom_density_line\"            \"geom_density_ridges\"         \n[21] \"geom_density_ridges_gradient\" \"geom_density_ridges2\"        \n[23] \"geom_density2d\"               \"geom_density2d_filled\"       \n[25] \"geom_dotplot\"                 \"geom_errorbar\"               \n[27] \"geom_errorbarh\"               \"geom_exec\"                   \n[29] \"geom_freqpoly\"                \"geom_function\"               \n[31] \"geom_hex\"                     \"geom_histogram\"              \n[33] \"geom_hline\"                   \"geom_jitter\"                 \n[35] \"geom_label\"                   \"geom_label_repel\"            \n[37] \"geom_line\"                    \"geom_linerange\"              \n[39] \"geom_lm\"                      \"geom_map\"                    \n[41] \"geom_mosaic\"                  \"geom_mosaic_jitter\"          \n[43] \"geom_mosaic_text\"             \"geom_path\"                   \n[45] \"geom_pictogram\"               \"geom_point\"                  \n[47] \"geom_pointrange\"              \"geom_polygon\"                \n[49] \"geom_pwc\"                     \"geom_qq\"                     \n[51] \"geom_qq_line\"                 \"geom_quantile\"               \n[53] \"geom_rangeframe\"              \"geom_raster\"                 \n[55] \"geom_rect\"                    \"geom_ribbon\"                 \n[57] \"geom_ridgeline\"               \"geom_ridgeline_gradient\"     \n[59] \"geom_rug\"                     \"geom_segment\"                \n[61] \"geom_sf\"                      \"geom_sf_label\"               \n[63] \"geom_sf_text\"                 \"geom_signif\"                 \n[65] \"geom_smooth\"                  \"geom_spline\"                 \n[67] \"geom_spoke\"                   \"geom_step\"                   \n[69] \"geom_stripped_cols\"           \"geom_stripped_rows\"          \n[71] \"geom_text\"                    \"geom_text_repel\"             \n[73] \"geom_tile\"                    \"geom_tufteboxplot\"           \n[75] \"geom_violin\"                  \"geom_vline\"                  \n[77] \"geom_vridgeline\"              \"geom_waffle\""
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#other-geoms-1",
    "href": "slides/2024-08-28-dataviz.html#other-geoms-1",
    "title": "Better Data Visualizations",
    "section": "Other geoms",
    "text": "Other geoms\nhelp pages will tell you their aesthetics, default stats, etc.\n\n?geom_area             # for example"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#lets-try-geom_area",
    "href": "slides/2024-08-28-dataviz.html#lets-try-geom_area",
    "title": "Better Data Visualizations",
    "section": "Let’s try geom_area",
    "text": "Let’s try geom_area\n\n\n\nggplot(data = Births78,\n       aes(x = date,\n           y = births, \n           fill = wday)) + \n  geom_area()+\n  labs(title = \"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#lets-try-geom_area-1",
    "href": "slides/2024-08-28-dataviz.html#lets-try-geom_area-1",
    "title": "Better Data Visualizations",
    "section": "Let’s try geom_area",
    "text": "Let’s try geom_area\n\n\n\nggplot(data = Births78,\n       aes(x = date, y = births, fill = wday)) + \n  geom_area()+\n  labs(title = \"US Births in 1978\")\n\n\n\n\n\n\n\n\n\n… not a good plot\n\noverplotting is hiding much of the data\nextending y-axis to 0 may or may not be desirable."
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#side-note-what-makes-a-plot-good",
    "href": "slides/2024-08-28-dataviz.html#side-note-what-makes-a-plot-good",
    "title": "Better Data Visualizations",
    "section": "Side note: what makes a plot good?",
    "text": "Side note: what makes a plot good?\nMost (all?) graphics are intended to help us make comparisons\n\nHow does something change over time?\nDo my treatments matter? How much?\nDo treatment and control respond the same way?\n\n\n\n\n\n\n\nKey plot metric\n\n\nDoes my plot make the comparisons I am interested in:\n\neasily, and\naccurately?"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#time-for-some-different-data",
    "href": "slides/2024-08-28-dataviz.html#time-for-some-different-data",
    "title": "Better Data Visualizations",
    "section": "Time for some different data",
    "text": "Time for some different data\nHELPrct: Health Evaluation and Linkage to Primary care randomized clinical trial. Subjects admitted for treatment for addiction to one of three substances.\n\nhead(HELPrct)\n\n\n\n\n\n\n\n\n\n\nage\nanysubstatus\nanysub\ncesd\nd1\ndaysanysub\ndayslink\ndrugrisk\ne2b\nfemale\nsex\ng1b\nhomeless\ni1\ni2\nid\nindtot\nlinkstatus\nlink\nmcs\npcs\npss_fr\nracegrp\nsatreat\nsexrisk\nsubstance\ntreat\navg_drinks\nmax_drinks\nhospitalizations\n\n\n\n\n37\n1\nyes\n49\n3\n177\n225\n0\nNA\n0\nmale\nyes\nhoused\n13\n26\n1\n39\n1\nyes\n25.11\n58.4\n0\nblack\nno\n4\ncocaine\nyes\n13\n26\n3\n\n\n37\n1\nyes\n30\n22\n2\nNA\n0\nNA\n0\nmale\nyes\nhomeless\n56\n62\n2\n43\nNA\nNA\n26.67\n36.0\n1\nwhite\nno\n7\nalcohol\nyes\n56\n62\n22\n\n\n26\n1\nyes\n39\n0\n3\n365\n20\nNA\n0\nmale\nno\nhoused\n0\n0\n3\n41\n0\nno\n6.76\n74.8\n13\nblack\nno\n2\nheroin\nno\n0\n0\n0\n\n\n39\n1\nyes\n15\n2\n189\n343\n0\n1\n1\nfemale\nno\nhoused\n5\n5\n4\n28\n0\nno\n43.97\n61.9\n11\nwhite\nyes\n4\nheroin\nno\n5\n5\n2\n\n\n32\n1\nyes\n39\n12\n2\n57\n0\n1\n0\nmale\nno\nhomeless\n10\n13\n5\n38\n1\nyes\n21.68\n37.3\n10\nblack\nno\n6\ncocaine\nno\n10\n13\n12\n\n\n47\n1\nyes\n6\n1\n31\n365\n0\nNA\n1\nfemale\nno\nhoused\n4\n4\n6\n29\n0\nno\n55.51\n46.5\n5\nblack\nno\n5\ncocaine\nyes\n4\n4\n1"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#who-are-the-people-in-the-study",
    "href": "slides/2024-08-28-dataviz.html#who-are-the-people-in-the-study",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = substance)) + \n  geom_bar()+\n  labs(title = \"HELP trial\")\n\n\nHmm. What’s up with y?\n\nstat_bin() is being applied to the data before the geom_bar() gets to do its thing. Binning creates the y values."
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#who-are-the-people-in-the-study-1",
    "href": "slides/2024-08-28-dataviz.html#who-are-the-people-in-the-study-1",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = substance,\n           fill = children)) + \n  geom_bar()+\n  labs(title = \"HELP trial\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#who-are-the-people-in-the-study-2",
    "href": "slides/2024-08-28-dataviz.html#who-are-the-people-in-the-study-2",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(HELP_data,\n       aes(x = substance,\n           fill = children)) + \n  geom_bar(position = \"fill\") +\n  labs(title = \"HELP trial\",\n       y = \"actually, percent\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-old-are-people-in-the-help-study",
    "href": "slides/2024-08-28-dataviz.html#how-old-are-people-in-the-help-study",
    "title": "Better Data Visualizations",
    "section": "How old are people in the HELP study?",
    "text": "How old are people in the HELP study?\n\n\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_histogram()+\n  labs(title = \"HELP trial\")\n\nNotice the messages\n\nstat_bin: Histograms are not mapping the raw data but binned data.\nstat_bin() performs the data transformation.\nbinwidth: a default binwidth has been selected, but we should really choose our own."
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#setting-the-binwidth-manually",
    "href": "slides/2024-08-28-dataviz.html#setting-the-binwidth-manually",
    "title": "Better Data Visualizations",
    "section": "Setting the binwidth manually",
    "text": "Setting the binwidth manually\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_histogram(binwidth = 2)+\n  labs(title = \"HELP trial\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-old-are-people-in-the-help-study-other-geoms",
    "href": "slides/2024-08-28-dataviz.html#how-old-are-people-in-the-help-study-other-geoms",
    "title": "Better Data Visualizations",
    "section": "How old are people in the HELP study? – Other geoms",
    "text": "How old are people in the HELP study? – Other geoms\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_freqpoly(binwidth = 2)+\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_density()+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#selecting-stat-and-geom-manually",
    "href": "slides/2024-08-28-dataviz.html#selecting-stat-and-geom-manually",
    "title": "Better Data Visualizations",
    "section": "Selecting stat and geom manually",
    "text": "Selecting stat and geom manually\nEvery geom comes with a default stat\n\nfor simple cases, the stat is stat_identity() which does nothing\nwe can mix and match geoms and stats however we like\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_line(stat = \"density\")+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#selecting-stat-and-geom-manually-1",
    "href": "slides/2024-08-28-dataviz.html#selecting-stat-and-geom-manually-1",
    "title": "Better Data Visualizations",
    "section": "Selecting stat and geom manually",
    "text": "Selecting stat and geom manually\nEvery stat comes with a default geom, every geom with a default stat\n\nwe can specify stats instead of geom, if we prefer\nwe can mix and match geoms and stats however we like\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  stat_density(geom = \"line\")+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#more-combinations",
    "href": "slides/2024-08-28-dataviz.html#more-combinations",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_point(stat = \"bin\", binwidth = 3) + \n  geom_line(stat = \"bin\", binwidth = 3)  +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#more-combinations-1",
    "href": "slides/2024-08-28-dataviz.html#more-combinations-1",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_area(stat = \"bin\", binwidth = 3)  +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#more-combinations-2",
    "href": "slides/2024-08-28-dataviz.html#more-combinations-2",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_point(stat = \"bin\", \n             binwidth = 3, \n             aes(size = ..count..)) +\n  geom_line(stat = \"bin\", binwidth = 3) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-much-drinking-i1",
    "href": "slides/2024-08-28-dataviz.html#how-much-drinking-i1",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_histogram()+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-much-drinking-i1-1",
    "href": "slides/2024-08-28-dataviz.html#how-much-drinking-i1-1",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_density()+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#how-much-drinking-i1-2",
    "href": "slides/2024-08-28-dataviz.html#how-much-drinking-i1-2",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_area(stat = \"density\")+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#covariates-adding-in-more-variables",
    "href": "slides/2024-08-28-dataviz.html#covariates-adding-in-more-variables",
    "title": "Better Data Visualizations",
    "section": "Covariates: Adding in more variables",
    "text": "Covariates: Adding in more variables\nUsing color and linetype:\n\nggplot(data = HELP_data,\n       aes(x = i1,\n           color = substance,\n           linetype = children)) + \n  geom_line(stat = \"density\")+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#using-color-and-facets",
    "href": "slides/2024-08-28-dataviz.html#using-color-and-facets",
    "title": "Better Data Visualizations",
    "section": "Using color and facets",
    "text": "Using color and facets\n\nggplot(data = HELP_data,\n       aes(x = i1, color = substance)) + \n  geom_line(stat = \"density\") + \n  facet_grid( . ~ children )+\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = i1, color = substance)) + \n  geom_line(stat = \"density\") + \n  facet_grid( children ~ . )+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#boxplots",
    "href": "slides/2024-08-28-dataviz.html#boxplots",
    "title": "Better Data Visualizations",
    "section": "Boxplots",
    "text": "Boxplots\nBoxplots use stat_quantile() (five number summary).\nThe quantitative variable must be y, and there must be an additional x variable.\n\nHELP_data |&gt; \n  ggplot(aes(x = substance, y = age, color = children)) + \n  geom_boxplot()+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#horizontal-boxplots",
    "href": "slides/2024-08-28-dataviz.html#horizontal-boxplots",
    "title": "Better Data Visualizations",
    "section": "Horizontal boxplots",
    "text": "Horizontal boxplots\nHorizontal boxplots are obtained by flipping the coordinate system:\n\ncoord_flip() may be used with other plots as well to reverse the roles of x and y on the plot.\n\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot() +\n  coord_flip()+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#axes-scaling-with-boxplots",
    "href": "slides/2024-08-28-dataviz.html#axes-scaling-with-boxplots",
    "title": "Better Data Visualizations",
    "section": "Axes scaling with boxplots",
    "text": "Axes scaling with boxplots\nWe can scale the continuous axis\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot() +\n  coord_trans(y = \"exp\")+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#give-me-some-space",
    "href": "slides/2024-08-28-dataviz.html#give-me-some-space",
    "title": "Better Data Visualizations",
    "section": "Give me some space",
    "text": "Give me some space\nWe’ve triggered a new feature: dodge (for dodging things left/right). We can control how much if we set the dodge manually.\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot(position = position_dodge(width=1)) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#issues-with-bigger-data",
    "href": "slides/2024-08-28-dataviz.html#issues-with-bigger-data",
    "title": "Better Data Visualizations",
    "section": "Issues with bigger data",
    "text": "Issues with bigger data\n\nAlthough we can see a generally positive association (as we would expect), the overplotting may be hiding information.\n\n\nlibrary(NHANES)\ndim(NHANES)\n\n[1] 10000    76\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_point() + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#using-alpha-opacity",
    "href": "slides/2024-08-28-dataviz.html#using-alpha-opacity",
    "title": "Better Data Visualizations",
    "section": "Using alpha (opacity)",
    "text": "Using alpha (opacity)\nOne way to deal with overplotting is to set the opacity low.\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_point(alpha=0.01) + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#geom_density2d",
    "href": "slides/2024-08-28-dataviz.html#geom_density2d",
    "title": "Better Data Visualizations",
    "section": "geom_density2d",
    "text": "geom_density2d\nAlternatively (or simultaneously) we might prefer a different geom altogether.\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_density2d() + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#multiple-layers",
    "href": "slides/2024-08-28-dataviz.html#multiple-layers",
    "title": "Better Data Visualizations",
    "section": "Multiple layers",
    "text": "Multiple layers\n\n\n\nggplot(data = HELP_data, \n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_point(alpha=.6) +\n  coord_flip()+\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_jitter(alpha=.6, width = 0.1) +\n  coord_flip()+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#multiple-layers-1",
    "href": "slides/2024-08-28-dataviz.html#multiple-layers-1",
    "title": "Better Data Visualizations",
    "section": "Multiple layers",
    "text": "Multiple layers\n\nggplot(data = HELP_data,\n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_point(alpha=.6, \n             position = position_jitter(width=.1, height=0)) +\n  coord_flip()+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#things-i-havent-mentioned-much",
    "href": "slides/2024-08-28-dataviz.html#things-i-havent-mentioned-much",
    "title": "Better Data Visualizations",
    "section": "Things I haven’t mentioned (much)",
    "text": "Things I haven’t mentioned (much)\n\ncoords (coord_flip() is good to know about)\nthemes (for customizing appearance)\nposition (position_dodge(), position_jitterdodge(), position_stack(), etc.)\ntransforming axes"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#themes",
    "href": "slides/2024-08-28-dataviz.html#themes",
    "title": "Better Data Visualizations",
    "section": "themes",
    "text": "themes\n\nlibrary(ggthemes)\nggplot(Births78, aes(x = date, y = births)) + \n  geom_point() + \n  theme_wsj()"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#jitterdodge",
    "href": "slides/2024-08-28-dataviz.html#jitterdodge",
    "title": "Better Data Visualizations",
    "section": "jitterdodge()",
    "text": "jitterdodge()\n\nggplot(data = HELP_data, \n       aes(x = substance, y = age, color = children)) +\n  geom_boxplot(coef = 10, position = position_dodge()) +\n  geom_point(aes(color = children, \n                 fill = children), \n             position = position_jitterdodge()) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#a-little-bit-of-everything",
    "href": "slides/2024-08-28-dataviz.html#a-little-bit-of-everything",
    "title": "Better Data Visualizations",
    "section": "A little bit of everything",
    "text": "A little bit of everything\n\nggplot(data = HELP_data, aes(x = substance, y = age, color = children)) +\n  geom_boxplot(coef = 10, position = position_dodge(width=1)) +\n  geom_point(aes(fill = children), alpha=.5, \n             position = position_jitterdodge(dodge.width=1, jitter.width = 0.2)) + \n  facet_wrap(~homeless)+\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#want-to-learn-more",
    "href": "slides/2024-08-28-dataviz.html#want-to-learn-more",
    "title": "Better Data Visualizations",
    "section": "Want to learn more?",
    "text": "Want to learn more?\n\ndocs.ggplot2.org/\nR for Data Science by Hadley Wickham and Garrett Grolemund"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#whats-around-the-corner",
    "href": "slides/2024-08-28-dataviz.html#whats-around-the-corner",
    "title": "Better Data Visualizations",
    "section": "What’s around the corner?",
    "text": "What’s around the corner?\nshiny\n\ninteractive graphics / modeling\nhttps://shiny.rstudio.com/\n\nplotly\n\nPlotly is an R package for creating interactive web-based graphs via plotly’s JavaScript graphing library, plotly.js. The plotly R libary contains the ggplotly function , which will convert ggplot2 figures into a Plotly object. Furthermore, you have the option of manipulating the Plotly object with the style function.\n\n\nhttps://plot.ly/ggplot2/getting-started/\n\ngganimate\n\ngganimate tutorial"
  },
  {
    "objectID": "github.html#connecting-your-github-account-to-gradescope",
    "href": "github.html#connecting-your-github-account-to-gradescope",
    "title": "Working on assignments with GitHub",
    "section": "Connecting your GitHub account to Gradescope",
    "text": "Connecting your GitHub account to Gradescope\nThe first time you go to submit an assignment on Gradescope, you will be asked to connect to GitHub. Here are the steps to follow to make that connection:\n\nAccess Gradescope from Canvas: From Canvas, click on Gradescope in the Course Navigation menu. You will be asked to authorize the Gradescope integration.\nNavigate to Gradescope.com: In a new tab (same browser), navigate to https://www.gradescope.com/. Gradescope should recognize your student user account from the Canvas integration.\nGo to Gradescope Account Settings: Click on Account (bottom left of the screen) and then Edit Account.\n\n\n\n\n\n\nChange your Gradescope account settings.\n\n\n\n\nThis will take you to your Account Settings in Gradescope. Here, you’ll have the option to verify your Pomona email address and set up a password.\n\nLink Your GitHub Account to Gradescope: Scroll to the bottom of the page to the Link External Account menu. Click on Link a GitHub account.\n\n\n\n\n\n\nLinking GitHub to Gradescope.\n\n\n\n\nYou’ll be prompted to authorize GitHub and connect it to Gradescope. In the drop-down menu under Repositories, be sure to select “Public and private” to enable full access.\n\n\n\n\n\nAuthorizing Gradescope to talk to GitHub.\n\n\n\n\nWhen prompted, log in to your GitHub account to complete the process (I don’t know if you need your PAT or your “Go(ubs!” password, try both!).\nAfter your accounts have been linked, you’ll see a message that says “Successfully authenticated with GitHub.”\n\n\n\n\n\nSuccessful integration of GitHub and Gradescope\n\n\n\n\n\nReturn to Canvas & Verify the Connection\n\nNow, you can return to Canvas and navigate back to Gradescope. If you are returning to your previous tab, you may need to refresh the page to make sure your account settings are updated.\nClick on your programming assignment in Gradescope. Verify that the GitHub connection is working, and that you can see a list of your GitHub files in the drop-down menu when you are submitting an assignment.\n\n\n\n\n\nSubmitting HW from GitHub to Gradescope.\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIf you see a blank window when you click on Gradescope within Canvas, that means you need to enable third-party cookies in your browser. Since Gradescope is a third party integration in Canvas, cookies need to be enabled for it to work properly.\nITS has instructions for how to enable cookies on a range of different browsers: How do I enable third-party cookies in my browser?\n\n\n\n\n\n\n\n\nImportant\n\n\n\nITS has also put together a knowledge base article describing How to submit GitHub files to a Gradescope programming assignment."
  },
  {
    "objectID": "github.html#submitting-assignments-after-having-connected-to-github",
    "href": "github.html#submitting-assignments-after-having-connected-to-github",
    "title": "Working on assignments with GitHub",
    "section": "Submitting assignments after having connected to GitHub",
    "text": "Submitting assignments after having connected to GitHub\nTo submit your assignment, complete the following steps:\n\nVia Canvas, access the course’s Gradescope site, select the appropriate assignment, and then choose GitHub as the submission method.\nSelect the appropriate GitHub repository. The branch will always be “main”.\n\nYou can submit multiple times before the deadline. Your last submission will determine your grade.\nOnce assignments are completely graded, you will be able to see your grade and assignment feedback on Gradescope. Grades will also be synced with Canvas."
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#layers",
    "href": "slides/2024-08-28-dataviz.html#layers",
    "title": "Better Data Visualizations",
    "section": "Layers",
    "text": "Layers\nLayer 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78, \n       aes(x = date, y = births))"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#layers-1",
    "href": "slides/2024-08-28-dataviz.html#layers-1",
    "title": "Better Data Visualizations",
    "section": "Layers",
    "text": "Layers\nLayer 2\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78, \n       aes(x = date, y = births)) + \n  geom_point()"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#layers-2",
    "href": "slides/2024-08-28-dataviz.html#layers-2",
    "title": "Better Data Visualizations",
    "section": "Layers",
    "text": "Layers\nLayer 3\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78, \n       aes(x = date, y = births)) + \n  geom_point() +\n  labs(title = \"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#tidy-data",
    "href": "slides/2024-09-11-wrangling1.html#tidy-data",
    "title": "Data Wrangling",
    "section": "Tidy data",
    "text": "Tidy data\n\neach row = a unit of observation (here, a penguin)\neach column = a measure on some variable of interest, either quantitative (numbers with units) or categorical (discrete possibilities or categories)\neach entry contains a single data value; no analysis, summaries, footnotes, comments, etc, and only one value per cell"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#definition-of-datum",
    "href": "slides/2024-09-11-wrangling1.html#definition-of-datum",
    "title": "Data Wrangling",
    "section": "Definition of datum",
    "text": "Definition of datum\nThe definition of datum can be much broader:\n\nDefinition of datum from the Oxford English Dictionary"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#tidying-data",
    "href": "slides/2024-09-11-wrangling1.html#tidying-data",
    "title": "Data Wrangling",
    "section": "Tidying data",
    "text": "Tidying data\nHow would you wrangle each data example into a tidy format?\n\nthe emails in your inbox\n\nsocial media texts\n\nimages\n\nvideos\n\naudio files"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#not-tidy-active-duty-military",
    "href": "slides/2024-09-11-wrangling1.html#not-tidy-active-duty-military",
    "title": "Data Wrangling",
    "section": "Not tidy – Active Duty Military",
    "text": "Not tidy – Active Duty Military\nThe Active Duty data are not tidy! What are the cases? How are the data not tidy? What might the data look like in tidy form? Suppose that the case was “an individual in the armed forces.” What variables would you use to capture the information in the following table?"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#tidy-packages-the-tidyverse",
    "href": "slides/2024-09-11-wrangling1.html#tidy-packages-the-tidyverse",
    "title": "Data Wrangling",
    "section": "Tidy packages: the tidyverse",
    "text": "Tidy packages: the tidyverse\n\nimage credit: https://www.tidyverse.org/."
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#some-basic-verbs",
    "href": "slides/2024-09-11-wrangling1.html#some-basic-verbs",
    "title": "Data Wrangling",
    "section": "Some Basic Verbs",
    "text": "Some Basic Verbs\n\nfilter()\narrange()\nselect()\ndistinct()\nmutate()\nsummarize()\nsample_n()"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#filter",
    "href": "slides/2024-09-11-wrangling1.html#filter",
    "title": "Data Wrangling",
    "section": "filter()",
    "text": "filter()\nAllows you to select a subset of the rows of a data frame. The first argument is the name of the data frame, the following arguments are the filters that you’d like to apply\nFor all flights on January 1st:\n\nfilter(flights, month == 1, day == 1)\n\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#constructing-filters",
    "href": "slides/2024-09-11-wrangling1.html#constructing-filters",
    "title": "Data Wrangling",
    "section": "Constructing filters",
    "text": "Constructing filters\nFilters are constructed of logical operators: &lt;, &gt;, &lt;=, &gt;=, ==, != (and some others).\nAdding them one by one to filter() is akin to saying “this AND that”. To say “this OR that OR both”, use |.\n\nfilter(flights, month == 1 | month == 2)\n\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 51,945 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#practice",
    "href": "slides/2024-09-11-wrangling1.html#practice",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nConstruct filters to isolate:\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours."
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#solution",
    "href": "slides/2024-09-11-wrangling1.html#solution",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours.\n\n\nfilter(flights, month == 3, day == 17)\nfilter(flights, dest == \"ORD\")\nfilter(flights, dest == \"ORD\", carrier == \"UA\")\nfilter(flights, distance &gt; 2000 | air_time &gt; 5*60)"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#arrange",
    "href": "slides/2024-09-11-wrangling1.html#arrange",
    "title": "Data Wrangling",
    "section": "arrange()",
    "text": "arrange()\narrange() reorders the rows: It takes a data frame, and a set of column names (or more complicated expressions) to order by. If you provide more than one column name, each additional column will be used to break ties in the values of preceding columns:\n\narrange(flights, year, month, day)\n\nUse desc() to sort in descending order.\n\narrange(flights, desc(arr_delay))"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#select",
    "href": "slides/2024-09-11-wrangling1.html#select",
    "title": "Data Wrangling",
    "section": "select()",
    "text": "select()\nOften you work with large datasets with many columns where only a few are actually of interest to you. select() allows you to rapidly zoom in on a useful subset using operations that usually only work on numeric variable positions:\n\nselect(flights, year, month, day)\n\nYou can exclude columns using - and specify a range using :.\n\nselect(flights, -(year:day))"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#distinct",
    "href": "slides/2024-09-11-wrangling1.html#distinct",
    "title": "Data Wrangling",
    "section": "distinct()",
    "text": "distinct()\nA common use of select() is to find out which values a set of variables takes. This is particularly useful in conjunction with the distinct() verb which only returns the unique values in a table.\nWhat do the following data correspond to?\n\ndistinct(select(flights, origin, dest))\n\n# A tibble: 224 × 2\n   origin dest \n   &lt;chr&gt;  &lt;chr&gt;\n 1 EWR    IAH  \n 2 LGA    IAH  \n 3 JFK    MIA  \n 4 JFK    BQN  \n 5 LGA    ATL  \n 6 EWR    ORD  \n 7 EWR    FLL  \n 8 LGA    IAD  \n 9 JFK    MCO  \n10 LGA    ORD  \n# ℹ 214 more rows"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#mutate",
    "href": "slides/2024-09-11-wrangling1.html#mutate",
    "title": "Data Wrangling",
    "section": "mutate()",
    "text": "mutate()\nAs well as selecting from the set of existing columns, it’s often useful to add new columns that are functions of existing columns. This is the job of mutate():\n\nselect(mutate(flights, gain = dep_delay - arr_delay), \n       flight, dep_delay, arr_delay, gain)\n\n# A tibble: 336,776 × 4\n   flight dep_delay arr_delay  gain\n    &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1   1545         2        11    -9\n 2   1714         4        20   -16\n 3   1141         2        33   -31\n 4    725        -1       -18    17\n 5    461        -6       -25    19\n 6   1696        -4        12   -16\n 7    507        -5        19   -24\n 8   5708        -3       -14    11\n 9     79        -3        -8     5\n10    301        -2         8   -10\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#summarize-and-sample_n",
    "href": "slides/2024-09-11-wrangling1.html#summarize-and-sample_n",
    "title": "Data Wrangling",
    "section": "summarize() and sample_n()",
    "text": "summarize() and sample_n()\nsummarize() collapses a data frame to a single row based on some function. It’s not very useful yet, but it will be.\nsample_n() provides you with a random sample of rows.\n\nsummarize(flights, delay = mean(dep_delay, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  delay\n  &lt;dbl&gt;\n1  12.6\n\nsample_n(flights, 10)\n\n# A tibble: 10 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1    13       NA           2125        NA       NA           2240\n 2  2013     2    27     1633           1610        23     1901           1917\n 3  2013     2     7     1533           1535        -2     1800           1743\n 4  2013     4    16     1232           1236        -4     1422           1431\n 5  2013    10     9     1938           1940        -2     2220           2252\n 6  2013     2    24     1114           1115        -1     1422           1425\n 7  2013     1    21     1738           1545       113     1847           1703\n 8  2013    10    29      920            930       -10     1201           1237\n 9  2013     3     2     1412           1350        22     1654           1715\n10  2013     1    16     1859           1900        -1     2004           2015\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#practice-1",
    "href": "slides/2024-09-11-wrangling1.html#practice-1",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object."
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#practice-2",
    "href": "slides/2024-09-11-wrangling1.html#practice-2",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object.\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\nspeed_data &lt;- select(flights2, tailnum, speed)"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#group_by",
    "href": "slides/2024-09-11-wrangling1.html#group_by",
    "title": "Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nsummarize() and sample_n() are even more powerful when combined with the idea of “group by”, repeating the operation separately on groups of observations within the dataset.\nThe group_by() function describes how to break a dataset down into groups of rows."
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#group_by-1",
    "href": "slides/2024-09-11-wrangling1.html#group_by-1",
    "title": "Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nFind the fastest airplanes in the bunch, measured as the average speed per airplane.\n\nby_tailnum &lt;- group_by(speed_data, tailnum)\navg_speed &lt;- summarize(by_tailnum, \n                       count = n(), \n                       avg_speed = mean(speed, na.rm = TRUE))\narrange(avg_speed, desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum count avg_speed\n   &lt;chr&gt;   &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA      1      501.\n 2 N315AS      1      499.\n 3 N654UA      1      499.\n 4 N819AW      1      490.\n 5 N382HA     26      486.\n 6 N388HA     36      484.\n 7 N391HA     21      484.\n 8 N777UA      1      483.\n 9 N385HA     28      483.\n10 N392HA     13      482.\n# ℹ 4,034 more rows"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#chaining",
    "href": "slides/2024-09-11-wrangling1.html#chaining",
    "title": "Data Wrangling",
    "section": "Chaining",
    "text": "Chaining\nInstead of applying each verb step-by-step, we can chain them into a single data pipeline, connected with the |&gt; operator. You start the pipeline with a data frame and then pass it to each function in turn.\nThe pipe syntax (|&gt;) takes a data frame and sends it to the argument of a function. The mapping goes to the first available argument in the function. For example:\nx |&gt;  f() is the same as f(x)\nx |&gt;  f(y) is the same as f(x, y)"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#mornings",
    "href": "slides/2024-09-11-wrangling1.html#mornings",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\nme_step1 &lt;- dress(me, what = sports)  \nme_step2 &lt;- exercise(me_step1, how = running)  \nme_step3 &lt;- eat(me_step2, choice = cereal)  \nme_step4 &lt;- dress(me_step3, what = school)  \nme_step5 &lt;- commute(me_step4, transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#mornings-1",
    "href": "slides/2024-09-11-wrangling1.html#mornings-1",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\ncommute(dress(eat(exercise(dress(me, what = sports), how = running), choice = cereal), what = school), transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#morning",
    "href": "slides/2024-09-11-wrangling1.html#morning",
    "title": "Data Wrangling",
    "section": "Morning",
    "text": "Morning\n(better??)\n\ncommute(\n  dress(\n    eat(\n      exercise(\n        dress(me, \n              what = sports), \n        how = running), \n      choice = cereal), \n    what = school), \n  transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#mornings-2",
    "href": "slides/2024-09-11-wrangling1.html#mornings-2",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\nme |&gt; \n  dress(what = sports) |&gt; \n  exercise(how = running) |&gt; \n  eat(choice = cereal) |&gt; \n  dress(what = school) |&gt; \n  commute(transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#little-bunny-foo-foo",
    "href": "slides/2024-09-11-wrangling1.html#little-bunny-foo-foo",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nFrom Hadley Wickham, how to think about tidy data.\n\nLittle bunny Foo Foo\n\n\nWent hopping through the forest\n\n\nScooping up the field mice\n\n\nAnd bopping them on the head"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#little-bunny-foo-foo-1",
    "href": "slides/2024-09-11-wrangling1.html#little-bunny-foo-foo-1",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nThe nursery rhyme could be created by a series of steps where the output from each step is saved as an object along the way.\n\nfoo_foo &lt;- little_bunny()\nfoo_foo_1 &lt;- hop(foo_foo, through = forest)\nfoo_foo_2 &lt;- scoop(foo_foo_2, up = field_mice)\nfoo_foo_3 &lt;- bop(foo_foo_2, on = head)"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#little-bunny-foo-foo-2",
    "href": "slides/2024-09-11-wrangling1.html#little-bunny-foo-foo-2",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nAnother approach is to concatenate the functions so that there is only one output.\n\nbop(\n   scoop(\n      hop(foo_foo, through = forest),\n      up = field_mice),\n   on = head)"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#little-bunny-foo-foo-3",
    "href": "slides/2024-09-11-wrangling1.html#little-bunny-foo-foo-3",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nOr even worse, as one line:\n\nbop(scoop(hop(foo_foo, through = forest), up = field_mice), on = head)))"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#little-bunny-foo-foo-4",
    "href": "slides/2024-09-11-wrangling1.html#little-bunny-foo-foo-4",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nInstead, the code can be written using the pipe in the order in which the function is evaluated:\n\nfoo_foo |&gt; \n   hop(through = forest) |&gt; \n       scoop(up = field_mice) |&gt; \n           bop(on = head)"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#flights",
    "href": "slides/2024-09-11-wrangling1.html#flights",
    "title": "Data Wrangling",
    "section": "Flights",
    "text": "Flights\n\nNo pipePipe\n\n\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\ntail_speed &lt;- select(flights2, tailnum, speed)\ntail_speed_grp &lt;- group_by(tail_speed, tailnum)\ntail_ave &lt;- summarize(tail_speed_grp, number = n(),\n                      avg_speed = mean(speed, na.rm = TRUE))\narrange(tail_ave, desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum number avg_speed\n   &lt;chr&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA       1      501.\n 2 N315AS       1      499.\n 3 N654UA       1      499.\n 4 N819AW       1      490.\n 5 N382HA      26      486.\n 6 N388HA      36      484.\n 7 N391HA      21      484.\n 8 N777UA       1      483.\n 9 N385HA      28      483.\n10 N392HA      13      482.\n# ℹ 4,034 more rows\n\n\n\n\n\nflights |&gt; \n  mutate(speed = distance / (air_time/60)) |&gt; \n  select(tailnum, speed) |&gt; \n  group_by(tailnum) |&gt;  \n  summarize(number = n(), \n            avg_speed = mean(speed, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum number avg_speed\n   &lt;chr&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA       1      501.\n 2 N315AS       1      499.\n 3 N654UA       1      499.\n 4 N819AW       1      490.\n 5 N382HA      26      486.\n 6 N388HA      36      484.\n 7 N391HA      21      484.\n 8 N777UA       1      483.\n 9 N385HA      28      483.\n10 N392HA      13      482.\n# ℹ 4,034 more rows"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#practice-3",
    "href": "slides/2024-09-11-wrangling1.html#practice-3",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#practice-4",
    "href": "slides/2024-09-11-wrangling1.html#practice-4",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?\n\nflights |&gt; \n  group_by(carrier) |&gt; \n  summarize(avg_delay = mean(dep_delay, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_delay))\n\n# A tibble: 16 × 2\n   carrier avg_delay\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 F9          20.2 \n 2 EV          20.0 \n 3 YV          19.0 \n 4 FL          18.7 \n 5 WN          17.7 \n 6 9E          16.7 \n 7 B6          13.0 \n 8 VX          12.9 \n 9 OO          12.6 \n10 UA          12.1 \n11 MQ          10.6 \n12 DL           9.26\n13 AA           8.59\n14 AS           5.80\n15 HA           4.90\n16 US           3.78"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#practice-again",
    "href": "slides/2024-09-11-wrangling1.html#practice-again",
    "title": "Data Wrangling",
    "section": "Practice again",
    "text": "Practice again\nSay you’re curious about the relationship between the number of flights that each plane made in 2013, the mean distance that each of those planes flew, and the mean arrival delay. You also want to exclude the edge cases from your analysis, so focus on the planes that have logged more than 20 flights and flown an average distance of less than 2000 miles. Please form the chain that creates this dataset."
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#solution-1",
    "href": "slides/2024-09-11-wrangling1.html#solution-1",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\ndelay_data &lt;- flights |&gt; \n  group_by(tailnum) |&gt; \n  summarize(number = n(),\n            dist = mean(distance, na.rm = TRUE), \n            delay = mean(arr_delay, na.rm = TRUE)) |&gt; \n  filter(number &gt; 20, dist &lt; 2000)"
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#visualizing-the-data",
    "href": "slides/2024-09-11-wrangling1.html#visualizing-the-data",
    "title": "Data Wrangling",
    "section": "Visualizing the data",
    "text": "Visualizing the data\n\nVizCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndelay_data |&gt; \n ggplot(aes(dist, delay)) +\n geom_point(aes(size = number), \n            alpha = 1/2) +\n geom_smooth() +\n scale_size_area()\n\nWhen scale_size_area is used, the default behavior is to scale the area of points to be proportional to the value."
  },
  {
    "objectID": "slides/2024-09-11-wrangling1.html#pipe",
    "href": "slides/2024-09-11-wrangling1.html#pipe",
    "title": "Data Wrangling",
    "section": "Pipe",
    "text": "Pipe\n\nflights |&gt; \n  mutate(speed = distance / (air_time/60)) |&gt; \n  select(tailnum, speed) |&gt; \n  group_by(tailnum) |&gt;  \n  summarize(number = n(), \n            avg_speed = mean(speed, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum number avg_speed\n   &lt;chr&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA       1      501.\n 2 N315AS       1      499.\n 3 N654UA       1      499.\n 4 N819AW       1      490.\n 5 N382HA      26      486.\n 6 N388HA      36      484.\n 7 N391HA      21      484.\n 8 N777UA       1      483.\n 9 N385HA      28      483.\n10 N392HA      13      482.\n# ℹ 4,034 more rows"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#preliminaries",
    "href": "slides/2024-08-28-dataviz.html#preliminaries",
    "title": "Better Data Visualizations",
    "section": "Preliminaries",
    "text": "Preliminaries\n\nMake the data stand out\nFacilitate comparison\nAdd information\n\n(Nolan & Perrrett, 2016)"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#preliminaries-1",
    "href": "slides/2024-08-28-dataviz.html#preliminaries-1",
    "title": "Better Data Visualizations",
    "section": "Preliminaries",
    "text": "Preliminaries\nTufte lists two main motivational steps to working with graphics as part of an argument.\n\n“An essential analytic task in making decisions based on evidence is to understand how things work.”\nMaking decisions based on evidence requires the appropriate display of that evidence.”"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#cholera---a-picture-tells-1000-words",
    "href": "slides/2024-08-28-dataviz.html#cholera---a-picture-tells-1000-words",
    "title": "Better Data Visualizations",
    "section": "Cholera - a picture tells 1000 words",
    "text": "Cholera - a picture tells 1000 words\n\nHow many aspects of this graph can you point out which are relevant to figuring out that cholera infection was coming from a single pump? Are there any distracting aspects?"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#cholera---difficult-to-interpret",
    "href": "slides/2024-08-28-dataviz.html#cholera---difficult-to-interpret",
    "title": "Better Data Visualizations",
    "section": "Cholera - difficult to interpret",
    "text": "Cholera - difficult to interpret\n\nWhy would the outbreak already have begun to decline before the pump handle was removed?"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#challenger---problematic",
    "href": "slides/2024-08-28-dataviz.html#challenger---problematic",
    "title": "Better Data Visualizations",
    "section": "Challenger - Problematic",
    "text": "Challenger - Problematic\n\nOne of the graphics which was particularly unconvincing in trying to explain that O-rings fail in the cold."
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#challenger---better",
    "href": "slides/2024-08-28-dataviz.html#challenger---better",
    "title": "Better Data Visualizations",
    "section": "Challenger - Better????",
    "text": "Challenger - Better????\n\nA different graph of the Challenger information, now sorted by temperature"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#challenger---improved",
    "href": "slides/2024-08-28-dataviz.html#challenger---improved",
    "title": "Better Data Visualizations",
    "section": "Challenger - Improved",
    "text": "Challenger - Improved\n\nThe graphic the engineers should have led with in trying to persuade the administrators not to launch. It is evident that the number of O-ring failures is quite highly associated with the ambient temperature. Note the vital information on the x-axis associated with the large number of launches at warm temperatures that had zero O-ring failures.Note that the “improved” Challenger graphic was made by Tufte, not by the engineers working on the problem at the time."
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#fonts-matter",
    "href": "slides/2024-08-28-dataviz.html#fonts-matter",
    "title": "Better Data Visualizations",
    "section": "Fonts matter",
    "text": "Fonts matter"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#advice-on-plotting-specific",
    "href": "slides/2024-08-28-dataviz.html#advice-on-plotting-specific",
    "title": "Better Data Visualizations",
    "section": "Advice on plotting, specific",
    "text": "Advice on plotting, specific\n\nAvoid having other graph elements interfere with data\nUse visually prominent symbols\nAvoid over-plotting (One way to avoid over plotting: jitter the values)\nDifferent values of data may obscure each other\nInclude all or nearly all of the data\nFill data region"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#advice-on-plotting-general",
    "href": "slides/2024-08-28-dataviz.html#advice-on-plotting-general",
    "title": "Better Data Visualizations",
    "section": "Advice on plotting, general",
    "text": "Advice on plotting, general\n\nEliminate superfluous material\nFacilitate comparisons\nChoose the best scale\nMake the plot data / information rich\nUse good captions, alt text, conclusions"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#simplify",
    "href": "slides/2024-08-28-dataviz.html#simplify",
    "title": "Better Data Visualizations",
    "section": "Simplify",
    "text": "Simplify\n\nimage credit: https://www.darkhorseanalytics.com/portfolio-data-looks-better-naked"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#simplified",
    "href": "slides/2024-08-28-dataviz.html#simplified",
    "title": "Better Data Visualizations",
    "section": "Simplified",
    "text": "Simplified\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimage credit: https://www.darkhorseanalytics.com/portfolio-data-looks-better-naked"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#nyt-9721",
    "href": "slides/2024-08-28-dataviz.html#nyt-9721",
    "title": "Better Data Visualizations",
    "section": "NYT 9/7/21",
    "text": "NYT 9/7/21\n\nData VizWhat they did well\n\n\n\n\n\n\n\nOne in 5,000, NYT, D. Leonhardt 9/7/21; image credit: https://www.nytimes.com/2021/09/07/briefing/risk-breakthrough-infections-delta.html\n\n\n\n\n\n\n\nlighter grid lines\nno extra information\ngood caption\nregression line to give context to the trend\ny axes labels horizontal, not vertical\na few states (and the US) are highlighted to draw the reader’s eye"
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#worth-a-mention",
    "href": "slides/2024-08-28-dataviz.html#worth-a-mention",
    "title": "Better Data Visualizations",
    "section": "Worth a Mention",
    "text": "Worth a Mention\n\n\nW.E.B. Du Bois (1868-1963)\n\nsociologist\ndata scientist\n\n\n\n\n\n\n\nimage credit: wikipedia\n\n\n\n\n\n\nIn 1900 Du Bois contributed approximately 60 data visualizations to an exhibit at the Exposition Universelle in Paris, an exhibit designed to illustrate the progress made by African Americans since the end of slavery (only 37 years prior, in 1863)."
  },
  {
    "objectID": "slides/2024-08-28-dataviz.html#beautiful-informative-graphics",
    "href": "slides/2024-08-28-dataviz.html#beautiful-informative-graphics",
    "title": "Better Data Visualizations",
    "section": "Beautiful & Informative Graphics",
    "text": "Beautiful & Informative Graphics\nhttps://drawingmatter.org/w-e-b-du-bois-visionary-infographics/"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#tidy-data",
    "href": "slides/2024-09-11-verbs.html#tidy-data",
    "title": "Data Wrangling",
    "section": "Tidy data",
    "text": "Tidy data\n\neach row = a unit of observation (here, a penguin)\neach column = a measure on some variable of interest, either quantitative (numbers with units) or categorical (discrete possibilities or categories)\neach entry contains a single data value; no analysis, summaries, footnotes, comments, etc, and only one value per cell"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#definition-of-datum",
    "href": "slides/2024-09-11-verbs.html#definition-of-datum",
    "title": "Data Wrangling",
    "section": "Definition of datum",
    "text": "Definition of datum\nThe definition of datum can be much broader:\n\nDefinition of datum from the Oxford English Dictionary"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#tidying-data",
    "href": "slides/2024-09-11-verbs.html#tidying-data",
    "title": "Data Wrangling",
    "section": "Tidying data",
    "text": "Tidying data\nHow would you wrangle each data example into a tidy format?\n\nthe emails in your inbox\n\nsocial media texts\n\nimages\n\nvideos\n\naudio files"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#not-tidy-active-duty-military",
    "href": "slides/2024-09-11-verbs.html#not-tidy-active-duty-military",
    "title": "Data Wrangling",
    "section": "Not tidy – Active Duty Military",
    "text": "Not tidy – Active Duty Military\nThe Active Duty data are not tidy! What are the cases? How are the data not tidy? What might the data look like in tidy form? Suppose that the case was “an individual in the armed forces.” What variables would you use to capture the information in the following table?"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#tidy-packages-the-tidyverse",
    "href": "slides/2024-09-11-verbs.html#tidy-packages-the-tidyverse",
    "title": "Data Wrangling",
    "section": "Tidy packages: the tidyverse",
    "text": "Tidy packages: the tidyverse\n\nimage credit: https://www.tidyverse.org/."
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#some-basic-verbs",
    "href": "slides/2024-09-11-verbs.html#some-basic-verbs",
    "title": "Data Wrangling",
    "section": "Some Basic Verbs",
    "text": "Some Basic Verbs\n\nfilter()\narrange()\nselect()\ndistinct()\nmutate()\nsummarize()\nsample_n()"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#filter",
    "href": "slides/2024-09-11-verbs.html#filter",
    "title": "Data Wrangling",
    "section": "filter()",
    "text": "filter()\nAllows you to select a subset of the rows of a data frame. The first argument is the name of the data frame, the following arguments are the filters that you’d like to apply\nFor all flights on January 1st:\n\nfilter(flights, month == 1, day == 1)\n\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#constructing-filters",
    "href": "slides/2024-09-11-verbs.html#constructing-filters",
    "title": "Data Wrangling",
    "section": "Constructing filters",
    "text": "Constructing filters\nFilters are constructed of logical operators: &lt;, &gt;, &lt;=, &gt;=, ==, != (and some others).\nAdding them one by one to filter() is akin to saying “this AND that”. To say “this OR that OR both”, use |.\n\nfilter(flights, month == 1 | month == 2)\n\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 51,945 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#practice",
    "href": "slides/2024-09-11-verbs.html#practice",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nConstruct filters to isolate:\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours."
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#solution",
    "href": "slides/2024-09-11-verbs.html#solution",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours.\n\n\nfilter(flights, month == 3, day == 17)\nfilter(flights, dest == \"ORD\")\nfilter(flights, dest == \"ORD\", carrier == \"UA\")\nfilter(flights, distance &gt; 2000 | air_time &gt; 5*60)"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#arrange",
    "href": "slides/2024-09-11-verbs.html#arrange",
    "title": "Data Wrangling",
    "section": "arrange()",
    "text": "arrange()\narrange() reorders the rows: It takes a data frame, and a set of column names (or more complicated expressions) to order by. If you provide more than one column name, each additional column will be used to break ties in the values of preceding columns:\n\narrange(flights, year, month, day)\n\nUse desc() to sort in descending order.\n\narrange(flights, desc(arr_delay))"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#select",
    "href": "slides/2024-09-11-verbs.html#select",
    "title": "Data Wrangling",
    "section": "select()",
    "text": "select()\nOften you work with large datasets with many columns where only a few are actually of interest to you. select() allows you to rapidly zoom in on a useful subset using operations that usually only work on numeric variable positions:\n\nselect(flights, year, month, day)\n\nYou can exclude columns using - and specify a range using :.\n\nselect(flights, -(year:day))"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#distinct",
    "href": "slides/2024-09-11-verbs.html#distinct",
    "title": "Data Wrangling",
    "section": "distinct()",
    "text": "distinct()\nA common use of select() is to find out which values a set of variables takes. This is particularly useful in conjunction with the distinct() verb which only returns the unique values in a table.\nWhat do the following data correspond to?\n\ndistinct(select(flights, origin, dest))\n\n# A tibble: 224 × 2\n   origin dest \n   &lt;chr&gt;  &lt;chr&gt;\n 1 EWR    IAH  \n 2 LGA    IAH  \n 3 JFK    MIA  \n 4 JFK    BQN  \n 5 LGA    ATL  \n 6 EWR    ORD  \n 7 EWR    FLL  \n 8 LGA    IAD  \n 9 JFK    MCO  \n10 LGA    ORD  \n# ℹ 214 more rows"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#mutate",
    "href": "slides/2024-09-11-verbs.html#mutate",
    "title": "Data Wrangling",
    "section": "mutate()",
    "text": "mutate()\nAs well as selecting from the set of existing columns, it’s often useful to add new columns that are functions of existing columns. This is the job of mutate():\n\nselect(mutate(flights, gain = dep_delay - arr_delay), \n       flight, dep_delay, arr_delay, gain)\n\n# A tibble: 336,776 × 4\n   flight dep_delay arr_delay  gain\n    &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1   1545         2        11    -9\n 2   1714         4        20   -16\n 3   1141         2        33   -31\n 4    725        -1       -18    17\n 5    461        -6       -25    19\n 6   1696        -4        12   -16\n 7    507        -5        19   -24\n 8   5708        -3       -14    11\n 9     79        -3        -8     5\n10    301        -2         8   -10\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#summarize-and-sample_n",
    "href": "slides/2024-09-11-verbs.html#summarize-and-sample_n",
    "title": "Data Wrangling",
    "section": "summarize() and sample_n()",
    "text": "summarize() and sample_n()\nsummarize() collapses a data frame to a single row based on some function. It’s not very useful yet, but it will be.\nsample_n() provides you with a random sample of rows.\n\nsummarize(flights, delay = mean(dep_delay, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  delay\n  &lt;dbl&gt;\n1  12.6\n\nsample_n(flights, 10)\n\n# A tibble: 10 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013    12     1     1919           1930       -11     2225           2235\n 2  2013     6    14     2059           2103        -4     2315           2310\n 3  2013     1    16      811            820        -9     1001            955\n 4  2013     6    12     2124           2130        -6     2232           2245\n 5  2013     9     5     1443           1445        -2     1758           1750\n 6  2013     8     7     2105           2100         5     2212           2214\n 7  2013     4    28      808            817        -9     1006           1031\n 8  2013     7    23       NA           1029        NA       NA           1209\n 9  2013     2    19      652            700        -8     1020           1025\n10  2013    11    19     1503           1512        -9     1623           1641\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#practice-1",
    "href": "slides/2024-09-11-verbs.html#practice-1",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object."
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#practice-2",
    "href": "slides/2024-09-11-verbs.html#practice-2",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object.\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\nspeed_data &lt;- select(flights2, tailnum, speed)"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#group_by",
    "href": "slides/2024-09-11-verbs.html#group_by",
    "title": "Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nsummarize() and sample_n() are even more powerful when combined with the idea of “group by”, repeating the operation separately on groups of observations within the dataset.\nThe group_by() function describes how to break a dataset down into groups of rows."
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#group_by-1",
    "href": "slides/2024-09-11-verbs.html#group_by-1",
    "title": "Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nFind the fastest airplanes in the bunch, measured as the average speed per airplane.\n\nby_tailnum &lt;- group_by(speed_data, tailnum)\navg_speed &lt;- summarize(by_tailnum, \n                       count = n(), \n                       avg_speed = mean(speed, na.rm = TRUE))\narrange(avg_speed, desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum count avg_speed\n   &lt;chr&gt;   &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA      1      501.\n 2 N315AS      1      499.\n 3 N654UA      1      499.\n 4 N819AW      1      490.\n 5 N382HA     26      486.\n 6 N388HA     36      484.\n 7 N391HA     21      484.\n 8 N777UA      1      483.\n 9 N385HA     28      483.\n10 N392HA     13      482.\n# ℹ 4,034 more rows"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#chaining",
    "href": "slides/2024-09-11-verbs.html#chaining",
    "title": "Data Wrangling",
    "section": "Chaining",
    "text": "Chaining\nInstead of applying each verb step-by-step, we can chain them into a single data pipeline, connected with the |&gt; operator. You start the pipeline with a data frame and then pass it to each function in turn.\nThe pipe syntax (|&gt;) takes a data frame and sends it to the argument of a function. The mapping goes to the first available argument in the function. For example:\nx |&gt;  f() is the same as f(x)\nx |&gt;  f(y) is the same as f(x, y)"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#mornings",
    "href": "slides/2024-09-11-verbs.html#mornings",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\nme_step1 &lt;- dress(me, what = sports)  \nme_step2 &lt;- exercise(me_step1, how = running)  \nme_step3 &lt;- eat(me_step2, choice = cereal)  \nme_step4 &lt;- dress(me_step3, what = school)  \nme_step5 &lt;- commute(me_step4, transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#mornings-1",
    "href": "slides/2024-09-11-verbs.html#mornings-1",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\ncommute(dress(eat(exercise(dress(me, what = sports), how = running), choice = cereal), what = school), transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#morning",
    "href": "slides/2024-09-11-verbs.html#morning",
    "title": "Data Wrangling",
    "section": "Morning",
    "text": "Morning\n(better??)\n\ncommute(\n  dress(\n    eat(\n      exercise(\n        dress(me, \n              what = sports), \n        how = running), \n      choice = cereal), \n    what = school), \n  transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#mornings-2",
    "href": "slides/2024-09-11-verbs.html#mornings-2",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\nme |&gt; \n  dress(what = sports) |&gt; \n  exercise(how = running) |&gt; \n  eat(choice = cereal) |&gt; \n  dress(what = school) |&gt; \n  commute(transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#little-bunny-foo-foo",
    "href": "slides/2024-09-11-verbs.html#little-bunny-foo-foo",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nFrom Hadley Wickham, how to think about tidy data.\n\nLittle bunny Foo Foo\n\n\nWent hopping through the forest\n\n\nScooping up the field mice\n\n\nAnd bopping them on the head"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#little-bunny-foo-foo-1",
    "href": "slides/2024-09-11-verbs.html#little-bunny-foo-foo-1",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nThe nursery rhyme could be created by a series of steps where the output from each step is saved as an object along the way.\n\nfoo_foo &lt;- little_bunny()\nfoo_foo_1 &lt;- hop(foo_foo, through = forest)\nfoo_foo_2 &lt;- scoop(foo_foo_2, up = field_mice)\nfoo_foo_3 &lt;- bop(foo_foo_2, on = head)"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#little-bunny-foo-foo-2",
    "href": "slides/2024-09-11-verbs.html#little-bunny-foo-foo-2",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nAnother approach is to concatenate the functions so that there is only one output.\n\nbop(\n   scoop(\n      hop(foo_foo, through = forest),\n      up = field_mice),\n   on = head)"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#little-bunny-foo-foo-3",
    "href": "slides/2024-09-11-verbs.html#little-bunny-foo-foo-3",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nOr even worse, as one line:\n\nbop(scoop(hop(foo_foo, through = forest), up = field_mice), on = head)))"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#little-bunny-foo-foo-4",
    "href": "slides/2024-09-11-verbs.html#little-bunny-foo-foo-4",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nInstead, the code can be written using the pipe in the order in which the function is evaluated:\n\nfoo_foo |&gt; \n   hop(through = forest) |&gt; \n       scoop(up = field_mice) |&gt; \n           bop(on = head)"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#flights",
    "href": "slides/2024-09-11-verbs.html#flights",
    "title": "Data Wrangling",
    "section": "Flights",
    "text": "Flights\n\nNo pipePipe\n\n\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\ntail_speed &lt;- select(flights2, tailnum, speed)\ntail_speed_grp &lt;- group_by(tail_speed, tailnum)\ntail_ave &lt;- summarize(tail_speed_grp, number = n(),\n                      avg_speed = mean(speed, na.rm = TRUE))\narrange(tail_ave, desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum number avg_speed\n   &lt;chr&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA       1      501.\n 2 N315AS       1      499.\n 3 N654UA       1      499.\n 4 N819AW       1      490.\n 5 N382HA      26      486.\n 6 N388HA      36      484.\n 7 N391HA      21      484.\n 8 N777UA       1      483.\n 9 N385HA      28      483.\n10 N392HA      13      482.\n# ℹ 4,034 more rows\n\n\n\n\n\nflights |&gt; \n  mutate(speed = distance / (air_time/60)) |&gt; \n  select(tailnum, speed) |&gt; \n  group_by(tailnum) |&gt;  \n  summarize(number = n(), \n            avg_speed = mean(speed, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum number avg_speed\n   &lt;chr&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA       1      501.\n 2 N315AS       1      499.\n 3 N654UA       1      499.\n 4 N819AW       1      490.\n 5 N382HA      26      486.\n 6 N388HA      36      484.\n 7 N391HA      21      484.\n 8 N777UA       1      483.\n 9 N385HA      28      483.\n10 N392HA      13      482.\n# ℹ 4,034 more rows"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#practice-3",
    "href": "slides/2024-09-11-verbs.html#practice-3",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#practice-4",
    "href": "slides/2024-09-11-verbs.html#practice-4",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?\n\nflights |&gt; \n  group_by(carrier) |&gt; \n  summarize(avg_delay = mean(dep_delay, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_delay))\n\n# A tibble: 16 × 2\n   carrier avg_delay\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 F9          20.2 \n 2 EV          20.0 \n 3 YV          19.0 \n 4 FL          18.7 \n 5 WN          17.7 \n 6 9E          16.7 \n 7 B6          13.0 \n 8 VX          12.9 \n 9 OO          12.6 \n10 UA          12.1 \n11 MQ          10.6 \n12 DL           9.26\n13 AA           8.59\n14 AS           5.80\n15 HA           4.90\n16 US           3.78"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#practice-again",
    "href": "slides/2024-09-11-verbs.html#practice-again",
    "title": "Data Wrangling",
    "section": "Practice again",
    "text": "Practice again\nSay you’re curious about the relationship between the number of flights that each plane made in 2013, the mean distance that each of those planes flew, and the mean arrival delay. You also want to exclude the edge cases from your analysis, so focus on the planes that have logged more than 20 flights and flown an average distance of less than 2000 miles. Please form the chain that creates this dataset."
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#solution-1",
    "href": "slides/2024-09-11-verbs.html#solution-1",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\ndelay_data &lt;- flights |&gt; \n  group_by(tailnum) |&gt; \n  summarize(number = n(),\n            dist = mean(distance, na.rm = TRUE), \n            delay = mean(arr_delay, na.rm = TRUE)) |&gt; \n  filter(number &gt; 20, dist &lt; 2000)"
  },
  {
    "objectID": "slides/2024-09-11-verbs.html#visualizing-the-data",
    "href": "slides/2024-09-11-verbs.html#visualizing-the-data",
    "title": "Data Wrangling",
    "section": "Visualizing the data",
    "text": "Visualizing the data\n\nVizCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndelay_data |&gt; \n ggplot(aes(dist, delay)) +\n geom_point(aes(size = number), \n            alpha = 1/2) +\n geom_smooth() +\n scale_size_area()\n\nWhen scale_size_area is used, the default behavior is to scale the area of points to be proportional to the value."
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html",
    "href": "slides/2024-09-18-pivotjoin.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Tidy data\nData verbs"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#tidy-data",
    "href": "slides/2024-09-18-pivotjoin.html#tidy-data",
    "title": "Data Wrangling",
    "section": "Tidy data",
    "text": "Tidy data\n\neach row = a unit of observation (here, a penguin)\neach column = a measure on some variable of interest, either quantitative (numbers with units) or categorical (discrete possibilities or categories)\neach entry contains a single data value; no analysis, summaries, footnotes, comments, etc, and only one value per cell"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#definition-of-datum",
    "href": "slides/2024-09-18-pivotjoin.html#definition-of-datum",
    "title": "Data Wrangling",
    "section": "Definition of datum",
    "text": "Definition of datum\nThe definition of datum can be much broader:\n\n\n\n\n\nDefinition of datum from the Oxford English Dictionary"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#tidying-data",
    "href": "slides/2024-09-18-pivotjoin.html#tidying-data",
    "title": "Data Wrangling",
    "section": "Tidying data",
    "text": "Tidying data\nHow would you wrangle each data example into a tidy format?\n\nthe emails in your inbox\n\nsocial media texts\n\nimages\n\nvideos\n\naudio files"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#not-tidy-active-duty-military",
    "href": "slides/2024-09-18-pivotjoin.html#not-tidy-active-duty-military",
    "title": "Data Wrangling",
    "section": "Not tidy – Active Duty Military",
    "text": "Not tidy – Active Duty Military\nThe Active Duty data are not tidy! What are the cases? How are the data not tidy? What might the data look like in tidy form? Suppose that the case was “an individual in the armed forces.” What variables would you use to capture the information in the following table?"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#tidy-packages-the-tidyverse",
    "href": "slides/2024-09-18-pivotjoin.html#tidy-packages-the-tidyverse",
    "title": "Data Wrangling",
    "section": "Tidy packages: the tidyverse",
    "text": "Tidy packages: the tidyverse\n\n\n\n\n\nimage credit: https://www.tidyverse.org/."
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#some-basic-verbs",
    "href": "slides/2024-09-18-pivotjoin.html#some-basic-verbs",
    "title": "Data Wrangling",
    "section": "Some Basic Verbs",
    "text": "Some Basic Verbs\n\nfilter()\narrange()\nselect()\ndistinct()\nmutate()\nsummarize()\nsample_n()"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#filter",
    "href": "slides/2024-09-18-pivotjoin.html#filter",
    "title": "Data Wrangling",
    "section": "filter()",
    "text": "filter()\nAllows you to select a subset of the rows of a data frame. The first argument is the name of the data frame, the following arguments are the filters that you’d like to apply\nFor all flights on January 1st:\n\nfilter(flights, month == 1, day == 1)\n\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#constructing-filters",
    "href": "slides/2024-09-18-pivotjoin.html#constructing-filters",
    "title": "Data Wrangling",
    "section": "Constructing filters",
    "text": "Constructing filters\nFilters are constructed of logical operators: &lt;, &gt;, &lt;=, &gt;=, ==, != (and some others).\nAdding them one by one to filter() is akin to saying “this AND that”. To say “this OR that OR both”, use |.\n\nfilter(flights, month == 1 | month == 2)\n\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 51,945 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#practice",
    "href": "slides/2024-09-18-pivotjoin.html#practice",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nConstruct filters to isolate:\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours."
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#solution",
    "href": "slides/2024-09-18-pivotjoin.html#solution",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours.\n\n\nfilter(flights, month == 3, day == 17)\nfilter(flights, dest == \"ORD\")\nfilter(flights, dest == \"ORD\", carrier == \"UA\")\nfilter(flights, distance &gt; 2000 | air_time &gt; 5*60)"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#arrange",
    "href": "slides/2024-09-18-pivotjoin.html#arrange",
    "title": "Data Wrangling",
    "section": "arrange()",
    "text": "arrange()\narrange() reorders the rows: It takes a data frame, and a set of column names (or more complicated expressions) to order by. If you provide more than one column name, each additional column will be used to break ties in the values of preceding columns:\n\narrange(flights, year, month, day)\n\nUse desc() to sort in descending order.\n\narrange(flights, desc(arr_delay))"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#select",
    "href": "slides/2024-09-18-pivotjoin.html#select",
    "title": "Data Wrangling",
    "section": "select()",
    "text": "select()\nOften you work with large datasets with many columns where only a few are actually of interest to you. select() allows you to rapidly zoom in on a useful subset using operations that usually only work on numeric variable positions:\n\nselect(flights, year, month, day)\n\nYou can exclude columns using - and specify a range using :.\n\nselect(flights, -(year:day))"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#distinct",
    "href": "slides/2024-09-18-pivotjoin.html#distinct",
    "title": "Data Wrangling",
    "section": "distinct()",
    "text": "distinct()\nA common use of select() is to find out which values a set of variables takes. This is particularly useful in conjunction with the distinct() verb which only returns the unique values in a table.\nWhat do the following data correspond to?\n\ndistinct(select(flights, origin, dest))\n\n# A tibble: 224 × 2\n   origin dest \n   &lt;chr&gt;  &lt;chr&gt;\n 1 EWR    IAH  \n 2 LGA    IAH  \n 3 JFK    MIA  \n 4 JFK    BQN  \n 5 LGA    ATL  \n 6 EWR    ORD  \n 7 EWR    FLL  \n 8 LGA    IAD  \n 9 JFK    MCO  \n10 LGA    ORD  \n# ℹ 214 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#mutate",
    "href": "slides/2024-09-18-pivotjoin.html#mutate",
    "title": "Data Wrangling",
    "section": "mutate()",
    "text": "mutate()\nAs well as selecting from the set of existing columns, it’s often useful to add new columns that are functions of existing columns. This is the job of mutate():\n\nselect(mutate(flights, gain = dep_delay - arr_delay), \n       flight, dep_delay, arr_delay, gain)\n\n# A tibble: 336,776 × 4\n   flight dep_delay arr_delay  gain\n    &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1   1545         2        11    -9\n 2   1714         4        20   -16\n 3   1141         2        33   -31\n 4    725        -1       -18    17\n 5    461        -6       -25    19\n 6   1696        -4        12   -16\n 7    507        -5        19   -24\n 8   5708        -3       -14    11\n 9     79        -3        -8     5\n10    301        -2         8   -10\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#summarize-and-sample_n",
    "href": "slides/2024-09-18-pivotjoin.html#summarize-and-sample_n",
    "title": "Data Wrangling",
    "section": "summarize() and sample_n()",
    "text": "summarize() and sample_n()\nsummarize() collapses a data frame to a single row based on some function. It’s not very useful yet, but it will be.\nsample_n() provides you with a random sample of rows.\n\nsummarize(flights, delay = mean(dep_delay, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  delay\n  &lt;dbl&gt;\n1  12.6\n\nsample_n(flights, 10)\n\n# A tibble: 10 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     3     9     1905           1855        10     2113           2132\n 2  2013     6    20     1052           1057        -5     1312           1338\n 3  2013     5    29     1213           1210         3     1509           1510\n 4  2013     5     8     2150           2030        80        7           2227\n 5  2013     6    13     1429           1419        10     1700           1659\n 6  2013    11    22     1458           1459        -1     1820           1819\n 7  2013     6     8     1836           1753        43     2046           2015\n 8  2013    10    27     1055           1030        25     1335           1324\n 9  2013    11     6     1941           1950        -9     2137           2140\n10  2013     7    23      919            920        -1     1224           1210\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#practice-1",
    "href": "slides/2024-09-18-pivotjoin.html#practice-1",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object."
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#practice-2",
    "href": "slides/2024-09-18-pivotjoin.html#practice-2",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object.\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\nspeed_data &lt;- select(flights2, tailnum, speed)"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#group_by",
    "href": "slides/2024-09-18-pivotjoin.html#group_by",
    "title": "Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nsummarize() and sample_n() are even more powerful when combined with the idea of “group by”, repeating the operation separately on groups of observations within the dataset.\nThe group_by() function describes how to break a dataset down into groups of rows."
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#group_by-1",
    "href": "slides/2024-09-18-pivotjoin.html#group_by-1",
    "title": "Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nFind the fastest airplanes in the bunch, measured as the average speed per airplane.\n\nby_tailnum &lt;- group_by(speed_data, tailnum)\navg_speed &lt;- summarize(by_tailnum, \n                       count = n(), \n                       avg_speed = mean(speed, na.rm = TRUE))\narrange(avg_speed, desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum count avg_speed\n   &lt;chr&gt;   &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA      1      501.\n 2 N315AS      1      499.\n 3 N654UA      1      499.\n 4 N819AW      1      490.\n 5 N382HA     26      486.\n 6 N388HA     36      484.\n 7 N391HA     21      484.\n 8 N777UA      1      483.\n 9 N385HA     28      483.\n10 N392HA     13      482.\n# ℹ 4,034 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#chaining",
    "href": "slides/2024-09-18-pivotjoin.html#chaining",
    "title": "Data Wrangling",
    "section": "Chaining",
    "text": "Chaining\nInstead of applying each verb step-by-step, we can chain them into a single data pipeline, connected with the |&gt; operator. You start the pipeline with a data frame and then pass it to each function in turn.\nThe pipe syntax (|&gt;) takes a data frame and sends it to the argument of a function. The mapping goes to the first available argument in the function. For example:\nx |&gt;  f() is the same as f(x)\nx |&gt;  f(y) is the same as f(x, y)"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#mornings",
    "href": "slides/2024-09-18-pivotjoin.html#mornings",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\nme_step1 &lt;- dress(me, what = sports)  \nme_step2 &lt;- exercise(me_step1, how = running)  \nme_step3 &lt;- eat(me_step2, choice = cereal)  \nme_step4 &lt;- dress(me_step3, what = school)  \nme_step5 &lt;- commute(me_step4, transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#mornings-1",
    "href": "slides/2024-09-18-pivotjoin.html#mornings-1",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\ncommute(dress(eat(exercise(dress(me, what = sports), how = running), choice = cereal), what = school), transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#morning",
    "href": "slides/2024-09-18-pivotjoin.html#morning",
    "title": "Data Wrangling",
    "section": "Morning",
    "text": "Morning\n(better??)\n\ncommute(\n  dress(\n    eat(\n      exercise(\n        dress(me, \n              what = sports), \n        how = running), \n      choice = cereal), \n    what = school), \n  transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#mornings-2",
    "href": "slides/2024-09-18-pivotjoin.html#mornings-2",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\nme |&gt; \n  dress(what = sports) |&gt; \n  exercise(how = running) |&gt; \n  eat(choice = cereal) |&gt; \n  dress(what = school) |&gt; \n  commute(transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#little-bunny-foo-foo",
    "href": "slides/2024-09-18-pivotjoin.html#little-bunny-foo-foo",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nFrom Hadley Wickham, how to think about tidy data.\n\nLittle bunny Foo Foo\n\n\nWent hopping through the forest\n\n\nScooping up the field mice\n\n\nAnd bopping them on the head"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#little-bunny-foo-foo-1",
    "href": "slides/2024-09-18-pivotjoin.html#little-bunny-foo-foo-1",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nThe nursery rhyme could be created by a series of steps where the output from each step is saved as an object along the way.\n\nfoo_foo &lt;- little_bunny()\nfoo_foo_1 &lt;- hop(foo_foo, through = forest)\nfoo_foo_2 &lt;- scoop(foo_foo_2, up = field_mice)\nfoo_foo_3 &lt;- bop(foo_foo_2, on = head)"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#little-bunny-foo-foo-2",
    "href": "slides/2024-09-18-pivotjoin.html#little-bunny-foo-foo-2",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nAnother approach is to concatenate the functions so that there is only one output.\n\nbop(\n   scoop(\n      hop(foo_foo, through = forest),\n      up = field_mice),\n   on = head)"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#little-bunny-foo-foo-3",
    "href": "slides/2024-09-18-pivotjoin.html#little-bunny-foo-foo-3",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nOr even worse, as one line:\n\nbop(scoop(hop(foo_foo, through = forest), up = field_mice), on = head)))"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#little-bunny-foo-foo-4",
    "href": "slides/2024-09-18-pivotjoin.html#little-bunny-foo-foo-4",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nInstead, the code can be written using the pipe in the order in which the function is evaluated:\n\nfoo_foo |&gt; \n   hop(through = forest) |&gt; \n       scoop(up = field_mice) |&gt; \n           bop(on = head)"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#flights",
    "href": "slides/2024-09-18-pivotjoin.html#flights",
    "title": "Data Wrangling",
    "section": "Flights",
    "text": "Flights\n\nNo pipePipe\n\n\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\ntail_speed &lt;- select(flights2, tailnum, speed)\ntail_speed_grp &lt;- group_by(tail_speed, tailnum)\ntail_ave &lt;- summarize(tail_speed_grp, number = n(),\n                      avg_speed = mean(speed, na.rm = TRUE))\narrange(tail_ave, desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum number avg_speed\n   &lt;chr&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA       1      501.\n 2 N315AS       1      499.\n 3 N654UA       1      499.\n 4 N819AW       1      490.\n 5 N382HA      26      486.\n 6 N388HA      36      484.\n 7 N391HA      21      484.\n 8 N777UA       1      483.\n 9 N385HA      28      483.\n10 N392HA      13      482.\n# ℹ 4,034 more rows\n\n\n\n\n\nflights |&gt; \n  mutate(speed = distance / (air_time/60)) |&gt; \n  select(tailnum, speed) |&gt; \n  group_by(tailnum) |&gt;  \n  summarize(number = n(), \n            avg_speed = mean(speed, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum number avg_speed\n   &lt;chr&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA       1      501.\n 2 N315AS       1      499.\n 3 N654UA       1      499.\n 4 N819AW       1      490.\n 5 N382HA      26      486.\n 6 N388HA      36      484.\n 7 N391HA      21      484.\n 8 N777UA       1      483.\n 9 N385HA      28      483.\n10 N392HA      13      482.\n# ℹ 4,034 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#practice-3",
    "href": "slides/2024-09-18-pivotjoin.html#practice-3",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#practice-4",
    "href": "slides/2024-09-18-pivotjoin.html#practice-4",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?\n\nflights |&gt; \n  group_by(carrier) |&gt; \n  summarize(avg_delay = mean(dep_delay, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_delay))\n\n# A tibble: 16 × 2\n   carrier avg_delay\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 F9          20.2 \n 2 EV          20.0 \n 3 YV          19.0 \n 4 FL          18.7 \n 5 WN          17.7 \n 6 9E          16.7 \n 7 B6          13.0 \n 8 VX          12.9 \n 9 OO          12.6 \n10 UA          12.1 \n11 MQ          10.6 \n12 DL           9.26\n13 AA           8.59\n14 AS           5.80\n15 HA           4.90\n16 US           3.78"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#practice-again",
    "href": "slides/2024-09-18-pivotjoin.html#practice-again",
    "title": "Data Wrangling",
    "section": "Practice again",
    "text": "Practice again\nSay you’re curious about the relationship between the number of flights that each plane made in 2013, the mean distance that each of those planes flew, and the mean arrival delay. You also want to exclude the edge cases from your analysis, so focus on the planes that have logged more than 20 flights and flown an average distance of less than 2000 miles. Please form the chain that creates this dataset."
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#solution-1",
    "href": "slides/2024-09-18-pivotjoin.html#solution-1",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\ndelay_data &lt;- flights |&gt; \n  group_by(tailnum) |&gt; \n  summarize(number = n(),\n            dist = mean(distance, na.rm = TRUE), \n            delay = mean(arr_delay, na.rm = TRUE)) |&gt; \n  filter(number &gt; 20, dist &lt; 2000)"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#visualizing-the-data",
    "href": "slides/2024-09-18-pivotjoin.html#visualizing-the-data",
    "title": "Data Wrangling",
    "section": "Visualizing the data",
    "text": "Visualizing the data\n\nVizCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndelay_data |&gt; \n ggplot(aes(dist, delay)) +\n geom_point(aes(size = number), \n            alpha = 1/2) +\n geom_smooth() +\n scale_size_area()\n\nWhen scale_size_area is used, the default behavior is to scale the area of points to be proportional to the value.\n\n\n\n\n:::"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#from-wide-to-long-and-long-to-wide",
    "href": "slides/2024-09-18-pivotjoin.html#from-wide-to-long-and-long-to-wide",
    "title": "Pivoting and Joining",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide\n\npivot_longer() makes the data frame “longer” – many columns into a few columns (more rows):\n\npivot_longer(data,cols,names_to=,value_to=)\n\npivot_wider() makes the data frame “wider” – a few columns into many columns (fewer rows):\n\npivot_wider(data,names_from=,values_from=)"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#from-wide-to-long-and-long-to-wide-1",
    "href": "slides/2024-09-18-pivotjoin.html#from-wide-to-long-and-long-to-wide-1",
    "title": "Pivoting and Joining",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#pivot_longer",
    "href": "slides/2024-09-18-pivotjoin.html#pivot_longer",
    "title": "Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\npivot_longer will be demonstrated using datasets from GapMinder.\nlitF represents country, year, and female literacy rate.\n\nlibrary(googlesheets4)\ngs4_deauth()\nlitF &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1hDinTIRHQIaZg1RUn6Z_6mo12PtKwEPFIz_mJVF6P5I/pub?gid=0\")\n\nlitF\n\n# A tibble: 260 × 38\n   Adult (15+) literacy rate …¹ `1975` `1976` `1977` `1978` `1979` `1980` `1981`\n   &lt;chr&gt;                         &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 Afghanistan                      NA     NA     NA     NA   4.99   NA       NA\n 2 Albania                          NA     NA     NA     NA  NA      NA       NA\n 3 Algeria                          NA     NA     NA     NA  NA      NA       NA\n 4 Andorra                          NA     NA     NA     NA  NA      NA       NA\n 5 Angola                           NA     NA     NA     NA  NA      NA       NA\n 6 Anguilla                         NA     NA     NA     NA  NA      NA       NA\n 7 Antigua and Barbuda              NA     NA     NA     NA  NA      NA       NA\n 8 Argentina                        NA     NA     NA     NA  NA      93.6     NA\n 9 Armenia                          NA     NA     NA     NA  NA      NA       NA\n10 Aruba                            NA     NA     NA     NA  NA      NA       NA\n# ℹ 250 more rows\n# ℹ abbreviated name: ¹​`Adult (15+) literacy rate (%). Female`\n# ℹ 30 more variables: `1982` &lt;dbl&gt;, `1983` &lt;dbl&gt;, `1984` &lt;dbl&gt;, `1985` &lt;dbl&gt;,\n#   `1986` &lt;dbl&gt;, `1987` &lt;dbl&gt;, `1988` &lt;dbl&gt;, `1989` &lt;dbl&gt;, `1990` &lt;dbl&gt;,\n#   `1991` &lt;dbl&gt;, `1992` &lt;dbl&gt;, `1993` &lt;dbl&gt;, `1994` &lt;dbl&gt;, `1995` &lt;dbl&gt;,\n#   `1996` &lt;dbl&gt;, `1997` &lt;dbl&gt;, `1998` &lt;dbl&gt;, `1999` &lt;dbl&gt;, `2000` &lt;dbl&gt;,\n#   `2001` &lt;dbl&gt;, `2002` &lt;dbl&gt;, `2003` &lt;dbl&gt;, `2004` &lt;dbl&gt;, `2005` &lt;dbl&gt;, …"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#pivot_longer-1",
    "href": "slides/2024-09-18-pivotjoin.html#pivot_longer-1",
    "title": "Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\n\nlitF &lt;- litF |&gt; \n  select(country = starts_with(\"Adult\"), everything()) |&gt; \n  pivot_longer(cols = -country,\n               names_to = \"year\", \n               values_to = \"litRateF\") |&gt; \n  filter(!is.na(litRateF))\n\nlitF\n\n# A tibble: 571 × 3\n   country     year  litRateF\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt;\n 1 Afghanistan 1979      4.99\n 2 Afghanistan 2011     13   \n 3 Albania     2001     98.3 \n 4 Albania     2008     94.7 \n 5 Albania     2011     95.7 \n 6 Algeria     1987     35.8 \n 7 Algeria     2002     60.1 \n 8 Algeria     2006     63.9 \n 9 Angola      2001     54.2 \n10 Angola      2011     58.6 \n# ℹ 561 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#pivot_longer-2",
    "href": "slides/2024-09-18-pivotjoin.html#pivot_longer-2",
    "title": "Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\nGDP represents country, year, and gdp (in fixed 2000 US$).\n\nGDP &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1RctTQmKB0hzbm1E8rGcufYdMshRdhmYdeL29nXqmvsc/pub?gid=0\")\n\nGDP &lt;- GDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n  pivot_longer(cols = -country, \n               names_to = \"year\",\n               values_to = \"gdp\") |&gt; \n  filter(!is.na(gdp))\n\nGDP\n\n# A tibble: 7,988 × 3\n   country year    gdp\n   &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;\n 1 Albania 1980  1061.\n 2 Albania 1981  1100.\n 3 Albania 1982  1111.\n 4 Albania 1983  1101.\n 5 Albania 1984  1065.\n 6 Albania 1985  1060.\n 7 Albania 1986  1092.\n 8 Albania 1987  1054.\n 9 Albania 1988  1014.\n10 Albania 1989  1092.\n# ℹ 7,978 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#pivot_wider",
    "href": "slides/2024-09-18-pivotjoin.html#pivot_wider",
    "title": "Pivoting and Joining",
    "section": "pivot_wider",
    "text": "pivot_wider\npivot_wider will be demonstrated using the babynames dataset.\n\nlibrary(babynames)\n\nbabynames\n\n# A tibble: 1,924,665 × 5\n    year sex   name          n   prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;int&gt;  &lt;dbl&gt;\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# ℹ 1,924,655 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#pivot_wider-babynames",
    "href": "slides/2024-09-18-pivotjoin.html#pivot_wider-babynames",
    "title": "Pivoting and Joining",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  select(-prop) |&gt; \n  pivot_wider(names_from = sex, values_from = n) \n\n# A tibble: 1,756,284 × 4\n    year name          F     M\n   &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt; &lt;int&gt;\n 1  1880 Mary       7065    27\n 2  1880 Anna       2604    12\n 3  1880 Emma       2003    10\n 4  1880 Elizabeth  1939     9\n 5  1880 Minnie     1746     9\n 6  1880 Margaret   1578    NA\n 7  1880 Ida        1472     8\n 8  1880 Alice      1414    NA\n 9  1880 Bertha     1320    NA\n10  1880 Sarah      1288    NA\n# ℹ 1,756,274 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#pivot_wider-babynames-1",
    "href": "slides/2024-09-18-pivotjoin.html#pivot_wider-babynames-1",
    "title": "Pivoting and Joining",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  select(-prop) |&gt;  \n  pivot_wider(names_from = sex, values_from = n) |&gt; \n  filter(!is.na(F), !is.na(M)) |&gt; \n  arrange(desc(year), desc(F))\n\n# A tibble: 168,381 × 4\n    year name          F     M\n   &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt; &lt;int&gt;\n 1  2017 Emma      19738    14\n 2  2017 Olivia    18632    10\n 3  2017 Ava       15902    12\n 4  2017 Isabella  15100    12\n 5  2017 Sophia    14831    17\n 6  2017 Mia       13437    16\n 7  2017 Charlotte 12893     7\n 8  2017 Amelia    11800    11\n 9  2017 Evelyn    10675    11\n10  2017 Abigail   10551     6\n# ℹ 168,371 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#pivot_wider-babynames-2",
    "href": "slides/2024-09-18-pivotjoin.html#pivot_wider-babynames-2",
    "title": "Pivoting and Joining",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  pivot_wider(names_from = sex, values_from = n) |&gt; \n  mutate(maxcount = pmax(F, M, na.rm = TRUE)) |&gt; \n  arrange(desc(maxcount))\n\n# A tibble: 1,924,653 × 6\n    year name      prop     F     M maxcount\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;\n 1  1947 Linda   0.0548 99686    NA    99686\n 2  1948 Linda   0.0552 96209    NA    96209\n 3  1947 James   0.0510    NA 94756    94756\n 4  1957 Michael 0.0424    NA 92695    92695\n 5  1947 Robert  0.0493    NA 91642    91642\n 6  1949 Linda   0.0518 91016    NA    91016\n 7  1956 Michael 0.0423    NA 90620    90620\n 8  1958 Michael 0.0420    NA 90520    90520\n 9  1948 James   0.0497    NA 88588    88588\n10  1954 Michael 0.0428    NA 88514    88514\n# ℹ 1,924,643 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#relational-data-multiple-data-frames",
    "href": "slides/2024-09-18-pivotjoin.html#relational-data-multiple-data-frames",
    "title": "Pivoting and Joining",
    "section": "Relational data (multiple data frames)",
    "text": "Relational data (multiple data frames)\n\nSee the Posit cheatsheets on wrangling & joining and pivoting."
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#joining-two-or-more-dataframes",
    "href": "slides/2024-09-18-pivotjoin.html#joining-two-or-more-dataframes",
    "title": "Pivoting and Joining",
    "section": "Joining two (or more) dataframes:",
    "text": "Joining two (or more) dataframes:\n\nleft_join returns all rows from the left table, and any rows with matching keys from the right table.\ninner_join returns only the rows in which the left table have matching keys in the right table (i.e., matching rows in both sets).\nfull_join returns all rows from both tables, join records from the left which have matching keys in the right table.\n\nGood practice: always specify the by argument when joining data frames."
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#women-in-science",
    "href": "slides/2024-09-18-pivotjoin.html#women-in-science",
    "title": "Pivoting and Joining",
    "section": "Women in Science",
    "text": "Women in Science\n10 women in science who changed the world (source: Discover Magazine)1\n\n\n\n\n\nname\nprofession\n\n\n\n\nAda Lovelace\nMathematician\n\n\nMarie Curie\nPhysicist and Chemist\n\n\nJanaki Ammal\nBotanist\n\n\nChien-Shiung Wu\nPhysicist\n\n\nKatherine Johnson\nMathematician\n\n\nRosalind Franklin\nChemist\n\n\nVera Rubin\nAstronomer\n\n\nGladys West\nMathematician\n\n\nFlossie Wong-Staal\nVirologist and Molecular Biologist\n\n\nJennifer Doudna\nBiochemist\n\n\n\n\n\nExample from DataScience in a Box"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#inputs",
    "href": "slides/2024-09-18-pivotjoin.html#inputs",
    "title": "Pivoting and Joining",
    "section": "Inputs",
    "text": "Inputs\n\nProfessionsDatesWorks\n\n\n\nprofessions\n\n# A tibble: 10 × 2\n   name               profession                        \n   &lt;chr&gt;              &lt;chr&gt;                             \n 1 Ada Lovelace       Mathematician                     \n 2 Marie Curie        Physicist and Chemist             \n 3 Janaki Ammal       Botanist                          \n 4 Chien-Shiung Wu    Physicist                         \n 5 Katherine Johnson  Mathematician                     \n 6 Rosalind Franklin  Chemist                           \n 7 Vera Rubin         Astronomer                        \n 8 Gladys West        Mathematician                     \n 9 Flossie Wong-Staal Virologist and Molecular Biologist\n10 Jennifer Doudna    Biochemist                        \n\n\n\n\n\ndates\n\n# A tibble: 8 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Rosalind Franklin        1920       1958\n5 Vera Rubin               1928       2016\n6 Gladys West              1930         NA\n7 Flossie Wong-Staal       1947       2020\n8 Jennifer Doudna          1964         NA\n\n\n\n\n\nworks\n\n# A tibble: 9 × 2\n  name               known_for                                                  \n  &lt;chr&gt;              &lt;chr&gt;                                                      \n1 Ada Lovelace       first computer algorithm                                   \n2 Marie Curie        theory of radioactivity,  discovery of elements polonium a…\n3 Janaki Ammal       hybrid species, biodiversity protection                    \n4 Chien-Shiung Wu    confim and refine theory of radioactive beta decy, Wu expe…\n5 Katherine Johnson  calculations of orbital mechanics critical to sending the …\n6 Vera Rubin         existence of dark matter                                   \n7 Gladys West        mathematical modeling of the shape of the Earth which serv…\n8 Flossie Wong-Staal first scientist to clone HIV and create a map of its genes…\n9 Jennifer Doudna    one of the primary developers of CRISPR, a ground-breaking…"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#desired-output",
    "href": "slides/2024-09-18-pivotjoin.html#desired-output",
    "title": "Pivoting and Joining",
    "section": "Desired output",
    "text": "Desired output\nWe’d like to put together the data to look like:\n\n\n# A tibble: 10 × 5\n   name               profession                 birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician                      NA         NA first co…\n 2 Marie Curie        Physicist and Chemist              NA         NA theory o…\n 3 Janaki Ammal       Botanist                         1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist                        1912       1997 confim a…\n 5 Katherine Johnson  Mathematician                    1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                          1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer                       1928       2016 existenc…\n 8 Gladys West        Mathematician                    1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and Molecular …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist                       1964         NA one of t…"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#inputs-reminder",
    "href": "slides/2024-09-18-pivotjoin.html#inputs-reminder",
    "title": "Pivoting and Joining",
    "section": "Inputs, reminder",
    "text": "Inputs, reminder\n\n\n\nnrow(professions)\n\n[1] 10\n\nnrow(dates)\n\n[1] 8\n\nnrow(works)\n\n[1] 9\n\n\n\n\nnames(professions)\n\n[1] \"name\"       \"profession\"\n\nnames(dates)\n\n[1] \"name\"       \"birth_year\" \"death_year\"\n\nnames(works)\n\n[1] \"name\"      \"known_for\""
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#setup",
    "href": "slides/2024-09-18-pivotjoin.html#setup",
    "title": "Pivoting and Joining",
    "section": "Setup",
    "text": "Setup\nFor the next few slides…\n\n\n\nx\n\n# A tibble: 3 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n\n\n\n\ny\n\n# A tibble: 3 × 2\n     id value_y\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 y1     \n2     2 y2     \n3     4 y4"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#left_join",
    "href": "slides/2024-09-18-pivotjoin.html#left_join",
    "title": "Pivoting and Joining",
    "section": "left_join()",
    "text": "left_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nleft_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#left_join-1",
    "href": "slides/2024-09-18-pivotjoin.html#left_join-1",
    "title": "Pivoting and Joining",
    "section": "left_join()",
    "text": "left_join()\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") \n\n# A tibble: 10 × 4\n   name               profession                         birth_year death_year\n   &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n 1 Ada Lovelace       Mathematician                              NA         NA\n 2 Marie Curie        Physicist and Chemist                      NA         NA\n 3 Janaki Ammal       Botanist                                 1897       1984\n 4 Chien-Shiung Wu    Physicist                                1912       1997\n 5 Katherine Johnson  Mathematician                            1918       2020\n 6 Rosalind Franklin  Chemist                                  1920       1958\n 7 Vera Rubin         Astronomer                               1928       2016\n 8 Gladys West        Mathematician                            1930         NA\n 9 Flossie Wong-Staal Virologist and Molecular Biologist       1947       2020\n10 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#right_join",
    "href": "slides/2024-09-18-pivotjoin.html#right_join",
    "title": "Pivoting and Joining",
    "section": "right_join()",
    "text": "right_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nright_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#right_join-1",
    "href": "slides/2024-09-18-pivotjoin.html#right_join-1",
    "title": "Pivoting and Joining",
    "section": "right_join()",
    "text": "right_join()\n\nprofessions |&gt; \n  right_join(dates, by = \"name\") \n\n# A tibble: 8 × 4\n  name               profession                         birth_year death_year\n  &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal       Botanist                                 1897       1984\n2 Chien-Shiung Wu    Physicist                                1912       1997\n3 Katherine Johnson  Mathematician                            1918       2020\n4 Rosalind Franklin  Chemist                                  1920       1958\n5 Vera Rubin         Astronomer                               1928       2016\n6 Gladys West        Mathematician                            1930         NA\n7 Flossie Wong-Staal Virologist and Molecular Biologist       1947       2020\n8 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#full_join",
    "href": "slides/2024-09-18-pivotjoin.html#full_join",
    "title": "Pivoting and Joining",
    "section": "full_join()",
    "text": "full_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nfull_join(x, y, by = \"id\")\n\n# A tibble: 4 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;   \n4     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#full_join-1",
    "href": "slides/2024-09-18-pivotjoin.html#full_join-1",
    "title": "Pivoting and Joining",
    "section": "full_join()",
    "text": "full_join()\n\ndates |&gt; \n  full_join(works, by = \"name\") \n\n# A tibble: 10 × 4\n   name               birth_year death_year known_for                           \n   &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                               \n 1 Janaki Ammal             1897       1984 hybrid species, biodiversity protec…\n 2 Chien-Shiung Wu          1912       1997 confim and refine theory of radioac…\n 3 Katherine Johnson        1918       2020 calculations of orbital mechanics c…\n 4 Rosalind Franklin        1920       1958 &lt;NA&gt;                                \n 5 Vera Rubin               1928       2016 existence of dark matter            \n 6 Gladys West              1930         NA mathematical modeling of the shape …\n 7 Flossie Wong-Staal       1947       2020 first scientist to clone HIV and cr…\n 8 Jennifer Doudna          1964         NA one of the primary developers of CR…\n 9 Ada Lovelace               NA         NA first computer algorithm            \n10 Marie Curie                NA         NA theory of radioactivity,  discovery…"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#inner_join",
    "href": "slides/2024-09-18-pivotjoin.html#inner_join",
    "title": "Pivoting and Joining",
    "section": "inner_join()",
    "text": "inner_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\ninner_join(x, y, by = \"id\")\n\n# A tibble: 2 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#inner_join-1",
    "href": "slides/2024-09-18-pivotjoin.html#inner_join-1",
    "title": "Pivoting and Joining",
    "section": "inner_join()",
    "text": "inner_join()\n\ndates |&gt; \n  inner_join(works, by = \"name\") \n\n# A tibble: 7 × 4\n  name               birth_year death_year known_for                            \n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                                \n1 Janaki Ammal             1897       1984 hybrid species, biodiversity protect…\n2 Chien-Shiung Wu          1912       1997 confim and refine theory of radioact…\n3 Katherine Johnson        1918       2020 calculations of orbital mechanics cr…\n4 Vera Rubin               1928       2016 existence of dark matter             \n5 Gladys West              1930         NA mathematical modeling of the shape o…\n6 Flossie Wong-Staal       1947       2020 first scientist to clone HIV and cre…\n7 Jennifer Doudna          1964         NA one of the primary developers of CRI…"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#semi_join",
    "href": "slides/2024-09-18-pivotjoin.html#semi_join",
    "title": "Pivoting and Joining",
    "section": "semi_join()",
    "text": "semi_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nsemi_join(x, y, by = \"id\")\n\n# A tibble: 2 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#semi_join-1",
    "href": "slides/2024-09-18-pivotjoin.html#semi_join-1",
    "title": "Pivoting and Joining",
    "section": "semi_join()",
    "text": "semi_join()\n\ndates |&gt; \n  semi_join(works, by = \"name\") \n\n# A tibble: 7 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Vera Rubin               1928       2016\n5 Gladys West              1930         NA\n6 Flossie Wong-Staal       1947       2020\n7 Jennifer Doudna          1964         NA"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#anti_join",
    "href": "slides/2024-09-18-pivotjoin.html#anti_join",
    "title": "Pivoting and Joining",
    "section": "anti_join()",
    "text": "anti_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nanti_join(x, y, by = \"id\")\n\n# A tibble: 1 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     3 x3"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#anti_join-1",
    "href": "slides/2024-09-18-pivotjoin.html#anti_join-1",
    "title": "Pivoting and Joining",
    "section": "anti_join()",
    "text": "anti_join()\n\ndates |&gt; \n  anti_join(works, by = \"name\") \n\n# A tibble: 1 × 3\n  name              birth_year death_year\n  &lt;chr&gt;                  &lt;dbl&gt;      &lt;dbl&gt;\n1 Rosalind Franklin       1920       1958"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#putting-it-all-together",
    "href": "slides/2024-09-18-pivotjoin.html#putting-it-all-together",
    "title": "Pivoting and Joining",
    "section": "Putting it all together",
    "text": "Putting it all together\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") |&gt; \n  left_join(works, by = \"name\")\n\n# A tibble: 10 × 5\n   name               profession                 birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician                      NA         NA first co…\n 2 Marie Curie        Physicist and Chemist              NA         NA theory o…\n 3 Janaki Ammal       Botanist                         1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist                        1912       1997 confim a…\n 5 Katherine Johnson  Mathematician                    1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                          1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer                       1928       2016 existenc…\n 8 Gladys West        Mathematician                    1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and Molecular …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist                       1964         NA one of t…"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#practice-litf-and-gdp-from-gapminder.",
    "href": "slides/2024-09-18-pivotjoin.html#practice-litf-and-gdp-from-gapminder.",
    "title": "Pivoting and Joining",
    "section": "Practice litF and GDP from Gapminder.",
    "text": "Practice litF and GDP from Gapminder."
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#left",
    "href": "slides/2024-09-18-pivotjoin.html#left",
    "title": "Pivoting and Joining",
    "section": "left",
    "text": "left\n\nlitGDPleft &lt;- left_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPleft)\n\n[1] 571   4\n\nlitGDPleft\n\n# A tibble: 571 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 561 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#right",
    "href": "slides/2024-09-18-pivotjoin.html#right",
    "title": "Pivoting and Joining",
    "section": "right",
    "text": "right\n\nlitGDPright &lt;- right_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPright)\n\n[1] 7988    4\n\nlitGDPright\n\n# A tibble: 7,988 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 7,978 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#inner",
    "href": "slides/2024-09-18-pivotjoin.html#inner",
    "title": "Pivoting and Joining",
    "section": "inner",
    "text": "inner\n\nlitGDPinner &lt;- inner_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPinner)\n\n[1] 505   4\n\nlitGDPinner\n\n# A tibble: 505 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 495 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#full",
    "href": "slides/2024-09-18-pivotjoin.html#full",
    "title": "Pivoting and Joining",
    "section": "full",
    "text": "full\n\nlitGDPfull &lt;- full_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPfull)\n\n[1] 8054    4\n\nlitGDPfull\n\n# A tibble: 8,054 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 8,044 more rows"
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#join-to-merge-two-datasets",
    "href": "slides/2024-09-18-pivotjoin.html#join-to-merge-two-datasets",
    "title": "Pivoting and Joining",
    "section": "join to merge two datasets",
    "text": "join to merge two datasets\n\nIf you ever need to understand which join is the right join for you, try to find an image that will lay out what the function is doing. I found this one that is quite good and is taken from the Statistics Globe blog."
  },
  {
    "objectID": "slides/2024-09-18-pivotjoin.html#joining-two-or-more-data-frames",
    "href": "slides/2024-09-18-pivotjoin.html#joining-two-or-more-data-frames",
    "title": "Pivoting and Joining",
    "section": "Joining two (or more) data frames:",
    "text": "Joining two (or more) data frames:\n\nleft_join returns all rows from the left table, and any rows with matching keys from the right table.\ninner_join returns only the rows in which the left table have matching keys in the right table (i.e., matching rows in both sets).\nfull_join returns all rows from both tables, join records from the left which have matching keys in the right table.\n\nGood practice: always specify the by argument when joining data frames."
  },
  {
    "objectID": "slides/2024-09-23-types.html",
    "href": "slides/2024-09-23-types.html",
    "title": "Variable Types",
    "section": "",
    "text": "Pivoting\n(maybe Joining?)"
  },
  {
    "objectID": "slides/2024-09-23-types.html#from-wide-to-long-and-long-to-wide",
    "href": "slides/2024-09-23-types.html#from-wide-to-long-and-long-to-wide",
    "title": "Variable Types",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide\n\npivot_longer() makes the data frame “longer” – many columns into a few columns (more rows):\n\npivot_longer(data,cols,names_to=,value_to=)\n\npivot_wider() makes the data frame “wider” – a few columns into many columns (fewer rows):\n\npivot_wider(data,names_from=,values_from=)"
  },
  {
    "objectID": "slides/2024-09-23-types.html#from-wide-to-long-and-long-to-wide-1",
    "href": "slides/2024-09-23-types.html#from-wide-to-long-and-long-to-wide-1",
    "title": "Variable Types",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide"
  },
  {
    "objectID": "slides/2024-09-23-types.html#pivot_longer",
    "href": "slides/2024-09-23-types.html#pivot_longer",
    "title": "Variable Types",
    "section": "pivot_longer",
    "text": "pivot_longer\npivot_longer will be demonstrated using datasets from GapMinder.\nlitF represents country, year, and female literacy rate.\n\nlibrary(googlesheets4)\ngs4_deauth()\nlitF &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1hDinTIRHQIaZg1RUn6Z_6mo12PtKwEPFIz_mJVF6P5I/pub?gid=0\")\n\nlitF\n\n# A tibble: 260 × 38\n   Adult (15+) literacy rate …¹ `1975` `1976` `1977` `1978` `1979` `1980` `1981`\n   &lt;chr&gt;                         &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 Afghanistan                      NA     NA     NA     NA   4.99   NA       NA\n 2 Albania                          NA     NA     NA     NA  NA      NA       NA\n 3 Algeria                          NA     NA     NA     NA  NA      NA       NA\n 4 Andorra                          NA     NA     NA     NA  NA      NA       NA\n 5 Angola                           NA     NA     NA     NA  NA      NA       NA\n 6 Anguilla                         NA     NA     NA     NA  NA      NA       NA\n 7 Antigua and Barbuda              NA     NA     NA     NA  NA      NA       NA\n 8 Argentina                        NA     NA     NA     NA  NA      93.6     NA\n 9 Armenia                          NA     NA     NA     NA  NA      NA       NA\n10 Aruba                            NA     NA     NA     NA  NA      NA       NA\n# ℹ 250 more rows\n# ℹ abbreviated name: ¹​`Adult (15+) literacy rate (%). Female`\n# ℹ 30 more variables: `1982` &lt;dbl&gt;, `1983` &lt;dbl&gt;, `1984` &lt;dbl&gt;, `1985` &lt;dbl&gt;,\n#   `1986` &lt;dbl&gt;, `1987` &lt;dbl&gt;, `1988` &lt;dbl&gt;, `1989` &lt;dbl&gt;, `1990` &lt;dbl&gt;,\n#   `1991` &lt;dbl&gt;, `1992` &lt;dbl&gt;, `1993` &lt;dbl&gt;, `1994` &lt;dbl&gt;, `1995` &lt;dbl&gt;,\n#   `1996` &lt;dbl&gt;, `1997` &lt;dbl&gt;, `1998` &lt;dbl&gt;, `1999` &lt;dbl&gt;, `2000` &lt;dbl&gt;,\n#   `2001` &lt;dbl&gt;, `2002` &lt;dbl&gt;, `2003` &lt;dbl&gt;, `2004` &lt;dbl&gt;, `2005` &lt;dbl&gt;, …"
  },
  {
    "objectID": "slides/2024-09-23-types.html#pivot_longer-1",
    "href": "slides/2024-09-23-types.html#pivot_longer-1",
    "title": "Variable Types",
    "section": "pivot_longer",
    "text": "pivot_longer\n\nlitF &lt;- litF |&gt; \n  select(country = starts_with(\"Adult\"), everything()) |&gt; \n  pivot_longer(cols = -country,\n               names_to = \"year\", \n               values_to = \"litRateF\") |&gt; \n  filter(!is.na(litRateF))\n\nlitF\n\n# A tibble: 571 × 3\n   country     year  litRateF\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt;\n 1 Afghanistan 1979      4.99\n 2 Afghanistan 2011     13   \n 3 Albania     2001     98.3 \n 4 Albania     2008     94.7 \n 5 Albania     2011     95.7 \n 6 Algeria     1987     35.8 \n 7 Algeria     2002     60.1 \n 8 Algeria     2006     63.9 \n 9 Angola      2001     54.2 \n10 Angola      2011     58.6 \n# ℹ 561 more rows"
  },
  {
    "objectID": "slides/2024-09-23-types.html#pivot_longer-2",
    "href": "slides/2024-09-23-types.html#pivot_longer-2",
    "title": "Variable Types",
    "section": "pivot_longer",
    "text": "pivot_longer\nGDP represents country, year, and gdp (in fixed 2000 US$).\n\nGDP &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1RctTQmKB0hzbm1E8rGcufYdMshRdhmYdeL29nXqmvsc/pub?gid=0\")\n\nGDP &lt;- GDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n  pivot_longer(cols = -country, \n               names_to = \"year\",\n               values_to = \"gdp\") |&gt; \n  filter(!is.na(gdp))\n\nGDP\n\n# A tibble: 7,988 × 3\n   country year    gdp\n   &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;\n 1 Albania 1980  1061.\n 2 Albania 1981  1100.\n 3 Albania 1982  1111.\n 4 Albania 1983  1101.\n 5 Albania 1984  1065.\n 6 Albania 1985  1060.\n 7 Albania 1986  1092.\n 8 Albania 1987  1054.\n 9 Albania 1988  1014.\n10 Albania 1989  1092.\n# ℹ 7,978 more rows"
  },
  {
    "objectID": "slides/2024-09-23-types.html#pivot_wider",
    "href": "slides/2024-09-23-types.html#pivot_wider",
    "title": "Variable Types",
    "section": "pivot_wider",
    "text": "pivot_wider\npivot_wider will be demonstrated using the babynames dataset.\n\nlibrary(babynames)\n\nbabynames\n\n# A tibble: 1,924,665 × 5\n    year sex   name          n   prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;int&gt;  &lt;dbl&gt;\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# ℹ 1,924,655 more rows"
  },
  {
    "objectID": "slides/2024-09-23-types.html#pivot_wider-babynames",
    "href": "slides/2024-09-23-types.html#pivot_wider-babynames",
    "title": "Variable Types",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  select(-prop) |&gt; \n  pivot_wider(names_from = sex, values_from = n) \n\n# A tibble: 1,756,284 × 4\n    year name          F     M\n   &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt; &lt;int&gt;\n 1  1880 Mary       7065    27\n 2  1880 Anna       2604    12\n 3  1880 Emma       2003    10\n 4  1880 Elizabeth  1939     9\n 5  1880 Minnie     1746     9\n 6  1880 Margaret   1578    NA\n 7  1880 Ida        1472     8\n 8  1880 Alice      1414    NA\n 9  1880 Bertha     1320    NA\n10  1880 Sarah      1288    NA\n# ℹ 1,756,274 more rows"
  },
  {
    "objectID": "slides/2024-09-23-types.html#pivot_wider-babynames-1",
    "href": "slides/2024-09-23-types.html#pivot_wider-babynames-1",
    "title": "Variable Types",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  select(-prop) |&gt;  \n  pivot_wider(names_from = sex, values_from = n) |&gt; \n  filter(!is.na(F), !is.na(M)) |&gt; \n  arrange(desc(year), desc(F))\n\n# A tibble: 168,381 × 4\n    year name          F     M\n   &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt; &lt;int&gt;\n 1  2017 Emma      19738    14\n 2  2017 Olivia    18632    10\n 3  2017 Ava       15902    12\n 4  2017 Isabella  15100    12\n 5  2017 Sophia    14831    17\n 6  2017 Mia       13437    16\n 7  2017 Charlotte 12893     7\n 8  2017 Amelia    11800    11\n 9  2017 Evelyn    10675    11\n10  2017 Abigail   10551     6\n# ℹ 168,371 more rows"
  },
  {
    "objectID": "slides/2024-09-23-types.html#pivot_wider-babynames-2",
    "href": "slides/2024-09-23-types.html#pivot_wider-babynames-2",
    "title": "Variable Types",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  pivot_wider(names_from = sex, values_from = n) |&gt; \n  mutate(maxcount = pmax(F, M, na.rm = TRUE)) |&gt; \n  arrange(desc(maxcount))\n\n# A tibble: 1,924,653 × 6\n    year name      prop     F     M maxcount\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;\n 1  1947 Linda   0.0548 99686    NA    99686\n 2  1948 Linda   0.0552 96209    NA    96209\n 3  1947 James   0.0510    NA 94756    94756\n 4  1957 Michael 0.0424    NA 92695    92695\n 5  1947 Robert  0.0493    NA 91642    91642\n 6  1949 Linda   0.0518 91016    NA    91016\n 7  1956 Michael 0.0423    NA 90620    90620\n 8  1958 Michael 0.0420    NA 90520    90520\n 9  1948 James   0.0497    NA 88588    88588\n10  1954 Michael 0.0428    NA 88514    88514\n# ℹ 1,924,643 more rows"
  },
  {
    "objectID": "slides/2024-09-23-types.html#relational-data-multiple-data-frames",
    "href": "slides/2024-09-23-types.html#relational-data-multiple-data-frames",
    "title": "Variable Types",
    "section": "Relational data (multiple data frames)",
    "text": "Relational data (multiple data frames)\n\n\n\n\n\n\n\n\n\nSee the Posit cheatsheets on wrangling & joining and pivoting."
  },
  {
    "objectID": "slides/2024-09-23-types.html#joining-two-or-more-data-frames",
    "href": "slides/2024-09-23-types.html#joining-two-or-more-data-frames",
    "title": "Variable Types",
    "section": "Joining two (or more) data frames:",
    "text": "Joining two (or more) data frames:\n\nleft_join returns all rows from the left table, and any rows with matching keys from the right table.\ninner_join returns only the rows in which the left table have matching keys in the right table (i.e., matching rows in both sets).\nfull_join returns all rows from both tables, join records from the left which have matching keys in the right table.\n\nGood practice: always specify the by argument when joining data frames."
  },
  {
    "objectID": "slides/2024-09-23-types.html#women-in-science",
    "href": "slides/2024-09-23-types.html#women-in-science",
    "title": "Variable Types",
    "section": "Women in Science",
    "text": "Women in Science\n10 women in science who changed the world (source: Discover Magazine)1\n\n\n\n\n\nname\nprofession\n\n\n\n\nAda Lovelace\nMathematician\n\n\nMarie Curie\nPhysicist and Chemist\n\n\nJanaki Ammal\nBotanist\n\n\nChien-Shiung Wu\nPhysicist\n\n\nKatherine Johnson\nMathematician\n\n\nRosalind Franklin\nChemist\n\n\nVera Rubin\nAstronomer\n\n\nGladys West\nMathematician\n\n\nFlossie Wong-Staal\nVirologist and Molecular Biologist\n\n\nJennifer Doudna\nBiochemist"
  },
  {
    "objectID": "slides/2024-09-23-types.html#inputs",
    "href": "slides/2024-09-23-types.html#inputs",
    "title": "Variable Types",
    "section": "Inputs",
    "text": "Inputs\n\nProfessionsDatesWorks\n\n\n\nprofessions\n\n# A tibble: 10 × 2\n   name               profession                        \n   &lt;chr&gt;              &lt;chr&gt;                             \n 1 Ada Lovelace       Mathematician                     \n 2 Marie Curie        Physicist and Chemist             \n 3 Janaki Ammal       Botanist                          \n 4 Chien-Shiung Wu    Physicist                         \n 5 Katherine Johnson  Mathematician                     \n 6 Rosalind Franklin  Chemist                           \n 7 Vera Rubin         Astronomer                        \n 8 Gladys West        Mathematician                     \n 9 Flossie Wong-Staal Virologist and Molecular Biologist\n10 Jennifer Doudna    Biochemist                        \n\n\n\n\n\ndates\n\n# A tibble: 8 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Rosalind Franklin        1920       1958\n5 Vera Rubin               1928       2016\n6 Gladys West              1930         NA\n7 Flossie Wong-Staal       1947       2020\n8 Jennifer Doudna          1964         NA\n\n\n\n\n\nworks\n\n# A tibble: 9 × 2\n  name               known_for                                                  \n  &lt;chr&gt;              &lt;chr&gt;                                                      \n1 Ada Lovelace       first computer algorithm                                   \n2 Marie Curie        theory of radioactivity,  discovery of elements polonium a…\n3 Janaki Ammal       hybrid species, biodiversity protection                    \n4 Chien-Shiung Wu    confim and refine theory of radioactive beta decy, Wu expe…\n5 Katherine Johnson  calculations of orbital mechanics critical to sending the …\n6 Vera Rubin         existence of dark matter                                   \n7 Gladys West        mathematical modeling of the shape of the Earth which serv…\n8 Flossie Wong-Staal first scientist to clone HIV and create a map of its genes…\n9 Jennifer Doudna    one of the primary developers of CRISPR, a ground-breaking…"
  },
  {
    "objectID": "slides/2024-09-23-types.html#desired-output",
    "href": "slides/2024-09-23-types.html#desired-output",
    "title": "Variable Types",
    "section": "Desired output",
    "text": "Desired output\nWe’d like to put together the data to look like:\n\n\n# A tibble: 10 × 5\n   name               profession                 birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician                      NA         NA first co…\n 2 Marie Curie        Physicist and Chemist              NA         NA theory o…\n 3 Janaki Ammal       Botanist                         1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist                        1912       1997 confim a…\n 5 Katherine Johnson  Mathematician                    1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                          1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer                       1928       2016 existenc…\n 8 Gladys West        Mathematician                    1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and Molecular …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist                       1964         NA one of t…"
  },
  {
    "objectID": "slides/2024-09-23-types.html#inputs-reminder",
    "href": "slides/2024-09-23-types.html#inputs-reminder",
    "title": "Variable Types",
    "section": "Inputs, reminder",
    "text": "Inputs, reminder\n\n\n\nnrow(professions)\n\n[1] 10\n\nnrow(dates)\n\n[1] 8\n\nnrow(works)\n\n[1] 9\n\n\n\n\nnames(professions)\n\n[1] \"name\"       \"profession\"\n\nnames(dates)\n\n[1] \"name\"       \"birth_year\" \"death_year\"\n\nnames(works)\n\n[1] \"name\"      \"known_for\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#setup",
    "href": "slides/2024-09-23-types.html#setup",
    "title": "Variable Types",
    "section": "Setup",
    "text": "Setup\nFor the next few slides…\n\n\n\nx\n\n# A tibble: 3 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n\n\n\n\ny\n\n# A tibble: 3 × 2\n     id value_y\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 y1     \n2     2 y2     \n3     4 y4"
  },
  {
    "objectID": "slides/2024-09-23-types.html#left_join",
    "href": "slides/2024-09-23-types.html#left_join",
    "title": "Variable Types",
    "section": "left_join()",
    "text": "left_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nleft_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;"
  },
  {
    "objectID": "slides/2024-09-23-types.html#left_join-1",
    "href": "slides/2024-09-23-types.html#left_join-1",
    "title": "Variable Types",
    "section": "left_join()",
    "text": "left_join()\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") \n\n# A tibble: 10 × 4\n   name               profession                         birth_year death_year\n   &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n 1 Ada Lovelace       Mathematician                              NA         NA\n 2 Marie Curie        Physicist and Chemist                      NA         NA\n 3 Janaki Ammal       Botanist                                 1897       1984\n 4 Chien-Shiung Wu    Physicist                                1912       1997\n 5 Katherine Johnson  Mathematician                            1918       2020\n 6 Rosalind Franklin  Chemist                                  1920       1958\n 7 Vera Rubin         Astronomer                               1928       2016\n 8 Gladys West        Mathematician                            1930         NA\n 9 Flossie Wong-Staal Virologist and Molecular Biologist       1947       2020\n10 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "slides/2024-09-23-types.html#right_join",
    "href": "slides/2024-09-23-types.html#right_join",
    "title": "Variable Types",
    "section": "right_join()",
    "text": "right_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nright_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2024-09-23-types.html#right_join-1",
    "href": "slides/2024-09-23-types.html#right_join-1",
    "title": "Variable Types",
    "section": "right_join()",
    "text": "right_join()\n\nprofessions |&gt; \n  right_join(dates, by = \"name\") \n\n# A tibble: 8 × 4\n  name               profession                         birth_year death_year\n  &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal       Botanist                                 1897       1984\n2 Chien-Shiung Wu    Physicist                                1912       1997\n3 Katherine Johnson  Mathematician                            1918       2020\n4 Rosalind Franklin  Chemist                                  1920       1958\n5 Vera Rubin         Astronomer                               1928       2016\n6 Gladys West        Mathematician                            1930         NA\n7 Flossie Wong-Staal Virologist and Molecular Biologist       1947       2020\n8 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "slides/2024-09-23-types.html#full_join",
    "href": "slides/2024-09-23-types.html#full_join",
    "title": "Variable Types",
    "section": "full_join()",
    "text": "full_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nfull_join(x, y, by = \"id\")\n\n# A tibble: 4 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;   \n4     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2024-09-23-types.html#full_join-1",
    "href": "slides/2024-09-23-types.html#full_join-1",
    "title": "Variable Types",
    "section": "full_join()",
    "text": "full_join()\n\ndates |&gt; \n  full_join(works, by = \"name\") \n\n# A tibble: 10 × 4\n   name               birth_year death_year known_for                           \n   &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                               \n 1 Janaki Ammal             1897       1984 hybrid species, biodiversity protec…\n 2 Chien-Shiung Wu          1912       1997 confim and refine theory of radioac…\n 3 Katherine Johnson        1918       2020 calculations of orbital mechanics c…\n 4 Rosalind Franklin        1920       1958 &lt;NA&gt;                                \n 5 Vera Rubin               1928       2016 existence of dark matter            \n 6 Gladys West              1930         NA mathematical modeling of the shape …\n 7 Flossie Wong-Staal       1947       2020 first scientist to clone HIV and cr…\n 8 Jennifer Doudna          1964         NA one of the primary developers of CR…\n 9 Ada Lovelace               NA         NA first computer algorithm            \n10 Marie Curie                NA         NA theory of radioactivity,  discovery…"
  },
  {
    "objectID": "slides/2024-09-23-types.html#inner_join",
    "href": "slides/2024-09-23-types.html#inner_join",
    "title": "Variable Types",
    "section": "inner_join()",
    "text": "inner_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\ninner_join(x, y, by = \"id\")\n\n# A tibble: 2 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2"
  },
  {
    "objectID": "slides/2024-09-23-types.html#inner_join-1",
    "href": "slides/2024-09-23-types.html#inner_join-1",
    "title": "Variable Types",
    "section": "inner_join()",
    "text": "inner_join()\n\ndates |&gt; \n  inner_join(works, by = \"name\") \n\n# A tibble: 7 × 4\n  name               birth_year death_year known_for                            \n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                                \n1 Janaki Ammal             1897       1984 hybrid species, biodiversity protect…\n2 Chien-Shiung Wu          1912       1997 confim and refine theory of radioact…\n3 Katherine Johnson        1918       2020 calculations of orbital mechanics cr…\n4 Vera Rubin               1928       2016 existence of dark matter             \n5 Gladys West              1930         NA mathematical modeling of the shape o…\n6 Flossie Wong-Staal       1947       2020 first scientist to clone HIV and cre…\n7 Jennifer Doudna          1964         NA one of the primary developers of CRI…"
  },
  {
    "objectID": "slides/2024-09-23-types.html#semi_join",
    "href": "slides/2024-09-23-types.html#semi_join",
    "title": "Variable Types",
    "section": "semi_join()",
    "text": "semi_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nsemi_join(x, y, by = \"id\")\n\n# A tibble: 2 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2"
  },
  {
    "objectID": "slides/2024-09-23-types.html#semi_join-1",
    "href": "slides/2024-09-23-types.html#semi_join-1",
    "title": "Variable Types",
    "section": "semi_join()",
    "text": "semi_join()\n\ndates |&gt; \n  semi_join(works, by = \"name\") \n\n# A tibble: 7 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Vera Rubin               1928       2016\n5 Gladys West              1930         NA\n6 Flossie Wong-Staal       1947       2020\n7 Jennifer Doudna          1964         NA"
  },
  {
    "objectID": "slides/2024-09-23-types.html#anti_join",
    "href": "slides/2024-09-23-types.html#anti_join",
    "title": "Variable Types",
    "section": "anti_join()",
    "text": "anti_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nanti_join(x, y, by = \"id\")\n\n# A tibble: 1 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     3 x3"
  },
  {
    "objectID": "slides/2024-09-23-types.html#anti_join-1",
    "href": "slides/2024-09-23-types.html#anti_join-1",
    "title": "Variable Types",
    "section": "anti_join()",
    "text": "anti_join()\n\ndates |&gt; \n  anti_join(works, by = \"name\") \n\n# A tibble: 1 × 3\n  name              birth_year death_year\n  &lt;chr&gt;                  &lt;dbl&gt;      &lt;dbl&gt;\n1 Rosalind Franklin       1920       1958"
  },
  {
    "objectID": "slides/2024-09-23-types.html#putting-it-all-together",
    "href": "slides/2024-09-23-types.html#putting-it-all-together",
    "title": "Variable Types",
    "section": "Putting it all together",
    "text": "Putting it all together\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") |&gt; \n  left_join(works, by = \"name\")\n\n# A tibble: 10 × 5\n   name               profession                 birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician                      NA         NA first co…\n 2 Marie Curie        Physicist and Chemist              NA         NA theory o…\n 3 Janaki Ammal       Botanist                         1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist                        1912       1997 confim a…\n 5 Katherine Johnson  Mathematician                    1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                          1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer                       1928       2016 existenc…\n 8 Gladys West        Mathematician                    1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and Molecular …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist                       1964         NA one of t…"
  },
  {
    "objectID": "slides/2024-09-23-types.html#practice-litf-and-gdp-from-gapminder.",
    "href": "slides/2024-09-23-types.html#practice-litf-and-gdp-from-gapminder.",
    "title": "Variable Types",
    "section": "Practice litF and GDP from Gapminder.",
    "text": "Practice litF and GDP from Gapminder."
  },
  {
    "objectID": "slides/2024-09-23-types.html#left",
    "href": "slides/2024-09-23-types.html#left",
    "title": "Variable Types",
    "section": "left",
    "text": "left\n\nlitGDPleft &lt;- left_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPleft)\n\n[1] 571   4\n\nlitGDPleft\n\n# A tibble: 571 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 561 more rows"
  },
  {
    "objectID": "slides/2024-09-23-types.html#right",
    "href": "slides/2024-09-23-types.html#right",
    "title": "Variable Types",
    "section": "right",
    "text": "right\n\nlitGDPright &lt;- right_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPright)\n\n[1] 7988    4\n\nlitGDPright\n\n# A tibble: 7,988 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 7,978 more rows"
  },
  {
    "objectID": "slides/2024-09-23-types.html#inner",
    "href": "slides/2024-09-23-types.html#inner",
    "title": "Variable Types",
    "section": "inner",
    "text": "inner\n\nlitGDPinner &lt;- inner_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPinner)\n\n[1] 505   4\n\nlitGDPinner\n\n# A tibble: 505 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 495 more rows"
  },
  {
    "objectID": "slides/2024-09-23-types.html#full",
    "href": "slides/2024-09-23-types.html#full",
    "title": "Variable Types",
    "section": "full",
    "text": "full\n\nlitGDPfull &lt;- full_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPfull)\n\n[1] 8054    4\n\nlitGDPfull\n\n# A tibble: 8,054 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 8,044 more rows"
  },
  {
    "objectID": "slides/2024-09-23-types.html#join-to-merge-two-datasets",
    "href": "slides/2024-09-23-types.html#join-to-merge-two-datasets",
    "title": "Variable Types",
    "section": "join to merge two datasets",
    "text": "join to merge two datasets\n\n\n\n\n\n\n\n\n\nIf you ever need to understand which join is the right join for you, try to find an image that will lay out what the function is doing. I found this one that is quite good and is taken from the Statistics Globe blog.\n\n\n\n:::"
  },
  {
    "objectID": "slides/2024-09-23-types.html#footnotes",
    "href": "slides/2024-09-23-types.html#footnotes",
    "title": "Variable Types",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nExample from DataScience in a Box↩︎"
  },
  {
    "objectID": "slides/2024-09-23-types.html#character-strings",
    "href": "slides/2024-09-23-types.html#character-strings",
    "title": "Variable Types",
    "section": "Character strings",
    "text": "Character strings\nWhen working with character strings, we might want to detect, replace, or extract certain patterns.\nStrings are objects of the character class (abbreviated as &lt;chr&gt; in tibbles). When you print out strings, they display with double quotes:\n\nsome_string &lt;- \"banana\"\nsome_string\n\n[1] \"banana\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#creating-strings",
    "href": "slides/2024-09-23-types.html#creating-strings",
    "title": "Variable Types",
    "section": "Creating strings",
    "text": "Creating strings\nCreating strings by hand is useful for testing out regular expressions.\nTo create a string, type any text in either double quotes \" or single quotes '. Using double or single quotes doesn’t matter unless your string itself has single or double quotes.\n\nstring1 &lt;- \"This is a string\"\nstring2 &lt;- 'If I want to include a \"quote\" inside a string, I use single quotes'\n\nstring1\n\n[1] \"This is a string\"\n\nstring2\n\n[1] \"If I want to include a \\\"quote\\\" inside a string, I use single quotes\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#str_replace",
    "href": "slides/2024-09-23-types.html#str_replace",
    "title": "Variable Types",
    "section": "str_replace*()",
    "text": "str_replace*()\nstr_replace() replaces the first match of a pattern. str_replace_all() replaces all the matches of a pattern.\n\nfruits\n\n[1] \"Apple\"  \"Banana\" \"Pear\"  \n\nstr_replace(fruits, \"a\", \"x\")\n\n[1] \"Apple\"  \"Bxnana\" \"Pexr\"  \n\nstr_replace_all(fruits, \"a\", \"x\")\n\n[1] \"Apple\"  \"Bxnxnx\" \"Pexr\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#str_detect",
    "href": "slides/2024-09-23-types.html#str_detect",
    "title": "Variable Types",
    "section": "str_detect()",
    "text": "str_detect()\n\nstr_detect(fruits, \"a\")\n\n[1] FALSE  TRUE  TRUE"
  },
  {
    "objectID": "slides/2024-09-23-types.html#stringr-functions",
    "href": "slides/2024-09-23-types.html#stringr-functions",
    "title": "Variable Types",
    "section": "stringr functions",
    "text": "stringr functions\nThe stringr package within tidyverse contains lots of functions to help process strings. Letting x be a string variable…\n\n\n\n\n\nstr function\narguments\nreturns\n\n\n\n\nstr_replace()\nx, pattern, replacement\na modified string\n\n\nstr_replace_all()\nx, pattern, replacement\na modified string\n\n\nstr_to_lower()\nx\na modified string\n\n\nstr_to_upper()\nx\na modified string\n\n\nstr_sub()\nx, start, end\na modified string\n\n\nstr_length()\nx\na number\n\n\nstr_detect()\nx, pattern\nTRUE/FALSE\n\n\n\n\n\nUse the stringr cheatsheet."
  },
  {
    "objectID": "slides/2024-09-23-types.html#original-data",
    "href": "slides/2024-09-23-types.html#original-data",
    "title": "Variable Types",
    "section": "original data",
    "text": "original data\n\nstarwars |&gt; \n  select(name, films) |&gt; \n  str() \n\ntibble [87 × 2] (S3: tbl_df/tbl/data.frame)\n $ name : chr [1:87] \"Luke Skywalker\" \"C-3PO\" \"R2-D2\" \"Darth Vader\" ...\n $ films:List of 87\n  ..$ : chr [1:5] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\" ...\n  ..$ : chr [1:6] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" ...\n  ..$ : chr [1:7] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" ...\n  ..$ : chr [1:4] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\"\n  ..$ : chr [1:5] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\" ...\n  ..$ : chr [1:3] \"A New Hope\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:3] \"A New Hope\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"A New Hope\"\n  ..$ : chr \"A New Hope\"\n  ..$ : chr [1:6] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" ...\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"A New Hope\" \"Revenge of the Sith\"\n  ..$ : chr [1:5] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\" ...\n  ..$ : chr [1:4] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Force Awakens\"\n  ..$ : chr \"A New Hope\"\n  ..$ : chr [1:3] \"A New Hope\" \"Return of the Jedi\" \"The Phantom Menace\"\n  ..$ : chr [1:3] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\"\n  ..$ : chr \"A New Hope\"\n  ..$ : chr [1:5] \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" \"Attack of the Clones\" ...\n  ..$ : chr [1:5] \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" \"Attack of the Clones\" ...\n  ..$ : chr [1:3] \"The Empire Strikes Back\" \"Return of the Jedi\" \"Attack of the Clones\"\n  ..$ : chr \"The Empire Strikes Back\"\n  ..$ : chr \"The Empire Strikes Back\"\n  ..$ : chr [1:2] \"The Empire Strikes Back\" \"Return of the Jedi\"\n  ..$ : chr \"The Empire Strikes Back\"\n  ..$ : chr [1:2] \"Return of the Jedi\" \"The Force Awakens\"\n  ..$ : chr \"Return of the Jedi\"\n  ..$ : chr \"Return of the Jedi\"\n  ..$ : chr \"Return of the Jedi\"\n  ..$ : chr \"Return of the Jedi\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Attack of the Clones\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Attack of the Clones\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Attack of the Clones\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"Return of the Jedi\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Revenge of the Sith\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"Revenge of the Sith\"\n  ..$ : chr \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"A New Hope\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"Revenge of the Sith\"\n  ..$ : chr \"The Force Awakens\"\n  ..$ : chr \"The Force Awakens\"\n  ..$ : chr \"The Force Awakens\"\n  ..$ : chr \"The Force Awakens\"\n  ..$ : chr \"The Force Awakens\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#filtered-data",
    "href": "slides/2024-09-23-types.html#filtered-data",
    "title": "Variable Types",
    "section": "filtered data",
    "text": "filtered data\n\nstarwars |&gt; \n  filter(str_detect(films, \"Empire\")) |&gt; \n  select(name, films) |&gt; \n  str()\n\ntibble [16 × 2] (S3: tbl_df/tbl/data.frame)\n $ name : chr [1:16] \"Luke Skywalker\" \"C-3PO\" \"R2-D2\" \"Darth Vader\" ...\n $ films:List of 16\n  ..$ : chr [1:5] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\" ...\n  ..$ : chr [1:6] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" ...\n  ..$ : chr [1:7] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" ...\n  ..$ : chr [1:4] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\"\n  ..$ : chr [1:5] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\" ...\n  ..$ : chr [1:6] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" ...\n  ..$ : chr [1:5] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\" ...\n  ..$ : chr [1:4] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Force Awakens\"\n  ..$ : chr [1:3] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\"\n  ..$ : chr [1:5] \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" \"Attack of the Clones\" ...\n  ..$ : chr [1:5] \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" \"Attack of the Clones\" ...\n  ..$ : chr [1:3] \"The Empire Strikes Back\" \"Return of the Jedi\" \"Attack of the Clones\"\n  ..$ : chr \"The Empire Strikes Back\"\n  ..$ : chr \"The Empire Strikes Back\"\n  ..$ : chr [1:2] \"The Empire Strikes Back\" \"Return of the Jedi\"\n  ..$ : chr \"The Empire Strikes Back\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#order-matters",
    "href": "slides/2024-09-23-types.html#order-matters",
    "title": "Variable Types",
    "section": "Order matters",
    "text": "Order matters\nSurveyUSA poll from 2012 on views of the DREAM Act.\nWhat is off about the data viz part of the report?\n\nDataPlotLevels\n\n\n\nopenintro::dream\n\n# A tibble: 910 × 2\n   ideology     stance\n   &lt;fct&gt;        &lt;fct&gt; \n 1 Conservative Yes   \n 2 Conservative Yes   \n 3 Conservative Yes   \n 4 Conservative Yes   \n 5 Conservative Yes   \n 6 Conservative Yes   \n 7 Conservative Yes   \n 8 Conservative Yes   \n 9 Conservative Yes   \n10 Conservative Yes   \n# ℹ 900 more rows\n\n\n\n\n\ndream |&gt; \n  ggplot(aes(x = ideology, fill = stance)) + \n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\ndream |&gt; \n  select(ideology) |&gt; \n  pull() |&gt;  # levels() works only on vectors, not data frames\n  levels()\n\n[1] \"Conservative\" \"Liberal\"      \"Moderate\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#change-the-order",
    "href": "slides/2024-09-23-types.html#change-the-order",
    "title": "Variable Types",
    "section": "Change the order",
    "text": "Change the order\nWe can fix the order of the ideology variable.\n\nCodePlot\n\n\n\ndream |&gt; \n  mutate(ideology = fct_relevel(ideology, \n                                c(\"Liberal\", \"Moderate\", \"Conservative\"))) |&gt; \n  ggplot(aes(x = ideology, fill = stance)) + \n  geom_bar()"
  },
  {
    "objectID": "slides/2024-09-23-types.html#factor-and-character-variables",
    "href": "slides/2024-09-23-types.html#factor-and-character-variables",
    "title": "Variable Types",
    "section": "Factor and character variables",
    "text": "Factor and character variables\n\nDataPlot\n\n\n\nstarbucks |&gt; \n  select(item, type, calories)\n\n# A tibble: 77 × 3\n   item                          type   calories\n   &lt;chr&gt;                         &lt;fct&gt;     &lt;int&gt;\n 1 \"8-Grain Roll\"                bakery      350\n 2 \"Apple Bran Muffin\"           bakery      350\n 3 \"Apple Fritter\"               bakery      420\n 4 \"Banana Nut Loaf\"             bakery      490\n 5 \"Birthday Cake Mini Doughnut\" bakery      130\n 6 \"Blueberry Oat Bar\"           bakery      370\n 7 \"Blueberry Scone\"             bakery      460\n 8 \"Bountiful Blueberry Muffin\"  bakery      370\n 9 \"Butter Croissant \"           bakery      310\n10 \"Cheese Danish\"               bakery      420\n# ℹ 67 more rows"
  },
  {
    "objectID": "slides/2024-09-23-types.html#reorder-according-to-another-variable",
    "href": "slides/2024-09-23-types.html#reorder-according-to-another-variable",
    "title": "Variable Types",
    "section": "Reorder according to another variable",
    "text": "Reorder according to another variable\nLets say that we wanted to order the type of food item based on the average number of calories in that food.\n\nCodePlot\n\n\n\nstarbucks |&gt; \n  mutate(type = fct_reorder(type, calories, .fun = \"mean\", .desc = TRUE)) |&gt; \n  ggplot(aes(x = type, y = calories)) + \n  geom_point() + \n  labs(x = \"type of food\",\n       y = \"\",\n       title = \"Calories for food items at Starbucks\")"
  },
  {
    "objectID": "slides/2024-09-23-types.html#forcats-functions",
    "href": "slides/2024-09-23-types.html#forcats-functions",
    "title": "Variable Types",
    "section": "forcats functions",
    "text": "forcats functions\nThe forcats package within tidyverse contains lots of functions to help process factor variables Use the forcats cheatsheet. We’ll focus on the most common functions.\n\nfunctions for changing the order of factor levels\n\nfct_relevel() = manually reorder levels\nfct_reorder() = reorder levels according to values of another variable\nfct_infreq() = order levels from highest to lowest frequency\nfct_rev() = reverse the current order\n\nfunctions for changing the labels or values of factor levels\n\nfct_recode() = manually change levels\nfct_lump() = group together least common levels"
  },
  {
    "objectID": "slides/2024-09-23-types.html#str_view",
    "href": "slides/2024-09-23-types.html#str_view",
    "title": "Variable Types",
    "section": "str_view()",
    "text": "str_view()\nWe can view these strings “naturally” (without the opening and closing quotes) with str_view():\n\nstr_view(string1)\n\n[1] │ This is a string\n\nstr_view(string2)\n\n[1] │ If I want to include a \"quote\" inside a string, I use single quotes"
  },
  {
    "objectID": "slides/2024-09-23-types.html#str_c",
    "href": "slides/2024-09-23-types.html#str_c",
    "title": "Variable Types",
    "section": "str_c",
    "text": "str_c\nSimilar to paste() (gluing strings together), but works well in a tidy pipeline.\n\ndf &lt;- tibble(name = c(\"Flora\", \"David\", \"Terra\", NA))\ndf |&gt; mutate(greeting = str_c(\"Hi \", name, \"!\"))\n\n# A tibble: 4 × 2\n  name  greeting \n  &lt;chr&gt; &lt;chr&gt;    \n1 Flora Hi Flora!\n2 David Hi David!\n3 Terra Hi Terra!\n4 &lt;NA&gt;  &lt;NA&gt;"
  },
  {
    "objectID": "slides/2024-09-23-types.html#str_sub",
    "href": "slides/2024-09-23-types.html#str_sub",
    "title": "Variable Types",
    "section": "str_sub()",
    "text": "str_sub()\nstr_sub(string, start, end) will extract parts of a string where start and end are the positions where the substring starts and ends.\n\nfruits &lt;- c(\"Apple\", \"Banana\", \"Pear\")\nstr_sub(fruits, 1, 3)\n\n[1] \"App\" \"Ban\" \"Pea\"\n\nstr_sub(fruits, -3, -1)\n\n[1] \"ple\" \"ana\" \"ear\"\n\n\nWon’t fail if the string is too short.\n\nstr_sub(fruits, 1, 5)\n\n[1] \"Apple\" \"Banan\" \"Pear\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#str_sub-in-a-pipeline",
    "href": "slides/2024-09-23-types.html#str_sub-in-a-pipeline",
    "title": "Variable Types",
    "section": "str_sub() in a pipeline",
    "text": "str_sub() in a pipeline\nWe can use the str_*() functions inside the mutate() function.\n\ntitanic |&gt; \n  mutate(class1 = str_sub(Class, 1, 1))\n\n   Class    Sex   Age Survived Freq class1\n1    1st   Male Child       No    0      1\n2    2nd   Male Child       No    0      2\n3    3rd   Male Child       No   35      3\n4   Crew   Male Child       No    0      C\n5    1st Female Child       No    0      1\n6    2nd Female Child       No    0      2\n7    3rd Female Child       No   17      3\n8   Crew Female Child       No    0      C\n9    1st   Male Adult       No  118      1\n10   2nd   Male Adult       No  154      2\n11   3rd   Male Adult       No  387      3\n12  Crew   Male Adult       No  670      C\n13   1st Female Adult       No    4      1\n14   2nd Female Adult       No   13      2\n15   3rd Female Adult       No   89      3\n16  Crew Female Adult       No    3      C\n17   1st   Male Child      Yes    5      1\n18   2nd   Male Child      Yes   11      2\n19   3rd   Male Child      Yes   13      3\n20  Crew   Male Child      Yes    0      C\n21   1st Female Child      Yes    1      1\n22   2nd Female Child      Yes   13      2\n23   3rd Female Child      Yes   14      3\n24  Crew Female Child      Yes    0      C\n25   1st   Male Adult      Yes   57      1\n26   2nd   Male Adult      Yes   14      2\n27   3rd   Male Adult      Yes   75      3\n28  Crew   Male Adult      Yes  192      C\n29   1st Female Adult      Yes  140      1\n30   2nd Female Adult      Yes   80      2\n31   3rd Female Adult      Yes   76      3\n32  Crew Female Adult      Yes   20      C"
  },
  {
    "objectID": "slides/2024-09-23-types.html#str_detect-in-pipeline",
    "href": "slides/2024-09-23-types.html#str_detect-in-pipeline",
    "title": "Variable Types",
    "section": "str_detect() in pipeline",
    "text": "str_detect() in pipeline\nstr_detect() used in a filter() pipeline.\n\noriginal datafiltered data\n\n\n\nstarwars |&gt; \n  select(name, films) |&gt; \n  str() \n\ntibble [87 × 2] (S3: tbl_df/tbl/data.frame)\n $ name : chr [1:87] \"Luke Skywalker\" \"C-3PO\" \"R2-D2\" \"Darth Vader\" ...\n $ films:List of 87\n  ..$ : chr [1:5] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\" ...\n  ..$ : chr [1:6] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" ...\n  ..$ : chr [1:7] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" ...\n  ..$ : chr [1:4] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\"\n  ..$ : chr [1:5] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\" ...\n  ..$ : chr [1:3] \"A New Hope\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:3] \"A New Hope\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"A New Hope\"\n  ..$ : chr \"A New Hope\"\n  ..$ : chr [1:6] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" ...\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"A New Hope\" \"Revenge of the Sith\"\n  ..$ : chr [1:5] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\" ...\n  ..$ : chr [1:4] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Force Awakens\"\n  ..$ : chr \"A New Hope\"\n  ..$ : chr [1:3] \"A New Hope\" \"Return of the Jedi\" \"The Phantom Menace\"\n  ..$ : chr [1:3] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\"\n  ..$ : chr \"A New Hope\"\n  ..$ : chr [1:5] \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" \"Attack of the Clones\" ...\n  ..$ : chr [1:5] \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" \"Attack of the Clones\" ...\n  ..$ : chr [1:3] \"The Empire Strikes Back\" \"Return of the Jedi\" \"Attack of the Clones\"\n  ..$ : chr \"The Empire Strikes Back\"\n  ..$ : chr \"The Empire Strikes Back\"\n  ..$ : chr [1:2] \"The Empire Strikes Back\" \"Return of the Jedi\"\n  ..$ : chr \"The Empire Strikes Back\"\n  ..$ : chr [1:2] \"Return of the Jedi\" \"The Force Awakens\"\n  ..$ : chr \"Return of the Jedi\"\n  ..$ : chr \"Return of the Jedi\"\n  ..$ : chr \"Return of the Jedi\"\n  ..$ : chr \"Return of the Jedi\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Attack of the Clones\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Attack of the Clones\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Attack of the Clones\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"Return of the Jedi\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Revenge of the Sith\"\n  ..$ : chr \"The Phantom Menace\"\n  ..$ : chr [1:3] \"The Phantom Menace\" \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"The Phantom Menace\" \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr \"Attack of the Clones\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"Revenge of the Sith\"\n  ..$ : chr \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"A New Hope\" \"Revenge of the Sith\"\n  ..$ : chr [1:2] \"Attack of the Clones\" \"Revenge of the Sith\"\n  ..$ : chr \"Revenge of the Sith\"\n  ..$ : chr \"The Force Awakens\"\n  ..$ : chr \"The Force Awakens\"\n  ..$ : chr \"The Force Awakens\"\n  ..$ : chr \"The Force Awakens\"\n  ..$ : chr \"The Force Awakens\"\n\n\n\n\n\nstarwars |&gt; \n  filter(str_detect(films, \"Empire\")) |&gt; \n  select(name, films) |&gt; \n  str()\n\ntibble [16 × 2] (S3: tbl_df/tbl/data.frame)\n $ name : chr [1:16] \"Luke Skywalker\" \"C-3PO\" \"R2-D2\" \"Darth Vader\" ...\n $ films:List of 16\n  ..$ : chr [1:5] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\" ...\n  ..$ : chr [1:6] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" ...\n  ..$ : chr [1:7] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" ...\n  ..$ : chr [1:4] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\"\n  ..$ : chr [1:5] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\" ...\n  ..$ : chr [1:6] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" ...\n  ..$ : chr [1:5] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"Revenge of the Sith\" ...\n  ..$ : chr [1:4] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Force Awakens\"\n  ..$ : chr [1:3] \"A New Hope\" \"The Empire Strikes Back\" \"Return of the Jedi\"\n  ..$ : chr [1:5] \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" \"Attack of the Clones\" ...\n  ..$ : chr [1:5] \"The Empire Strikes Back\" \"Return of the Jedi\" \"The Phantom Menace\" \"Attack of the Clones\" ...\n  ..$ : chr [1:3] \"The Empire Strikes Back\" \"Return of the Jedi\" \"Attack of the Clones\"\n  ..$ : chr \"The Empire Strikes Back\"\n  ..$ : chr \"The Empire Strikes Back\"\n  ..$ : chr [1:2] \"The Empire Strikes Back\" \"Return of the Jedi\"\n  ..$ : chr \"The Empire Strikes Back\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#lubridate",
    "href": "slides/2024-09-23-types.html#lubridate",
    "title": "Variable Types",
    "section": "lubridate",
    "text": "lubridate\nlubridate is a another R package meant for data wrangling!\nIn particular, lubridate makes it very easy to work with days, times, and dates. The base idea is to start with dates in a ymd (year month day) format and transform the information into whatever you want.\nExample from the lubridate vignette."
  },
  {
    "objectID": "slides/2024-09-23-types.html#if-anyone-drove-a-time-machine-they-would-crash",
    "href": "slides/2024-09-23-types.html#if-anyone-drove-a-time-machine-they-would-crash",
    "title": "Variable Types",
    "section": "If anyone drove a time machine, they would crash",
    "text": "If anyone drove a time machine, they would crash\nThe length of months and years change so often that doing arithmetic with them can be unintuitive.\nConsider a simple operation: January 31st + one month."
  },
  {
    "objectID": "slides/2024-09-23-types.html#if-anyone-drove-a-time-machine-they-would-crash-1",
    "href": "slides/2024-09-23-types.html#if-anyone-drove-a-time-machine-they-would-crash-1",
    "title": "Variable Types",
    "section": "If anyone drove a time machine, they would crash",
    "text": "If anyone drove a time machine, they would crash\nThe length of months and years change so often that doing arithmetic with them can be unintuitive.\nConsider a simple operation: January 31st + one month.\nShould the answer be:\n\nFebruary 31st (which doesn’t exist)?\nMarch 4th (31 days after January 31)?\nFebruary 28th (assuming its not a leap year)?"
  },
  {
    "objectID": "slides/2024-09-23-types.html#if-anyone-drove-a-time-machine-they-would-crash-2",
    "href": "slides/2024-09-23-types.html#if-anyone-drove-a-time-machine-they-would-crash-2",
    "title": "Variable Types",
    "section": "If anyone drove a time machine, they would crash",
    "text": "If anyone drove a time machine, they would crash\nA basic property of arithmetic is that a + b - b = a. Only solution 1 obeys the mathematical property, but it is an invalid date. Wickham wants to make lubridate as consistent as possible by invoking the following rule: if adding or subtracting a month or a year creates an invalid date, lubridate will return an NA. \nIf you thought solution 2 or 3 was more useful, no problem. You can still get those results with clever arithmetic, or by using the special %m+% and %m-% operators. %m+% and %m-% automatically roll dates back to the last day of the month, should that be necessary."
  },
  {
    "objectID": "slides/2024-09-23-types.html#basics-in-lubridate",
    "href": "slides/2024-09-23-types.html#basics-in-lubridate",
    "title": "Variable Types",
    "section": "basics in lubridate",
    "text": "basics in lubridate\n\nlibrary(lubridate)\nrightnow &lt;- now()\nrightnow\n\n[1] \"2024-09-25 12:27:16 PDT\"\n\nday(rightnow)\n\n[1] 25\n\nweek(rightnow)\n\n[1] 39\n\nmonth(rightnow, label=FALSE)\n\n[1] 9\n\nmonth(rightnow, label=TRUE)\n\n[1] Sep\n12 Levels: Jan &lt; Feb &lt; Mar &lt; Apr &lt; May &lt; Jun &lt; Jul &lt; Aug &lt; Sep &lt; ... &lt; Dec\n\nyear(rightnow)\n\n[1] 2024"
  },
  {
    "objectID": "slides/2024-09-23-types.html#basics-in-lubridate-1",
    "href": "slides/2024-09-23-types.html#basics-in-lubridate-1",
    "title": "Variable Types",
    "section": "basics in lubridate",
    "text": "basics in lubridate\n\nminute(rightnow)\n\n[1] 27\n\nhour(rightnow)\n\n[1] 12\n\nyday(rightnow)\n\n[1] 269\n\nmday(rightnow)\n\n[1] 25\n\nwday(rightnow, label=FALSE)\n\n[1] 4\n\nwday(rightnow, label=TRUE)\n\n[1] Wed\nLevels: Sun &lt; Mon &lt; Tue &lt; Wed &lt; Thu &lt; Fri &lt; Sat"
  },
  {
    "objectID": "slides/2024-09-23-types.html#but-how-do-i-create-a-date-object",
    "href": "slides/2024-09-23-types.html#but-how-do-i-create-a-date-object",
    "title": "Variable Types",
    "section": "But how do I create a date object?",
    "text": "But how do I create a date object?\n\njan31 &lt;- ymd(\"2021-01-31\")\njan31 + months(0:11)\n\n [1] \"2021-01-31\" NA           \"2021-03-31\" NA           \"2021-05-31\"\n [6] NA           \"2021-07-31\" \"2021-08-31\" NA           \"2021-10-31\"\n[11] NA           \"2021-12-31\"\n\nfloor_date(jan31, \"month\") + months(0:11) + days(31)\n\n [1] \"2021-02-01\" \"2021-03-04\" \"2021-04-01\" \"2021-05-02\" \"2021-06-01\"\n [6] \"2021-07-02\" \"2021-08-01\" \"2021-09-01\" \"2021-10-02\" \"2021-11-01\"\n[11] \"2021-12-02\" \"2022-01-01\"\n\njan31 + months(0:11) + days(31)\n\n [1] \"2021-03-03\" NA           \"2021-05-01\" NA           \"2021-07-01\"\n [6] NA           \"2021-08-31\" \"2021-10-01\" NA           \"2021-12-01\"\n[11] NA           \"2022-01-31\"\n\njan31 %m+% months(0:11)\n\n [1] \"2021-01-31\" \"2021-02-28\" \"2021-03-31\" \"2021-04-30\" \"2021-05-31\"\n [6] \"2021-06-30\" \"2021-07-31\" \"2021-08-31\" \"2021-09-30\" \"2021-10-31\"\n[11] \"2021-11-30\" \"2021-12-31\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#nyc-flights",
    "href": "slides/2024-09-23-types.html#nyc-flights",
    "title": "Variable Types",
    "section": "NYC flights",
    "text": "NYC flights\n\nlibrary(nycflights13)\nnames(flights)\n\n [1] \"year\"           \"month\"          \"day\"            \"dep_time\"      \n [5] \"sched_dep_time\" \"dep_delay\"      \"arr_time\"       \"sched_arr_time\"\n [9] \"arr_delay\"      \"carrier\"        \"flight\"         \"tailnum\"       \n[13] \"origin\"         \"dest\"           \"air_time\"       \"distance\"      \n[17] \"hour\"           \"minute\"         \"time_hour\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#nyc-flights-1",
    "href": "slides/2024-09-23-types.html#nyc-flights-1",
    "title": "Variable Types",
    "section": "NYC flights",
    "text": "NYC flights\nCreating a date object from variables.\n\nflightsWK &lt;- flights |&gt;  \n   mutate(ymdday = ymd(paste(year, month,day, sep=\"-\"))) |&gt; \n   mutate(weekdy = wday(ymdday, label=TRUE), \n          whichweek = week(ymdday)) \n\nflightsWK |&gt;  select(year, month, day, ymdday, weekdy, whichweek, \n                     dep_time, arr_time, air_time) \n\n# A tibble: 336,776 × 9\n    year month   day ymdday     weekdy whichweek dep_time arr_time air_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;date&gt;     &lt;ord&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;    &lt;dbl&gt;\n 1  2013     1     1 2013-01-01 Tue            1      517      830      227\n 2  2013     1     1 2013-01-01 Tue            1      533      850      227\n 3  2013     1     1 2013-01-01 Tue            1      542      923      160\n 4  2013     1     1 2013-01-01 Tue            1      544     1004      183\n 5  2013     1     1 2013-01-01 Tue            1      554      812      116\n 6  2013     1     1 2013-01-01 Tue            1      554      740      150\n 7  2013     1     1 2013-01-01 Tue            1      555      913      158\n 8  2013     1     1 2013-01-01 Tue            1      557      709       53\n 9  2013     1     1 2013-01-01 Tue            1      557      838      140\n10  2013     1     1 2013-01-01 Tue            1      558      753      138\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "slides/2024-09-23-types.html#reprex",
    "href": "slides/2024-09-23-types.html#reprex",
    "title": "Variable Types",
    "section": "reprex",
    "text": "reprex\n\nHelp me help you\n\nreproducible example …\nStep 1. Copy code onto the clipboard\nStep 2. Type reprex() into the Console\nStep 3. Look at the Viewer to the right. Copy the Viewer output into GitHub, Piazza, Discord, an email, stackexchange, etc."
  },
  {
    "objectID": "slides/2024-09-23-types.html#reprex-demo",
    "href": "slides/2024-09-23-types.html#reprex-demo",
    "title": "Variable Types",
    "section": "reprex demo",
    "text": "reprex demo\nreprex(\n  jan31 + months(0:11) + days(31)\n)\nmultiple lines of code:\nreprex({\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n})\nreprex({\n  library(lubridate)\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n})"
  },
  {
    "objectID": "slides/2024-09-23-types.html#formatting-time-variablse",
    "href": "slides/2024-09-23-types.html#formatting-time-variablse",
    "title": "Variable Types",
    "section": "Formatting time variablse",
    "text": "Formatting time variablse\n\nimage credit: https://xkcd.com/1179/"
  },
  {
    "objectID": "slides/2024-09-23-types.html#what-time-is-it",
    "href": "slides/2024-09-23-types.html#what-time-is-it",
    "title": "Variable Types",
    "section": "What time is it?",
    "text": "What time is it?\n\ntoday()\n\n[1] \"2024-09-25\"\n\nnow()\n\n[1] \"2024-09-25 12:27:16 PDT\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#creating-dates",
    "href": "slides/2024-09-23-types.html#creating-dates",
    "title": "Variable Types",
    "section": "Creating dates",
    "text": "Creating dates\nymd() and friends create dates\n\nymd(\"2024-09-25\")\n\n[1] \"2024-09-25\"\n\nmdy(\"September 25th, 2024\")\n\n[1] \"2024-09-25\"\n\ndmy(\"25-Sep-2024\")\n\n[1] \"2024-09-25\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#with-times",
    "href": "slides/2024-09-23-types.html#with-times",
    "title": "Variable Types",
    "section": "… with times",
    "text": "… with times\nTo create a date-time, add an underscore and one or more of “h”, “m”, and “s” to the name of the parsing function:\n\nymd_hms(\"2024-09-25 11:45:59\", tz = \"America/Los_Angeles\")\n\n[1] \"2024-09-25 11:45:59 PDT\"\n\nmdy_hm(\"09/25/2024 15:01\")  # default is UTC = GMT\n\n[1] \"2024-09-25 15:01:00 UTC\"\n\n\nMore information about time zones in R."
  },
  {
    "objectID": "slides/2024-09-23-types.html#working-with-a-date-object",
    "href": "slides/2024-09-23-types.html#working-with-a-date-object",
    "title": "Variable Types",
    "section": "Working with a date object",
    "text": "Working with a date object\n\njan31 &lt;- ymd(\"2024-01-31\")\njan31 + months(0:11)\n\n [1] \"2024-01-31\" NA           \"2024-03-31\" NA           \"2024-05-31\"\n [6] NA           \"2024-07-31\" \"2024-08-31\" NA           \"2024-10-31\"\n[11] NA           \"2024-12-31\"\n\nfloor_date(jan31, \"month\")\n\n[1] \"2024-01-01\"\n\nfloor_date(jan31, \"month\") + months(0:11) + days(31)\n\n [1] \"2024-02-01\" \"2024-03-03\" \"2024-04-01\" \"2024-05-02\" \"2024-06-01\"\n [6] \"2024-07-02\" \"2024-08-01\" \"2024-09-01\" \"2024-10-02\" \"2024-11-01\"\n[11] \"2024-12-02\" \"2025-01-01\"\n\njan31 + months(0:11) + days(31)\n\n [1] \"2024-03-02\" NA           \"2024-05-01\" NA           \"2024-07-01\"\n [6] NA           \"2024-08-31\" \"2024-10-01\" NA           \"2024-12-01\"\n[11] NA           \"2025-01-31\"\n\njan31 %m+% months(0:11)\n\n [1] \"2024-01-31\" \"2024-02-29\" \"2024-03-31\" \"2024-04-30\" \"2024-05-31\"\n [6] \"2024-06-30\" \"2024-07-31\" \"2024-08-31\" \"2024-09-30\" \"2024-10-31\"\n[11] \"2024-11-30\" \"2024-12-31\""
  },
  {
    "objectID": "slides/2024-09-23-types.html#where-do-we-order",
    "href": "slides/2024-09-23-types.html#where-do-we-order",
    "title": "Variable Types",
    "section": "Where do we order?",
    "text": "Where do we order?\nThe ordering of the factor variable comes out in:\n\nplots (e.g., barplots)\ntables (e.g., group_by())\nmodeling (e.g., the baseline level in a linear regression)"
  },
  {
    "objectID": "slides/2024-09-23-types.html#change-character-to-factor",
    "href": "slides/2024-09-23-types.html#change-character-to-factor",
    "title": "Variable Types",
    "section": "Change character to factor",
    "text": "Change character to factor\n\nOG dataNew factor\n\n\n\nstarbucks\n\n# A tibble: 77 × 7\n   item                          calories   fat  carb fiber protein type  \n   &lt;chr&gt;                            &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt; &lt;fct&gt; \n 1 \"8-Grain Roll\"                     350     8    67     5      10 bakery\n 2 \"Apple Bran Muffin\"                350     9    64     7       6 bakery\n 3 \"Apple Fritter\"                    420    20    59     0       5 bakery\n 4 \"Banana Nut Loaf\"                  490    19    75     4       7 bakery\n 5 \"Birthday Cake Mini Doughnut\"      130     6    17     0       0 bakery\n 6 \"Blueberry Oat Bar\"                370    14    47     5       6 bakery\n 7 \"Blueberry Scone\"                  460    22    61     2       7 bakery\n 8 \"Bountiful Blueberry Muffin\"       370    14    55     0       6 bakery\n 9 \"Butter Croissant \"                310    18    32     0       5 bakery\n10 \"Cheese Danish\"                    420    25    39     0       7 bakery\n# ℹ 67 more rows\n\n\n\n\n\nstarbucks |&gt; \n  mutate(item = as.factor(item))\n\n# A tibble: 77 × 7\n   item                          calories   fat  carb fiber protein type  \n   &lt;fct&gt;                            &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt; &lt;fct&gt; \n 1 \"8-Grain Roll\"                     350     8    67     5      10 bakery\n 2 \"Apple Bran Muffin\"                350     9    64     7       6 bakery\n 3 \"Apple Fritter\"                    420    20    59     0       5 bakery\n 4 \"Banana Nut Loaf\"                  490    19    75     4       7 bakery\n 5 \"Birthday Cake Mini Doughnut\"      130     6    17     0       0 bakery\n 6 \"Blueberry Oat Bar\"                370    14    47     5       6 bakery\n 7 \"Blueberry Scone\"                  460    22    61     2       7 bakery\n 8 \"Bountiful Blueberry Muffin\"       370    14    55     0       6 bakery\n 9 \"Butter Croissant \"                310    18    32     0       5 bakery\n10 \"Cheese Danish\"                    420    25    39     0       7 bakery\n# ℹ 67 more rows"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#regular-expressions",
    "href": "slides/2024-10-01-regex.html#regular-expressions",
    "title": "Regular Expressions",
    "section": "Regular Expressions",
    "text": "Regular Expressions\n\nA regular expression … is a sequence of characters that define a search pattern. Usually such patterns are used by string searching algorithms for “find” or “find and replace” operations on strings, or for input validation. It is a technique developed in theoretical computer science and formal language theory."
  },
  {
    "objectID": "slides/2024-10-01-regex.html#escape-sequences",
    "href": "slides/2024-10-01-regex.html#escape-sequences",
    "title": "Regular Expressions",
    "section": "Escape sequences",
    "text": "Escape sequences\nJust to scratch the surface, here are a few special characters that cannot be directly coded. Therefore, they are escaped with a backslash, \\.\n\n\\': single quote.\n\n\\\": double quote.\n\n\\n: newline.\n\n\\r: carriage return.\n\n\\t: tab character."
  },
  {
    "objectID": "slides/2024-10-01-regex.html#quantifiers",
    "href": "slides/2024-10-01-regex.html#quantifiers",
    "title": "Regular Expressions",
    "section": "Quantifiers",
    "text": "Quantifiers\nQuantifiers specify how many repetitions of the pattern.\n\n*: matches at least 0 times.\n\n+: matches at least 1 times.\n\n?: matches at most 1 times.\n\n{n}: matches exactly n times.\n\n{n,}: matches at least n times.\n\n{n,m}: matches between n and m times."
  },
  {
    "objectID": "slides/2024-10-01-regex.html#examples-of-quantifiers",
    "href": "slides/2024-10-01-regex.html#examples-of-quantifiers",
    "title": "Regular Expressions",
    "section": "Examples of quantifiers",
    "text": "Examples of quantifiers\n\nstrings &lt;- c(\"a\", \"ab\", \"acb\", \"accb\", \"acccb\", \"accccb\")\ngrep(\"ac*b\", strings, value = TRUE)\ngrep(\"ac*b\", strings, value = FALSE)\ngrep(\"ac+b\", strings, value = TRUE)\ngrep(\"ac?b\", strings, value = TRUE)\ngrep(\"ac{2}b\", strings, value = TRUE)\ngrep(\"ac{2,}b\", strings, value = TRUE)\ngrep(\"ac{2,3}b\", strings, value = TRUE)\n\ngrep() stands for “global regular expression print”. grep() returns a character vector containing the selected elements, grepl() returns a logical vector of TRUE/FALSE for whether or not there was a match."
  },
  {
    "objectID": "slides/2024-10-01-regex.html#examples-of-quantifiers---solution",
    "href": "slides/2024-10-01-regex.html#examples-of-quantifiers---solution",
    "title": "Regular Expressions",
    "section": "Examples of quantifiers - solution",
    "text": "Examples of quantifiers - solution\n\nstrings &lt;- c(\"a\", \"ab\", \"acb\", \"accb\", \"acccb\", \"accccb\")\ngrep(\"ac*b\", strings, value = TRUE)\n\n[1] \"ab\"     \"acb\"    \"accb\"   \"acccb\"  \"accccb\"\n\ngrep(\"ac*b\", strings, value = FALSE)\n\n[1] 2 3 4 5 6\n\ngrep(\"ac+b\", strings, value = TRUE)\n\n[1] \"acb\"    \"accb\"   \"acccb\"  \"accccb\"\n\ngrep(\"ac?b\", strings, value = TRUE)\n\n[1] \"ab\"  \"acb\"\n\ngrep(\"ac{2}b\", strings, value = TRUE)\n\n[1] \"accb\"\n\ngrep(\"ac{2,}b\", strings, value = TRUE)\n\n[1] \"accb\"   \"acccb\"  \"accccb\"\n\ngrep(\"ac{2,3}b\", strings, value = TRUE)\n\n[1] \"accb\"  \"acccb\"\n\n\ngrep() stands for “global regular expression print”. grep() returns a character vector containing the selected elements, grepl() returns a logical vector of TRUE/FALSE for whether or not there was a match."
  },
  {
    "objectID": "slides/2024-10-01-regex.html#position-of-pattern-within-the-string",
    "href": "slides/2024-10-01-regex.html#position-of-pattern-within-the-string",
    "title": "Regular Expressions",
    "section": "Position of pattern within the string",
    "text": "Position of pattern within the string\n\n^: matches the start of the string.\n\n$: matches the end of the string.\n\n\\b: matches the boundary of a word. Don’t confuse it with ^ $ which marks the edge of a string.\n\n\\B: matches the empty string provided it is not at an edge of a word."
  },
  {
    "objectID": "slides/2024-10-01-regex.html#examples-of-positions",
    "href": "slides/2024-10-01-regex.html#examples-of-positions",
    "title": "Regular Expressions",
    "section": "Examples of positions",
    "text": "Examples of positions\n\nstrings &lt;- c(\"abcd\", \"cdab\", \"cabd\", \"c abd\")\ngrep(\"ab\", strings, value = TRUE)\ngrep(\"^ab\", strings, value = TRUE)\ngrep(\"ab$\", strings, value = TRUE)\ngrep(\"\\\\bab\", strings, value = TRUE)"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#examples-of-positions---solution",
    "href": "slides/2024-10-01-regex.html#examples-of-positions---solution",
    "title": "Regular Expressions",
    "section": "Examples of positions - solution",
    "text": "Examples of positions - solution\n\nstrings &lt;- c(\"abcd\", \"cdab\", \"cabd\", \"c abd\")\ngrep(\"ab\", strings, value = TRUE)\n\n[1] \"abcd\"  \"cdab\"  \"cabd\"  \"c abd\"\n\ngrep(\"^ab\", strings, value = TRUE)\n\n[1] \"abcd\"\n\ngrep(\"ab$\", strings, value = TRUE)\n\n[1] \"cdab\"\n\ngrep(\"\\\\bab\", strings, value = TRUE)\n\n[1] \"abcd\"  \"c abd\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#operators",
    "href": "slides/2024-10-01-regex.html#operators",
    "title": "Regular Expressions",
    "section": "Operators",
    "text": "Operators\n\n.: matches any single character,\n[...]: a character list, matches any one of the characters inside the square brackets. A - inside the brackets specifies a range of characters.\n\n[^...]: an inverted character list, similar to [...], but matches any characters except those inside the square brackets.\n\n\\: suppress the special meaning of metacharacters in regular expression, i.e. $ * + . ? [ ] ^ { } | ( ) \\. Since \\ itself needs to be escaped in R, we need to escape metacharacters with double backslash like \\\\$.\n\n|: an “or” operator, matches patterns on either side of the |.\n\n(...): grouping in regular expressions. This allows you to retrieve the bits that matched various parts of your regular expression so you can alter them or use them for building up a new string."
  },
  {
    "objectID": "slides/2024-10-01-regex.html#examples-of-operators",
    "href": "slides/2024-10-01-regex.html#examples-of-operators",
    "title": "Regular Expressions",
    "section": "Examples of operators",
    "text": "Examples of operators\n\nstrings &lt;- c(\"^ab\", \"ab\", \"abc\", \"abd\", \"abe\", \"ab 12\", \"a|b\")\ngrep(\"ab.\", strings, value = TRUE)\ngrep(\"ab[c-e]\", strings, value = TRUE)\ngrep(\"ab[^c]\", strings, value = TRUE)\ngrep(\"^ab\", strings, value = TRUE)\ngrep(\"\\\\^ab\", strings, value = TRUE)\ngrep(\"abc|abd\", strings, value = TRUE)\ngrep(\"a[b|c]\", strings, value = TRUE)\nstr_extract(strings, \"a[b|c]\")"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#examples-of-operators---solution",
    "href": "slides/2024-10-01-regex.html#examples-of-operators---solution",
    "title": "Regular Expressions",
    "section": "Examples of operators - solution",
    "text": "Examples of operators - solution\n\nstrings &lt;- c(\"^ab\", \"ab\", \"abc\", \"abd\", \"abe\", \"ab 12\", \"a|b\")\ngrep(\"ab.\", strings, value = TRUE)\n\n[1] \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\ngrep(\"ab[c-e]\", strings, value = TRUE)\n\n[1] \"abc\" \"abd\" \"abe\"\n\ngrep(\"ab[^c]\", strings, value = TRUE)\n\n[1] \"abd\"   \"abe\"   \"ab 12\"\n\ngrep(\"^ab\", strings, value = TRUE)\n\n[1] \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\ngrep(\"\\\\^ab\", strings, value = TRUE)\n\n[1] \"^ab\"\n\ngrep(\"abc|abd\", strings, value = TRUE)\n\n[1] \"abc\" \"abd\"\n\ngrep(\"a[b|c]\", strings, value = TRUE)\n\n[1] \"^ab\"   \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\" \"a|b\"  \n\nstr_extract(strings, \"a[b|c]\")\n\n[1] \"ab\" \"ab\" \"ab\" \"ab\" \"ab\" \"ab\" \"a|\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#character-classes",
    "href": "slides/2024-10-01-regex.html#character-classes",
    "title": "Regular Expressions",
    "section": "Character classes",
    "text": "Character classes\nCharacter classes allow specifying entire classes of characters, such as numbers, letters, etc. There are two flavors of character classes, one uses [: and :] around a predefined name inside square brackets and the other uses \\ and a special character. They are sometimes interchangeable.\n\n(?i) before the string indicates that the match should be case insensitive.\n[:digit:] or \\d: digits, 0 1 2 3 4 5 6 7 8 9, equivalent to [0-9].\n\n\\D: non-digits, equivalent to [^0-9].\n\n[:lower:]: lower-case letters, equivalent to [a-z].\n\n[:upper:]: upper-case letters, equivalent to [A-Z].\n\n[:alpha:]: alphabetic characters, equivalent to [[:lower:][:upper:]] or [A-z].\n\n[:alnum:]: alphanumeric characters, equivalent to [[:alpha:][:digit:]] or [A-z0-9].\n\n\\w: word characters, equivalent to [[:alnum:]_] or [A-z0-9_] (letter, number, or underscore).\n\n\\W: not word, equivalent to [^A-z0-9_].\n\n[:blank:]: blank characters, i.e. space and tab.\n\n[:space:]: space characters: tab, newline, vertical tab, form feed, carriage return, space.\n\\s: space, .\n\n\\S: not space.\n\n[:punct:]: punctuation characters, ! ” # $ % & ’ ( ) * + , - . / : ; &lt; = &gt; ? @ [  ] ^ _ ` { | } ~.\n[:graph:]: graphical (human readable) characters: equivalent to [[:alnum:][:punct:]].\n[:print:]: printable characters, equivalent to [[:alnum:][:punct:]\\\\s]."
  },
  {
    "objectID": "slides/2024-10-01-regex.html#case-insenstive",
    "href": "slides/2024-10-01-regex.html#case-insenstive",
    "title": "Regular Expressions",
    "section": "Case insenstive",
    "text": "Case insenstive\n\nMatch only the word meter in “The cemetery is 1 meter from the stop sign.” Also match Meter in “The cemetery is 1 Meter from the stop sign.”"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#case-insenstive-1",
    "href": "slides/2024-10-01-regex.html#case-insenstive-1",
    "title": "Regular Expressions",
    "section": "Case insenstive",
    "text": "Case insenstive\n\nMatch only the word meter in “The cemetery is 1 meter from the stop sign.” Also match Meter in “The cemetery is 1 Meter from the stop sign.”\n\n\nstring &lt;- c(\"The cemetery is 1 meter from the stop sign.\", \n            \"The cemetery is 1 Meter from the stop sign.\")\n\nstr_extract(string, \"(?i)\\\\bmeter\\\\b\")\n\n[1] \"meter\" \"Meter\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#proper-times-and-dates",
    "href": "slides/2024-10-01-regex.html#proper-times-and-dates",
    "title": "Regular Expressions",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch dates like 01/15/24 and also like 01.15.24 and like 01-15-24.\n\n\nstring &lt;- c(\"01/15/24\", \"01.15.24\", \"01-15-24\", \"011524\", \n            \"January 15, 2024\")"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#proper-times-and-dates-1",
    "href": "slides/2024-10-01-regex.html#proper-times-and-dates-1",
    "title": "Regular Expressions",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch dates like 01/15/24 and also like 01.15.24 and like 01-15-24.\n\n\nstring &lt;- c(\"01/15/24\", \"01.15.24\", \"01-15-24\", \"01 15 24\", \n            \"011524\", \"January 15, 2024\")\n\nstr_extract(string, \"\\\\d\\\\d.\\\\d\\\\d.\\\\d\\\\d\")\n\n[1] \"01/15/24\" \"01.15.24\" \"01-15-24\" \"01 15 24\" NA         NA        \n\nstr_extract(string, \"\\\\d\\\\d[/.\\\\-]\\\\d\\\\d[/.\\\\-]\\\\d\\\\d\")\n\n[1] \"01/15/24\" \"01.15.24\" \"01-15-24\" NA         NA         NA        \n\nstr_extract(string, \"\\\\d{2}[/.\\\\-]\\\\d{2}[/.\\\\-]\\\\d{2}\")\n\n[1] \"01/15/24\" \"01.15.24\" \"01-15-24\" NA         NA         NA"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#proper-times-and-dates-2",
    "href": "slides/2024-10-01-regex.html#proper-times-and-dates-2",
    "title": "Regular Expressions",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch a time of day such as “9:17 am” or “12:30 pm”. Require that the time be a valid time (not “99:99 pm”). Assume no leading zeros (i.e., “09:17 am”).\n\n\nstring &lt;- c(\"9:17 am\", \"12:30 pm\", \"99:99 pm\", \"09:17 am\")"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#proper-times-and-dates-3",
    "href": "slides/2024-10-01-regex.html#proper-times-and-dates-3",
    "title": "Regular Expressions",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch a time of day such as “9:17 am” or “12:30 pm”. Require that the time be a valid time (not “99:99 pm”). Assume no leading zeros (i.e., “09:17 am”).\n\n^(1[012]|[1-9]):[0-5][0-9] (am|pm)$\n\nstring &lt;- c(\"9:17 am\", \"12:30 pm\", \"99:99 pm\", \"09:17 am\")\n\nstr_extract(string, \"(1[012]|[1-9]):[0-5][0-9] (am|pm)\")\n\n[1] \"9:17 am\"  \"12:30 pm\" NA         \"9:17 am\" \n\nstr_extract(string, \"^(1[012]|[1-9]):[0-5][0-9] (am|pm)$\")\n\n[1] \"9:17 am\"  \"12:30 pm\" NA         NA"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#alternation-operator",
    "href": "slides/2024-10-01-regex.html#alternation-operator",
    "title": "Regular Expressions",
    "section": "Alternation operator",
    "text": "Alternation operator\nThe “or” operator, | has the lowest precedence and parentheses have the highest precedence, which means that parentheses get evaluated before “or”.\n\nWhat is the difference between \\bMary|Jane|Sue\\b and \\b(Mary|Jane|Sue)\\b?\n\n\nstring &lt;- c(\"Mary\", \"Mar\", \"Janet\", \"jane\", \"Susan\", \"Sue\")\n\nstr_extract(string, \"\\\\bMary|Jane|Sue\\\\b\")\nstr_extract(string, \"\\\\b(Mary|Jane|Sue)\\\\b\")"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#alternation-operator-1",
    "href": "slides/2024-10-01-regex.html#alternation-operator-1",
    "title": "Regular Expressions",
    "section": "Alternation operator",
    "text": "Alternation operator\nThe “or” operator, | has the lowest precedence and parentheses have the highest precedence, which means that parentheses get evaluated before “or”.\n\nWhat is the difference between \\bMary|Jane|Sue\\b and \\b(Mary|Jane|Sue)\\b?\n\n\nstring &lt;- c(\"Mary\", \"Mar\", \"Janet\", \"jane\", \"Susan\", \"Sue\")\n\nstr_extract(string, \"\\\\bMary|Jane|Sue\\\\b\")\n\n[1] \"Mary\" NA     \"Jane\" NA     NA     \"Sue\" \n\nstr_extract(string, \"\\\\b(Mary|Jane|Sue)\\\\b\")\n\n[1] \"Mary\" NA     NA     NA     NA     \"Sue\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#lookaround",
    "href": "slides/2024-10-01-regex.html#lookaround",
    "title": "Regular Expressions",
    "section": "Lookaround",
    "text": "Lookaround\nA lookaround specifies a place in the regular expression that will anchor the string you’d like to match.\n\n“x(?=y)” – positive lookahead (matches ‘x’ when it is followed by ‘y’)\n“x(?!y)” – negative lookahead (matches ‘x’ when it is not followed by ‘y’)\n“(?&lt;=y)x” – positive lookbehind (matches ‘x’ when it is preceded by ‘y’)\n“(?&lt;!y)x” – negative lookbehind (matches ‘x’ when it is not preceded by ‘y’)"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#lookaround-1",
    "href": "slides/2024-10-01-regex.html#lookaround-1",
    "title": "Regular Expressions",
    "section": "Lookaround",
    "text": "Lookaround\n\n\nFigure 1: Image credit: Stefan Judis https://www.stefanjudis.com/blog/a-regular-expression-lookahead-lookbehind-cheat-sheet/"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#example---taskmaster",
    "href": "slides/2024-10-01-regex.html#example---taskmaster",
    "title": "Regular Expressions",
    "section": "Example - Taskmaster",
    "text": "Example - Taskmaster\nData scraped from the wiki site for the TV series, Taskmaster.\n\n\nFigure 2: Taskmaster Wiki https://taskmaster.fandom.com/wiki/Series_11"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#scraping-and-wrangling-taskmaster",
    "href": "slides/2024-10-01-regex.html#scraping-and-wrangling-taskmaster",
    "title": "Regular Expressions",
    "section": "Scraping and wrangling Taskmaster",
    "text": "Scraping and wrangling Taskmaster\nGoal: to scrape the Taskmaster wiki into a dataframe including task, description, episode, episode name, air date, contestant, score, and series.1\n\nresults &lt;- read_html(\"https://taskmaster.fandom.com/wiki/Series_11\") |&gt;\n  html_element(\".tmtable\") |&gt; \n  html_table() |&gt;\n  mutate(episode = ifelse(startsWith(Task, \"Episode\"), Task, NA)) |&gt;\n  fill(episode, .direction = \"down\") |&gt;\n  filter(!startsWith(Task, \"Episode\"), \n         !(Task %in% c(\"Total\", \"Grand Total\"))) |&gt;\n  pivot_longer(cols = -c(Task, Description, episode),\n               names_to = \"contestant\",\n               values_to = \"score\") |&gt;\n  mutate(series = 11)\n\nThanks to Ciaran Evans at Wake Forest University for example and code, https://sta279-f23.github.io/"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#scraping-and-wrangling-taskmaster-data---results",
    "href": "slides/2024-10-01-regex.html#scraping-and-wrangling-taskmaster-data---results",
    "title": "Regular Expressions",
    "section": "Scraping and wrangling Taskmaster data - results",
    "text": "Scraping and wrangling Taskmaster data - results\n\nresults |&gt; \n  select(Task, Description, episode, contestant, score, series) |&gt;\n  head(10)\n\n# A tibble: 10 × 6\n   Task  Description                             episode contestant score series\n   &lt;chr&gt; &lt;chr&gt;                                   &lt;chr&gt;   &lt;chr&gt;      &lt;chr&gt;  &lt;dbl&gt;\n 1 1     Prize: Best thing you can carry, but o… Episod… Charlotte… 1         11\n 2 1     Prize: Best thing you can carry, but o… Episod… Jamali Ma… 2         11\n 3 1     Prize: Best thing you can carry, but o… Episod… Lee Mack   4         11\n 4 1     Prize: Best thing you can carry, but o… Episod… Mike Wozn… 5         11\n 5 1     Prize: Best thing you can carry, but o… Episod… Sarah Ken… 3         11\n 6 2     Do the most impressive thing under the… Episod… Charlotte… 2         11\n 7 2     Do the most impressive thing under the… Episod… Jamali Ma… 3[1]      11\n 8 2     Do the most impressive thing under the… Episod… Lee Mack   3         11\n 9 2     Do the most impressive thing under the… Episod… Mike Wozn… 5         11\n10 2     Do the most impressive thing under the… Episod… Sarah Ken… 4         11"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#more-succinct-results",
    "href": "slides/2024-10-01-regex.html#more-succinct-results",
    "title": "Regular Expressions",
    "section": "more succinct results",
    "text": "more succinct results\n\n   Task  Description         episode   contestant score series\n  1     Prize: Best thing…  Episode 1… Charlotte… 1         11\n  1     Prize: Best thing…  Episode 1… Jamali Ma… 2         11\n  1     Prize: Best thing…  Episode 1… Lee Mack   4         11\n  1     Prize: Best thing…  Episode 1… Mike Wozn… 5         11\n  1     Prize: Best thing…  Episode 1… Sarah Ken… 3         11\n  2     Do the most…        Episode 1… Charlotte… 2         11\n  2     Do the most…        Episode 1… Jamali Ma… 3[1]      11\n  2     Do the most…        Episode 1… Lee Mack   3         11\n  2     Do the most…        Episode 1… Mike Wozn… 5         11\n  2     Do the most…        Episode 1… Sarah Ken… 4         11\n\nCurrently, the episode column contains entries like\n\n\"Episode 1: It's not your fault. (18 March 2021)\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#cleaning-the-score-column",
    "href": "slides/2024-10-01-regex.html#cleaning-the-score-column",
    "title": "Regular Expressions",
    "section": "Cleaning the score column",
    "text": "Cleaning the score column\n\nresults |&gt; select(score) |&gt; table()\n\nscore\n   –    ✔    ✘    0    1    2    3 3[1] 3[2]    4 4[2]    5   DQ \n   7    1    1   11   37   42   48    1    3   50    1   55   13 \n\n\nHow should the scores be stored? What is the cleaning task?\n\n\nFigure 3: Taskmaster Wiki https://taskmaster.fandom.com/wiki/Series_11"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#extracting-numeric-information",
    "href": "slides/2024-10-01-regex.html#extracting-numeric-information",
    "title": "Regular Expressions",
    "section": "Extracting numeric information",
    "text": "Extracting numeric information\nSuppose we have the following string:\n\n\"3[1]\"\n\nAnd we want to extract just the number “3”:\n\nstr_extract(\"3[1]\", \"3\")\n\n[1] \"3\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#extracting-numeric-information-1",
    "href": "slides/2024-10-01-regex.html#extracting-numeric-information-1",
    "title": "Regular Expressions",
    "section": "Extracting numeric information",
    "text": "Extracting numeric information\nWhat if we don’t know which number to extract?\n\nstr_extract(\"3[1]\", \"\\\\d\")\n\n[1] \"3\"\n\n\n\nstr_extract(\"4[1]\", \"\\\\d\")\n\n[1] \"4\"\n\n\n\nstr_extract(\"10[1]\", \"\\\\d\")\n\n[1] \"1\"\n\n\n\nstr_extract(\"10[1]\", \"\\\\d+\")\n\n[1] \"10\"\n\n\n\nstr_extract(\"DQ\", \"\\\\d\")\n\n[1] NA"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#str_extract",
    "href": "slides/2024-10-01-regex.html#str_extract",
    "title": "Regular Expressions",
    "section": "str_extract()",
    "text": "str_extract()\nstr_extract() is an R function in the stringr package which can find regular expressions in strings of text.\n\nstr_extract(\"My cat is 3 years old\", \"cat\")\n\n[1] \"cat\"\n\n\n\nstr_extract(\"My cat is 3 years old\", \"3\")\n\n[1] \"3\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#matching-multiple-options",
    "href": "slides/2024-10-01-regex.html#matching-multiple-options",
    "title": "Regular Expressions",
    "section": "Matching multiple options",
    "text": "Matching multiple options\nstr_extract() returns the first match; str_extract_all() allows more than one match.\n\nstr_extract(\"My cat is 3 years old\", \"cat|dog\")\n\n[1] \"cat\"\n\nstr_extract(\"My dog is 10 years old\", \"cat|dog\")\n\n[1] \"dog\"\n\nstr_extract(\"My dog is 10 years old, my cat is 3 years old\", \n            \"cat|dog\")\n\n[1] \"dog\"\n\nstr_extract_all(\"My dog is 10 years old, my cat is 3 years old\", \n                \"cat|dog\")\n\n[[1]]\n[1] \"dog\" \"cat\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#matching-groups-of-characters",
    "href": "slides/2024-10-01-regex.html#matching-groups-of-characters",
    "title": "Regular Expressions",
    "section": "Matching groups of characters",
    "text": "Matching groups of characters\nWhat if I want to extract a number?\n\nstr_extract(\"My cat is 3 years old\", \"\\\\d\")\n\n[1] \"3\"\n\n\nWhat will the result be for the following code?\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#matching-groups-of-characters-1",
    "href": "slides/2024-10-01-regex.html#matching-groups-of-characters-1",
    "title": "Regular Expressions",
    "section": "Matching groups of characters",
    "text": "Matching groups of characters\nWhat if I want to extract a number?\n\nstr_extract(\"My cat is 3 years old\", \"\\\\d\")\n\n[1] \"3\"\n\n\nWhat will the result be for the following code?\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")\n\n[1] \"1\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#matching-groups-of-characters-2",
    "href": "slides/2024-10-01-regex.html#matching-groups-of-characters-2",
    "title": "Regular Expressions",
    "section": "Matching groups of characters",
    "text": "Matching groups of characters\nWhat if I want to extract a number?\n\nstr_extract(\"My cat is 3 years old\", \"\\\\d\")\n\n[1] \"3\"\n\n\nWhat will the result be for the following code?\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")\n\n[1] \"1\"\n\n\nThe + symbol in a regular expression means “repeated one or more times”\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d+\")\n\n[1] \"10\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#extracting-from-multiple-strings",
    "href": "slides/2024-10-01-regex.html#extracting-from-multiple-strings",
    "title": "Regular Expressions",
    "section": "Extracting from multiple strings",
    "text": "Extracting from multiple strings\n\nstrings &lt;- c(\"My cat is 3 years old\", \"My dog is 10 years old\")\nstr_extract(strings, \"\\\\d+\")\n\n[1] \"3\"  \"10\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#extracting-from-multiple-strings-1",
    "href": "slides/2024-10-01-regex.html#extracting-from-multiple-strings-1",
    "title": "Regular Expressions",
    "section": "Extracting from multiple strings",
    "text": "Extracting from multiple strings\nWhat if we have multiple instances across multiple strings? We need to be careful working with lists (instead of vectors).\n\nstrings &lt;- c(\"My cat is 3 years old\", \"My dog is 10 years old\")\nstr_extract(strings, \"\\\\w+\")\n\n[1] \"My\" \"My\"\n\nstr_extract_all(strings, \"\\\\w+\")\n\n[[1]]\n[1] \"My\"    \"cat\"   \"is\"    \"3\"     \"years\" \"old\"  \n\n[[2]]\n[1] \"My\"    \"dog\"   \"is\"    \"10\"    \"years\" \"old\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#extracting-episode-information",
    "href": "slides/2024-10-01-regex.html#extracting-episode-information",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nCurrently, the episode column contains entries like:\n\n\"Episode 2: The pie whisperer. (4 August 2015)\"\n\nHow would I extract just the episode number?"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#extracting-episode-information-1",
    "href": "slides/2024-10-01-regex.html#extracting-episode-information-1",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nCurrently, the episode column contains entries like:\n\n\"Episode 2: The pie whisperer. (4 August 2015)\"\n\nHow would I extract just the episode number?\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\d+\")\n\n[1] \"2\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#extracting-episode-information-2",
    "href": "slides/2024-10-01-regex.html#extracting-episode-information-2",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nCurrently, the episode column contains entries like:\n\n\"Episode 2: The pie whisperer. (4 August 2015)\"\n\nHow would I extract the episode name?\nGoal: find a pattern to match: anything that starts with a :, ends with a .\nLet’s break down that task into pieces."
  },
  {
    "objectID": "slides/2024-10-01-regex.html#extracting-episode-information-3",
    "href": "slides/2024-10-01-regex.html#extracting-episode-information-3",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nHow can we find the period at the end of the sentence? What does each of these lines of code return?\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".\")\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".+\")\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\.\")"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#extracting-episode-information---solution",
    "href": "slides/2024-10-01-regex.html#extracting-episode-information---solution",
    "title": "Regular Expressions",
    "section": "Extracting episode information - solution",
    "text": "Extracting episode information - solution\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".\")\n\n[1] \"E\"\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".+\")\n\n[1] \"Episode 2: The pie whisperer. (4 August 2015)\"\n\n\nWe use an escape character when we actually want to choose a period:\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\.\")\n\n[1] \".\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#extracting-episode-information-4",
    "href": "slides/2024-10-01-regex.html#extracting-episode-information-4",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nGoal: find a pattern to match: anything that starts with a :, ends with a .\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\",\n            \":.+\\\\.\")\n\n[1] \": The pie whisperer.\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#lookaround-again",
    "href": "slides/2024-10-01-regex.html#lookaround-again",
    "title": "Regular Expressions",
    "section": "Lookaround (again)",
    "text": "Lookaround (again)\n\n\nFigure 4: Image credit: Stefan Judis https://www.stefanjudis.com/blog/a-regular-expression-lookahead-lookbehind-cheat-sheet/"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#lookbehinds",
    "href": "slides/2024-10-01-regex.html#lookbehinds",
    "title": "Regular Expressions",
    "section": "Lookbehinds",
    "text": "Lookbehinds\n(?&lt;=) is a positive lookbehind. It is used to identify expressions which are preceded by a particular expression.\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=: ).+\")\n\n[1] \"The pie whisperer. (4 August 2015)\"\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=\\\\. ).+\")\n\n[1] \"(4 August 2015)\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#lookaheads",
    "href": "slides/2024-10-01-regex.html#lookaheads",
    "title": "Regular Expressions",
    "section": "Lookaheads",
    "text": "Lookaheads\n(?=) is a positive lookahead. It is used to identify expressions which are followed by a particular expression.\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \".+(?=\\\\.)\")\n\n[1] \"Episode 2: The pie whisperer\"\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \".+(?=:)\")\n\n[1] \"Episode 2\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#extracting-episode-information-5",
    "href": "slides/2024-10-01-regex.html#extracting-episode-information-5",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nGetting everything between the : and the .\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=: ).+(?=\\\\.)\")\n\n[1] \"The pie whisperer\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#extracting-air-date",
    "href": "slides/2024-10-01-regex.html#extracting-air-date",
    "title": "Regular Expressions",
    "section": "Extracting air date",
    "text": "Extracting air date\nI want to extract just the air date. What pattern do I want to match?\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", ...)"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#extracting-air-date-1",
    "href": "slides/2024-10-01-regex.html#extracting-air-date-1",
    "title": "Regular Expressions",
    "section": "Extracting air date",
    "text": "Extracting air date\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=\\\\().+(?=\\\\))\")\n\n[1] \"4 August 2015\""
  },
  {
    "objectID": "slides/2024-10-01-regex.html#wrangling-the-episode-info",
    "href": "slides/2024-10-01-regex.html#wrangling-the-episode-info",
    "title": "Regular Expressions",
    "section": "Wrangling the episode info",
    "text": "Wrangling the episode info\nCurrently:\n\n\n# A tibble: 270 × 1\n   episode                                        \n   &lt;chr&gt;                                          \n 1 Episode 1: It's not your fault. (18 March 2021)\n 2 Episode 1: It's not your fault. (18 March 2021)\n 3 Episode 1: It's not your fault. (18 March 2021)\n 4 Episode 1: It's not your fault. (18 March 2021)\n 5 Episode 1: It's not your fault. (18 March 2021)\n 6 Episode 1: It's not your fault. (18 March 2021)\n 7 Episode 1: It's not your fault. (18 March 2021)\n 8 Episode 1: It's not your fault. (18 March 2021)\n 9 Episode 1: It's not your fault. (18 March 2021)\n10 Episode 1: It's not your fault. (18 March 2021)\n# ℹ 260 more rows"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#wrangling-the-episode-info-1",
    "href": "slides/2024-10-01-regex.html#wrangling-the-episode-info-1",
    "title": "Regular Expressions",
    "section": "Wrangling the episode info",
    "text": "Wrangling the episode info\nOne option:\n\nresults |&gt;\n  select(episode) |&gt;\n  mutate(episode_name = str_extract(episode, \"(?&lt;=: ).+(?=\\\\.)\"),\n         air_date = str_extract(episode, \"(?&lt;=\\\\().+(?=\\\\))\"),\n         episode = str_extract(episode, \"\\\\d+\"))\n\n# A tibble: 270 × 3\n   episode episode_name        air_date     \n   &lt;chr&gt;   &lt;chr&gt;               &lt;chr&gt;        \n 1 1       It's not your fault 18 March 2021\n 2 1       It's not your fault 18 March 2021\n 3 1       It's not your fault 18 March 2021\n 4 1       It's not your fault 18 March 2021\n 5 1       It's not your fault 18 March 2021\n 6 1       It's not your fault 18 March 2021\n 7 1       It's not your fault 18 March 2021\n 8 1       It's not your fault 18 March 2021\n 9 1       It's not your fault 18 March 2021\n10 1       It's not your fault 18 March 2021\n# ℹ 260 more rows"
  },
  {
    "objectID": "slides/2024-10-01-regex.html#wrangling-the-episode-info-2",
    "href": "slides/2024-10-01-regex.html#wrangling-the-episode-info-2",
    "title": "Regular Expressions",
    "section": "Wrangling the episode info",
    "text": "Wrangling the episode info\nAnother option:\n\nresults |&gt;\n  separate_wider_regex(episode, \n                       patterns = c(\".+ \", \n                                    episode = \"\\\\d+\", \n                                    \": \", \n                                    episode_name = \".+\", \n                                    \"\\\\. \\\\(\", \n                                    air_date = \".+\", \n                                    \"\\\\)\"))\n\n\n\n# A tibble: 270 × 3\n   episode episode_name        air_date     \n   &lt;chr&gt;   &lt;chr&gt;               &lt;chr&gt;        \n 1 1       It's not your fault 18 March 2021\n 2 1       It's not your fault 18 March 2021\n 3 1       It's not your fault 18 March 2021\n 4 1       It's not your fault 18 March 2021\n 5 1       It's not your fault 18 March 2021\n 6 1       It's not your fault 18 March 2021\n 7 1       It's not your fault 18 March 2021\n 8 1       It's not your fault 18 March 2021\n 9 1       It's not your fault 18 March 2021\n10 1       It's not your fault 18 March 2021\n# ℹ 260 more rows"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#regular-expressions",
    "href": "slides/2024-09-30-regex.html#regular-expressions",
    "title": "Regular Expressions",
    "section": "Regular Expressions",
    "text": "Regular Expressions\n\nA regular expression … is a sequence of characters that define a search pattern. Usually such patterns are used by string searching algorithms for “find” or “find and replace” operations on strings, or for input validation. It is a technique developed in theoretical computer science and formal language theory."
  },
  {
    "objectID": "slides/2024-09-30-regex.html#escape-sequences",
    "href": "slides/2024-09-30-regex.html#escape-sequences",
    "title": "Regular Expressions",
    "section": "Escape sequences",
    "text": "Escape sequences\nJust to scratch the surface, here are a few special characters that cannot be directly coded. Therefore, they are escaped with a backslash, \\.\n\n\\': single quote.\n\n\\\": double quote.\n\n\\n: new line.\n\n\\r: carriage return.\n\n\\t: tab character."
  },
  {
    "objectID": "slides/2024-09-30-regex.html#quantifiers",
    "href": "slides/2024-09-30-regex.html#quantifiers",
    "title": "Regular Expressions",
    "section": "Quantifiers",
    "text": "Quantifiers\nQuantifiers specify how many repetitions of the pattern.\n\n*: matches at least 0 times.\n\n+: matches at least 1 times.\n\n?: matches at most 1 times.\n\n{n}: matches exactly n times.\n\n{n,}: matches at least n times.\n\n{n,m}: matches between n and m times."
  },
  {
    "objectID": "slides/2024-09-30-regex.html#examples-of-quantifiers",
    "href": "slides/2024-09-30-regex.html#examples-of-quantifiers",
    "title": "Regular Expressions",
    "section": "Examples of quantifiers",
    "text": "Examples of quantifiers\n\nstrings &lt;- c(\"a\", \"ab\", \"acb\", \"accb\", \"acccb\", \"accccb\")\nstr_subset(strings, \"ac*b\") \nstr_subset(strings, \"ac+b\") \nstr_subset(strings, \"ac*b\", negate = TRUE)\nstr_subset(strings, \"ac?b\") \nstr_subset(strings, \"ac{2}b\") \nstr_subset(strings, \"ac{2,}b\") \nstr_subset(strings, \"ac{2,3}b\")"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#examples-of-quantifiers---solution",
    "href": "slides/2024-09-30-regex.html#examples-of-quantifiers---solution",
    "title": "Regular Expressions",
    "section": "Examples of quantifiers - solution",
    "text": "Examples of quantifiers - solution\n\nstrings &lt;- c(\"a\", \"ab\", \"acb\", \"accb\", \"acccb\", \"accccb\")\nstr_subset(strings, \"ac*b\") \n\n[1] \"ab\"     \"acb\"    \"accb\"   \"acccb\"  \"accccb\"\n\nstr_subset(strings, \"ac+b\") \n\n[1] \"acb\"    \"accb\"   \"acccb\"  \"accccb\"\n\nstr_subset(strings, \"ac*b\", negate = TRUE)\n\n[1] \"a\"\n\nstr_subset(strings, \"ac?b\") \n\n[1] \"ab\"  \"acb\"\n\nstr_subset(strings, \"ac{2}b\") \n\n[1] \"accb\"\n\nstr_subset(strings, \"ac{2,}b\") \n\n[1] \"accb\"   \"acccb\"  \"accccb\"\n\nstr_subset(strings, \"ac{2,3}b\")\n\n[1] \"accb\"  \"acccb\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#position-of-pattern-within-the-string",
    "href": "slides/2024-09-30-regex.html#position-of-pattern-within-the-string",
    "title": "Regular Expressions",
    "section": "Position of pattern within the string",
    "text": "Position of pattern within the string\n\n^: matches the start of the string.\n\n$: matches the end of the string.\n\n\\b: matches the boundary of a word. Don’t confuse it with ^ $ which marks the edge of a string.1\n\n\\B: matches the empty string provided it is not at an edge of a word.\n\nA word boundary is a position between a word character (typically [A-Za-z0-9_]) and a non-word character (anything that is not a word character, such as whitespace, punctuation, etc.)."
  },
  {
    "objectID": "slides/2024-09-30-regex.html#examples-of-positions",
    "href": "slides/2024-09-30-regex.html#examples-of-positions",
    "title": "Regular Expressions",
    "section": "Examples of positions",
    "text": "Examples of positions\n\nstrings &lt;- c(\"abcd\", \"cdab\", \"cabd\", \"c abd\")\nstr_subset(strings, \"ab\")\nstr_subset(strings, \"^ab\")\nstr_subset(strings, \"ab$\")\nstr_subset(strings, \"\\\\bab\")"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#examples-of-positions---solution",
    "href": "slides/2024-09-30-regex.html#examples-of-positions---solution",
    "title": "Regular Expressions",
    "section": "Examples of positions - solution",
    "text": "Examples of positions - solution\n\nstrings &lt;- c(\"abcd\", \"cdab\", \"cabd\", \"c abd\")\nstr_subset(strings, \"ab\")\n\n[1] \"abcd\"  \"cdab\"  \"cabd\"  \"c abd\"\n\nstr_subset(strings, \"^ab\")\n\n[1] \"abcd\"\n\nstr_subset(strings, \"ab$\")\n\n[1] \"cdab\"\n\nstr_subset(strings, \"\\\\bab\")\n\n[1] \"abcd\"  \"c abd\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#operators",
    "href": "slides/2024-09-30-regex.html#operators",
    "title": "Regular Expressions",
    "section": "Operators",
    "text": "Operators\n\n.: matches any single character,\n[...]: a character list, matches any one of the characters inside the square brackets. A - inside the brackets specifies a range of characters.\n\n[^...]: an inverted character list, similar to [...], but matches any characters except those inside the square brackets.\n\n\\: suppress the special meaning of metacharacters in regular expression, i.e. $ * + . ? [ ] ^ { } | ( ) \\. Since \\ itself needs to be escaped in R, we need to escape metacharacters with double backslash like \\\\$.\n\n|: an “or” operator, matches patterns on either side of the |.\n\n(...): grouping in regular expressions. This allows you to retrieve the bits that matched various parts of your regular expression so you can alter them or use them for building up a new string.\nnote: both (ab|cde) or ab|cde match either the string ab or the string cde. However, ab | cde matches ab cde (and does not match either of ab or cde) because the “or” is now whitespace on either side of |."
  },
  {
    "objectID": "slides/2024-09-30-regex.html#examples-of-operators",
    "href": "slides/2024-09-30-regex.html#examples-of-operators",
    "title": "Regular Expressions",
    "section": "Examples of operators",
    "text": "Examples of operators\n\nstrings &lt;- c(\"^ab\", \"ab\", \"abc\", \"abd\", \"abe\", \"ab 12\", \"a|b\")\nstr_subset(strings, \"ab.\")\nstr_subset(strings, \"ab[c-e]\")\nstr_subset(strings, \"ab[^c]\")\nstr_subset(strings, \"^ab\")\nstr_subset(strings, \"\\\\^ab\")\nstr_subset(strings, \"abc|abd\")\nstr_subset(strings, \"a[b|c]\")\nstr_extract(strings, \"a[b|c]\")"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#examples-of-operators---solution",
    "href": "slides/2024-09-30-regex.html#examples-of-operators---solution",
    "title": "Regular Expressions",
    "section": "Examples of operators - solution",
    "text": "Examples of operators - solution\n\nstrings &lt;- c(\"^ab\", \"ab\", \"abc\", \"abd\", \"abe\", \"ab 12\", \"a|b\")\nstr_subset(strings, \"ab.\")\n\n[1] \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"ab[c-e]\")\n\n[1] \"abc\" \"abd\" \"abe\"\n\nstr_subset(strings, \"ab[^c]\")\n\n[1] \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"^ab\")\n\n[1] \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"\\\\^ab\")\n\n[1] \"^ab\"\n\nstr_subset(strings, \"abc|abd\")\n\n[1] \"abc\" \"abd\"\n\nstr_subset(strings, \"a[b|c]\")\n\n[1] \"^ab\"   \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\" \"a|b\"  \n\nstr_extract(strings, \"a[b|c]\")\n\n[1] \"ab\" \"ab\" \"ab\" \"ab\" \"ab\" \"ab\" \"a|\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#character-classes",
    "href": "slides/2024-09-30-regex.html#character-classes",
    "title": "Regular Expressions",
    "section": "Character classes",
    "text": "Character classes\nCharacter classes allow specifying entire classes of characters, such as numbers, letters, etc. There are two flavors of character classes, one uses [: and :] around a predefined name inside square brackets and the other uses \\ and a special character. They are sometimes interchangeable.\n\n(?i) before the string indicates that the match should be case insensitive (will make the entire string case insensitive).\n[:digit:] or \\d: digits, 0 1 2 3 4 5 6 7 8 9, equivalent to [0-9].\n\n\\D: non-digits, equivalent to [^0-9].\n\n[:lower:]: lower-case letters, equivalent to [a-z].\n\n[:upper:]: upper-case letters, equivalent to [A-Z].\n\n[:alpha:]: alphabetic characters, equivalent to [[:lower:][:upper:]] or [A-z].\n\n[:alnum:]: alphanumeric characters, equivalent to [[:alpha:][:digit:]] or [A-z0-9].\n\n\\w: word characters, equivalent to [[:alnum:]_] or [A-z0-9_] (letter, number, or underscore).\n\n\\W: not word, equivalent to [^A-z0-9_].\n\n[:blank:]: blank characters, i.e. space and tab.\n\n[:space:]: space characters: tab, new line, vertical tab, form feed, carriage return, space.\n\\s: whitespace.\n\n\\S: not whitespace.\n\n[:punct:]: punctuation characters, ! ” # $ % & ’ ( ) * + , - . / : ; &lt; = &gt; ? @ [  ] ^ _ ` { | } ~.\n[:graph:]: graphical (human readable) characters: equivalent to [[:alnum:][:punct:]].\n[:print:]: printable characters, equivalent to [[:alnum:][:punct:]\\\\s]."
  },
  {
    "objectID": "slides/2024-09-30-regex.html#case-insenstive",
    "href": "slides/2024-09-30-regex.html#case-insenstive",
    "title": "Regular Expressions",
    "section": "Case insenstive",
    "text": "Case insenstive\n\nMatch only the word meter in “The cemetery is 1 meter from the stop sign.”\nAlso match Meter in “The cemetery is 1 Meter from the stop sign.”"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#case-insenstive-1",
    "href": "slides/2024-09-30-regex.html#case-insenstive-1",
    "title": "Regular Expressions",
    "section": "Case insenstive",
    "text": "Case insenstive\n\nMatch only the word meter in “The cemetery is 1 meter from the stop sign.”\nAlso match Meter and meTer …\n\n\nstring &lt;- c(\"The cemetery is 1 meter from the stop sign.\", \n            \"The cemetery is 1 Meter from the stop sign.\",\n            \"The cemetery is 1 meTer from the stop sign.\")\n\nstr_extract(string, \"(?i)\\\\bmeter\\\\b\")\n\n[1] \"meter\" \"Meter\" \"meTer\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#proper-times-and-dates",
    "href": "slides/2024-09-30-regex.html#proper-times-and-dates",
    "title": "Regular Expressions",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch dates like 01/15/24 and also like 01.15.24 and like 01-15-24.\n\n\nstring &lt;- c(\"01/15/24\", \"01.15.24\", \"01-15-24\", \"011524\", \n            \"January 15, 2024\")"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#proper-times-and-dates-1",
    "href": "slides/2024-09-30-regex.html#proper-times-and-dates-1",
    "title": "Regular Expressions",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch dates like 01/15/24 and also like 01.15.24 and like 01-15-24.\n\n\nstring &lt;- c(\"01/15/24\", \"01.15.24\", \"01-15-24\", \"01 15 24\", \n            \"011524\", \"January 15, 2024\")\n\nstr_extract(string, \"\\\\d\\\\d.\\\\d\\\\d.\\\\d\\\\d\")\n\n[1] \"01/15/24\" \"01.15.24\" \"01-15-24\" \"01 15 24\" NA         NA        \n\nstr_extract(string, \"\\\\d\\\\d[/.\\\\-]\\\\d\\\\d[/.\\\\-]\\\\d\\\\d\")\n\n[1] \"01/15/24\" \"01.15.24\" \"01-15-24\" NA         NA         NA        \n\nstr_extract(string, \"\\\\d{2}[/.\\\\-]\\\\d{2}[/.\\\\-]\\\\d{2}\")\n\n[1] \"01/15/24\" \"01.15.24\" \"01-15-24\" NA         NA         NA"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#proper-times-and-dates-2",
    "href": "slides/2024-09-30-regex.html#proper-times-and-dates-2",
    "title": "Regular Expressions",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch a time of day such as “9:17 am” or “12:30 pm”. Require that the time be a valid time (not “99:99 pm”). Assume no leading zeros (i.e., “09:17 am”).\n\n\nstring &lt;- c(\"9:17 am\", \"12:30 pm\", \"99:99 pm\", \"09:17 am\")"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#proper-times-and-dates-3",
    "href": "slides/2024-09-30-regex.html#proper-times-and-dates-3",
    "title": "Regular Expressions",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch a time of day such as “9:17 am” or “12:30 pm”. Require that the time be a valid time (not “99:99 pm”). Assume no leading zeros (i.e., “09:17 am”).\n\n^(1[012]|[1-9]):[0-5][0-9] (am|pm)$\n\nstring &lt;- c(\"9:17 am\", \"12:30 pm\", \"99:99 pm\", \"09:17 am\")\n\nstr_extract(string, \"(1[012]|[1-9]):[0-5][0-9] (am|pm)\")\n\n[1] \"9:17 am\"  \"12:30 pm\" NA         \"9:17 am\" \n\nstr_extract(string, \"^(1[012]|[1-9]):[0-5][0-9] (am|pm)$\")\n\n[1] \"9:17 am\"  \"12:30 pm\" NA         NA"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#alternation-operator",
    "href": "slides/2024-09-30-regex.html#alternation-operator",
    "title": "Regular Expressions",
    "section": "Alternation operator",
    "text": "Alternation operator\nThe “or” operator, | has the lowest precedence and parentheses have the highest precedence, which means that parentheses get evaluated before “or”.\n\nWhat is the difference between \\bMary|Jane|Sue\\b and \\b(Mary|Jane|Sue)\\b?\n\n\nstring &lt;- c(\"Mary\", \"Mar\", \"Janet\", \"jane\", \"Susan\", \"Sue\")\n\nstr_extract(string, \"\\\\bMary|Jane|Sue\\\\b\")\nstr_extract(string, \"\\\\b(Mary|Jane|Sue)\\\\b\")"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#alternation-operator-1",
    "href": "slides/2024-09-30-regex.html#alternation-operator-1",
    "title": "Regular Expressions",
    "section": "Alternation operator",
    "text": "Alternation operator\nThe “or” operator, | has the lowest precedence and parentheses have the highest precedence, which means that parentheses get evaluated before “or”.\n\nWhat is the difference between \\bMary|Jane|Sue\\b and \\b(Mary|Jane|Sue)\\b?\n\n\nstring &lt;- c(\"Mary\", \"Mar\", \"Janet\", \"jane\", \"Susan\", \"Sue\")\n\nstr_extract(string, \"\\\\bMary|Jane|Sue\\\\b\")\n\n[1] \"Mary\" NA     \"Jane\" NA     NA     \"Sue\" \n\nstr_extract(string, \"\\\\b(Mary|Jane|Sue)\\\\b\")\n\n[1] \"Mary\" NA     NA     NA     NA     \"Sue\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#lookaround",
    "href": "slides/2024-09-30-regex.html#lookaround",
    "title": "Regular Expressions",
    "section": "Lookaround",
    "text": "Lookaround\nA lookaround specifies a place in the regular expression that will anchor the string you’d like to match.\n\n“x(?=y)” – positive lookahead (matches ‘x’ when it is followed by ‘y’)\n“x(?!y)” – negative lookahead (matches ‘x’ when it is not followed by ‘y’)\n“(?&lt;=y)x” – positive lookbehind (matches ‘x’ when it is preceded by ‘y’)\n“(?&lt;!y)x” – negative lookbehind (matches ‘x’ when it is not preceded by ‘y’)"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#lookaround-1",
    "href": "slides/2024-09-30-regex.html#lookaround-1",
    "title": "Regular Expressions",
    "section": "Lookaround",
    "text": "Lookaround\n\n\nFigure 1: Image credit: Stefan Judis https://www.stefanjudis.com/blog/a-regular-expression-lookahead-lookbehind-cheat-sheet/"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#example---taskmaster",
    "href": "slides/2024-09-30-regex.html#example---taskmaster",
    "title": "Regular Expressions",
    "section": "Example - Taskmaster",
    "text": "Example - Taskmaster\nData scraped from the wiki site for the TV series, Taskmaster.\n\n\nFigure 2: Taskmaster Wiki https://taskmaster.fandom.com/wiki/Series_11"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#scraping-and-wrangling-taskmaster",
    "href": "slides/2024-09-30-regex.html#scraping-and-wrangling-taskmaster",
    "title": "Regular Expressions",
    "section": "Scraping and wrangling Taskmaster",
    "text": "Scraping and wrangling Taskmaster\nGoal: to scrape the Taskmaster wiki into a data frame including task, description, episode, episode name, air date, contestant, score, and series.1\n\nresults &lt;- read_html(\"https://taskmaster.fandom.com/wiki/Series_11\") |&gt;\n  html_element(\".tmtable\") |&gt; \n  html_table() |&gt;\n  mutate(episode = ifelse(startsWith(Task, \"Episode\"), Task, NA)) |&gt;\n  fill(episode, .direction = \"down\") |&gt;\n  filter(!startsWith(Task, \"Episode\"), \n         !(Task %in% c(\"Total\", \"Grand Total\"))) |&gt;\n  pivot_longer(cols = -c(Task, Description, episode),\n               names_to = \"contestant\",\n               values_to = \"score\") |&gt;\n  mutate(series = 11)\n\nThanks to Ciaran Evans at Wake Forest University for example and code, https://sta279-f23.github.io/"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#scraping-and-wrangling-taskmaster-data---results",
    "href": "slides/2024-09-30-regex.html#scraping-and-wrangling-taskmaster-data---results",
    "title": "Regular Expressions",
    "section": "Scraping and wrangling Taskmaster data - results",
    "text": "Scraping and wrangling Taskmaster data - results\n\nresults |&gt; \n  select(Task, Description, episode, contestant, score, series) |&gt;\n  head(10)\n\n# A tibble: 10 × 6\n   Task  Description                             episode contestant score series\n   &lt;chr&gt; &lt;chr&gt;                                   &lt;chr&gt;   &lt;chr&gt;      &lt;chr&gt;  &lt;dbl&gt;\n 1 1     Prize: Best thing you can carry, but o… Episod… Charlotte… 1         11\n 2 1     Prize: Best thing you can carry, but o… Episod… Jamali Ma… 2         11\n 3 1     Prize: Best thing you can carry, but o… Episod… Lee Mack   4         11\n 4 1     Prize: Best thing you can carry, but o… Episod… Mike Wozn… 5         11\n 5 1     Prize: Best thing you can carry, but o… Episod… Sarah Ken… 3         11\n 6 2     Do the most impressive thing under the… Episod… Charlotte… 2         11\n 7 2     Do the most impressive thing under the… Episod… Jamali Ma… 3[1]      11\n 8 2     Do the most impressive thing under the… Episod… Lee Mack   3         11\n 9 2     Do the most impressive thing under the… Episod… Mike Wozn… 5         11\n10 2     Do the most impressive thing under the… Episod… Sarah Ken… 4         11"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#more-succinct-results",
    "href": "slides/2024-09-30-regex.html#more-succinct-results",
    "title": "Regular Expressions",
    "section": "more succinct results",
    "text": "more succinct results\n\n   Task  Description         episode   contestant score series\n  1     Prize: Best thing…  Episode 1… Charlotte… 1         11\n  1     Prize: Best thing…  Episode 1… Jamali Ma… 2         11\n  1     Prize: Best thing…  Episode 1… Lee Mack   4         11\n  1     Prize: Best thing…  Episode 1… Mike Wozn… 5         11\n  1     Prize: Best thing…  Episode 1… Sarah Ken… 3         11\n  2     Do the most…        Episode 1… Charlotte… 2         11\n  2     Do the most…        Episode 1… Jamali Ma… 3[1]      11\n  2     Do the most…        Episode 1… Lee Mack   3         11\n  2     Do the most…        Episode 1… Mike Wozn… 5         11\n  2     Do the most…        Episode 1… Sarah Ken… 4         11\n\nCurrently, the episode column contains entries like\n\n\"Episode 1: It's not your fault. (18 March 2021)\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#cleaning-the-score-column",
    "href": "slides/2024-09-30-regex.html#cleaning-the-score-column",
    "title": "Regular Expressions",
    "section": "Cleaning the score column",
    "text": "Cleaning the score column\n\nresults |&gt; select(score) |&gt; table()\n\nscore\n   –    ✔    ✘    0    1    2    3 3[1] 3[2] 3[3]    4 4[2] 4[3]    5   DQ \n   7    1    1   11   37   42   47    1    3    1   49    1    1   55   13 \n\n\nHow should the scores be stored? What is the cleaning task?\n\n\nFigure 3: Taskmaster Wiki https://taskmaster.fandom.com/wiki/Series_11"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-numeric-information",
    "href": "slides/2024-09-30-regex.html#extracting-numeric-information",
    "title": "Regular Expressions",
    "section": "Extracting numeric information",
    "text": "Extracting numeric information\nSuppose we have the following string:\n\n\"3[1]\"\n\nAnd we want to extract just the number “3”:\n\nstr_extract(\"3[1]\", \"3\")\n\n[1] \"3\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-numeric-information-1",
    "href": "slides/2024-09-30-regex.html#extracting-numeric-information-1",
    "title": "Regular Expressions",
    "section": "Extracting numeric information",
    "text": "Extracting numeric information\nWhat if we don’t know which number to extract?\n\nstr_extract(\"3[1]\", \"\\\\d\")\n\n[1] \"3\"\n\n\n\nstr_extract(\"4[1]\", \"\\\\d\")\n\n[1] \"4\"\n\n\n\nstr_extract(\"10[1]\", \"\\\\d\")\n\n[1] \"1\"\n\n\n\nstr_extract(\"10[1]\", \"\\\\d+\")\n\n[1] \"10\"\n\n\n\nstr_extract(\"DQ\", \"\\\\d\")\n\n[1] NA"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#str_extract",
    "href": "slides/2024-09-30-regex.html#str_extract",
    "title": "Regular Expressions",
    "section": "str_extract()",
    "text": "str_extract()\nstr_extract() is an R function in the stringr package which can find regular expressions in strings of text.\n\nstr_extract(\"My cat is 3 years old\", \"cat\")\n\n[1] \"cat\"\n\n\n\nstr_extract(\"My cat is 3 years old\", \"3\")\n\n[1] \"3\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#matching-multiple-options",
    "href": "slides/2024-09-30-regex.html#matching-multiple-options",
    "title": "Regular Expressions",
    "section": "Matching multiple options",
    "text": "Matching multiple options\nstr_extract() returns the first match; str_extract_all() allows more than one match.\n\nstr_extract(\"My cat is 3 years old\", \"cat|dog\")\n\n[1] \"cat\"\n\nstr_extract(\"My dog is 10 years old\", \"cat|dog\")\n\n[1] \"dog\"\n\nstr_extract(\"My dog is 10 years old, my cat is 3 years old\", \n            \"cat|dog\")\n\n[1] \"dog\"\n\nstr_extract_all(\"My dog is 10 years old, my cat is 3 years old\", \n                \"cat|dog\")\n\n[[1]]\n[1] \"dog\" \"cat\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#matching-groups-of-characters",
    "href": "slides/2024-09-30-regex.html#matching-groups-of-characters",
    "title": "Regular Expressions",
    "section": "Matching groups of characters",
    "text": "Matching groups of characters\nWhat if I want to extract a number?\n\nstr_extract(\"My cat is 3 years old\", \"\\\\d\")\n\n[1] \"3\"\n\n\nWhat will the result be for the following code?\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#matching-groups-of-characters-1",
    "href": "slides/2024-09-30-regex.html#matching-groups-of-characters-1",
    "title": "Regular Expressions",
    "section": "Matching groups of characters",
    "text": "Matching groups of characters\nWhat if I want to extract a number?\n\nstr_extract(\"My cat is 3 years old\", \"\\\\d\")\n\n[1] \"3\"\n\n\nWhat will the result be for the following code?\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")\n\n[1] \"1\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#matching-groups-of-characters-2",
    "href": "slides/2024-09-30-regex.html#matching-groups-of-characters-2",
    "title": "Regular Expressions",
    "section": "Matching groups of characters",
    "text": "Matching groups of characters\nWhat if I want to extract a number?\n\nstr_extract(\"My cat is 3 years old\", \"\\\\d\")\n\n[1] \"3\"\n\n\nWhat will the result be for the following code?\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")\n\n[1] \"1\"\n\n\nThe + symbol in a regular expression means “repeated one or more times”\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d+\")\n\n[1] \"10\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-from-multiple-strings",
    "href": "slides/2024-09-30-regex.html#extracting-from-multiple-strings",
    "title": "Regular Expressions",
    "section": "Extracting from multiple strings",
    "text": "Extracting from multiple strings\n\nstrings &lt;- c(\"My cat is 3 years old\", \"My dog is 10 years old\")\nstr_extract(strings, \"\\\\d+\")\n\n[1] \"3\"  \"10\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-from-multiple-strings-1",
    "href": "slides/2024-09-30-regex.html#extracting-from-multiple-strings-1",
    "title": "Regular Expressions",
    "section": "Extracting from multiple strings",
    "text": "Extracting from multiple strings\nWhat if we have multiple instances across multiple strings? We need to be careful working with lists (instead of vectors).\n\nstrings &lt;- c(\"My cat is 3 years old\", \"My dog is 10 years old\")\nstr_extract(strings, \"\\\\w\")\nstr_extract_all(strings, \"\\\\w\")\nstr_extract(strings, \"\\\\w+\")\nstr_extract_all(strings, \"\\\\w+\")"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-episode-information",
    "href": "slides/2024-09-30-regex.html#extracting-episode-information",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nCurrently, the episode column contains entries like:\n\n\"Episode 2: The pie whisperer. (4 August 2015)\"\n\nHow would I extract just the episode number?"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-episode-information-1",
    "href": "slides/2024-09-30-regex.html#extracting-episode-information-1",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nCurrently, the episode column contains entries like:\n\n\"Episode 2: The pie whisperer. (4 August 2015)\"\n\nHow would I extract just the episode number?\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\d+\")\n\n[1] \"2\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-episode-information-2",
    "href": "slides/2024-09-30-regex.html#extracting-episode-information-2",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nCurrently, the episode column contains entries like:\n\n\"Episode 2: The pie whisperer. (4 August 2015)\"\n\nHow would I extract the episode name?\nGoal: find a pattern to match: anything that starts with a :, ends with a .\nLet’s break down that task into pieces."
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-episode-information-3",
    "href": "slides/2024-09-30-regex.html#extracting-episode-information-3",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nHow can we find the period at the end of the sentence? What does each of these lines of code return?\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".\")\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".+\")\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\.\")"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-episode-information---solution",
    "href": "slides/2024-09-30-regex.html#extracting-episode-information---solution",
    "title": "Regular Expressions",
    "section": "Extracting episode information - solution",
    "text": "Extracting episode information - solution\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".\")\n\n[1] \"E\"\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".+\")\n\n[1] \"Episode 2: The pie whisperer. (4 August 2015)\"\n\n\nWe use an escape character when we actually want to choose a period:\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\.\")\n\n[1] \".\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-episode-information-4",
    "href": "slides/2024-09-30-regex.html#extracting-episode-information-4",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nGoal: find a pattern to match: anything that starts with a :, ends with a .\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\",\n            \":.+\\\\.\")\n\n[1] \": The pie whisperer.\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#lookaround-again",
    "href": "slides/2024-09-30-regex.html#lookaround-again",
    "title": "Regular Expressions",
    "section": "Lookaround (again)",
    "text": "Lookaround (again)\n\n\nFigure 4: Image credit: Stefan Judis https://www.stefanjudis.com/blog/a-regular-expression-lookahead-lookbehind-cheat-sheet/"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#lookbehinds",
    "href": "slides/2024-09-30-regex.html#lookbehinds",
    "title": "Regular Expressions",
    "section": "Lookbehinds",
    "text": "Lookbehinds\n(?&lt;=y)x – positive lookbehind (matches ‘x’ when it is preceded by ‘y’)\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=: ).+\")\n\n[1] \"The pie whisperer. (4 August 2015)\"\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=\\\\. ).+\")\n\n[1] \"(4 August 2015)\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#lookaheads",
    "href": "slides/2024-09-30-regex.html#lookaheads",
    "title": "Regular Expressions",
    "section": "Lookaheads",
    "text": "Lookaheads\nx(?=y) – positive lookahead (matches ‘x’ when it is followed by ‘y’)\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \".+(?=\\\\.)\")\n\n[1] \"Episode 2: The pie whisperer\"\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \".+(?=:)\")\n\n[1] \"Episode 2\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-episode-information-5",
    "href": "slides/2024-09-30-regex.html#extracting-episode-information-5",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nGetting everything between the : and the .\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=: ).+(?=\\\\.)\")\n\n[1] \"The pie whisperer\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-air-date",
    "href": "slides/2024-09-30-regex.html#extracting-air-date",
    "title": "Regular Expressions",
    "section": "Extracting air date",
    "text": "Extracting air date\nI want to extract just the air date. What pattern do I want to match?\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", ...)"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-air-date-1",
    "href": "slides/2024-09-30-regex.html#extracting-air-date-1",
    "title": "Regular Expressions",
    "section": "Extracting air date",
    "text": "Extracting air date\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=\\\\().+(?=\\\\))\")\n\n[1] \"4 August 2015\""
  },
  {
    "objectID": "slides/2024-09-30-regex.html#wrangling-the-episode-info",
    "href": "slides/2024-09-30-regex.html#wrangling-the-episode-info",
    "title": "Regular Expressions",
    "section": "Wrangling the episode info",
    "text": "Wrangling the episode info\nCurrently:\n\n\n# A tibble: 270 × 1\n   episode                                        \n   &lt;chr&gt;                                          \n 1 Episode 1: It's not your fault. (18 March 2021)\n 2 Episode 1: It's not your fault. (18 March 2021)\n 3 Episode 1: It's not your fault. (18 March 2021)\n 4 Episode 1: It's not your fault. (18 March 2021)\n 5 Episode 1: It's not your fault. (18 March 2021)\n 6 Episode 1: It's not your fault. (18 March 2021)\n 7 Episode 1: It's not your fault. (18 March 2021)\n 8 Episode 1: It's not your fault. (18 March 2021)\n 9 Episode 1: It's not your fault. (18 March 2021)\n10 Episode 1: It's not your fault. (18 March 2021)\n# ℹ 260 more rows"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#wrangling-the-episode-info-1",
    "href": "slides/2024-09-30-regex.html#wrangling-the-episode-info-1",
    "title": "Regular Expressions",
    "section": "Wrangling the episode info",
    "text": "Wrangling the episode info\nOne option:\n\nresults |&gt;\n  select(episode) |&gt;\n  mutate(episode_name = str_extract(episode, \"(?&lt;=: ).+(?=\\\\.)\"),\n         air_date = str_extract(episode, \"(?&lt;=\\\\().+(?=\\\\))\"),\n         episode = str_extract(episode, \"\\\\d+\")) |&gt; \n  mutate(air_date2 = dmy(air_date))\n\n# A tibble: 270 × 4\n   episode episode_name        air_date      air_date2 \n   &lt;chr&gt;   &lt;chr&gt;               &lt;chr&gt;         &lt;date&gt;    \n 1 1       It's not your fault 18 March 2021 2021-03-18\n 2 1       It's not your fault 18 March 2021 2021-03-18\n 3 1       It's not your fault 18 March 2021 2021-03-18\n 4 1       It's not your fault 18 March 2021 2021-03-18\n 5 1       It's not your fault 18 March 2021 2021-03-18\n 6 1       It's not your fault 18 March 2021 2021-03-18\n 7 1       It's not your fault 18 March 2021 2021-03-18\n 8 1       It's not your fault 18 March 2021 2021-03-18\n 9 1       It's not your fault 18 March 2021 2021-03-18\n10 1       It's not your fault 18 March 2021 2021-03-18\n# ℹ 260 more rows"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#wrangling-the-episode-info-2",
    "href": "slides/2024-09-30-regex.html#wrangling-the-episode-info-2",
    "title": "Regular Expressions",
    "section": "Wrangling the episode info",
    "text": "Wrangling the episode info\nAnother option:\n\nresults |&gt;\n  separate_wider_regex(episode, \n                       patterns = c(\".+ \", \n                                    episode = \"\\\\d+\", \n                                    \": \", \n                                    episode_name = \".+\", \n                                    \"\\\\. \\\\(\", \n                                    air_date = \".+\", \n                                    \"\\\\)\")) |&gt; \n  mutate(air_date2 = dmy(air_date))\n\n\n\n# A tibble: 270 × 4\n   episode episode_name        air_date      air_date2 \n   &lt;chr&gt;   &lt;chr&gt;               &lt;chr&gt;         &lt;date&gt;    \n 1 1       It's not your fault 18 March 2021 2021-03-18\n 2 1       It's not your fault 18 March 2021 2021-03-18\n 3 1       It's not your fault 18 March 2021 2021-03-18\n 4 1       It's not your fault 18 March 2021 2021-03-18\n 5 1       It's not your fault 18 March 2021 2021-03-18\n 6 1       It's not your fault 18 March 2021 2021-03-18\n 7 1       It's not your fault 18 March 2021 2021-03-18\n 8 1       It's not your fault 18 March 2021 2021-03-18\n 9 1       It's not your fault 18 March 2021 2021-03-18\n10 1       It's not your fault 18 March 2021 2021-03-18\n# ℹ 260 more rows"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#some-thoughts-on-characters-and-spaces",
    "href": "slides/2024-09-30-regex.html#some-thoughts-on-characters-and-spaces",
    "title": "Regular Expressions",
    "section": "Some thoughts on characters and spaces",
    "text": "Some thoughts on characters and spaces\n\n. matches any single character except a newline \\n.\n. does match whitespace (e.g., a space or tab)\n\\s matches any whitespace including: spaces, tabs, new lines, and carriage returns\n[ \\t] matches spaces and tabs only (not new lines or carriage returns)\n[^\\s] matches any character except whitespace (including spaces, tabs, and new lines)\n[^\\s] and [\\S] are functionally equivalent\nThe pattern [\\s\\S] matches any character including newlines and tabs.\n\\w matches any single word character (including letters, digits, and the underscore character _)"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#thoughts-on-characters-and-spaces",
    "href": "slides/2024-09-30-regex.html#thoughts-on-characters-and-spaces",
    "title": "Regular Expressions",
    "section": "Thoughts on characters and spaces",
    "text": "Thoughts on characters and spaces\n\n. matches any single character except a newline \\n.\n. does match whitespace (e.g., a space or tab)\n\\s matches any whitespace including: spaces, tabs, new lines, and carriage returns\n[ \\t] matches spaces and tabs only (not new lines or carriage returns)\n[^\\s] matches any character except whitespace (including spaces, tabs, and new lines)\n[^\\s] and [\\S] are functionally equivalent\nThe pattern [\\s\\S] matches any character including newlines and tabs.\n\\w matches any single word character (including letters, digits, and the underscore character _)"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#extracting-from-multiple-strings-2",
    "href": "slides/2024-09-30-regex.html#extracting-from-multiple-strings-2",
    "title": "Regular Expressions",
    "section": "Extracting from multiple strings",
    "text": "Extracting from multiple strings\nWhat if we have multiple instances across multiple strings? We need to be careful working with lists (instead of vectors).\n\nstrings &lt;- c(\"My cat is 3 years old\", \"My dog is 10 years old\")\nstr_extract(strings, \"\\\\w\")\n\n[1] \"M\" \"M\"\n\nstr_extract_all(strings, \"\\\\w\")\n\n[[1]]\n [1] \"M\" \"y\" \"c\" \"a\" \"t\" \"i\" \"s\" \"3\" \"y\" \"e\" \"a\" \"r\" \"s\" \"o\" \"l\" \"d\"\n\n[[2]]\n [1] \"M\" \"y\" \"d\" \"o\" \"g\" \"i\" \"s\" \"1\" \"0\" \"y\" \"e\" \"a\" \"r\" \"s\" \"o\" \"l\" \"d\"\n\nstr_extract(strings, \"\\\\w+\")\n\n[1] \"My\" \"My\"\n\nstr_extract_all(strings, \"\\\\w+\")\n\n[[1]]\n[1] \"My\"    \"cat\"   \"is\"    \"3\"     \"years\" \"old\"  \n\n[[2]]\n[1] \"My\"    \"dog\"   \"is\"    \"10\"    \"years\" \"old\""
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#function-components",
    "href": "slides/2024-10-07-funcmap.html#function-components",
    "title": "Functions + Iteration",
    "section": "Function components",
    "text": "Function components\nHere is a simple function to compute the absolute value.\n\nmy_abs &lt;- function(x){\n  return(ifelse(x &gt;= 0, x, -1*x))\n}\n\nmy_abs(-3)\n\n[1] 3\n\nmy_abs(c(-2, 5))\n\n[1] 2 5\n\n\n\nname: my_abs\narguments: x\nbody: everything inside the { }"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#ordering-and-arguments",
    "href": "slides/2024-10-07-funcmap.html#ordering-and-arguments",
    "title": "Functions + Iteration",
    "section": "Ordering and arguments",
    "text": "Ordering and arguments\n\nmy_power &lt;- function(x, y){\n  return(x^y)\n}\n\nmy_power(x = 2, y = 3)\n\n[1] 8\n\nmy_power(y = 3, x = 2)\n\n[1] 8\n\nmy_power(2, 3)\n\n[1] 8\n\nmy_power(3, 2)\n\n[1] 9\n\n\n\nWhen calling the function, if you don’t name the arguments, R assumes that you passed them in the order defined inside the function."
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#function-defaults",
    "href": "slides/2024-10-07-funcmap.html#function-defaults",
    "title": "Functions + Iteration",
    "section": "Function defaults",
    "text": "Function defaults\n\nfunctionresult\n\n\n\nmy_power &lt;- function(x, y){\n  return(x^y)\n}\n\nWhat will happen when I run the following code?\n\nmy_power(3)\n\n\n\n\nmy_power(3)\n\nError in my_power(3): argument \"y\" is missing, with no default"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#function-defaults-1",
    "href": "slides/2024-10-07-funcmap.html#function-defaults-1",
    "title": "Functions + Iteration",
    "section": "Function defaults",
    "text": "Function defaults\n\nfunctionresult\n\n\n\nmy_power &lt;- function(x, y = 2){\n  return(x^y)\n}\n\nWhat will happen when I run the following code?\n\nmy_power(3)\n\n\n\n\nmy_power(3)\n\n[1] 9"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#function-defaults-2",
    "href": "slides/2024-10-07-funcmap.html#function-defaults-2",
    "title": "Functions + Iteration",
    "section": "Function defaults",
    "text": "Function defaults\n\nfunctionresult\n\n\n\nmy_power &lt;- function(x, y = 2){\n  return(x^y)\n}\n\nWhat will happen when I run the following code?\n\nmy_power(2, 3)\n\n\n\n\nmy_power(2, 3)\n\n[1] 8"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#function-defaults-3",
    "href": "slides/2024-10-07-funcmap.html#function-defaults-3",
    "title": "Functions + Iteration",
    "section": "Function defaults",
    "text": "Function defaults\n\nfunctionresult\n\n\n\nmy_power &lt;- function(x = 2, y = 3){\n  return(x^y)\n}\n\nWhat will happen when I run the following code?\n\nmy_power()\n\n\n\n\nmy_power()\n\n[1] 8"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#function-defaults-4",
    "href": "slides/2024-10-07-funcmap.html#function-defaults-4",
    "title": "Functions + Mapping",
    "section": "Function defaults",
    "text": "Function defaults\n\nmy_power &lt;- function(x, y = 2){\n  return(x^y)\n}\n\nWhat will happen when I run the following code?\n\nmy_power(2, 3)"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#function-defaults-5",
    "href": "slides/2024-10-07-funcmap.html#function-defaults-5",
    "title": "Functions + Mapping",
    "section": "Function defaults",
    "text": "Function defaults\n\nmy_power &lt;- function(x, y = 2){\n  return(x^y)\n}\n\nWhat will happen when I run the following code?\n\nmy_power(2, 3)\n\n[1] 8"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#function-defaults-6",
    "href": "slides/2024-10-07-funcmap.html#function-defaults-6",
    "title": "Functions + Mapping",
    "section": "Function defaults",
    "text": "Function defaults\n\nmy_power &lt;- function(x = 2, y = 4){\n  return(x^y)\n}\n\nWhat will happen when I run the following code?\n\nmy_power()"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#function-defaults-7",
    "href": "slides/2024-10-07-funcmap.html#function-defaults-7",
    "title": "Functions + Mapping",
    "section": "Function defaults",
    "text": "Function defaults\n\nmy_power &lt;- function(x = 2, y = 4){\n  return(x^y)\n}\n\nWhat will happen when I run the following code?\n\nmy_power()\n\n[1] 16"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#purrr-for-functional-programming",
    "href": "slides/2024-10-07-funcmap.html#purrr-for-functional-programming",
    "title": "Functions + Iteration",
    "section": "purrr for functional programming",
    "text": "purrr for functional programming\nfunctionals are functions that take function as input and return a vector / list / data frame as output.\n\nalternatives to loops\na functional is better than a for loop is better than while is better than repeat (in terms of computing efficiency)"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#benefits",
    "href": "slides/2024-10-07-funcmap.html#benefits",
    "title": "Functions + Iteration",
    "section": "Benefits",
    "text": "Benefits\n\nencourages function logic to be separated from iteration logic\ncan collapse results into vectors/data frames easily"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#map",
    "href": "slides/2024-10-07-funcmap.html#map",
    "title": "Functions + Iteration",
    "section": "Map",
    "text": "Map\nmap() has (at least) two arguments, a data object and a function. It performs the function on each element of the object and returns a list. We can also pass additional arguments into the function."
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#variations-of-map_-functions",
    "href": "slides/2024-10-07-funcmap.html#variations-of-map_-functions",
    "title": "Functions + Iteration",
    "section": "variations of map_ functions",
    "text": "variations of map_ functions\n\n\nThe map functions are named by they output the produce. For example:\n\nmap(.x, .f) is the main mapping function and returns a list\nmap_dbl(.x, .f) returns a numeric (double) vector\nmap_chr(.x, .f) returns a character vector\nmap_lgl(.x, .f) returns a logical vector\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote that the first argument is always the data object and the second object is always the function you want to iteratively apply to each element in the input object."
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#map-variants-output",
    "href": "slides/2024-10-07-funcmap.html#map-variants-output",
    "title": "Functions + Iteration",
    "section": "map() variants (output)",
    "text": "map() variants (output)\n\ntriple &lt;- function(x) x * 3\nmap(.x = c(1:3), .f = triple)\n\n[[1]]\n[1] 3\n\n[[2]]\n[1] 6\n\n[[3]]\n[1] 9\n\nmap_dbl(.x = c(1:3), .f = triple)\n\n[1] 3 6 9\n\nmap_lgl (.x = c(1:3), .f = triple)\n\nError in `map_lgl()`:\nℹ In index: 1.\nCaused by error:\n! Can't coerce from a number to a logical.\n\nmap_lgl(.x = c(1, NA, 3), .f = is.na)\n\n[1] FALSE  TRUE FALSE"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#fastfood-dataset-from-openintro",
    "href": "slides/2024-10-07-funcmap.html#fastfood-dataset-from-openintro",
    "title": "Functions + Iteration",
    "section": "fastfood dataset from openintro",
    "text": "fastfood dataset from openintro\n\nlibrary(openintro)\nfastfood\n\n# A tibble: 515 × 17\n   restaurant item      calories cal_fat total_fat sat_fat trans_fat cholesterol\n   &lt;chr&gt;      &lt;chr&gt;        &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n 1 Mcdonalds  Artisan …      380      60         7       2       0            95\n 2 Mcdonalds  Single B…      840     410        45      17       1.5         130\n 3 Mcdonalds  Double B…     1130     600        67      27       3           220\n 4 Mcdonalds  Grilled …      750     280        31      10       0.5         155\n 5 Mcdonalds  Crispy B…      920     410        45      12       0.5         120\n 6 Mcdonalds  Big Mac        540     250        28      10       1            80\n 7 Mcdonalds  Cheesebu…      300     100        12       5       0.5          40\n 8 Mcdonalds  Classic …      510     210        24       4       0            65\n 9 Mcdonalds  Double C…      430     190        21      11       1            85\n10 Mcdonalds  Double Q…      770     400        45      21       2.5         175\n# ℹ 505 more rows\n# ℹ 9 more variables: sodium &lt;dbl&gt;, total_carb &lt;dbl&gt;, fiber &lt;dbl&gt;, sugar &lt;dbl&gt;,\n#   protein &lt;dbl&gt;, vit_a &lt;dbl&gt;, vit_c &lt;dbl&gt;, calcium &lt;dbl&gt;, salad &lt;chr&gt;\n\n\nFrom TidyTuesday Fast food entree data on September 4, 2018."
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#anonymous-functions-and-shortcuts",
    "href": "slides/2024-10-07-funcmap.html#anonymous-functions-and-shortcuts",
    "title": "Functions + Iteration",
    "section": "Anonymous functions and shortcuts",
    "text": "Anonymous functions and shortcuts\n\nuse ~ to set a formula (when the function is neither a single name nor defined by function(...) { ...})\nuse .x to reference the input map(.x = ..., .f = )\n\n\nmap_dbl(.x = fastfood, .f = function(dog) mean(dog, na.rm = TRUE))\n\n  restaurant         item     calories      cal_fat    total_fat      sat_fat \n          NA           NA  530.9126214  238.8135922   26.5902913    8.1533981 \n   trans_fat  cholesterol       sodium   total_carb        fiber        sugar \n   0.4650485   72.4563107 1246.7378641   45.6640777    4.1371769    7.2621359 \n     protein        vit_a        vit_c      calcium        salad \n  27.8910506   18.8571429   20.1704918   24.8524590           NA \n\n\n\nmap_dbl(.x = fastfood,  .f = ~mean(.x, na.rm = TRUE))\n\n  restaurant         item     calories      cal_fat    total_fat      sat_fat \n          NA           NA  530.9126214  238.8135922   26.5902913    8.1533981 \n   trans_fat  cholesterol       sodium   total_carb        fiber        sugar \n   0.4650485   72.4563107 1246.7378641   45.6640777    4.1371769    7.2621359 \n     protein        vit_a        vit_c      calcium        salad \n  27.8910506   18.8571429   20.1704918   24.8524590           NA \n\n\n\nmap_dbl(.x = fastfood, .f = mean, na.rm = TRUE)\n\n  restaurant         item     calories      cal_fat    total_fat      sat_fat \n          NA           NA  530.9126214  238.8135922   26.5902913    8.1533981 \n   trans_fat  cholesterol       sodium   total_carb        fiber        sugar \n   0.4650485   72.4563107 1246.7378641   45.6640777    4.1371769    7.2621359 \n     protein        vit_a        vit_c      calcium        salad \n  27.8910506   18.8571429   20.1704918   24.8524590           NA \n\n\n\nmap_dbl(.x = fastfood, .f = mean)\n\n  restaurant         item     calories      cal_fat    total_fat      sat_fat \n          NA           NA  530.9126214  238.8135922   26.5902913    8.1533981 \n   trans_fat  cholesterol       sodium   total_carb        fiber        sugar \n   0.4650485   72.4563107 1246.7378641   45.6640777           NA    7.2621359 \n     protein        vit_a        vit_c      calcium        salad \n          NA           NA           NA           NA           NA"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#the-same-thing-many-ways",
    "href": "slides/2024-10-07-funcmap.html#the-same-thing-many-ways",
    "title": "Functions + Iteration",
    "section": "The same thing, many ways",
    "text": "The same thing, many ways\nNote that .x is the name of the first argument in map() (.f is the name of the second argument).\n\n# the task\nmap_dbl(fastfood, function(x) length(unique(x)))\n\n restaurant        item    calories     cal_fat   total_fat     sat_fat \n          8         505         113         117          80          40 \n  trans_fat cholesterol      sodium  total_carb       fiber       sugar \n         10          52         197         103          19          31 \n    protein       vit_a       vit_c     calcium       salad \n         71          22          24          27           1 \n\nmap_dbl(fastfood, function(unicorn) length(unique(unicorn)))\n\n restaurant        item    calories     cal_fat   total_fat     sat_fat \n          8         505         113         117          80          40 \n  trans_fat cholesterol      sodium  total_carb       fiber       sugar \n         10          52         197         103          19          31 \n    protein       vit_a       vit_c     calcium       salad \n         71          22          24          27           1 \n\nmap_dbl(fastfood, ~length(unique(.x)))\n\n restaurant        item    calories     cal_fat   total_fat     sat_fat \n          8         505         113         117          80          40 \n  trans_fat cholesterol      sodium  total_carb       fiber       sugar \n         10          52         197         103          19          31 \n    protein       vit_a       vit_c     calcium       salad \n         71          22          24          27           1 \n\nmap_dbl(fastfood, ~length(unique(..1)))\n\n restaurant        item    calories     cal_fat   total_fat     sat_fat \n          8         505         113         117          80          40 \n  trans_fat cholesterol      sodium  total_carb       fiber       sugar \n         10          52         197         103          19          31 \n    protein       vit_a       vit_c     calcium       salad \n         71          22          24          27           1 \n\nmap_dbl(fastfood, ~length(unique(.)))\n\n restaurant        item    calories     cal_fat   total_fat     sat_fat \n          8         505         113         117          80          40 \n  trans_fat cholesterol      sodium  total_carb       fiber       sugar \n         10          52         197         103          19          31 \n    protein       vit_a       vit_c     calcium       salad \n         71          22          24          27           1 \n\n# not the task\nmap_dbl(fastfood, length)\n\n restaurant        item    calories     cal_fat   total_fat     sat_fat \n        515         515         515         515         515         515 \n  trans_fat cholesterol      sodium  total_carb       fiber       sugar \n        515         515         515         515         515         515 \n    protein       vit_a       vit_c     calcium       salad \n        515         515         515         515         515 \n\n\n\n#error\nmap_dbl(fastfood, ~length)\n\nError in `map_dbl()`:\nℹ In index: 1.\nℹ With name: restaurant.\nCaused by error:\n! Can't coerce from a primitive function to a double.\n\n#error\nmap_dbl(fastfood, length(unique()))\n\nError in unique.default(): argument \"x\" is missing, with no default\n\n#error\nmap_dbl(fastfood, ~length(unique(x)))\n\nError in `map_dbl()`:\nℹ In index: 1.\nℹ With name: restaurant.\nCaused by error in `.f()`:\n! object 'x' not found"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#map_-variants-input",
    "href": "slides/2024-10-07-funcmap.html#map_-variants-input",
    "title": "Functions + Iteration",
    "section": "map_*() variants (input)",
    "text": "map_*() variants (input)\n\nWe’ve already described the difference between the columns. Now we cover the difference between the rows."
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#map2_",
    "href": "slides/2024-10-07-funcmap.html#map2_",
    "title": "Functions + Iteration",
    "section": "map2_*()",
    "text": "map2_*()\n\nmap2_*() has two arguments, .x and .y\nraise each value of .x to the power of 2\n\n\nmap_dbl(\n  .x = c(1:5), \n  .f = function(x) x ^ 2\n)\n\n[1]  1  4  9 16 25\n\n\n\nraise each value .x to the power .y\n\n\nmap2_dbl(\n  .x = c(1:5), \n  .y = c(2:6), \n  .f = ~ (.x ^ .y)\n)\n\n[1]     1     8    81  1024 15625"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#imap",
    "href": "slides/2024-10-07-funcmap.html#imap",
    "title": "Functions + Iteration",
    "section": "imap()",
    "text": "imap()\n\nimap() is like map2()except that .y is derived from names(.x) if the data frame has names.\nIf not, .y is 1, 2, 3, … \\(n\\) where \\(n\\) is the number of items in .x. (A data frame has \\(n\\) columns.)\nThese two calls produce the same result\n\n\nimap_chr(.x = fastfood, \n         .f = ~ paste(.y, \"has a mean of\", round(mean(.x), 1))) |&gt; \nhead()\n\n                    restaurant                           item \n \"restaurant has a mean of NA\"        \"item has a mean of NA\" \n                      calories                        cal_fat \n\"calories has a mean of 530.9\"  \"cal_fat has a mean of 238.8\" \n                     total_fat                        sat_fat \n\"total_fat has a mean of 26.6\"    \"sat_fat has a mean of 8.2\" \n\nmap2_chr(.x = fastfood, \n         .y = names(fastfood),\n         .f = ~ paste(.y, \"has a mean of\", round(mean(.x), 1))) |&gt; \nhead()\n\n                    restaurant                           item \n \"restaurant has a mean of NA\"        \"item has a mean of NA\" \n                      calories                        cal_fat \n\"calories has a mean of 530.9\"  \"cal_fat has a mean of 238.8\" \n                     total_fat                        sat_fat \n\"total_fat has a mean of 26.6\"    \"sat_fat has a mean of 8.2\""
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#pmap",
    "href": "slides/2024-10-07-funcmap.html#pmap",
    "title": "Functions + Iteration",
    "section": "pmap()",
    "text": "pmap()\n\nyou can pass a named list or dataframe as arguments to a function\nfor example runif() has the parameters n, min and max\n\n\nparams\n\n# A tibble: 3 × 3\n      n   min   max\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     1     1    10\n2     2    10   100\n3     3   100  1000\n\npmap(params, runif)\n\n[[1]]\n[1] 1.522878\n\n[[2]]\n[1] 60.40849 62.27485\n\n[[3]]\n[1] 393.0755 733.5081 142.7339\n\n\nOr use the pipe into pmap():\n\nparams |&gt; \n  pmap(runif)\n\n[[1]]\n[1] 6.228173\n\n[[2]]\n[1] 21.28932 12.86177\n\n[[3]]\n[1] 900.8545 594.6754 274.8844"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#an-aside",
    "href": "slides/2024-10-07-funcmap.html#an-aside",
    "title": "Functions + Iteration",
    "section": "An aside…",
    "text": "An aside…\nInterestingly, runif() will take either a scalar or a vector as its first argument. If the first argument is a vector, runif() will return N random uniforms, where N is the length of the vector.\n\nrunif(n = 3)\n\n[1] 0.3460550 0.3684597 0.7622530\n\nrunif(n = c(1,3))\n\n[1] 0.2994728 0.7781749\n\nrunif(n = c(10000,12321412424))\n\n[1] 0.7561568 0.4648677\n\nrunif(n = c(\"rainbow\", \"unicorn\"))\n\n[1] 0.9089102 0.3279757"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#pmap-vs-map",
    "href": "slides/2024-10-07-funcmap.html#pmap-vs-map",
    "title": "Functions + Iteration",
    "section": "pmap() vs map()",
    "text": "pmap() vs map()\nWhich means that the pmap() code will “work” in map() as well:\n\nparamspmapmap\n\n\n\nparams\n\n# A tibble: 3 × 3\n      n   min   max\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     1     1    10\n2     2    10   100\n3     3   100  1000\n\n\n\n\n\nparams |&gt; \n  pmap(runif)\n\n[[1]]\n[1] 1.734303\n\n[[2]]\n[1] 54.19798 10.06920\n\n[[3]]\n[1] 587.4556 944.9725 889.0832\n\n\n\n\n\nparams |&gt; \n  map(runif)\n\n$n\n[1] 0.63462172 0.08050289 0.62253413\n\n$min\n[1] 0.5753892 0.1718571 0.8298359\n\n$max\n[1] 0.8211994 0.6053252 0.2518072"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#pmap-with-expand_grid",
    "href": "slides/2024-10-07-funcmap.html#pmap-with-expand_grid",
    "title": "Functions + Iteration",
    "section": "pmap() with expand_grid()",
    "text": "pmap() with expand_grid()\n\nI like to use expand_grid() when I want all possible parameter combinations.\n\n\nexpand_grid(n = c(1, 2, 3), \n            min = c(1, 10),\n            max = c(10, 100)) \n\n# A tibble: 12 × 3\n       n   min   max\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1     1    10\n 2     1     1   100\n 3     1    10    10\n 4     1    10   100\n 5     2     1    10\n 6     2     1   100\n 7     2    10    10\n 8     2    10   100\n 9     3     1    10\n10     3     1   100\n11     3    10    10\n12     3    10   100\n\nexpand_grid(n = c(1, 2, 3), \n            min = c(1, 10),\n            max = c(10, 100)) |&gt; \npmap(runif)\n\n[[1]]\n[1] 1.08188\n\n[[2]]\n[1] 11.49043\n\n[[3]]\n[1] 10\n\n[[4]]\n[1] 39.97649\n\n[[5]]\n[1] 5.169109 4.533750\n\n[[6]]\n[1] 46.15350 74.83895\n\n[[7]]\n[1] 10 10\n\n[[8]]\n[1] 78.80365 13.85192\n\n[[9]]\n[1] 1.959881 2.481792 1.705433\n\n[[10]]\n[1] 61.762033 48.758773  3.483168\n\n[[11]]\n[1] 10 10 10\n\n[[12]]\n[1] 96.07411 57.56174 46.62570"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#mapping-to-a-data-frame",
    "href": "slides/2024-10-07-funcmap.html#mapping-to-a-data-frame",
    "title": "Functions + Iteration",
    "section": "mapping to a data frame",
    "text": "mapping to a data frame\nWould be great if the results were a data frame! If the function outputs a data frame, then we can use list_rbind() and list_cbind() to create a data frame as the final map() output.\n\nresults as rows: map() |&gt; list_rbind()\nresults as columns: map() |&gt; list_cbind()\n\n\nfunctionmap()with list_rbind()with list_cbind()\n\n\n\ncol_stats &lt;- function(n) {\n  head(fastfood, n) |&gt; \n    select(calories, protein, vit_c) |&gt; \n    summarise_all(mean, na.rm = TRUE) |&gt; \n    mutate(n = paste(\"N =\", n))\n}\n\n\n\n\nout1 &lt;- map(c(10,20), col_stats)\n\nout1\n\n[[1]]\n# A tibble: 1 × 4\n  calories protein vit_c n     \n     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; \n1      657    39.5  12.3 N = 10\n\n[[2]]\n# A tibble: 1 × 4\n  calories protein vit_c n     \n     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; \n1     582.    34.6  12.2 N = 20\n\n\n\n\n\nout2 &lt;- map(c(10,20), col_stats) |&gt; list_rbind()\n\nout2\n\n# A tibble: 2 × 4\n  calories protein vit_c n     \n     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; \n1     657     39.5  12.3 N = 10\n2     582.    34.6  12.2 N = 20\n\n\n\n\n\nout3 &lt;- map(c(10,20), col_stats) |&gt; list_cbind()\n\nout3\n\n# A tibble: 1 × 8\n  calories...1 protein...2 vit_c...3 n...4  calories...5 protein...6 vit_c...7\n         &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt;\n1          657        39.5      12.3 N = 10         582.        34.6      12.2\n# ℹ 1 more variable: n...8 &lt;chr&gt;"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#functions-summary",
    "href": "slides/2024-10-07-funcmap.html#functions-summary",
    "title": "Functions + Iteration",
    "section": "Functions summary",
    "text": "Functions summary\n\nFunctions can be used to avoid repeating code\nArguments allow us specify the inputs when we call a function\nIf inputs are not named when calling the function, R uses the ordering from the function definition\nAll arguments must be specified when calling a function\nDefault arguments can be specified when the function is defined\nThe input to a function can be a function!"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#returning-a-value",
    "href": "slides/2024-10-07-funcmap.html#returning-a-value",
    "title": "Functions + Iteration",
    "section": "Returning a value",
    "text": "Returning a value\n\nfunctionsresults\n\n\n\naverage1 &lt;- function(x, remove_nas) {\n    sum(x, na.rm = remove_nas)/sum(!is.na(x))\n}\n\naverage2 &lt;- function(x, remove_nas) {\n    return(sum(x, na.rm = remove_nas)/sum(!is.na(x)))\n}\n\naverage3 &lt;- function(x, remove_nas = TRUE) {\n    sum(x, na.rm = remove_nas)/sum(!is.na(x))\n}\n\n\n\n\nsome_data &lt;- c(3, NA, 2, 13, 2, NA, 47)\n\naverage1(some_data)\n\nError in average1(some_data): argument \"remove_nas\" is missing, with no default\n\naverage1(some_data, remove_nas = TRUE)\n\n[1] 13.4\n\naverage2(some_data)\n\nError in average2(some_data): argument \"remove_nas\" is missing, with no default\n\naverage2(some_data, remove_nas = TRUE)\n\n[1] 13.4\n\naverage3(some_data)\n\n[1] 13.4"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#returning-a-value-1",
    "href": "slides/2024-10-07-funcmap.html#returning-a-value-1",
    "title": "Functions + Iteration",
    "section": "Returning a value",
    "text": "Returning a value\n\nwithout return(): the function returns the last value which gets computed and isn’t stored as an object (using &lt;-).\nwith return(): the function will return an object that is explicitly included in the return() call. (Note: if you (accidentally?) have two return() calls, the function will return the object in the first return() call.)"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#control-flow",
    "href": "slides/2024-10-07-funcmap.html#control-flow",
    "title": "Functions + Iteration",
    "section": "Control flow",
    "text": "Control flow\nOften in functions, you will want to execute code conditionally. Consider the if-else if-else structure.\n\nif (logical_condition) {\n    # some code\n} else if (other_logical_condition) {\n    # some other code\n} else {\n    # yet more code\n}"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#control-flow-1",
    "href": "slides/2024-10-07-funcmap.html#control-flow-1",
    "title": "Functions + Iteration",
    "section": "Control flow",
    "text": "Control flow\n\nfunctionresult\n\n\n\nmiddle &lt;- function(x) {\n    mean_x &lt;- mean(x, na.rm = TRUE)\n    median_x &lt;- median(x, na.rm = TRUE)\n    seems_skewed &lt;- (mean_x &gt; 1.5*median_x) | (mean_x &lt; (1/1.5)*median_x)\n    if (seems_skewed) {\n        median_x\n    } else {\n        mean_x\n    }\n}\n\nNote that (mean_x &gt; 1.5*median_x) | (mean_x &lt; (1/1.5)*median_x) is a TRUE or FALSE question.\n\n\n\nsome_data &lt;- c(3, NA, 2, 13, 2, NA, 47)\n\n\nmean(some_data, na.rm = TRUE)\n\n[1] 13.4\n\nmedian(some_data, na.rm = TRUE)\n\n[1] 3\n\nmiddle(some_data)\n\n[1] 3"
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#functions-in-the-tidyverse",
    "href": "slides/2024-10-07-funcmap.html#functions-in-the-tidyverse",
    "title": "Functions + Iteration",
    "section": "Functions in the tidyverse",
    "text": "Functions in the tidyverse\nDon’t collapse\nFunctions that return the same number of rows as the original data frame are good to use inside mutate() and filter(). For example, you might want to capitalize the first word of every string:\n\nfirst_upper &lt;- function(x) {\n  str_sub(x, 1, 1) &lt;- str_to_upper(str_sub(x, 1, 1))\n  x\n}\n\nfirst_upper(c(\"hello\", \"goodbye\"))\n\n[1] \"Hello\"   \"Goodbye\""
  },
  {
    "objectID": "slides/2024-10-07-funcmap.html#functions-in-the-tidyverse-1",
    "href": "slides/2024-10-07-funcmap.html#functions-in-the-tidyverse-1",
    "title": "Functions + Iteration",
    "section": "Functions in the tidyverse",
    "text": "Functions in the tidyverse\nCollapse\nFunctions that collapse into a single value will work well in the summarize() step of the pipeline. For example, you may want to calculate the coefficient of variation which is the standard deviation divided by the mean.\n\ncv &lt;- function(x, na.rm = FALSE) {\n  sd(x, na.rm = na.rm) / mean(x, na.rm = na.rm)\n}\n\ncv(runif(100, min = 0, max = 50))\n\n[1] 0.5983797\n\ncv(runif(100, min = 0, max = 500))\n\n[1] 0.5812336"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#bounding-words-vs.-phrases",
    "href": "slides/2024-09-30-regex.html#bounding-words-vs.-phrases",
    "title": "Regular Expressions",
    "section": "Bounding words vs. phrases",
    "text": "Bounding words vs. phrases\n\nstrings &lt;- c(\"apple\", \"applet\", \"pineapple\", \"apple pie\",\n             \"I love apple pie\")\n\nstr_subset(strings, \"\\\\bapple\\\\b\")\nstr_subset(strings, \"^apple$\")\nstr_subset(strings, \"\\\\bapple pie\\\\b\")\nstr_subset(strings, \"^apple pie$\")"
  },
  {
    "objectID": "slides/2024-09-30-regex.html#bounding-words-vs.-phrases---solutions",
    "href": "slides/2024-09-30-regex.html#bounding-words-vs.-phrases---solutions",
    "title": "Regular Expressions",
    "section": "Bounding words vs. phrases - solutions",
    "text": "Bounding words vs. phrases - solutions\n\nstrings &lt;- c(\"apple\", \"applet\", \"pineapple\", \"apple pie\",\n             \"I love apple pie\")\n\nstr_subset(strings, \"\\\\bapple\\\\b\")\n\n[1] \"apple\"            \"apple pie\"        \"I love apple pie\"\n\nstr_subset(strings, \"^apple$\")\n\n[1] \"apple\"\n\nstr_subset(strings, \"\\\\bapple pie\\\\b\")\n\n[1] \"apple pie\"        \"I love apple pie\"\n\nstr_subset(strings, \"^apple pie$\")\n\n[1] \"apple pie\"\n\nstr_extract(strings, \"\\\\bapple\\\\b\")\n\n[1] \"apple\" NA      NA      \"apple\" \"apple\"\n\nstr_extract(strings, \"^apple$\")\n\n[1] \"apple\" NA      NA      NA      NA     \n\nstr_extract(strings, \"\\\\bapple pie\\\\b\")\n\n[1] NA          NA          NA          \"apple pie\" \"apple pie\"\n\nstr_extract(strings, \"^apple pie$\")\n\n[1] NA          NA          NA          \"apple pie\" NA"
  },
  {
    "objectID": "slides/2024-10-16-help.html#object-names",
    "href": "slides/2024-10-16-help.html#object-names",
    "title": "Help me help you",
    "section": "Object names",
    "text": "Object names\n\nThere are only two hard things in Computer Science: cache invalidation and naming things.\n\n\n– Phil Karlton"
  },
  {
    "objectID": "slides/2024-10-16-help.html#object-names-1",
    "href": "slides/2024-10-16-help.html#object-names-1",
    "title": "Help me help you",
    "section": "Object names",
    "text": "Object names\nVariable and function names should use only lowercase letters, numbers, and _. Use underscores (_) (so called snake case) to separate words within a name.\n\n# Good\nday_one\nday_1\n\n# Bad\nDayOne\ndayone\n\n# Really bad\nT &lt;- FALSE\nc &lt;- 10\nmean &lt;- function(x) sum(x)"
  },
  {
    "objectID": "slides/2024-10-16-help.html#spacing",
    "href": "slides/2024-10-16-help.html#spacing",
    "title": "Help me help you",
    "section": "Spacing",
    "text": "Spacing\nDo not put spaces inside or outside parentheses for regular funtion calls.\n\n# Good\nmean(x, na.rm = TRUE)\n\n# Bad\nmean (x, na.rm = TRUE)\nmean( x, na.rm = TRUE )"
  },
  {
    "objectID": "slides/2024-10-16-help.html#infix-operators",
    "href": "slides/2024-10-16-help.html#infix-operators",
    "title": "Help me help you",
    "section": "Infix operators",
    "text": "Infix operators\nMost infix operators (==, +, -, &lt;-, etc.) should always be surrounded by spaces:\n\n# Good\nheight &lt;- (feet * 12) + inches\nmean(x, na.rm = TRUE)\n\n# Bad\nheight&lt;-feet*12+inches\nmean(x, na.rm=TRUE)"
  },
  {
    "objectID": "slides/2024-10-16-help.html#long-function-calls",
    "href": "slides/2024-10-16-help.html#long-function-calls",
    "title": "Help me help you",
    "section": "Long function calls",
    "text": "Long function calls\nIf a function call is too long to fit on a single line, use one line each for the function name, each argument, and the closing ). This makes the code easier to read and to change later.\n\n# Good\ndo_something_very_complicated(\n  something = \"that\",\n  requires = many,\n  arguments = \"some of which may be long\"\n)\n\n# Bad\ndo_something_very_complicated(\"that\", requires, many, arguments,\n                              \"some of which may be long\"\n                              )"
  },
  {
    "objectID": "slides/2024-10-16-help.html#long-lines-piping",
    "href": "slides/2024-10-16-help.html#long-lines-piping",
    "title": "Help me help you",
    "section": "Long lines (piping)",
    "text": "Long lines (piping)\nIf the arguments to a function don’t all fit on one line, put each argument on its own line and indent:\n\n# Good\niris |&gt;\n  summarise(\n    Sepal.Length = mean(Sepal.Length),\n    Sepal.Width = mean(Sepal.Width),\n    .by = Species\n  )\n\n# Bad\niris |&gt;\n  summarise(Sepal.Length = mean(Sepal.Length), Sepal.Width = mean(Sepal.Width), .by = Species)\n\n# Also bad\nsummarise(\n  iris,\n  Sepal.Length = mean(Sepal.Length),\n  Sepal.Width = mean(Sepal.Width),\n  .by = Species\n)"
  },
  {
    "objectID": "slides/2024-10-16-help.html#short-lines-piping",
    "href": "slides/2024-10-16-help.html#short-lines-piping",
    "title": "Help me help you",
    "section": "Short lines (piping)",
    "text": "Short lines (piping)\nSometimes it’s useful to include a short pipe as an argument to a function in a longer pipe. Carefully consider whether the code is more readable with a short inline pipe or if it’s better to move the code outside the pipe and give it an evocative name.\n\n# Good\nx |&gt;\n  semi_join(y |&gt; filter(is_valid))\n\n# Ok\nx |&gt;\n  select(a, b, w) |&gt;\n  left_join(y |&gt; select(a, b, v), join_by(a, b))\n\n# Better\nx_join &lt;- x |&gt; select(a, b, w)\ny_join &lt;- y |&gt; select(a, b, v)\nleft_join(x_join, y_join, join_by(a, b))"
  },
  {
    "objectID": "slides/2024-10-16-help.html#how-to-reprex",
    "href": "slides/2024-10-16-help.html#how-to-reprex",
    "title": "Help me help you",
    "section": "How to reprex()?",
    "text": "How to reprex()?\nStep 1. Write some R code and copy it into the clipboard (command-c or ctrl-c).\nStep 2. Type reprex() into the Console.\nStep 3. Look at the Viewer to the right. Copy the Viewer output into GitHub, Slack, an email, Stack Overflow, Posit Community, etc."
  },
  {
    "objectID": "slides/2024-10-16-help.html#reprex-example---1st-try",
    "href": "slides/2024-10-16-help.html#reprex-example---1st-try",
    "title": "Help me help you",
    "section": "reprex() example - 1st try",
    "text": "reprex() example - 1st try\nCode:\n\njan31 + months(0:11) + days(31)\n\nOutput of reprex():\n\njan31 + months(0:11) + days(31)\n#&gt; Error in eval(expr, envir, enclos): object 'jan31' not found"
  },
  {
    "objectID": "slides/2024-10-16-help.html#reprex-example---2nd-try",
    "href": "slides/2024-10-16-help.html#reprex-example---2nd-try",
    "title": "Help me help you",
    "section": "reprex() example - 2nd try",
    "text": "reprex() example - 2nd try\nCode:\n\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n\nOutput of reprex():\n\n  jan31 &lt;- ymd(\"2021-01-31\")\n#&gt; Error in ymd(\"2021-01-31\"): could not find function \"ymd\"\n  jan31 + months(0:11) + days(31)\n#&gt; Error in eval(expr, envir, enclos): object 'jan31' not found"
  },
  {
    "objectID": "slides/2024-10-16-help.html#reprex-example---3rd-try",
    "href": "slides/2024-10-16-help.html#reprex-example---3rd-try",
    "title": "Help me help you",
    "section": "reprex() example - 3rd try",
    "text": "reprex() example - 3rd try\nCode:\n\n  library(lubridate)\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n\nOutput of reprex():\n\n  library(lubridate)\n#&gt; \n#&gt; Attaching package: 'lubridate'\n#&gt; The following objects are masked from 'package:base':\n#&gt; \n#&gt;     date, intersect, setdiff, union\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n#&gt;  [1] \"2021-03-03\" NA           \"2021-05-01\" NA           \"2021-07-01\"\n#&gt;  [6] NA           \"2021-08-31\" \"2021-10-01\" NA           \"2021-12-01\"\n#&gt; [11] NA           \"2022-01-31\""
  },
  {
    "objectID": "slides/2024-10-16-help.html#style",
    "href": "slides/2024-10-16-help.html#style",
    "title": "Help me help you",
    "section": "Style",
    "text": "Style\nThe point is that coding happens in community. Not only do you want your code to run well, but you want other people to be able to understand it and use it. The more that you and others use the same syntax, the better the communication will be."
  },
  {
    "objectID": "slides/2024-10-16-help.html#reproducible-example-w-chatgpt",
    "href": "slides/2024-10-16-help.html#reproducible-example-w-chatgpt",
    "title": "Help me help you",
    "section": "Reproducible example w chatGPT",
    "text": "Reproducible example w chatGPT\n\ngenerate a reprex in R to demonstrate how to reorder a factor variable"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#goals-of-simulating-complicated-models",
    "href": "slides/2024-10-21-iters.html#goals-of-simulating-complicated-models",
    "title": "Iterations",
    "section": "Goals of Simulating Complicated Models",
    "text": "Goals of Simulating Complicated Models\nThe goal of simulating a complicated model is not only to create a program which will provide the desired results. We also hope to be able to write code such that:\n\nThe problem is broken down into small pieces.\nThe problem has checks in it to see what works (run the lines inside the functions!).\nuses simple code (as often as possible)."
  },
  {
    "objectID": "slides/2024-10-21-iters.html#monte-carlo-from-a-population-to",
    "href": "slides/2024-10-21-iters.html#monte-carlo-from-a-population-to",
    "title": "Iterations",
    "section": "Monte Carlo from a population to…",
    "text": "Monte Carlo from a population to…\n\n\n…simulate as easier than calculus for estimating probabilities.\n…simulate to understand complicated models.\n…simulate to consider statistical methods with fewer assumptions."
  },
  {
    "objectID": "slides/2024-10-21-iters.html#aside-a-few-r-functions-ifelse",
    "href": "slides/2024-10-21-iters.html#aside-a-few-r-functions-ifelse",
    "title": "Iterations",
    "section": "Aside: a few R functions (ifelse())",
    "text": "Aside: a few R functions (ifelse())\n\ndata.frame(value = c(-2:2)) |&gt;\n  mutate(abs_value = ifelse(value &gt;=0, value, -value))  # abs val\n\n  value abs_value\n1    -2         2\n2    -1         1\n3     0         0\n4     1         1\n5     2         2"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#aside-a-few-r-functions-case_when",
    "href": "slides/2024-10-21-iters.html#aside-a-few-r-functions-case_when",
    "title": "Iterations",
    "section": "Aside: a few R functions (case_when())",
    "text": "Aside: a few R functions (case_when())\n\nset.seed(4747)\ndiamonds |&gt; select(carat, cut, color, price) |&gt;\n  sample_n(20) |&gt;\n  mutate(price_cat = case_when(\n    price &gt; 10000 ~ \"expensive\",\n    price &gt; 1500 ~ \"medium\", \n    TRUE ~ \"inexpensive\"))\n\n# A tibble: 20 × 5\n   carat cut       color price price_cat  \n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;int&gt; &lt;chr&gt;      \n 1  1.23 Very Good F     10276 expensive  \n 2  0.35 Premium   H       706 inexpensive\n 3  0.7  Good      E      2782 medium     \n 4  0.4  Ideal     D      1637 medium     \n 5  0.53 Ideal     G      1255 inexpensive\n 6  2.22 Ideal     G     14637 expensive  \n 7  0.3  Ideal     G       878 inexpensive\n 8  1.05 Ideal     H      4223 medium     \n 9  0.53 Premium   E      1654 medium     \n10  1.7  Ideal     H      7068 medium     \n11  0.31 Good      E       698 inexpensive\n12  0.31 Ideal     F       840 inexpensive\n13  1.03 Ideal     H      4900 medium     \n14  0.31 Premium   G       698 inexpensive\n15  1.56 Premium   G      8858 medium     \n16  1.71 Premium   G     11032 expensive  \n17  1    Good      E      5345 medium     \n18  1.86 Ideal     J     10312 expensive  \n19  1.08 Very Good E      3726 medium     \n20  0.31 Premium   E       698 inexpensive"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#aside-a-few-r-functions-sample",
    "href": "slides/2024-10-21-iters.html#aside-a-few-r-functions-sample",
    "title": "Iterations",
    "section": "Aside: a few R functions (sample())",
    "text": "Aside: a few R functions (sample())\nsampling, shuffling, and resampling: sample()\n\nset.seed(47)\nalph &lt;- letters[1:10]\nalph\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\"\n\nsample(alph, 5, replace = FALSE) # sample (from a population)\n\n[1] \"i\" \"b\" \"g\" \"d\" \"a\"\n\nsample(alph, 5, replace = TRUE) # sample (from a population)\n\n[1] \"j\" \"g\" \"f\" \"i\" \"f\"\n\nsample(alph, 10, replace = FALSE)  # shuffle\n\n [1] \"f\" \"h\" \"i\" \"e\" \"g\" \"d\" \"c\" \"j\" \"b\" \"a\"\n\nsample(alph, 10, replace = TRUE)  # resample\n\n [1] \"e\" \"j\" \"e\" \"b\" \"e\" \"c\" \"f\" \"a\" \"e\" \"a\""
  },
  {
    "objectID": "slides/2024-10-21-iters.html#aside-a-few-r-functions-set.seed",
    "href": "slides/2024-10-21-iters.html#aside-a-few-r-functions-set.seed",
    "title": "Iterations",
    "section": "Aside: a few R functions (set.seed())",
    "text": "Aside: a few R functions (set.seed())\nWhat if we want to be able to generate the same random numbers (here on the interval from 0 to 1) over and over?\n\nset.seed(4747)\nrunif(4, 0, 1) # random uniform numbers\n\n[1] 0.1949071 0.3390270 0.5147919 0.4516470\n\nset.seed(123)\nrunif(4, 0, 1) # random uniform numbers\n\n[1] 0.2875775 0.7883051 0.4089769 0.8830174\n\nset.seed(4747)\nrunif(4, 0, 1) # random uniform numbers\n\n[1] 0.1949071 0.3390270 0.5147919 0.4516470"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#step-1-representing-the-hats",
    "href": "slides/2024-10-21-iters.html#step-1-representing-the-hats",
    "title": "Iterations",
    "section": "Step 1: representing the hats",
    "text": "Step 1: representing the hats\n\nhats &lt;- 1:10\nhats\n\n [1]  1  2  3  4  5  6  7  8  9 10"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#step-2-everyone-draws-a-hat",
    "href": "slides/2024-10-21-iters.html#step-2-everyone-draws-a-hat",
    "title": "Iterations",
    "section": "Step 2: everyone draws a hat",
    "text": "Step 2: everyone draws a hat\n\nrandom_hats &lt;- sample(hats, size = 10, replace = FALSE)\n\nhats\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\nrandom_hats\n\n [1]  4  6  9  3  5 10  2  8  1  7"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#step-3-check-who-got-their-original-hat",
    "href": "slides/2024-10-21-iters.html#step-3-check-who-got-their-original-hat",
    "title": "Iterations",
    "section": "Step 3: check who got their original hat",
    "text": "Step 3: check who got their original hat\n\nhats == random_hats\n\n [1] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE\n\n# TRUE is 1, FALSE is 0\nsum(hats == random_hats)\n\n[1] 2\n\n# did at least one person get their hat?\nsum(hats == random_hats) &gt; 0\n\n[1] TRUE"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#code-so-far",
    "href": "slides/2024-10-21-iters.html#code-so-far",
    "title": "Iterations",
    "section": "Code so far",
    "text": "Code so far\n\nhats &lt;- 1:10\nrandom_hats &lt;- sample(hats, size = 10, replace = FALSE)\nsum(hats == random_hats) &gt; 0\n\n[1] TRUE\n\n\n\nDo we have a good estimate of the probability of interest?"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#function",
    "href": "slides/2024-10-21-iters.html#function",
    "title": "Iterations",
    "section": "Function",
    "text": "Function\n\nremove the magic number 10\n\n\nhat_match &lt;- function(n){\n  hats &lt;- 1:n\n  random_hats &lt;- sample(hats, size = n, replace = FALSE)\n  sum(hats == random_hats) &gt; 0\n}\n\nhat_match(10)\n\n[1] TRUE\n\nhat_match(47)\n\n[1] FALSE"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#iterate",
    "href": "slides/2024-10-21-iters.html#iterate",
    "title": "Iterations",
    "section": "Iterate",
    "text": "Iterate\n\nmap_lgl(1:10, ~hat_match(n = 10))\n\n [1] FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE\n\nmap_lgl(1:10, ~hat_match(n = 10)) |&gt; \n  mean()\n\n[1] 0.7"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#reproducible",
    "href": "slides/2024-10-21-iters.html#reproducible",
    "title": "Iterations",
    "section": "Reproducible",
    "text": "Reproducible\n\nset.seed(4747)\nnum_iter &lt;- 10000\n\nmap_lgl(1:num_iter, ~hat_match(n = 10)) |&gt; \n  mean()\n\n[1] 0.6329"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#vary-number-of-hats",
    "href": "slides/2024-10-21-iters.html#vary-number-of-hats",
    "title": "Iterations",
    "section": "Vary number of hats",
    "text": "Vary number of hats\n\nhat_match_prob &lt;- function(n, reps){\n  prob &lt;- map_lgl(1:reps, ~hat_match(n = n)) |&gt; \n    mean()\n  return(data.frame(match_prob = prob, num_hats = n))\n}\n\nset.seed(47)\nmap(1:20, hat_match_prob, reps = num_iter) |&gt; \n  list_rbind()\n\n   match_prob num_hats\n1      1.0000        1\n2      0.4964        2\n3      0.6695        3\n4      0.6241        4\n5      0.6376        5\n6      0.6290        6\n7      0.6299        7\n8      0.6299        8\n9      0.6373        9\n10     0.6273       10\n11     0.6319       11\n12     0.6348       12\n13     0.6393       13\n14     0.6300       14\n15     0.6280       15\n16     0.6396       16\n17     0.6355       17\n18     0.6283       18\n19     0.6304       19\n20     0.6461       20"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#visualizing",
    "href": "slides/2024-10-21-iters.html#visualizing",
    "title": "Iterations",
    "section": "Visualizing",
    "text": "Visualizing\n\nset.seed(47)\nnum_iter &lt;- 10000\nmap(1:20, hat_match_prob, reps = num_iter) |&gt; \n  list_rbind() |&gt; \n  ggplot(aes(x = num_hats, y = match_prob)) + \n  geom_line() + \n  labs(y = \"probability of at least one match\",\n       x = \"number of hats\")"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#example-2---birthday-problem",
    "href": "slides/2024-10-21-iters.html#example-2---birthday-problem",
    "title": "Iterations",
    "section": "Example 2 - Birthday Problem",
    "text": "Example 2 - Birthday Problem\nWhat is the probability that in a room of 29 people, at least 2 of them have the same birthday?"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#step-1-representing-the-birthdays",
    "href": "slides/2024-10-21-iters.html#step-1-representing-the-birthdays",
    "title": "Iterations",
    "section": "Step 1: representing the birthdays",
    "text": "Step 1: representing the birthdays\n\nset.seed(47)\nclass_birthdays &lt;- sample(1:365, size=29, replace=TRUE)\nclass_birthdays \n\n [1]  27 242 143 212 257  13 279 198 365 232 136  69 139  12  41 117 330 165 341\n[20] 176 118 144 273 261 213 304   1 360 144"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#step-2-any-duplicates",
    "href": "slides/2024-10-21-iters.html#step-2-any-duplicates",
    "title": "Iterations",
    "section": "Step 2: any duplicates?",
    "text": "Step 2: any duplicates?\n\nduplicated(class_birthdays)\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE FALSE FALSE  TRUE\n\nsum(duplicated(class_birthdays))\n\n[1] 1"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#function-1",
    "href": "slides/2024-10-21-iters.html#function-1",
    "title": "Iterations",
    "section": "Function",
    "text": "Function\n\nclass_duplicates &lt;- function(unicorn){\n  class_birthdays &lt;- sample(1:365, size = 29, replace = TRUE)\n  num_duplicates &lt;- sum(duplicated(class_birthdays))\n  return(ifelse(num_duplicates &gt; 0, 1, 0))\n}\n\nclass_duplicates()\n\n[1] 1\n\nclass_duplicates()\n\n[1] 0"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#iterate-1",
    "href": "slides/2024-10-21-iters.html#iterate-1",
    "title": "Iterations",
    "section": "Iterate",
    "text": "Iterate\n\nmap_dbl(1:10, class_duplicates)\n\n [1] 0 1 1 1 1 0 0 1 0 0"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#improve",
    "href": "slides/2024-10-21-iters.html#improve",
    "title": "Iterations",
    "section": "Improve",
    "text": "Improve\n\nclass_duplicates &lt;- function(class_size){\n  class_birthdays &lt;- sample(1:365, size = class_size, replace = TRUE)\n  num_duplicates &lt;- sum(duplicated(class_birthdays))\n  return(ifelse(num_duplicates &gt; 0, 1, 0))\n}\n\nset.seed(47)\nnum_stud &lt;- 29\nmap_dbl(1:10, ~class_duplicates(class_size = num_stud))\n\n [1] 1 1 0 0 1 1 1 1 0 0"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#vary-number-of-students",
    "href": "slides/2024-10-21-iters.html#vary-number-of-students",
    "title": "Iterations",
    "section": "Vary number of students",
    "text": "Vary number of students\n\nset.seed(47)\nnum_stud &lt;- 29\nnum_class &lt;- 100\n\nbirth_match_prob &lt;- function(num_stud, reps){\n  prob &lt;- map_dbl(1:reps, ~class_duplicates(class_size = num_stud)) |&gt; \n    mean()\n  return(data.frame(match_prob = prob, num_stud = num_stud))\n}\n\nmap(1:num_stud, birth_match_prob, reps = num_class) |&gt; \n  list_rbind()\n\n   match_prob num_stud\n1        0.00        1\n2        0.00        2\n3        0.00        3\n4        0.00        4\n5        0.03        5\n6        0.03        6\n7        0.04        7\n8        0.06        8\n9        0.11        9\n10       0.13       10\n11       0.14       11\n12       0.18       12\n13       0.18       13\n14       0.25       14\n15       0.25       15\n16       0.32       16\n17       0.37       17\n18       0.43       18\n19       0.44       19\n20       0.40       20\n21       0.43       21\n22       0.47       22\n23       0.48       23\n24       0.47       24\n25       0.61       25\n26       0.67       26\n27       0.63       27\n28       0.66       28\n29       0.73       29"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#visualize",
    "href": "slides/2024-10-21-iters.html#visualize",
    "title": "Iterations",
    "section": "Visualize",
    "text": "Visualize\n\nset.seed(123)\nnum_stud &lt;- 40\nnum_class &lt;- 1000\n\nmap(1:num_stud, birth_match_prob, reps = num_class) |&gt; \n  list_rbind()  |&gt; \n  ggplot(aes(x = num_stud, y = match_prob)) + \n  geom_line() + \n  labs(y = \"probability of birthday match\",\n       x = \"number of students in class\")"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#simulating-to",
    "href": "slides/2024-10-21-iters.html#simulating-to",
    "title": "Iterations",
    "section": "Simulating to…",
    "text": "Simulating to…\n\n\n… estimate probabilities (easier than calculus).\n… understand complicated models."
  },
  {
    "objectID": "slides/2024-10-21-iters.html#simulating-to-1",
    "href": "slides/2024-10-21-iters.html#simulating-to-1",
    "title": "Iterations",
    "section": "Simulating to…",
    "text": "Simulating to…\n\n… estimate probabilities (easier than calculus).\n… understand complicated models."
  },
  {
    "objectID": "slides/2024-10-21-iters.html#simulate-to",
    "href": "slides/2024-10-21-iters.html#simulate-to",
    "title": "Iterations",
    "section": "Simulate to…",
    "text": "Simulate to…\n\n\n… estimate probabilities (easier than calculus).\n… understand complicated models."
  },
  {
    "objectID": "slides/2024-10-21-iters.html#step-3-who-got-their-original-hat",
    "href": "slides/2024-10-21-iters.html#step-3-who-got-their-original-hat",
    "title": "Iterations",
    "section": "Step 3: who got their original hat?",
    "text": "Step 3: who got their original hat?\n\nhats == random_hats\n\n [1] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE\n\n# TRUE is 1, FALSE is 0\nsum(hats == random_hats)\n\n[1] 2\n\n# did at least one person get their hat?\nsum(hats == random_hats) &gt; 0\n\n[1] TRUE"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#example-2-birthday-problem",
    "href": "slides/2024-10-21-iters.html#example-2-birthday-problem",
    "title": "Iterations",
    "section": "Example 2: Birthday Problem",
    "text": "Example 2: Birthday Problem\nWhat is the probability that in a room of 29 people, at least 2 of them have the same birthday?"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#simulate-to-1",
    "href": "slides/2024-10-21-iters.html#simulate-to-1",
    "title": "Iterations",
    "section": "Simulate to…",
    "text": "Simulate to…\n\n… estimate probabilities (easier than calculus).\n… understand complicated models."
  },
  {
    "objectID": "slides/2024-10-21-iters.html#many-classrooms",
    "href": "slides/2024-10-21-iters.html#many-classrooms",
    "title": "Iterations",
    "section": "Many classrooms",
    "text": "Many classrooms\n\nset.seed(47)\nnum_stud &lt;- 29\nnum_class &lt;- 1000\nmap_dbl(1:num_class, ~class_duplicates(class_size = num_stud)) |&gt; \n  mean()\n\n[1] 0.654"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#bias-in-a-model",
    "href": "slides/2024-10-21-iters.html#bias-in-a-model",
    "title": "Iterations",
    "section": "Bias in a model",
    "text": "Bias in a model\nPopulation:\ntalent ~ Normal (100, 15)\ngrades ~ Normal (talent, 15)\nSAT ~ Normal (talent, 15)\nThe example is taken directly (and mostly verbatim) from a blog by Aaron Roth Algorithmic Unfairness Without Any Bias Baked In."
  },
  {
    "objectID": "slides/2024-10-21-iters.html#goal-for-admitting-students",
    "href": "slides/2024-10-21-iters.html#goal-for-admitting-students",
    "title": "Iterations",
    "section": "Goal for admitting students",
    "text": "Goal for admitting students\nCollege wants to admit students with\n\ntalent &gt; 115\n\n… but they only have access to grades and SAT which are noisy estimates of talent."
  },
  {
    "objectID": "slides/2024-10-21-iters.html#plan-for-accepting-students",
    "href": "slides/2024-10-21-iters.html#plan-for-accepting-students",
    "title": "Iterations",
    "section": "Plan for accepting students",
    "text": "Plan for accepting students\n\nRun a regression on a training dataset (talent is known for existing students)\nFind a model which predicts talent based on grades and SAT\nChoose students for whom predicted talent is above 115"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#flaw-in-the-plan",
    "href": "slides/2024-10-21-iters.html#flaw-in-the-plan",
    "title": "Iterations",
    "section": "Flaw in the plan …",
    "text": "Flaw in the plan …\n\nthere are two populations of students, the Reds and Blues.\nReds are the majority population (99%), and Blues are a small minority population (1%)\nthe Reds and the Blues are no different when it comes to talent: they both have the same talent distribution, as described above.\nthere is no bias baked into the grading or the exams: both the Reds and the Blues also have exactly the same grade and exam score distributions"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#what-is-really-different",
    "href": "slides/2024-10-21-iters.html#what-is-really-different",
    "title": "Iterations",
    "section": "What is really different?",
    "text": "What is really different?\n\nBut there is one difference: the Blues have more money than the Reds, so they each take the SAT twice, and report only the highest of the two scores to the college. This results in a small but noticeable bump in their average SAT scores, compared to the Reds."
  },
  {
    "objectID": "slides/2024-10-21-iters.html#key-aspect",
    "href": "slides/2024-10-21-iters.html#key-aspect",
    "title": "Iterations",
    "section": "Key aspect:",
    "text": "Key aspect:\n\nThe value of SAT means something different for the Reds versus the Blues\n\n(They have different feature distributions.)"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#lets-see-what-happens",
    "href": "slides/2024-10-21-iters.html#lets-see-what-happens",
    "title": "Iterations",
    "section": "Let’s see what happens …",
    "text": "Let’s see what happens …"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#two-models",
    "href": "slides/2024-10-21-iters.html#two-models",
    "title": "Iterations",
    "section": "Two models:",
    "text": "Two models:\nRed model (SAT taken once):\n\n\n# A tibble: 3 × 5\n  term        estimate std.error statistic p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept)   33.2     0.152        218.       0\n2 SAT            0.334   0.00149      224.       0\n3 grades         0.334   0.00149      225.       0\n\n\nBlue model (SAT is max score of two):\n\n\n# A tibble: 3 × 5\n  term        estimate std.error statistic   p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)   25.3      1.60        15.8 2.04e- 50\n2 SAT            0.432    0.0161      26.7 3.35e-119\n3 grades         0.277    0.0154      18.0 6.83e- 63"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#new-data",
    "href": "slides/2024-10-21-iters.html#new-data",
    "title": "Iterations",
    "section": "New data",
    "text": "New data\n\nGenerate new data, use the two models separately.\nCan the models predict if a student has talent &gt; 115?"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#new-data-1",
    "href": "slides/2024-10-21-iters.html#new-data-1",
    "title": "Iterations",
    "section": "New data",
    "text": "New data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# A tibble: 2 × 5\n  color   tpr    fpr   fnr error\n  &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 blue  0.503 0.0379 0.497 0.109\n2 red   0.509 0.0378 0.491 0.109"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#two-models-doesnt-seem-right",
    "href": "slides/2024-10-21-iters.html#two-models-doesnt-seem-right",
    "title": "Iterations",
    "section": "TWO models doesn’t seem right????",
    "text": "TWO models doesn’t seem right????\nWhat if we fit only one model to the entire dataset?\nAfter all, there are laws against using protected classes to make decisions (housing, jobs, money loans, college, etc.)\n\n\n# A tibble: 3 × 5\n  term        estimate std.error statistic p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept)   33.1     0.151        219.       0\n2 SAT            0.334   0.00148      225.       0\n3 grades         0.334   0.00148      226.       0\n\n\n(The coefficients kinda look like the red model…)"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#how-do-the-error-rates-change",
    "href": "slides/2024-10-21-iters.html#how-do-the-error-rates-change",
    "title": "Iterations",
    "section": "How do the error rates change?",
    "text": "How do the error rates change?\n\n\n\n\n\n\n\n\n\n\n\n\nOne model:\n\n\n# A tibble: 2 × 5\n  color   tpr    fpr   fnr error\n  &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 blue  0.619 0.0627 0.381 0.112\n2 red   0.507 0.0375 0.493 0.109\n\n\nTwo separate models:\n\n\n# A tibble: 2 × 5\n  color   tpr    fpr   fnr error\n  &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 blue  0.503 0.0379 0.497 0.109\n2 red   0.509 0.0378 0.491 0.109"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#what-did-we-learn",
    "href": "slides/2024-10-21-iters.html#what-did-we-learn",
    "title": "Iterations",
    "section": "What did we learn?",
    "text": "What did we learn?\n\nwith two populations that have different feature distributions, learning a single classifier (that is prohibited from discriminating based on population) will fit the bigger of the two populations\n\n\ndepending on the nature of the distribution difference, it can be either to the benefit or the detriment of the minority population\nno explicit human bias, either on the part of the algorithm designer or the data gathering process\nthe problem is exacerbated if we artificially force the algorithm to be group blind\nwell-intentioned “fairness” regulations prohibiting decision makers form taking sensitive attributes into account can actually make things less fair and less accurate at the same time"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#simulate",
    "href": "slides/2024-10-21-iters.html#simulate",
    "title": "Iterations",
    "section": "Simulate?",
    "text": "Simulate?\n\ndifferent varying proportions\neffect due to variability\neffect due to SAT coefficient\ndifferent number of times the blues get to take the test\netc."
  },
  {
    "objectID": "slides/2024-10-21-iters.html#aside-ifelse",
    "href": "slides/2024-10-21-iters.html#aside-ifelse",
    "title": "Iterations",
    "section": "Aside: ifelse()",
    "text": "Aside: ifelse()\n\ndata.frame(value = c(-2:2)) |&gt;\n  mutate(abs_value = ifelse(value &gt;=0, value, -value))  # abs val\n\n  value abs_value\n1    -2         2\n2    -1         1\n3     0         0\n4     1         1\n5     2         2"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#aside-case_when",
    "href": "slides/2024-10-21-iters.html#aside-case_when",
    "title": "Iterations",
    "section": "Aside: case_when()",
    "text": "Aside: case_when()\n\nset.seed(4747)\ndiamonds |&gt; select(carat, cut, color, price) |&gt;\n  sample_n(20) |&gt;\n  mutate(price_cat = case_when(\n    price &gt; 10000 ~ \"expensive\",\n    price &gt; 1500 ~ \"medium\", \n    TRUE ~ \"inexpensive\"))\n\n# A tibble: 20 × 5\n   carat cut       color price price_cat  \n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;int&gt; &lt;chr&gt;      \n 1  1.23 Very Good F     10276 expensive  \n 2  0.35 Premium   H       706 inexpensive\n 3  0.7  Good      E      2782 medium     \n 4  0.4  Ideal     D      1637 medium     \n 5  0.53 Ideal     G      1255 inexpensive\n 6  2.22 Ideal     G     14637 expensive  \n 7  0.3  Ideal     G       878 inexpensive\n 8  1.05 Ideal     H      4223 medium     \n 9  0.53 Premium   E      1654 medium     \n10  1.7  Ideal     H      7068 medium     \n11  0.31 Good      E       698 inexpensive\n12  0.31 Ideal     F       840 inexpensive\n13  1.03 Ideal     H      4900 medium     \n14  0.31 Premium   G       698 inexpensive\n15  1.56 Premium   G      8858 medium     \n16  1.71 Premium   G     11032 expensive  \n17  1    Good      E      5345 medium     \n18  1.86 Ideal     J     10312 expensive  \n19  1.08 Very Good E      3726 medium     \n20  0.31 Premium   E       698 inexpensive"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#aside-sample",
    "href": "slides/2024-10-21-iters.html#aside-sample",
    "title": "Iterations",
    "section": "Aside: sample()",
    "text": "Aside: sample()\nsampling, shuffling, and resampling: sample()\n\nset.seed(47)\nalph &lt;- letters[1:10]\nalph\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\"\n\nsample(alph, 5, replace = FALSE) # sample (from a population)\n\n[1] \"i\" \"b\" \"g\" \"d\" \"a\"\n\nsample(alph, 5, replace = TRUE) # sample (from a population)\n\n[1] \"j\" \"g\" \"f\" \"i\" \"f\"\n\nsample(alph, 10, replace = FALSE)  # shuffle\n\n [1] \"f\" \"h\" \"i\" \"e\" \"g\" \"d\" \"c\" \"j\" \"b\" \"a\"\n\nsample(alph, 10, replace = TRUE)  # resample\n\n [1] \"e\" \"j\" \"e\" \"b\" \"e\" \"c\" \"f\" \"a\" \"e\" \"a\""
  },
  {
    "objectID": "slides/2024-10-21-iters.html#aside-set.seed",
    "href": "slides/2024-10-21-iters.html#aside-set.seed",
    "title": "Iterations",
    "section": "Aside: set.seed()",
    "text": "Aside: set.seed()\nWhat if we want to be able to generate the same random numbers (here on the interval from 0 to 1) over and over?\n\nset.seed(4747)\nrunif(4, 0, 1) # random uniform numbers\n\n[1] 0.1949071 0.3390270 0.5147919 0.4516470\n\nset.seed(123)\nrunif(4, 0, 1) # random uniform numbers\n\n[1] 0.2875775 0.7883051 0.4089769 0.8830174\n\nset.seed(4747)\nrunif(4, 0, 1) # random uniform numbers\n\n[1] 0.1949071 0.3390270 0.5147919 0.4516470"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#asset-allocation-problem-1",
    "href": "slides/2024-10-21-iters.html#asset-allocation-problem-1",
    "title": "Iterations",
    "section": "Asset allocation problem",
    "text": "Asset allocation problem\nTask: to model an asset allocation problem where you decide what portion of wealth should be allocated to risk-free investment or high-risk investment\n\nthe function calculates returns based on different asset allocations.\n\n\ncalculate_return &lt;- function(step, alpha) {\n  risk_free_rate &lt;- 1.03\n  risky_rate &lt;- rnorm(1, mean = 0, sd = 1) * 0.05 + 1\n  return(data.frame(step = step, \n                    return = (1 - alpha) * risk_free_rate + alpha * risky_rate))\n}\n\ncalculate_return(\"unicorn\", 0.47)\n\n     step   return\n1 unicorn 1.007048"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#let-alpha-0.5",
    "href": "slides/2024-10-21-iters.html#let-alpha-0.5",
    "title": "Iterations",
    "section": "Let alpha = 0.5",
    "text": "Let alpha = 0.5\n(half risky, half risk free)\n\ndecision_steps &lt;- 12\n\npmap(data.frame(step = 1:decision_steps,\n                alpha = rep(0.5, decision_steps)),\n     calculate_return) |&gt; \n  list_rbind()\n\n   step    return\n1     1 1.0244265\n2     2 0.9740712\n3     3 1.0111959\n4     4 1.0382488\n5     5 1.0019058\n6     6 0.9847674\n7     7 1.0296142\n8     8 0.9924038\n9     9 1.0381949\n10   10 1.0088956\n11   11 1.0370043\n12   12 1.0107057"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#many-runs",
    "href": "slides/2024-10-21-iters.html#many-runs",
    "title": "Iterations",
    "section": "Many runs",
    "text": "Many runs\n\nruns &lt;- 10\ndecision_steps &lt;- 12\n\nrun_func &lt;- function(run, steps, alpha){\n  pmap(data.frame(step = 1:steps,\n                  alpha = rep(alpha, steps)),\n       calculate_return) |&gt; \n    list_rbind() |&gt; \n    cbind(run_number = as.factor(run))\n}\n\nrun_func(\"happy\", 12, 0.5)\n\n   step    return run_number\n1     1 0.9972576      happy\n2     2 1.0503818      happy\n3     3 1.0133106      happy\n4     4 1.0305766      happy\n5     5 1.0424264      happy\n6     6 1.0278066      happy\n7     7 1.0088744      happy\n8     8 1.0280513      happy\n9     9 1.0270015      happy\n10   10 1.0495620      happy\n11   11 1.0483569      happy\n12   12 1.0089000      happy\n\nmap(1:runs, run_func, \n    steps = decision_steps,\n    alpha = 0.5) |&gt; \n  list_rbind()\n\n    step    return run_number\n1      1 1.0037332          1\n2      2 1.0305053          1\n3      3 1.0177365          1\n4      4 0.9851848          1\n5      5 1.0200471          1\n6      6 0.9777514          1\n7      7 1.0139097          1\n8      8 1.0394459          1\n9      9 1.0311656          1\n10    10 1.0111325          1\n11    11 1.0600142          1\n12    12 0.9529528          1\n13     1 1.0511925          2\n14     2 1.0188551          2\n15     3 1.0546398          2\n16     4 1.0286009          2\n17     5 1.0090312          2\n18     6 1.0116230          2\n19     7 0.9982508          2\n20     8 1.0397553          2\n21     9 0.9748453          2\n22    10 0.9994628          2\n23    11 1.0325967          2\n24    12 1.0265163          2\n25     1 0.9846161          3\n26     2 1.0106626          3\n27     3 1.0085478          3\n28     4 1.0253148          3\n29     5 0.9879959          3\n30     6 1.0761028          3\n31     7 1.0095107          3\n32     8 1.0417969          3\n33     9 1.0299429          3\n34    10 1.0483370          3\n35    11 1.0039636          3\n36    12 1.0177251          3\n37     1 0.9957903          4\n38     2 1.0446025          4\n39     3 1.0151633          4\n40     4 1.0208127          4\n41     5 1.0138992          4\n42     6 1.0241599          4\n43     7 0.9636553          4\n44     8 1.0330971          4\n45     9 1.0707355          4\n46    10 1.0341161          4\n47    11 1.0076286          4\n48    12 1.0437015          4\n49     1 1.0166442          5\n50     2 1.0424126          5\n51     3 0.9944647          5\n52     4 0.9669553          5\n53     5 1.0152975          5\n54     6 1.0145272          5\n55     7 1.0372179          5\n56     8 1.0407917          5\n57     9 0.9811040          5\n58    10 1.0213106          5\n59    11 0.9962674          5\n60    12 1.0518327          5\n61     1 0.9804384          6\n62     2 1.0313983          6\n63     3 1.0456102          6\n64     4 1.0019782          6\n65     5 0.9848773          6\n66     6 1.0166534          6\n67     7 1.0338028          6\n68     8 1.0222348          6\n69     9 0.9802758          6\n70    10 1.0156817          6\n71    11 1.0424656          6\n72    12 1.0575701          6\n73     1 1.0750144          7\n74     2 1.0058097          7\n75     3 0.9927478          7\n76     4 1.0009444          7\n77     5 1.0055233          7\n78     6 1.0573874          7\n79     7 0.9575212          7\n80     8 0.9957913          7\n81     9 1.0893832          7\n82    10 1.0135442          7\n83    11 1.0152496          7\n84    12 1.0331392          7\n85     1 1.0304361          8\n86     2 1.0111527          8\n87     3 1.0077437          8\n88     4 1.0031964          8\n89     5 1.0507032          8\n90     6 0.9713326          8\n91     7 1.0101054          8\n92     8 1.0556004          8\n93     9 0.9991680          8\n94    10 1.0232786          8\n95    11 1.0182200          8\n96    12 0.9987042          8\n97     1 1.0250592          9\n98     2 1.0300056          9\n99     3 0.9890955          9\n100    4 1.0395173          9\n101    5 1.0147912          9\n102    6 1.0243437          9\n103    7 0.9964191          9\n104    8 1.0782102          9\n105    9 0.9746246          9\n106   10 1.0194040          9\n107   11 1.0383502          9\n108   12 1.0508320          9\n109    1 1.0563048         10\n110    2 0.9850083         10\n111    3 1.0395162         10\n112    4 0.9711030         10\n113    5 1.0193429         10\n114    6 1.0259306         10\n115    7 0.9889117         10\n116    8 1.0418063         10\n117    9 1.0055857         10\n118   10 1.0155720         10\n119   11 1.0350093         10\n120   12 0.9916229         10"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#cummulative-product",
    "href": "slides/2024-10-21-iters.html#cummulative-product",
    "title": "Iterations",
    "section": "Cummulative product",
    "text": "Cummulative product\n\nnumbers &lt;- sample(1:5)\nnumbers\n\n[1] 5 4 2 1 3\n\ncumprod(numbers)\n\n[1]   5  20  40  40 120"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#cummulative-rates",
    "href": "slides/2024-10-21-iters.html#cummulative-rates",
    "title": "Iterations",
    "section": "Cummulative rates",
    "text": "Cummulative rates\n\nmap(1:runs, run_func, \n    steps = decision_steps,\n    alpha = 0.5) |&gt; \n  list_rbind() |&gt; \n  group_by(run_number) |&gt; \n  mutate(compound_return = cumprod(return))\n\n# A tibble: 120 × 4\n# Groups:   run_number [10]\n    step return run_number compound_return\n   &lt;int&gt;  &lt;dbl&gt; &lt;fct&gt;                &lt;dbl&gt;\n 1     1  0.984 1                    0.984\n 2     2  1.01  1                    0.990\n 3     3  1.04  1                    1.03 \n 4     4  0.987 1                    1.02 \n 5     5  1.04  1                    1.05 \n 6     6  1.04  1                    1.09 \n 7     7  0.994 1                    1.09 \n 8     8  1.01  1                    1.10 \n 9     9  1.01  1                    1.12 \n10    10  0.994 1                    1.11 \n# ℹ 110 more rows"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#returns-over-time",
    "href": "slides/2024-10-21-iters.html#returns-over-time",
    "title": "Iterations",
    "section": "Returns over time",
    "text": "Returns over time\n\ngraphcode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nruns &lt;- 20\nmap(1:runs, run_func, \n    steps = decision_steps,\n    alpha = 0.5) |&gt; \n  list_rbind() |&gt; \n  group_by(run_number) |&gt; \n  mutate(compound_return = cumprod(return)) |&gt; \n  ggplot(aes(x = step, y = compound_return)) +\n  geom_line(aes(color = run_number)) +\n  theme(legend.position = \"none\") +\n  scale_x_continuous(breaks = seq(1,12)) + \n  labs(title = \"Simulations of returns from asset allocation, alpha = 0.5\")"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#aside-rnorm",
    "href": "slides/2024-10-21-iters.html#aside-rnorm",
    "title": "Iterations",
    "section": "Aside: rnorm()",
    "text": "Aside: rnorm()\nrnorm() calculates random normal values\n\nrnorm(3)\n\n[1] 1.0598770 0.2813142 0.1483487\n\nrnorm(3, mean = 0, sd = 1)\n\n[1] -1.5222088 -0.2609479  0.1393759\n\nrnorm(4, mean = 47, sd = 5)\n\n[1] 48.91283 45.11651 50.69179 42.14037"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#change-the-allocation",
    "href": "slides/2024-10-21-iters.html#change-the-allocation",
    "title": "Iterations",
    "section": "Change the allocation",
    "text": "Change the allocation\n\ngraphcode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nruns &lt;- 20\nmap(1:runs, run_func, \n    steps = decision_steps, \n    alpha = 0.1) |&gt; \n  list_rbind() |&gt; \n  group_by(run_number) |&gt; \n  mutate(compound_return = cumprod(return)) |&gt; \n  ggplot(aes(x = step, y = compound_return)) +\n  geom_line(aes(color = run_number)) +\n  theme(legend.position = \"none\") +\n  scale_x_continuous(breaks = seq(1,12)) + \n  labs(title = \"Simulations of returns from asset allocation, alpha = 0.1\")"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#change-the-allocation-1",
    "href": "slides/2024-10-21-iters.html#change-the-allocation-1",
    "title": "Iterations",
    "section": "Change the allocation",
    "text": "Change the allocation\n\ngraphcode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nruns &lt;- 20\nmap(1:runs, run_func, \n    steps = decision_steps, \n    alpha = 0.9) |&gt; \n  list_rbind() |&gt; \n  group_by(run_number) |&gt; \n  mutate(compound_return = cumprod(return)) |&gt; \n  ggplot(aes(x = step, y = compound_return)) +\n  geom_line(aes(color = run_number)) +\n  theme(legend.position = \"none\") +\n  scale_x_continuous(breaks = seq(1,12)) + \n  labs(title = \"Simulations of returns from asset allocation, alpha = 0.9\")"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#change-the-return",
    "href": "slides/2024-10-21-iters.html#change-the-return",
    "title": "Iterations",
    "section": "Change the return",
    "text": "Change the return\n\ncalculate returnrun function\n\n\n\ncalculate_return_sd10 &lt;- function(step, alpha) {\n  risk_free_rate &lt;- 1.03\n  risky_rate &lt;- rnorm(1, mean = 0, sd = 10) * 0.05 + 1\n  return(data.frame(step = step, \n                    return = (1 - alpha) * risk_free_rate + alpha * risky_rate))\n}\n\ncalculate_return(\"unicorn\", 0.47)\n\n     step   return\n1 unicorn 0.987021\n\n\n\n\n\nrun_func_sd10 &lt;- function(run, steps, alpha){\n  pmap(data.frame(step = 1:steps,\n                  alpha = rep(alpha, steps)),\n       calculate_return_sd10) |&gt; \n    list_rbind() |&gt; \n    cbind(run_number = as.factor(run))\n}"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#calculate-return",
    "href": "slides/2024-10-21-iters.html#calculate-return",
    "title": "Iterations",
    "section": "calculate return",
    "text": "calculate return\n\ncalculate_return_sd5 &lt;- function(step, alpha) {\n  risk_free_rate &lt;- 1.03\n  risky_rate &lt;- rnorm(1, mean = 0, sd = 5) * 0.05 + 1\n  return(data.frame(step = step, \n                    return = (1 - alpha) * risk_free_rate + alpha * risky_rate))\n}\n\ncalculate_return(\"unicorn\", 0.47)\n\n     step   return\n1 unicorn 1.003459"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#run-function",
    "href": "slides/2024-10-21-iters.html#run-function",
    "title": "Iterations",
    "section": "run function",
    "text": "run function\n\nrun_func_sd5 &lt;- function(run, steps, alpha){\n  pmap(data.frame(step = 1:steps,\n                  alpha = rep(alpha, steps)),\n       calculate_return_sd5) |&gt; \n    list_rbind() |&gt; \n    cbind(run_number = as.factor(run))\n}"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#does-the-change-impact-long-term",
    "href": "slides/2024-10-21-iters.html#does-the-change-impact-long-term",
    "title": "Iterations",
    "section": "Does the change impact long-term?",
    "text": "Does the change impact long-term?\n\ngraphcode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nruns &lt;- 20\nmap(1:runs, run_func_sd10, \n    steps = decision_steps,\n    alpha = 0.5) |&gt; \n  list_rbind() |&gt; \n  group_by(run_number) |&gt; \n  mutate(compound_return = cumprod(return)) |&gt; \n  ggplot(aes(x = step, y = compound_return)) +\n  geom_line(aes(color = run_number)) +\n  theme(legend.position = \"none\") +\n  scale_x_continuous(breaks = seq(1,12)) + \n  labs(title = \"Simulations of returns from asset allocation, alpha = 0.5\")"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#graph",
    "href": "slides/2024-10-21-iters.html#graph",
    "title": "Iterations",
    "section": "graph",
    "text": "graph"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#code",
    "href": "slides/2024-10-21-iters.html#code",
    "title": "Iterations",
    "section": "code",
    "text": "code\n\nruns &lt;- 20\nmap(1:runs, run_func, \n    steps = decision_steps,\n    alpha = 0.5) |&gt; \n  list_rbind() |&gt; \n  group_by(run_number) |&gt; \n  mutate(compound_return = cumprod(return)) |&gt; \n  ggplot(aes(x = step, y = compound_return)) +\n  geom_line(aes(color = run_number)) +\n  theme(legend.position = \"none\") +\n  scale_x_continuous(breaks = seq(1,12)) + \n  labs(title = \"Simulations of returns from asset allocation, alpha = 0.5\")"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#graph-1",
    "href": "slides/2024-10-21-iters.html#graph-1",
    "title": "Iterations",
    "section": "graph",
    "text": "graph"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#code-1",
    "href": "slides/2024-10-21-iters.html#code-1",
    "title": "Iterations",
    "section": "code",
    "text": "code\n\nruns &lt;- 20\nmap(1:runs, run_func, \n    steps = decision_steps, \n    alpha = 0.1) |&gt; \n  list_rbind() |&gt; \n  group_by(run_number) |&gt; \n  mutate(compound_return = cumprod(return)) |&gt; \n  ggplot(aes(x = step, y = compound_return)) +\n  geom_line(aes(color = run_number)) +\n  theme(legend.position = \"none\") +\n  scale_x_continuous(breaks = seq(1,12)) + \n  labs(title = \"Simulations of returns from asset allocation, alpha = 0.1\")"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#asset-allocation",
    "href": "slides/2024-10-21-iters.html#asset-allocation",
    "title": "Iterations",
    "section": "Asset allocation",
    "text": "Asset allocation\nTask: to model an asset allocation problem where you decide what portion of wealth should be allocated to risk-free investment or high-risk investment\n\nthe function calculates returns based on different asset allocations.\n\n\ncalculate_return &lt;- function(step, alpha) {\n  risk_free_rate &lt;- 1.03\n  risky_rate &lt;- rnorm(1, mean = 0, sd = 1) * 0.05 + 1\n  return(data.frame(step = step, \n                    return = (1 - alpha) * risk_free_rate + alpha * risky_rate))\n}\n\ncalculate_return(\"unicorn\", 0.47)\n\n     step   return\n1 unicorn 1.007048"
  },
  {
    "objectID": "slides/2024-10-21-iters.html#asset-allocation-1",
    "href": "slides/2024-10-21-iters.html#asset-allocation-1",
    "title": "Iterations",
    "section": "Asset allocation",
    "text": "Asset allocation\nTask: to model an asset allocation problem where you decide what portion of wealth should be allocated to risk-free investment or high-risk investment\n\nthe function calculates returns based on different asset allocations.\n\n\ncalculate_return &lt;- function(step, alpha) {\n  risk_free_rate &lt;- 1.03\n  risky_rate &lt;- rnorm(1, mean = 0, sd = 1) * 0.05 + 1\n  return(data.frame(step = step, \n                    return = (1 - alpha) * risk_free_rate + alpha * risky_rate))\n}\n\ncalculate_return(\"unicorn\", 0.47)\n\n     step   return\n1 unicorn 1.034815"
  },
  {
    "objectID": "slides/2024-10-28-perm.html",
    "href": "slides/2024-10-28-perm.html",
    "title": "Permutation Tests",
    "section": "",
    "text": "Hypothesis tests\nPermutation tests"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#example-helper-or-hinderer",
    "href": "slides/2024-10-28-perm.html#example-helper-or-hinderer",
    "title": "Permutation Tests",
    "section": "Example: helper or hinderer",
    "text": "Example: helper or hinderer\n\nIn a study reported in the November 2007 issue of Nature, researchers investigated whether infants take into account an individual’s actions towards others in evaluating that individual as appealing or aversive, perhaps laying for the foundation for social interaction (Hamlin, Wynn, and Bloom 2007). In other words, do children who aren’t even yet talking still form impressions as to someone’s friendliness based on their actions? In one component of the study, 10-month-old infants were shown a “climber” character (a piece of wood with “googly” eyes glued onto it) that could not make it up a hill in two tries. Then the infants were shown two scenarios for the climber’s next try, one where the climber was pushed to the top of the hill by another character (the “helper” toy) and one where the climber was pushed back down the hill by another character (the “hinderer” toy). The infant was alternately shown these two scenarios several times. Then the child was presented with both pieces of wood (the helper and the hinderer characters) and asked to pick one to play with."
  },
  {
    "objectID": "slides/2024-10-28-perm.html#parts-of-a-hypothesis-test",
    "href": "slides/2024-10-28-perm.html#parts-of-a-hypothesis-test",
    "title": "Permutation Tests",
    "section": "Parts of a hypothesis test",
    "text": "Parts of a hypothesis test\n\nWhat are the observational units?\n\ninfants\n\nWhat is the variable? What type of variable?\n\nchoice of helper or hindered: categorical\n\nWhat is the statistic?\n\n\\(\\hat{p}\\) = proportion of infants who chose helper = 14/16 = 0.875\n\nWhat is the parameter?\n\np = proportion of all infants who might choose helper (not measurable!)"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#hypotheses",
    "href": "slides/2024-10-28-perm.html#hypotheses",
    "title": "Permutation Tests",
    "section": "Hypotheses",
    "text": "Hypotheses\n\\(H_0\\): Null hypothesis. Babies (or rather, the population of babies under consideration) have no inherent preference for the helper or the hinderer shape.\n\\(H_A\\): Alternative hypothesis. Babies (or rather, the population of babies under consideration) are more likely to prefer the helper shape over the hinderer shape."
  },
  {
    "objectID": "slides/2024-10-28-perm.html#p-value",
    "href": "slides/2024-10-28-perm.html#p-value",
    "title": "Permutation Tests",
    "section": "p-value",
    "text": "p-value\n\np-value is the probability of our data or more extreme if nothing interesting is going on.\n\n\n\n\n\n\n\n\n\ncompletely arbitrary cutoff\n\\(\\rightarrow\\)\ngenerally accepted conclusion\n\n\n\n\np-value \\(&gt;\\) 0.10\n\\(\\rightarrow\\)\nno evidence against the null model\n\n\n0.05 \\(&lt;\\) p-value \\(&lt;\\) 0.10\n\\(\\rightarrow\\)\nmoderate evidence against the null model\n\n\n0.01 \\(&lt;\\) p-value \\(&lt;\\) 0.05\n\\(\\rightarrow\\)\nstrong evidence against the null model\n\n\np-value \\(&lt;\\) 0.01\n\\(\\rightarrow\\)\nvery strong evidence against the null model"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#computation",
    "href": "slides/2024-10-28-perm.html#computation",
    "title": "Permutation Tests",
    "section": "Computation",
    "text": "Computation\nFirst find the statistic\n\n# to control the randomness\nset.seed(47)\n\n# first create a data frame with the Infant data\nInfants &lt;- read.delim(\"http://www.rossmanchance.com/iscam3/data/InfantData.txt\")\n\n# find the observed number of babies who chose the helper\nhelp_obs &lt;- Infants |&gt; \n  summarize(prop_help = mean(choice == \"helper\")) |&gt; \n  pull()\nhelp_obs\n\n[1] 0.875"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#computation-1",
    "href": "slides/2024-10-28-perm.html#computation-1",
    "title": "Permutation Tests",
    "section": "Computation",
    "text": "Computation\nFind the sampling distribution under the condition that the null hypothesis is true.\n\nfunctionrepeatvizviz code\n\n\n\n# write a function to simulate a set of infants who are \n# equally likely to choose the helper or the hinderer\n\nrandom_choice &lt;- function(rep, num_babies){\n  choice = sample(c(\"helper\", \"hinderer\"), size = num_babies,\n                  replace = TRUE, prob = c(0.5, 0.5))\n  return(mean(choice == \"helper\"))\n}\n\n\n\n\n# repeat the function many times\nmap_dbl(c(1:10), random_choice, num_babies = 16)\n\n [1] 0.6875 0.3750 0.4375 0.3750 0.5000 0.5000 0.6250 0.4375 0.6875 0.6250\n\nnum_exper &lt;- 5000\nhelp_random &lt;- map_dbl(c(1:num_exper), random_choice, \n                            num_babies = 16)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# visualize null sampling distribution\nhelp_random |&gt; \n  data.frame() |&gt; \n  ggplot(aes(x = help_random)) + \n  geom_histogram() + \n  labs(x = \"proportion of babies who chose the helper\",\n       title = \"sampling distribution when null hypothesis is true\",\n       subtitle = \"that is, no inherent preference for helper or hinderer\")"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#computation-2",
    "href": "slides/2024-10-28-perm.html#computation-2",
    "title": "Permutation Tests",
    "section": "Computation",
    "text": "Computation\nAre the null values consistent with the observed value?\n\nvizp-valueviz code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# the p-value!\nsum(help_random &gt;= help_obs) / num_exper\n\n[1] 0.0022\n\n\n\n\n\n# visualize null sampling distribution\nhelp_random |&gt; \n  data.frame() |&gt; \n  ggplot(aes(x = help_random)) + \n  geom_histogram() + \n  geom_vline(xintercept = help_obs, color = \"red\") + \n  labs(x = \"proportion of babies who chose the helper\",\n       title = \"sampling distribution when null hypothesis is true\",\n       subtitle = \"that is, no inherent preference for helper or hinderer\")"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#all-together-structure-of-a-hypothesis-test",
    "href": "slides/2024-10-28-perm.html#all-together-structure-of-a-hypothesis-test",
    "title": "Permutation Tests",
    "section": "All together: structure of a hypothesis test",
    "text": "All together: structure of a hypothesis test\n\ndecide on a research question (which will determine the test)\ncollect data, specify the variables of interest\nstate the null (and alternative) hypothesis values (often statements about parameters)\n\nthe null claim is the science we want to reject\nthe alternative claim is the science we want to demonstrate\n\ngenerate a (null) sampling distribution to describe the variability of the statistic that was calculated along the way\nvisualize the distribution of the statistics under the null model\nget p-value to measure the consistency of the observed statistic and the possible values of the statistic under the null model\nmake a conclusion using words that describe the research setting"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#hypotheses-1",
    "href": "slides/2024-10-28-perm.html#hypotheses-1",
    "title": "Permutation Tests",
    "section": "Hypotheses",
    "text": "Hypotheses\n\nHypothesis Testing compares data to the expectation of a specific null hypothesis. If the data are unusual, assuming that the null hypothesis is true, then the null hypothesis is rejected.\nThe Null Hypothesis, \\(H_0\\), is a specific statement about a population made for the purposes of argument. A good null hypothesis is a statement that would be interesting to reject.\nThe Alternative Hypothesis, \\(H_A\\), is a specific statement about a population that is in the researcher’s interest to demonstrate. Typically, the alternative hypothesis contains all the values of the population that are not included in the null hypothesis.\nIn a two-sided (or two-tailed) test, the alternative hypothesis includes values on both sides of the value specified by the null hypothesis.\nIn a one-sided (or one-tailed) test, the alternative hypothesis includes parameter values on only one side of the value specified by the null hypothesis. \\(H_0\\) is rejected only if the data depart from it in the direction stated by \\(H_A\\)."
  },
  {
    "objectID": "slides/2024-10-28-perm.html#example-helper-or-hinderer-1",
    "href": "slides/2024-10-28-perm.html#example-helper-or-hinderer-1",
    "title": "Permutation Tests",
    "section": "Example: helper or hinderer",
    "text": "Example: helper or hinderer\n\nInfant videos\n“Social evaluation by preverbal infants”, Nature 2007"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#references",
    "href": "slides/2024-10-28-perm.html#references",
    "title": "Permutation Tests",
    "section": "References",
    "text": "References\n\n\n\n\nHamlin, J. Kiley, Karen Wynn, and Paul Bloom. 2007. “Social Evaluation by Preverbal Infants.” Nature 450: 557–59."
  },
  {
    "objectID": "slides/2024-10-28-perm.html#statistics-without-the-agonizing-pain",
    "href": "slides/2024-10-28-perm.html#statistics-without-the-agonizing-pain",
    "title": "Permutation Tests",
    "section": "Statistics Without the Agonizing Pain",
    "text": "Statistics Without the Agonizing Pain\n\nJohn Rauser of Pintrest (now Amazon), speaking at Strata + Hadoop 2014. https://blog.revolutionanalytics.com/2014/10/statistics-doesnt-have-to-be-that-hard.html"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#logic-of-hypothesis-tests",
    "href": "slides/2024-10-28-perm.html#logic-of-hypothesis-tests",
    "title": "Permutation Tests",
    "section": "Logic of hypothesis tests",
    "text": "Logic of hypothesis tests\n\nChoose a statistic that measures the effect.\nConstruct the sampling distribution under \\(H_0\\).\nLocate the observed statistic in the null sampling distribution.\np-value is the probability of the observed data or more extreme if the null hypothesis is true"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#logic-of-permutation-tests",
    "href": "slides/2024-10-28-perm.html#logic-of-permutation-tests",
    "title": "Permutation Tests",
    "section": "Logic of permutation tests",
    "text": "Logic of permutation tests\n\nChoose a test statistic.\nShuffle the data (force the null hypothesis to be true). Using the shuffled statistics, create a null sampling distribution of the test statistic (under \\(H_0\\)).\nFind the observed test statistic on the null sampling distribution.\nCompute the p-value (observed data or more extreme). The p-value can be one or two-sided."
  },
  {
    "objectID": "slides/2024-10-28-perm.html#consider-the-blizzard-entertainment-data",
    "href": "slides/2024-10-28-perm.html#consider-the-blizzard-entertainment-data",
    "title": "Permutation Tests",
    "section": "Consider the Blizzard Entertainment data",
    "text": "Consider the Blizzard Entertainment data\nIn a revolt over salary inequities, Blizzard Entertainment workers shared salary information.\n\ndatawrangling\n\n\n\n\n# A tibble: 409 × 4\n   percent_incr salary_type annual_salary performance_rating\n          &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;             \n 1          1   Salaried               1  High              \n 2          1   Salaried               1  Successful        \n 3          1   Salaried               1  High              \n 4          1   Hourly             33987. Successful        \n 5         NA   Hourly             34798. High              \n 6         NA   Hourly             35360  &lt;NA&gt;              \n 7         NA   Hourly             37440  &lt;NA&gt;              \n 8          0   Hourly             37814. &lt;NA&gt;              \n 9          4   Hourly             41101. Top               \n10          1.2 Hourly             42328  &lt;NA&gt;              \n# ℹ 399 more rows\n\n\n\n\n\nblizzard_salary &lt;- blizzard_salary |&gt;\n  mutate(\n    annual_salary = case_when(\n      salary_type == \"week\" ~ current_salary * 52,\n      salary_type == \"hour\" ~ current_salary * 40 * 52,\n      TRUE ~ current_salary\n    ),\n    performance_rating = if_else(performance_rating == \"Developing\", \"Poor\", performance_rating)\n  ) |&gt;\n  filter(salary_type != \"week\") |&gt;\n  mutate(\n    salary_type = if_else(salary_type == \"hour\", \"Hourly\", \"Salaried\")\n  ) |&gt;\n  filter(!is.na(annual_salary)) |&gt;\n  select(percent_incr, salary_type, annual_salary, performance_rating)"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#summary-of-the-variable-of-interest",
    "href": "slides/2024-10-28-perm.html#summary-of-the-variable-of-interest",
    "title": "Permutation Tests",
    "section": "Summary of the variable of interest",
    "text": "Summary of the variable of interest\n\nhsb2 |&gt; \n  group_by(schtyp) |&gt; \n  summarize(ave_math = mean(math),\n            med_math = median(math))\n\n# A tibble: 2 × 3\n  schtyp  ave_math med_math\n  &lt;fct&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n1 public      52.2     52  \n2 private     54.8     53.5"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#consider-blizzard-entertainment-data",
    "href": "slides/2024-10-28-perm.html#consider-blizzard-entertainment-data",
    "title": "Permutation Tests",
    "section": "Consider Blizzard Entertainment data",
    "text": "Consider Blizzard Entertainment data\nIn a revolt over salary inequities, Blizzard Entertainment workers shared salary information.\n\ndatawrangling\n\n\n\n\n# A tibble: 409 × 4\n   percent_incr salary_type annual_salary performance_rating\n          &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;             \n 1          1   Salaried               1  High              \n 2          1   Salaried               1  Successful        \n 3          1   Salaried               1  High              \n 4          1   Hourly             33987. Successful        \n 5         NA   Hourly             34798. High              \n 6         NA   Hourly             35360  &lt;NA&gt;              \n 7         NA   Hourly             37440  &lt;NA&gt;              \n 8          0   Hourly             37814. &lt;NA&gt;              \n 9          4   Hourly             41101. Top               \n10          1.2 Hourly             42328  &lt;NA&gt;              \n# ℹ 399 more rows\n\n\n\n\n\nlibrary(openinto)\nblizzard_salary &lt;- blizzard_salary |&gt;\n  mutate(\n    annual_salary = case_when(\n      salary_type == \"week\" ~ current_salary * 52,\n      salary_type == \"hour\" ~ current_salary * 40 * 52,\n      TRUE ~ current_salary\n    ),\n    performance_rating = if_else(performance_rating == \"Developing\", \"Poor\", performance_rating)\n  ) |&gt;\n  filter(salary_type != \"week\") |&gt;\n  mutate(\n    salary_type = if_else(salary_type == \"hour\", \"Hourly\", \"Salaried\")\n  ) |&gt;\n  filter(!is.na(annual_salary)) |&gt;\n  select(percent_incr, salary_type, annual_salary, performance_rating)"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#visualize-the-relationship-of-interest",
    "href": "slides/2024-10-28-perm.html#visualize-the-relationship-of-interest",
    "title": "Permutation Tests",
    "section": "Visualize the relationship of interest",
    "text": "Visualize the relationship of interest\n\nhsb2 |&gt; \n  ggplot(aes(x = schtyp, y = math)) + \n  geom_boxplot()"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#test-the-relationship-of-interest",
    "href": "slides/2024-10-28-perm.html#test-the-relationship-of-interest",
    "title": "Permutation Tests",
    "section": "Test the relationship of interest",
    "text": "Test the relationship of interest\n\nhsb2 |&gt; \n  group_by(schtyp) |&gt; \n  summarize(ave_math = mean(math),\n            med_math = median(math))\n\n# A tibble: 2 × 3\n  schtyp  ave_math med_math\n  &lt;fct&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n1 public      52.2     52  \n2 private     54.8     53.5\n\nhsb2 |&gt; \n  group_by(schtyp) |&gt; \n  summarize(ave_math = mean(math),\n            med_math = median(math)) |&gt; \n  summarize(ave_diff = diff(ave_math),\n            med_diff = diff(med_math))\n\n# A tibble: 1 × 2\n  ave_diff med_diff\n     &lt;dbl&gt;    &lt;dbl&gt;\n1     2.51      1.5\n\n\n\nstate the null (and alternative) hypothesis values (often statements about parameters)\n\nthe null claim is the science we want to reject\nthe alternative claim is the science we want to demonstrate\n\ngenerate a (null) sampling distribution to describe the variability of the statistic that was calculated along the way\nvisualize the distribution of the statistics under the null model\nget p-value to measure the consistency of the observed statistic and the possible values of the statistic under the null model\nmake a conclusion using words that describe the research setting"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#applet-for-two-sample-permutation-tests",
    "href": "slides/2024-10-28-perm.html#applet-for-two-sample-permutation-tests",
    "title": "Permutation Tests",
    "section": "Applet for two sample permutation tests",
    "text": "Applet for two sample permutation tests\n\npermutation test for two samples from Rossman Chance applets."
  },
  {
    "objectID": "slides/2024-10-28-perm.html#consider-high-school-beyond-survey",
    "href": "slides/2024-10-28-perm.html#consider-high-school-beyond-survey",
    "title": "Permutation Tests",
    "section": "Consider High School & Beyond survey",
    "text": "Consider High School & Beyond survey\nData: 200 randomly selected observations from the High School and Beyond survey, conducted on high school seniors by the National Center for Educational Statistics.\nResearch Question: in the population, are private school kids more likely to have a higher math score?\n\\[H_0: \\mu_{private} = \\mu_{public}\\] \\[H_A: \\mu_{private} &gt; \\mu_{public}\\]\nWhere \\(\\mu\\) is the average math score in the population.\n\nlibrary(openintro)\nhsb2\n\n# A tibble: 200 × 11\n      id gender race          ses   schtyp prog   read write  math science socst\n   &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;         &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt; &lt;int&gt;\n 1    70 male   white         low   public gene…    57    52    41      47    57\n 2   121 female white         midd… public voca…    68    59    53      63    61\n 3    86 male   white         high  public gene…    44    33    54      58    31\n 4   141 male   white         high  public voca…    63    44    47      53    56\n 5   172 male   white         midd… public acad…    47    52    57      53    61\n 6   113 male   white         midd… public acad…    44    52    51      63    61\n 7    50 male   african amer… midd… public gene…    50    59    42      53    61\n 8    11 male   hispanic      midd… public acad…    34    46    45      39    36\n 9    84 male   white         midd… public gene…    63    57    54      58    51\n10    48 male   african amer… midd… public acad…    57    55    52      50    51\n# ℹ 190 more rows"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#high-school-beyond-survey",
    "href": "slides/2024-10-28-perm.html#high-school-beyond-survey",
    "title": "Permutation Tests",
    "section": "High School & Beyond survey",
    "text": "High School & Beyond survey\nData: 200 randomly selected observations from the High School and Beyond survey, conducted on high school seniors by the National Center for Educational Statistics.\nResearch Question: in the population, do private school kids have a higher math score on average?\n\\[H_0: \\mu_{private} = \\mu_{public}\\] \\[H_A: \\mu_{private} &gt; \\mu_{public}\\]\n\\(\\mu\\) is the average math score in the population.\n\nlibrary(openintro)\nhsb2\n\n# A tibble: 200 × 11\n      id gender race          ses   schtyp prog   read write  math science socst\n   &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;         &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt; &lt;int&gt;\n 1    70 male   white         low   public gene…    57    52    41      47    57\n 2   121 female white         midd… public voca…    68    59    53      63    61\n 3    86 male   white         high  public gene…    44    33    54      58    31\n 4   141 male   white         high  public voca…    63    44    47      53    56\n 5   172 male   white         midd… public acad…    47    52    57      53    61\n 6   113 male   white         midd… public acad…    44    52    51      63    61\n 7    50 male   african amer… midd… public gene…    50    59    42      53    61\n 8    11 male   hispanic      midd… public acad…    34    46    45      39    36\n 9    84 male   white         midd… public gene…    63    57    54      58    51\n10    48 male   african amer… midd… public acad…    57    55    52      50    51\n# ℹ 190 more rows"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#summary-of-the-variables",
    "href": "slides/2024-10-28-perm.html#summary-of-the-variables",
    "title": "Permutation Tests",
    "section": "Summary of the variables",
    "text": "Summary of the variables\n\nhsb2 |&gt; \n  group_by(schtyp) |&gt; \n  summarize(ave_math = mean(math),\n            med_math = median(math))\n\n# A tibble: 2 × 3\n  schtyp  ave_math med_math\n  &lt;fct&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n1 public      52.2     52  \n2 private     54.8     53.5"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#calculate-the-observed-statistics",
    "href": "slides/2024-10-28-perm.html#calculate-the-observed-statistics",
    "title": "Permutation Tests",
    "section": "Calculate the observed statistic(s)",
    "text": "Calculate the observed statistic(s)\nFor fun, we are calculating both the difference in averages as well as the difference in medians. That is, we have two different observed summary statistics to work with.\n\nhsb2 |&gt; \n  group_by(schtyp) |&gt; \n  summarize(ave_math = mean(math),\n            med_math = median(math))\n\n# A tibble: 2 × 3\n  schtyp  ave_math med_math\n  &lt;fct&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n1 public      52.2     52  \n2 private     54.8     53.5\n\nhsb2 |&gt; \n  group_by(schtyp) |&gt; \n  summarize(ave_math = mean(math),\n            med_math = median(math)) |&gt; \n  summarize(ave_diff = diff(ave_math),\n            med_diff = diff(med_math))\n\n# A tibble: 1 × 2\n  ave_diff med_diff\n     &lt;dbl&gt;    &lt;dbl&gt;\n1     2.51      1.5"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#generate-a-null-sampling-distribution.",
    "href": "slides/2024-10-28-perm.html#generate-a-null-sampling-distribution.",
    "title": "Permutation Tests",
    "section": "Generate a null sampling distribution.",
    "text": "Generate a null sampling distribution.\n\nperm_data &lt;- function(rep, data){\n  data |&gt; \n    select(schtyp, math) |&gt; \n    mutate(math_perm = sample(math, replace = FALSE)) |&gt; \n    group_by(schtyp) |&gt; \n    summarize(obs_ave = mean(math),\n              obs_med = median(math),\n              perm_ave = mean(math_perm),\n              perm_med = median(math_perm)) |&gt; \n    summarize(obs_ave_diff = diff(obs_ave),\n              obs_med_diff = diff(obs_med),\n              perm_ave_diff = diff(perm_ave),\n              perm_med_diff = diff(perm_med),\n              rep = rep)\n}\n\nmap(c(1:10), perm_data, data = hsb2) |&gt; \n  list_rbind()\n\n# A tibble: 10 × 5\n   obs_ave_diff obs_med_diff perm_ave_diff perm_med_diff   rep\n          &lt;dbl&gt;        &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1         2.51          1.5         2.62            2.5     1\n 2         2.51          1.5         0.757          -1       2\n 3         2.51          1.5         1.65            2       3\n 4         2.51          1.5        -0.805          -0.5     4\n 5         2.51          1.5         1.80            2.5     5\n 6         2.51          1.5         2.92            3       6\n 7         2.51          1.5         1.91            2.5     7\n 8         2.51          1.5        -2.55           -3.5     8\n 9         2.51          1.5        -1.21           -3       9\n10         2.51          1.5         1.32            1      10"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#visualize-the-null-sampling-distribution-average",
    "href": "slides/2024-10-28-perm.html#visualize-the-null-sampling-distribution-average",
    "title": "Permutation Tests",
    "section": "Visualize the null sampling distribution (average)",
    "text": "Visualize the null sampling distribution (average)\n\nset.seed(47)\nperm_stats &lt;- \n  map(c(1:500), perm_data, data = hsb2) |&gt; \n  list_rbind() \n\nperm_stats |&gt; \n  ggplot(aes(x = perm_ave_diff)) + \n  geom_histogram() + \n  geom_vline(aes(xintercept = obs_ave_diff), color = \"red\")"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#visualize-the-null-sampling-distribution-median",
    "href": "slides/2024-10-28-perm.html#visualize-the-null-sampling-distribution-median",
    "title": "Permutation Tests",
    "section": "Visualize the null sampling distribution (median)",
    "text": "Visualize the null sampling distribution (median)\n\nperm_stats |&gt; \n  ggplot(aes(x = perm_med_diff)) + \n  geom_histogram() + \n  geom_vline(aes(xintercept = obs_med_diff), color = \"red\")"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#p-value-2",
    "href": "slides/2024-10-28-perm.html#p-value-2",
    "title": "Permutation Tests",
    "section": "p-value",
    "text": "p-value\n\nperm_stats |&gt; \n  summarize(p_val_ave = mean(perm_ave_diff &gt; obs_ave_diff),\n            p_val_med = mean(perm_med_diff &gt; obs_med_diff))\n\n# A tibble: 1 × 2\n  p_val_ave p_val_med\n      &lt;dbl&gt;     &lt;dbl&gt;\n1     0.086      0.27"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#conclusion",
    "href": "slides/2024-10-28-perm.html#conclusion",
    "title": "Permutation Tests",
    "section": "Conclusion",
    "text": "Conclusion\nFrom these data, the observed differences seem to be consistent with the distribution of differences in the null sampling distribution.\nThere is no evidence to reject the null hypothesis.\nWe cannot claim that in the population the average math scores for private school kids is larger than the average math scores for public school kids (p-value = 0.086).\nWe cannot claim that in the population the median math scores for private school kids is larger than the median math scores for public school kids (p-value = 0.27)."
  },
  {
    "objectID": "slides/2024-10-28-perm.html#what-if-the-hypotheses-were-two-sided",
    "href": "slides/2024-10-28-perm.html#what-if-the-hypotheses-were-two-sided",
    "title": "Permutation Tests",
    "section": "What if the hypotheses were two-sided?",
    "text": "What if the hypotheses were two-sided?\n\\(H_0: \\mu_{private} = \\mu_{public}\\) and \\(H_A: \\mu_{private} \\ne \\mu_{public}\\)"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#two-sided-test",
    "href": "slides/2024-10-28-perm.html#two-sided-test",
    "title": "Permutation Tests",
    "section": "Two-sided test:",
    "text": "Two-sided test:\n\\(H_0: \\mu_{private} = \\mu_{public}\\) and \\(H_A: \\mu_{private} \\ne \\mu_{public}\\)"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#two-sided-p-value",
    "href": "slides/2024-10-28-perm.html#two-sided-p-value",
    "title": "Permutation Tests",
    "section": "Two-sided p-value",
    "text": "Two-sided p-value\n\nperm_stats |&gt; \n    summarize(p_val_ave = \n                mean(perm_ave_diff &gt; obs_ave_diff | \n                       perm_ave_diff &lt; -obs_ave_diff),\n              p_val_med = \n              mean(perm_med_diff &gt; obs_med_diff | \n                     perm_med_diff &lt; -obs_med_diff))\n\n# A tibble: 1 × 2\n  p_val_ave p_val_med\n      &lt;dbl&gt;     &lt;dbl&gt;\n1     0.154     0.534"
  },
  {
    "objectID": "slides/2024-10-28-perm.html#two-sided-conclusion",
    "href": "slides/2024-10-28-perm.html#two-sided-conclusion",
    "title": "Permutation Tests",
    "section": "Two-sided conclusion",
    "text": "Two-sided conclusion\nFrom these data, the observed differences seem to be consistent with the distribution of differences in the null sampling distribution.\nThere is no evidence to reject the null hypothesis.\nWe cannot claim that there is a difference in average math scores in the population (p-value = 0.154).\nWe cannot claim that there is a difference in median math scores int he population (p-value = 0.534)."
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#important-tool",
    "href": "slides/2024-11-04-webscrape.html#important-tool",
    "title": "Web Scraping",
    "section": "Important tool",
    "text": "Important tool\nOur approach to web scraping relies on the Chrome browser and an extension called a Selector Gadget. Download them here:\n\nChrome\nSelectorGadget from Chrome or SelectorGadget vignette etc."
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#reading-the-student-life",
    "href": "slides/2024-11-04-webscrape.html#reading-the-student-life",
    "title": "Web Scraping",
    "section": "Reading The Student Life",
    "text": "Reading The Student Life\n\nHow often do you read The Student Life?\na. Every day\nb. 3-5 times a week\nc. Once a week\nd. Rarely"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#reading-the-student-life-1",
    "href": "slides/2024-11-04-webscrape.html#reading-the-student-life-1",
    "title": "Web Scraping",
    "section": "Reading The Student Life",
    "text": "Reading The Student Life\n\nWhat do you think is the most common word in the titles of The Student Life opinion pieces?"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#analyzing-the-student-life",
    "href": "slides/2024-11-04-webscrape.html#analyzing-the-student-life",
    "title": "Web Scraping",
    "section": "Analyzing The Student Life",
    "text": "Analyzing The Student Life"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#reading-the-student-life-2",
    "href": "slides/2024-11-04-webscrape.html#reading-the-student-life-2",
    "title": "Web Scraping",
    "section": "Reading The Student Life",
    "text": "Reading The Student Life\n\nHow do you think the sentiments in opinion pieces in The Student Life compare across authors?\nRoughly the same?\nWildly different?\nSomewhere in between?"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#analyzing-the-student-life-1",
    "href": "slides/2024-11-04-webscrape.html#analyzing-the-student-life-1",
    "title": "Web Scraping",
    "section": "Analyzing The Student Life",
    "text": "Analyzing The Student Life"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#all-of-this-analysis-is-done-in-r",
    "href": "slides/2024-11-04-webscrape.html#all-of-this-analysis-is-done-in-r",
    "title": "Web Scraping",
    "section": "All of this analysis is done in R!",
    "text": "All of this analysis is done in R!\n\n(mostly) with tools you already know!"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#common-words-in-the-student-life-titles",
    "href": "slides/2024-11-04-webscrape.html#common-words-in-the-student-life-titles",
    "title": "Web Scraping",
    "section": "Common words in The Student Life titles",
    "text": "Common words in The Student Life titles\nCode for the earlier plot:\n\ndata(stop_words)  # from tidytext\ntsl_opinion_titles |&gt;\n  tidytext::unnest_tokens(word, title) |&gt;\n  anti_join(stop_words) |&gt;\n  count(word, sort = TRUE) |&gt;\n  slice_head(n = 20) |&gt;\n  mutate(word = fct_reorder(word, n)) |&gt;\n  ggplot(aes(y = word, x = n, fill = log(n))) +\n  geom_col(show.legend = FALSE) +\n  theme_minimal(base_size = 16) +\n  labs(\n    x = \"Number of mentions\",\n    y = \"Word\",\n    title = \"The Student Life - Opinion pieces\",\n    subtitle = \"Common words in the 500 most recent opinion pieces\",\n    caption = \"Source: Data scraped from The Student Life on Nov 4, 2024\"\n  ) +\n  theme(\n    plot.title.position = \"plot\",\n    plot.caption = element_text(color = \"gray30\")\n  )"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#avg-sentiment-scores-of-abstracts",
    "href": "slides/2024-11-04-webscrape.html#avg-sentiment-scores-of-abstracts",
    "title": "Web Scraping",
    "section": "Avg sentiment scores of abstracts",
    "text": "Avg sentiment scores of abstracts\nCode for the earlier plot:\n\nafinn_sentiments &lt;- get_sentiments(\"afinn\")  # need tidytext and textdata\ntsl_opinion_titles |&gt;\n  tidytext::unnest_tokens(word, first_p) |&gt;\n  anti_join(stop_words) |&gt;\n  left_join(afinn_sentiments) |&gt; \n  group_by(authors, title) |&gt;\n  summarize(total_sentiment = sum(value, na.rm = TRUE), .groups = \"drop\") |&gt;\n  group_by(authors) |&gt;\n  summarize(\n    n_articles = n(),\n    avg_sentiment = mean(total_sentiment, na.rm = TRUE),\n  ) |&gt;\n  filter(n_articles &gt; 1 & !is.na(authors)) |&gt;\n  arrange(desc(avg_sentiment)) |&gt;\n  slice(c(1:10, 69:78)) |&gt;\n  mutate(\n    authors = fct_reorder(authors, avg_sentiment),\n    neg_pos = if_else(avg_sentiment &lt; 0, \"neg\", \"pos\"),\n    label_position = if_else(neg_pos == \"neg\", 0.25, -0.25)\n  ) |&gt;\n  ggplot(aes(y = authors, x = avg_sentiment)) +\n  geom_col(aes(fill = neg_pos), show.legend = FALSE) +\n  geom_text(\n    aes(x = label_position, label = authors, color = neg_pos),\n    hjust = c(rep(1,10), rep(0, 10)),\n    show.legend = FALSE,\n    fontface = \"bold\"\n  ) +\n  geom_text(\n    aes(label = round(avg_sentiment, 1)),\n    hjust = c(rep(1.25,10), rep(-0.25, 10)),\n    color = \"white\",\n    fontface = \"bold\"\n  ) +\n  scale_fill_manual(values = c(\"neg\" = \"#4d4009\", \"pos\" = \"#FF4B91\")) +\n  scale_color_manual(values = c(\"neg\" = \"#4d4009\", \"pos\" = \"#FF4B91\")) +\n  scale_x_continuous(breaks = -5:5, minor_breaks = NULL) +\n  scale_y_discrete(breaks = NULL) +\n  coord_cartesian(xlim = c(-5, 5)) +\n  labs(\n    x = \"negative  ←     Average sentiment score (AFINN)     →  positive\",\n    y = NULL,\n    title = \"The Student Life - Opinion pieces\\nAverage sentiment scores of first paragraph by author\",\n    subtitle = \"Top 10 average positive and negative scores\",\n    caption = \"Source: Data scraped from The Student Life on Nov 4, 2024\"\n  ) +\n  theme_void(base_size = 16) +\n  theme(\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5, margin = unit(c(0.5, 0, 1, 0), \"lines\")),\n    axis.text.y = element_blank(),\n    plot.caption = element_text(color = \"gray30\")\n  )"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#where-is-the-data-coming-from",
    "href": "slides/2024-11-04-webscrape.html#where-is-the-data-coming-from",
    "title": "Web Scraping",
    "section": "Where is the data coming from?",
    "text": "Where is the data coming from?\n\nhttps://tsl.news/category/opinions/"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#where-is-the-data-coming-from-1",
    "href": "slides/2024-11-04-webscrape.html#where-is-the-data-coming-from-1",
    "title": "Web Scraping",
    "section": "Where is the data coming from?",
    "text": "Where is the data coming from?\n\n\n\n\n\n\n\n\n\ntsl_opinion_titles\n\n# A tibble: 500 × 4\n   title                                     authors date                first_p\n   &lt;chr&gt;                                     &lt;chr&gt;   &lt;dttm&gt;              &lt;chr&gt;  \n 1 Elon Musk’s million-dollar-a-day rewards… Celest… 2024-11-01 16:27:00 have y…\n 2 The politics behind apolitical acts       Eric Lu 2024-11-01 16:21:00 while …\n 3 In Defense of the Pomona College Judicia… Henri … 2024-11-01 16:15:00 former…\n 4 ‘Yakking’ isn’t a canon event, party res… Kabir … 2024-11-01 16:10:00 whirri…\n 5 The ‘if he wanted to, he would’ mentalit… Tess M… 2024-11-01 16:01:00 ladies…\n 6 You can’t silence us: A united front aga… Outbac… 2024-10-25 11:23:00 in the…\n 7 We will not tolerate collective punishme… Suspen… 2024-10-25 09:04:00 in the…\n 8 A guide to ballot propositions            Akshay… 2024-10-25 06:37:00 are yo…\n 9 Pomona will protest or perish             Maggie… 2024-10-23 06:00:00 as pom…\n10 GUEST EDITORIAL: Pomona’s culpability un… Mike W… 2024-10-11 08:23:00 mike w…\n# ℹ 490 more rows"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#scraping-the-web-what-why",
    "href": "slides/2024-11-04-webscrape.html#scraping-the-web-what-why",
    "title": "Web Scraping",
    "section": "Scraping the web: what? why?",
    "text": "Scraping the web: what? why?\n\nIncreasing amount of data is available on the web\nThese data are provided in an unstructured format: you can always copy & paste, but it’s time-consuming and prone to errors\nWeb scraping is the process of extracting this information automatically and transform it into a structured dataset\nTwo different scenarios:\n\nScreen scraping: extract data from source code of website, with html parser (easy) or regular expression matching (less easy).\nWeb APIs (application programming interface): website offers a set of structured http requests that return JSON or XML files."
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#hypertext-markup-language",
    "href": "slides/2024-11-04-webscrape.html#hypertext-markup-language",
    "title": "Web Scraping",
    "section": "Hypertext Markup Language",
    "text": "Hypertext Markup Language\nMost of the data on the web is largely available as HTML - while it is structured (hierarchical) it often is not available in a form useful for analysis (flat / tidy).\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n    &lt;br/&gt;\n    &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n    &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n    &lt;div class=\"contact\"&gt;\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n      &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n      &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n      &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#rvest",
    "href": "slides/2024-11-04-webscrape.html#rvest",
    "title": "Web Scraping",
    "section": "rvest",
    "text": "rvest\n\n\n\nThe rvest package makes basic processing and manipulation of HTML data straight forward\nIt is designed to work with pipelines built with |&gt;\nrvest.tidyverse.org\n\n\nlibrary(rvest)"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#rvest-1",
    "href": "slides/2024-11-04-webscrape.html#rvest-1",
    "title": "Web Scraping",
    "section": "rvest",
    "text": "rvest\nCore functions:\n\nread_html() - read HTML data from a url or character string.\nhtml_elements() - select specified elements from the HTML document using CSS selectors.\nhtml_element() - select a single element from the HTML document using CSS selectors.\nhtml_table() - parse an HTML table into a data frame.\nhtml_text() / html_text2() - extract element’s text content.\nhtml_name - extract a element’s name(s).\nhtml_attrs - extract all attributes.\nhtml_attr - extract attribute value(s) by name."
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#html-rvest-xml2",
    "href": "slides/2024-11-04-webscrape.html#html-rvest-xml2",
    "title": "Web Scraping",
    "section": "html, rvest, & xml2",
    "text": "html, rvest, & xml2\n\nhtml &lt;- \n'&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n    &lt;br/&gt;\n    &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n    &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n    &lt;div class=\"contact\"&gt;\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n      &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n      &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n      &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;'\n\n\n\nread_html(html)\n\n{html_document}\n&lt;html&gt;\n[1] &lt;head&gt;\\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n[2] &lt;body&gt;\\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\\n    &lt;br&gt;&lt;div class=\"name\" ..."
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#selecting-elements",
    "href": "slides/2024-11-04-webscrape.html#selecting-elements",
    "title": "Web Scraping",
    "section": "Selecting elements",
    "text": "Selecting elements\n\nread_html(html) |&gt; html_elements(\"p\")\n\n{xml_nodeset (1)}\n[1] &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_text()\n\n[1] \"Hello world!\"\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_name()\n\n[1] \"p\"\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_attrs()\n\n[[1]]\n   align \n\"center\" \n\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_attr(\"align\")\n\n[1] \"center\""
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#more-selecting-tags",
    "href": "slides/2024-11-04-webscrape.html#more-selecting-tags",
    "title": "Web Scraping",
    "section": "More selecting tags",
    "text": "More selecting tags\n\n\nread_html(html) |&gt; html_elements(\"div\")\n\n{xml_nodeset (7)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n[3] &lt;div class=\"contact\"&gt;\\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\\n       ...\n[4] &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n[5] &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n[6] &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n[7] &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"div\") |&gt; html_text()\n\n[1] \"John\"                                                                                  \n[2] \"Doe\"                                                                                   \n[3] \"\\n      555-555-1234\\n      555-555-2345\\n      555-555-9999\\n      555-555-8888\\n    \"\n[4] \"555-555-1234\"                                                                          \n[5] \"555-555-2345\"                                                                          \n[6] \"555-555-9999\"                                                                          \n[7] \"555-555-8888\""
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#css-selectors",
    "href": "slides/2024-11-04-webscrape.html#css-selectors",
    "title": "Web Scraping",
    "section": "CSS selectors",
    "text": "CSS selectors\n\nWe will use a tool called SelectorGadget to help us identify the HTML elements of interest by constructing a CSS selector which can be used to subset the HTML document.\n\n\n\nSome examples of basic selector syntax is below,\n\n\n\n\n\n\n\n\n\n\nSelector\nExample\nDescription\n\n\n\n\n.class\n.title\nSelect all elements with class=“title”\n\n\n#id\n#name\nSelect all elements with id=“name”\n\n\nelement\np\nSelect all &lt;p&gt; elements\n\n\nelement element\ndiv p\nSelect all &lt;p&gt; elements inside a &lt;div&gt; element\n\n\nelement&gt;element\ndiv &gt; p\nSelect all &lt;p&gt; elements with &lt;div&gt; as a direct parent\n\n\n[attribute]\n[class]\nSelect all elements with a class attribute\n\n\n[attribute=value]\n[class=title]\nSelect all elements with class=“title”"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#css-classes-and-ids",
    "href": "slides/2024-11-04-webscrape.html#css-classes-and-ids",
    "title": "Web Scraping",
    "section": "CSS classes and ids",
    "text": "CSS classes and ids\n\nclass and id are used to style elements (e.g., change their color!). They are special types of attributes.\nclass can be applied to multiple different elements (class is identified with ., for example .name)\nid is unique to each element (id is identified with #, for example, #first)\n\n\nread_html(html) |&gt; html_elements(\".name\")\n\n{xml_nodeset (2)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n\n\n\n\nread_html(html) |&gt; html_elements(\"div.name\")\n\n{xml_nodeset (2)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"#first\")\n\n{xml_nodeset (1)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#text-with-html_text-vs.-html_text2",
    "href": "slides/2024-11-04-webscrape.html#text-with-html_text-vs.-html_text2",
    "title": "Web Scraping",
    "section": "Text with html_text() vs. html_text2()",
    "text": "Text with html_text() vs. html_text2()\n\nhtml = read_html(\n  \"&lt;p&gt;  \n    This is the first sentence in the paragraph.\n    This is the second sentence that should be on the same line as the first sentence.&lt;br&gt;This third sentence should start on a new line.\n  &lt;/p&gt;\"\n)\n\n\n\nhtml |&gt; html_text()\n\n[1] \"  \\n    This is the first sentence in the paragraph.\\n    This is the second sentence that should be on the same line as the first sentence.This third sentence should start on a new line.\\n  \"\n\nhtml |&gt; html_text2()\n\n[1] \"This is the first sentence in the paragraph. This is the second sentence that should be on the same line as the first sentence.\\nThis third sentence should start on a new line.\""
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#html-tables-with-html_table",
    "href": "slides/2024-11-04-webscrape.html#html-tables-with-html_table",
    "title": "Web Scraping",
    "section": "HTML tables with html_table()",
    "text": "HTML tables with html_table()\n\nhtml_table = \n'&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;table&gt;\n      &lt;tr&gt; &lt;th&gt;a&lt;/th&gt; &lt;th&gt;b&lt;/th&gt; &lt;th&gt;c&lt;/th&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;4&lt;/td&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;4&lt;/td&gt; &lt;td&gt;5&lt;/td&gt; &lt;/tr&gt;\n    &lt;/table&gt;\n  &lt;/body&gt;\n&lt;/html&gt;'\n\n\n\nread_html(html_table) |&gt;\n  html_elements(\"table\") |&gt; \n  html_table()\n\n[[1]]\n# A tibble: 3 × 3\n      a     b     c\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1     1     2     3\n2     2     3     4\n3     3     4     5"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#selectorgadget",
    "href": "slides/2024-11-04-webscrape.html#selectorgadget",
    "title": "Web Scraping",
    "section": "SelectorGadget",
    "text": "SelectorGadget\nSelectorGadget (selectorgadget.com) is a javascript based tool that helps you interactively build an appropriate CSS selector for the content you are interested in."
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#recap",
    "href": "slides/2024-11-04-webscrape.html#recap",
    "title": "Web Scraping",
    "section": "Recap",
    "text": "Recap\n\nUse the SelectorGadget identify elements you want to grab\nUse the rvest R package to first read in the entire page (into R) and then parse the object you’ve read in to the elements you’re interested in\nPut the components together in a data frame (a tibble) and analyze it like you analyze any other data"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#a-new-r-workflow",
    "href": "slides/2024-11-04-webscrape.html#a-new-r-workflow",
    "title": "Web Scraping",
    "section": "A new R workflow",
    "text": "A new R workflow\n\nWhen working in a Quarto document, your analysis is re-run each time you knit\nIf web scraping in a Quarto document, you’d be re-scraping the data each time you knit, which is undesirable (and not nice)!\nAn alternative workflow:\n\nUse an R script to save your code\nSaving interim data scraped using the code in the script as CSV or RDS files\nUse the saved data in your analysis in your Quarto document"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#ethics-can-you-vs-should-you",
    "href": "slides/2024-11-04-webscrape.html#ethics-can-you-vs-should-you",
    "title": "Web Scraping",
    "section": "Ethics: “Can you?” vs “Should you?”",
    "text": "Ethics: “Can you?” vs “Should you?”\n\n\n\n\n\n\n\nSource: Brian Resnick, Researchers just released profile data on 70,000 OkCupid users without permission, Vox."
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#can-you-vs-should-you",
    "href": "slides/2024-11-04-webscrape.html#can-you-vs-should-you",
    "title": "Web Scraping",
    "section": "“Can you?” vs “Should you?”",
    "text": "“Can you?” vs “Should you?”"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#challenges-unreliable-formatting",
    "href": "slides/2024-11-04-webscrape.html#challenges-unreliable-formatting",
    "title": "Web Scraping",
    "section": "Challenges: Unreliable formatting",
    "text": "Challenges: Unreliable formatting\n\n\n\n\n\n\n\nalumni.duke.edu/news/notable-alumni"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#challenges-data-broken-into-many-pages",
    "href": "slides/2024-11-04-webscrape.html#challenges-data-broken-into-many-pages",
    "title": "Web Scraping",
    "section": "Challenges: Data broken into many pages",
    "text": "Challenges: Data broken into many pages"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#workflow-screen-scraping-vs.-apis",
    "href": "slides/2024-11-04-webscrape.html#workflow-screen-scraping-vs.-apis",
    "title": "Web Scraping",
    "section": "Workflow: Screen scraping vs. APIs",
    "text": "Workflow: Screen scraping vs. APIs\nTwo different scenarios for web scraping:\n\nScreen scraping: extract data from source code of website, with html parser (easy) or regular expression matching (less easy)\nWeb APIs (application programming interface): website offers a set of structured http requests that return JSON or XML files"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#plan",
    "href": "slides/2024-11-04-webscrape.html#plan",
    "title": "Web Scraping",
    "section": "Plan",
    "text": "Plan\n\nRead in the entire page\nScrape opinion title and save as title\nScrape author and save as author\nScrape date and save as date\nCreate a new data frame called tsl_opinion with variables title, author, and date"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#read-the-whole-page",
    "href": "slides/2024-11-04-webscrape.html#read-the-whole-page",
    "title": "Web Scraping",
    "section": "Read the whole page",
    "text": "Read the whole page\n\ntsl_page &lt;- read_html(\"https://tsl.news/category/opinions/\")\ntsl_page\n\n{html_document}\n&lt;html lang=\"en-US\"&gt;\n[1] &lt;head&gt;\\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n[2] &lt;body class=\"archive category category-opinions category-2244 custom-back ...\n\n\n\n\ntypeof(tsl_page)\n\n[1] \"list\"\n\nclass(tsl_page)\n\n[1] \"xml_document\" \"xml_node\"    \n\n\n\nwe need to convert into something more familiar, like a data frame"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#scrape-opinion-title-and-save-as-title",
    "href": "slides/2024-11-04-webscrape.html#scrape-opinion-title-and-save-as-title",
    "title": "Web Scraping",
    "section": "Scrape opinion title and save as title",
    "text": "Scrape opinion title and save as title\n\ntsl_page |&gt; \nhtml_elements(\".entry-title a\") \n\n{xml_nodeset (10)}\n [1] &lt;a href=\"https://tsl.news/opinion-elon-musks-million-dollar-a-day-reward ...\n [2] &lt;a href=\"https://tsl.news/opinion-the-politics-behind-apolitical-acts/\"  ...\n [3] &lt;a href=\"https://tsl.news/opinion-in-defense-of-the-pomona-college-judic ...\n [4] &lt;a href=\"https://tsl.news/yakking-isnt-a-cannon-event/\" title=\"OPINION:  ...\n [5] &lt;a href=\"https://tsl.news/opinion-the-if-he-wanted-to-he-would-mentality ...\n [6] &lt;a href=\"https://tsl.news/you-cant-silence-us-a-united-front-against-pom ...\n [7] &lt;a href=\"https://tsl.news/suspended-students-speak-out/\" title=\"OPINION: ...\n [8] &lt;a href=\"https://tsl.news/opinion-a-guide-to-ballot-propositions/\" title ...\n [9] &lt;a href=\"https://tsl.news/opinion-pomona-will-protest-or-perish/\" title= ...\n[10] &lt;a href=\"https://tsl.news/guest-editorial-pomonas-culpability-under-inte ...\n\n\n\n\ntitle &lt;- tsl_page |&gt; \nhtml_elements(\".entry-title a\") |&gt; \nhtml_text()\ntitle\n\n [1] \"OPINION: Elon Musk’s million-dollar-a-day rewards are undemocratic\"               \n [2] \"OPINION: The politics behind apolitical acts\"                                     \n [3] \"OPINION: In Defense of the Pomona College Judicial Council\"                       \n [4] \"OPINION: ‘Yakking’ isn’t a canon event, party responsibly\"                        \n [5] \"OPINION: The ‘if he wanted to, he would’ mentality is holding women back\"         \n [6] \"You can’t silence us: A united front against Pomona’s repression\"                 \n [7] \"OPINION: We will not tolerate collective punishment: Suspended students speak out\"\n [8] \"OPINION: A guide to ballot propositions\"                                          \n [9] \"OPINION: Pomona will protest or perish\"                                           \n[10] \"GUEST EDITORIAL: Pomona’s culpability under International Humanitarian Law\"       \n\ntitle &lt;- title |&gt; \nstr_remove(\"OPINION: \")\n\ntitle\n\n [1] \"Elon Musk’s million-dollar-a-day rewards are undemocratic\"                 \n [2] \"The politics behind apolitical acts\"                                       \n [3] \"In Defense of the Pomona College Judicial Council\"                         \n [4] \"‘Yakking’ isn’t a canon event, party responsibly\"                          \n [5] \"The ‘if he wanted to, he would’ mentality is holding women back\"           \n [6] \"You can’t silence us: A united front against Pomona’s repression\"          \n [7] \"We will not tolerate collective punishment: Suspended students speak out\"  \n [8] \"A guide to ballot propositions\"                                            \n [9] \"Pomona will protest or perish\"                                             \n[10] \"GUEST EDITORIAL: Pomona’s culpability under International Humanitarian Law\""
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#scrape-opinion-author-and-save-as-author",
    "href": "slides/2024-11-04-webscrape.html#scrape-opinion-author-and-save-as-author",
    "title": "Web Scraping",
    "section": "Scrape opinion author and save as author",
    "text": "Scrape opinion author and save as author\n\nauthor &lt;- tsl_page |&gt; \nhtml_elements(\".author\") |&gt; \nhtml_text()\nauthor\n\n [1] \"By Celeste Cariker\"                                                     \n [2] \"Celeste Cariker\"                                                        \n [3] \"By Eric Lu\"                                                             \n [4] \"Eric Lu\"                                                                \n [5] \"By Henri Prevost\"                                                       \n [6] \"Henri Prevost\"                                                          \n [7] \"By Kabir Raina\"                                                         \n [8] \"Kabir Raina\"                                                            \n [9] \"By Tess McHugh\"                                                         \n[10] \"Tess McHugh\"                                                            \n[11] \"By Outback Editors, Undercurrents Editors and The Scripps Voice Editors\"\n[12] \"Outback Editors\"                                                        \n[13] \"Undercurrents Editors\"                                                  \n[14] \"The Scripps Voice Editors\"                                              \n[15] \"By Suspended Students\"                                                  \n[16] \"Suspended Students\"                                                     \n[17] \"By Akshay Seetharam\"                                                    \n[18] \"Akshay Seetharam\"                                                       \n[19] \"By Maggie Zhang\"                                                        \n[20] \"Maggie Zhang\"                                                           \n[21] \"By Mike Withey\"                                                         \n[22] \"Mike Withey\"                                                            \n\n\n\nauthor &lt;- tsl_page |&gt; \nhtml_elements(\".author\") |&gt; \nhtml_text() |&gt; \ntibble() |&gt; \nset_names(nm = \"authors\") |&gt; \nfilter(str_detect(authors, \"By \"))\nauthor \n\n# A tibble: 10 × 1\n   authors                                                                \n   &lt;chr&gt;                                                                  \n 1 By Celeste Cariker                                                     \n 2 By Eric Lu                                                             \n 3 By Henri Prevost                                                       \n 4 By Kabir Raina                                                         \n 5 By Tess McHugh                                                         \n 6 By Outback Editors, Undercurrents Editors and The Scripps Voice Editors\n 7 By Suspended Students                                                  \n 8 By Akshay Seetharam                                                    \n 9 By Maggie Zhang                                                        \n10 By Mike Withey                                                         \n\nauthor &lt;- author |&gt; \nmutate(authors = str_replace(authors, \"By \", \"\")) \n\nauthor\n\n# A tibble: 10 × 1\n   authors                                                             \n   &lt;chr&gt;                                                               \n 1 Celeste Cariker                                                     \n 2 Eric Lu                                                             \n 3 Henri Prevost                                                       \n 4 Kabir Raina                                                         \n 5 Tess McHugh                                                         \n 6 Outback Editors, Undercurrents Editors and The Scripps Voice Editors\n 7 Suspended Students                                                  \n 8 Akshay Seetharam                                                    \n 9 Maggie Zhang                                                        \n10 Mike Withey"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#scrape-opinion-date-and-save-as-date",
    "href": "slides/2024-11-04-webscrape.html#scrape-opinion-date-and-save-as-date",
    "title": "Web Scraping",
    "section": "Scrape opinion date and save as date",
    "text": "Scrape opinion date and save as date\n\ndate &lt;- tsl_page |&gt; \nhtml_elements(\".published\") |&gt; \nhtml_text()\ndate\n\n [1] \"November 1, 2024 9:27 am\"  \"November 1, 2024 9:21 am\" \n [3] \"November 1, 2024 9:15 am\"  \"November 1, 2024 9:10 am\" \n [5] \"November 1, 2024 9:01 am\"  \"October 25, 2024 4:23 am\" \n [7] \"October 25, 2024 2:04 am\"  \"October 24, 2024 11:37 pm\"\n [9] \"October 22, 2024 11:00 pm\" \"October 11, 2024 1:23 am\" \n\ndate &lt;- date |&gt; \nlubridate::mdy_hm(tz = \"America/Los_Angeles\")\ndate\n\n [1] \"2024-11-01 09:27:00 PDT\" \"2024-11-01 09:21:00 PDT\"\n [3] \"2024-11-01 09:15:00 PDT\" \"2024-11-01 09:10:00 PDT\"\n [5] \"2024-11-01 09:01:00 PDT\" \"2024-10-25 04:23:00 PDT\"\n [7] \"2024-10-25 02:04:00 PDT\" \"2024-10-24 23:37:00 PDT\"\n [9] \"2024-10-22 23:00:00 PDT\" \"2024-10-11 01:23:00 PDT\""
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#create-a-new-data-frame",
    "href": "slides/2024-11-04-webscrape.html#create-a-new-data-frame",
    "title": "Web Scraping",
    "section": "Create a new data frame",
    "text": "Create a new data frame\n\ntsl_opinion &lt;- tibble(\n    title,\n    author,\n    date\n)\n\ntsl_opinion\n\n# A tibble: 10 × 3\n   title                                              author date               \n   &lt;chr&gt;                                              &lt;chr&gt;  &lt;dttm&gt;             \n 1 Confronting food anxiety at the 5Cs                Sarah… 2025-03-07 00:34:00\n 2 Our duty to protest                                Alex … 2025-03-07 00:13:00\n 3 Social media is ruining our relationship with the… Vir P… 2025-03-06 23:54:00\n 4 Wendy Williams, please save the internet!          Celes… 2025-03-06 23:29:00\n 5 Test scores don’t define us: Why test-optional mu… Danie… 2025-02-27 23:45:00\n 6 Whatever we think rap is, Ceechynaa is expanding … Zena … 2025-02-27 23:39:00\n 7 Cashing paychecks or passions? The cost of fear a… Lisa … 2025-02-27 21:12:00\n 8 You vape because the world is on fire              Alex … 2025-02-27 21:05:00\n 9 The new cosmetic dystopia                          Zena … 2025-02-20 22:46:00\n10 Contemporary art must put individual before ident… Elias… 2025-02-20 22:44:00"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#opinion-titles",
    "href": "slides/2024-11-04-webscrape.html#opinion-titles",
    "title": "Web Scraping",
    "section": "Opinion titles",
    "text": "Opinion titles\n\ntsl_opinions &lt;- function(i){\ntsl_page &lt;- rvest::read_html(paste0(\"https://tsl.news/category/opinions/page/\",i))\n  \ntitle &lt;- tsl_page |&gt; \nhtml_elements(\".entry-title a\") |&gt; \nhtml_text() |&gt; \nstr_remove(\"OPINION: \")\n  \nauthor &lt;- tsl_page |&gt; \nhtml_elements(\"span.author\") |&gt; \nhtml_text() |&gt; \ntibble() |&gt; \nset_names(nm = \"authors\") |&gt; \nmutate(authors = str_replace(authors, \"By \", \"\")) \n  \ndate &lt;- tsl_page |&gt; \nhtml_elements(\".published\") |&gt; \nhtml_text() |&gt; \nlubridate::mdy_hm(tz = \"America/Los_Angeles\")\n\nfirst_p &lt;- tsl_page |&gt; \n  html_elements(\".entry-content p:nth-child(1)\") |&gt; \n  html_text() |&gt; \n  tolower()\n  \ntibble(\n    title,\n    author,\n    date,\n    first_p\n)  \n}\n\ntsl_opinion_titles &lt;- c(1:50) |&gt; purrr::map(tsl_opinions) |&gt; \nlist_rbind()"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#check-if-you-are-allowed",
    "href": "slides/2024-11-04-webscrape.html#check-if-you-are-allowed",
    "title": "Web Scraping",
    "section": "Check if you are allowed!",
    "text": "Check if you are allowed!\n\nlibrary(robotstxt)\npaths_allowed(\"https://tsl.news/category/opinions/\")\n\n[1] TRUE\n\n\n\npaths_allowed(\"http://www.facebook.com\")\n\n[1] FALSE"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#avg-sentiment-scores-of-first-paragraph",
    "href": "slides/2024-11-04-webscrape.html#avg-sentiment-scores-of-first-paragraph",
    "title": "Web Scraping",
    "section": "Avg sentiment scores of first paragraph",
    "text": "Avg sentiment scores of first paragraph\nCode for the earlier plot:\n\nafinn_sentiments &lt;- get_sentiments(\"afinn\")  # need tidytext and textdata\ntsl_opinion_titles |&gt;\n  tidytext::unnest_tokens(word, first_p) |&gt;\n  anti_join(stop_words) |&gt;\n  left_join(afinn_sentiments) |&gt; \n  group_by(authors, title) |&gt;\n  summarize(total_sentiment = sum(value, na.rm = TRUE), .groups = \"drop\") |&gt;\n  group_by(authors) |&gt;\n  summarize(\n    n_articles = n(),\n    avg_sentiment = mean(total_sentiment, na.rm = TRUE),\n  ) |&gt;\n  filter(n_articles &gt; 1 & !is.na(authors)) |&gt;\n  arrange(desc(avg_sentiment)) |&gt;\n  slice(c(1:10, 69:78)) |&gt;\n  mutate(\n    authors = fct_reorder(authors, avg_sentiment),\n    neg_pos = if_else(avg_sentiment &lt; 0, \"neg\", \"pos\"),\n    label_position = if_else(neg_pos == \"neg\", 0.25, -0.25)\n  ) |&gt;\n  ggplot(aes(y = authors, x = avg_sentiment)) +\n  geom_col(aes(fill = neg_pos), show.legend = FALSE) +\n  geom_text(\n    aes(x = label_position, label = authors, color = neg_pos),\n    hjust = c(rep(1,10), rep(0, 10)),\n    show.legend = FALSE,\n    fontface = \"bold\"\n  ) +\n  geom_text(\n    aes(label = round(avg_sentiment, 1)),\n    hjust = c(rep(1.25,10), rep(-0.25, 10)),\n    color = \"white\",\n    fontface = \"bold\"\n  ) +\n  scale_fill_manual(values = c(\"neg\" = \"#4d4009\", \"pos\" = \"#FF4B91\")) +\n  scale_color_manual(values = c(\"neg\" = \"#4d4009\", \"pos\" = \"#FF4B91\")) +\n  scale_x_continuous(breaks = -5:5, minor_breaks = NULL) +\n  scale_y_discrete(breaks = NULL) +\n  coord_cartesian(xlim = c(-5, 5)) +\n  labs(\n    x = \"negative  ←     Average sentiment score (AFINN)     →  positive\",\n    y = NULL,\n    title = \"The Student Life - Opinion pieces\\nAverage sentiment scores of first paragraph by author\",\n    subtitle = \"Top 10 average positive and negative scores\",\n    caption = \"Source: Data scraped from The Student Life on Nov 4, 2024\"\n  ) +\n  theme_void(base_size = 16) +\n  theme(\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5, margin = unit(c(0.5, 0, 1, 0), \"lines\")),\n    axis.text.y = element_blank(),\n    plot.caption = element_text(color = \"gray30\")\n  )"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#scrape-title-and-save-as-title",
    "href": "slides/2024-11-04-webscrape.html#scrape-title-and-save-as-title",
    "title": "Web Scraping",
    "section": "Scrape title and save as title",
    "text": "Scrape title and save as title\n\ntsl_page |&gt; \nhtml_elements(\".entry-title a\") \n\n{xml_nodeset (10)}\n [1] &lt;a href=\"https://tsl.news/opinion-food-anxiety/\" title=\"OPINION: Confron ...\n [2] &lt;a href=\"https://tsl.news/opinion-our-duty-to-protest/\" title=\"OPINION:  ...\n [3] &lt;a href=\"https://tsl.news/opinion-social-media-is-ruining-our-relationsh ...\n [4] &lt;a href=\"https://tsl.news/opinion-wendy-williams-please-save-the-interne ...\n [5] &lt;a href=\"https://tsl.news/opinion-test-scores-dont-define-us-why-test-op ...\n [6] &lt;a href=\"https://tsl.news/opinion-whatever-we-think-rap-is-ceechynaa-is- ...\n [7] &lt;a href=\"https://tsl.news/opinion-cashing-paychecks-or-passions-the-cost ...\n [8] &lt;a href=\"https://tsl.news/opinion-you-vape-because-the-world-is-on-fire/ ...\n [9] &lt;a href=\"https://tsl.news/opinion-the-new-cosmetic-dystopia/\" title=\"OPI ...\n[10] &lt;a href=\"https://tsl.news/opinion-contemporary-art-must-put-individual-b ...\n\n\n\n\ntitle &lt;- tsl_page |&gt; \nhtml_elements(\".entry-title a\") |&gt; \nhtml_text()\ntitle\n\n [1] \"OPINION: Confronting food anxiety at the 5Cs\"                     \n [2] \"OPINION: Our duty to protest\"                                     \n [3] \"OPINION: Social media is ruining our relationship with the gym\"   \n [4] \"OPINION: Wendy Williams, please save the internet!\"               \n [5] \"OPINION: Test scores don’t define us: Why test-optional must stay\"\n [6] \"OPINION: Whatever we think rap is, Ceechynaa is expanding it\"     \n [7] \"OPINION: Cashing paychecks or passions? The cost of fear at CMC\"  \n [8] \"OPINION: You vape because the world is on fire\"                   \n [9] \"OPINION: The new cosmetic dystopia\"                               \n[10] \"OPINION: Contemporary art must put individual before identity\"    \n\ntitle &lt;- title |&gt; \nstr_remove(\"OPINION: \")\n\ntitle\n\n [1] \"Confronting food anxiety at the 5Cs\"                     \n [2] \"Our duty to protest\"                                     \n [3] \"Social media is ruining our relationship with the gym\"   \n [4] \"Wendy Williams, please save the internet!\"               \n [5] \"Test scores don’t define us: Why test-optional must stay\"\n [6] \"Whatever we think rap is, Ceechynaa is expanding it\"     \n [7] \"Cashing paychecks or passions? The cost of fear at CMC\"  \n [8] \"You vape because the world is on fire\"                   \n [9] \"The new cosmetic dystopia\"                               \n[10] \"Contemporary art must put individual before identity\""
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#scrape-author-and-save-as-author",
    "href": "slides/2024-11-04-webscrape.html#scrape-author-and-save-as-author",
    "title": "Web Scraping",
    "section": "Scrape author and save as author",
    "text": "Scrape author and save as author\n\nauthor &lt;- tsl_page |&gt; \nhtml_elements(\"span.author\") |&gt; \nhtml_text()\nauthor\n\n [1] \"By Sarah Russo\"                      \n [2] \"By Alex Benach\"                      \n [3] \"By Vir Patwardhan\"                   \n [4] \"By Celeste Cariker\"                  \n [5] \"By Daniel Han Tae Choi\"              \n [6] \"By Zena Almeida-Warwin\"              \n [7] \"By Lisa Gorelik\"                     \n [8] \"By Alex Benach\"                      \n [9] \"By Zena Almeida-Warwin and Anna Yost\"\n[10] \"By Elias Diwan\"                      \n\n\n\nauthor &lt;- author |&gt; \nstr_replace(\"By \", \"\")\n\nauthor\n\n [1] \"Sarah Russo\"                       \"Alex Benach\"                      \n [3] \"Vir Patwardhan\"                    \"Celeste Cariker\"                  \n [5] \"Daniel Han Tae Choi\"               \"Zena Almeida-Warwin\"              \n [7] \"Lisa Gorelik\"                      \"Alex Benach\"                      \n [9] \"Zena Almeida-Warwin and Anna Yost\" \"Elias Diwan\""
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#scrape-date-and-save-as-date",
    "href": "slides/2024-11-04-webscrape.html#scrape-date-and-save-as-date",
    "title": "Web Scraping",
    "section": "Scrape date and save as date",
    "text": "Scrape date and save as date\n\ndate &lt;- tsl_page |&gt; \nhtml_elements(\".published\") |&gt; \nhtml_text()\ndate\n\n [1] \"March 7, 2025 12:34 am\"     \"March 7, 2025 12:13 am\"    \n [3] \"March 6, 2025 11:54 pm\"     \"March 6, 2025 11:29 pm\"    \n [5] \"February 27, 2025 11:45 pm\" \"February 27, 2025 11:39 pm\"\n [7] \"February 27, 2025 9:12 pm\"  \"February 27, 2025 9:05 pm\" \n [9] \"February 20, 2025 10:46 pm\" \"February 20, 2025 10:44 pm\"\n\ndate &lt;- date |&gt; \nlubridate::mdy_hm(tz = \"America/Los_Angeles\")\ndate\n\n [1] \"2025-03-07 00:34:00 PST\" \"2025-03-07 00:13:00 PST\"\n [3] \"2025-03-06 23:54:00 PST\" \"2025-03-06 23:29:00 PST\"\n [5] \"2025-02-27 23:45:00 PST\" \"2025-02-27 23:39:00 PST\"\n [7] \"2025-02-27 21:12:00 PST\" \"2025-02-27 21:05:00 PST\"\n [9] \"2025-02-20 22:46:00 PST\" \"2025-02-20 22:44:00 PST\""
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#some-html-elements",
    "href": "slides/2024-11-04-webscrape.html#some-html-elements",
    "title": "Web Scraping",
    "section": "Some HTML elements",
    "text": "Some HTML elements\n\n&lt;html&gt;: start of the HTML page\n&lt;head&gt;: header information (metadata about the page)\n&lt;body&gt;: everything that is on the page\n&lt;p&gt;: paragraphs\n&lt;b&gt;: bold\n&lt;table&gt;: table\n&lt;div&gt;: a container to group content together"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#data-acquisition",
    "href": "slides/2024-11-04-webscrape.html#data-acquisition",
    "title": "Web Scraping",
    "section": "Data Acquisition",
    "text": "Data Acquisition\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#read-in-the-entire-page",
    "href": "slides/2024-11-04-webscrape.html#read-in-the-entire-page",
    "title": "Web Scraping",
    "section": "Read in the entire page",
    "text": "Read in the entire page\n\ntsl_page &lt;- read_html(\"https://tsl.news/category/opinions/\")\ntsl_page\n\n{html_document}\n&lt;html lang=\"en-US\"&gt;\n[1] &lt;head&gt;\\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n[2] &lt;body class=\"archive category category-opinions category-2244 custom-back ...\n\n\n\n\ntypeof(tsl_page)\n\n[1] \"list\"\n\nclass(tsl_page)\n\n[1] \"xml_document\" \"xml_node\"    \n\n\n\nwe need to convert into something more familiar, like a data frame"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#more-selecting-elements",
    "href": "slides/2024-11-04-webscrape.html#more-selecting-elements",
    "title": "Web Scraping",
    "section": "More selecting elements",
    "text": "More selecting elements\n\n\nread_html(html) |&gt; html_elements(\"div\")\n\n{xml_nodeset (7)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n[3] &lt;div class=\"contact\"&gt;\\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\\n       ...\n[4] &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n[5] &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n[6] &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n[7] &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"div\") |&gt; html_text()\n\n[1] \"John\"                                                                                  \n[2] \"Doe\"                                                                                   \n[3] \"\\n      555-555-1234\\n      555-555-2345\\n      555-555-9999\\n      555-555-8888\\n    \"\n[4] \"555-555-1234\"                                                                          \n[5] \"555-555-2345\"                                                                          \n[6] \"555-555-9999\"                                                                          \n[7] \"555-555-8888\""
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#div-p-vs-div-p",
    "href": "slides/2024-11-04-webscrape.html#div-p-vs-div-p",
    "title": "Web Scraping",
    "section": "div p vs div > p",
    "text": "div p vs div &gt; p\n\ndiv p selects all &lt;p&gt; elements within &lt;div&gt;, regardless of depth.\ndiv &gt; p selects only direct child &lt;p&gt; elements of &lt;div&gt;.\n\n&lt;div&gt;\n  &lt;p&gt;This will be selected by both `div p` and `div &gt; p`.&lt;/p&gt; \n  &lt;section&gt;\n    &lt;p&gt;This will be selected only by `div p`, not by `div &gt; p`.&lt;/p&gt;\n  &lt;/section&gt;\n&lt;/div&gt;"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#html-rvest",
    "href": "slides/2024-11-04-webscrape.html#html-rvest",
    "title": "Web Scraping",
    "section": "html & rvest",
    "text": "html & rvest\n\nhtml &lt;- \n'&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n    &lt;br/&gt;\n    &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n    &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n    &lt;div class=\"contact\"&gt;\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n      &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n      &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n      &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;'\n\n\n\nread_html(html)\n\n{html_document}\n&lt;html&gt;\n[1] &lt;head&gt;\\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n[2] &lt;body&gt;\\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\\n    &lt;br&gt;&lt;div class=\"name\" ..."
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#html_attr",
    "href": "slides/2024-11-04-webscrape.html#html_attr",
    "title": "Web Scraping",
    "section": "html_attr()",
    "text": "html_attr()\nextracts data from attributes:\n\nhtml &lt;- minimal_html(\"\n  &lt;p&gt;&lt;a href='https://en.wikipedia.org/wiki/Cat'&gt;cats&lt;/a&gt;&lt;/p&gt;\n  &lt;p&gt;&lt;a href='https://en.wikipedia.org/wiki/Dog'&gt;dogs&lt;/a&gt;&lt;/p&gt;\n\")\nhtml\n\n{html_document}\n&lt;html&gt;\n[1] &lt;head&gt;\\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n[2] &lt;body&gt;\\n&lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Cat\"&gt;cats&lt;/a&gt;&lt;/p&gt;\\n  &lt;p ...\n\n\n\nhtml |&gt; \nhtml_attr(\"href\")\n\n[1] NA\n\n\n\nhtml |&gt; \nhtml_elements(\"[href]\") |&gt; \nhtml_attr(\"href\")\n\n[1] \"https://en.wikipedia.org/wiki/Cat\" \"https://en.wikipedia.org/wiki/Dog\"\n\n\n\nhtml |&gt; \n  html_elements(\"p\") \n\n{xml_nodeset (2)}\n[1] &lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Cat\"&gt;cats&lt;/a&gt;&lt;/p&gt;\n[2] &lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Dog\"&gt;dogs&lt;/a&gt;&lt;/p&gt;\n\n\n\nhtml |&gt; \n  html_elements(\"p\") |&gt; \n  html_element(\"a\") \n\n{xml_nodeset (2)}\n[1] &lt;a href=\"https://en.wikipedia.org/wiki/Cat\"&gt;cats&lt;/a&gt;\n[2] &lt;a href=\"https://en.wikipedia.org/wiki/Dog\"&gt;dogs&lt;/a&gt;\n\n\n\nhtml |&gt; \n  html_elements(\"p\") |&gt; \n  html_element(\"a\") |&gt; \n  html_attr(\"href\")\n\n[1] \"https://en.wikipedia.org/wiki/Cat\" \"https://en.wikipedia.org/wiki/Dog\"\n\n\n\nhtml |&gt; \n  html_element(\"a\") |&gt; \n  html_attr(\"href\")\n\n[1] \"https://en.wikipedia.org/wiki/Cat\"\n\n\n\nhtml |&gt; \n  html_elements(\"a\") |&gt; \n  html_attr(\"href\")\n\n[1] \"https://en.wikipedia.org/wiki/Cat\" \"https://en.wikipedia.org/wiki/Dog\"\n\n\n\nhtml_attr() always returns a string, so if you’re extracting numbers or dates, you’ll need to do some post-processing."
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#more-ethics",
    "href": "slides/2024-11-04-webscrape.html#more-ethics",
    "title": "Web Scraping",
    "section": "More ethics…",
    "text": "More ethics…\nConsider the following image. What do you think is wrong? (Hint: examine the y-axis carefully)\n\nReproduction of a data graphic reporting the number of gun deaths in Florida over time. The original image was published by Reuters. (Baumer, Kaplan, and Horton 2021)"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#references",
    "href": "slides/2024-11-04-webscrape.html#references",
    "title": "Web Scraping",
    "section": "References",
    "text": "References\n\n\n\n\nBaumer, Ben, Daniel Kaplan, and Nicholas Horton. 2021. Modern Data Science with r. CRC Press. https://mdsr-book.github.io/mdsr2e/."
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#more-ethics-graphics",
    "href": "slides/2024-11-04-webscrape.html#more-ethics-graphics",
    "title": "Web Scraping",
    "section": "More ethics: graphics",
    "text": "More ethics: graphics\nConsider the following image. What do you think is wrong? (Hint: examine the y-axis carefully)\n\nReproduction of a data graphic reporting the number of gun deaths in Florida over time. The original image was published by Reuters. (Baumer, Kaplan, and Horton 2021)"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#more-ethics-graphics-1",
    "href": "slides/2024-11-04-webscrape.html#more-ethics-graphics-1",
    "title": "Web Scraping",
    "section": "More ethics: graphics",
    "text": "More ethics: graphics\n\n\n\n\n\n\n\nMay 10, 2020, Georgia Department of Health, COVID-19 cases for 5 counties across time. https://dph.georgia.gov/covid-19-daily-status-report\n\n\n\n\n\n\n\n\n\n\nMay 17, 2020, Georgia Department of Health, COVID-19 cases for 5 counties across time. https://dph.georgia.gov/covid-19-daily-status-report"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#more-ethics-graphics-2",
    "href": "slides/2024-11-04-webscrape.html#more-ethics-graphics-2",
    "title": "Web Scraping",
    "section": "More ethics: graphics",
    "text": "More ethics: graphics\nA few weeks later, the Georgia Department of Health came out with the following two plots where, despite cases skyrocketing, they display images where the visual doesn’t really change.\n\n\n\n\n\n\n\nJuly 2, 2020, Georgia Department of Health, COVID-19 cases per 100K https://dph.georgia.gov/covid-19-daily-status-report\n\n\n\n\n\n\n\n\n\n\nJuly 17, 2020, Georgia Department of Health, COVID-19 cases per 100K https://dph.georgia.gov/covid-19-daily-status-report"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#more-ethics-algorithms",
    "href": "slides/2024-11-04-webscrape.html#more-ethics-algorithms",
    "title": "Web Scraping",
    "section": "More ethics: algorithms",
    "text": "More ethics: algorithms\n\ndisparate treatment \\(\\rightarrow\\) means that the differential treatment is intentional\ndisparate impact \\(\\rightarrow\\) means that the differential treatment is unintentional or implicit (some examples include advancing mortgage credit, employment selection, predictive policing)"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#more-ethics-compas",
    "href": "slides/2024-11-04-webscrape.html#more-ethics-compas",
    "title": "Web Scraping",
    "section": "More ethics: COMPAS",
    "text": "More ethics: COMPAS\n\nDylan Fugett had three subsequent arrests for drug possession. Bernard Parker had no subsequent offenses."
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#more-ethics-compas-1",
    "href": "slides/2024-11-04-webscrape.html#more-ethics-compas-1",
    "title": "Web Scraping",
    "section": "More ethics: COMPAS",
    "text": "More ethics: COMPAS\n\n\n\nDYLAN FUGETT\nBERNARD PARKER\n\n\n\n\nPrior Offense\nPrior Offense\n\n\n1 attempted burglary\n1 resisting arrest without violence\n\n\nLOW RISK - 3\nHIGH RISK - 10\n\n\nSubsequent Offenses\nSubsequent Offenses\n\n\n3 drug possessions\nNone"
  },
  {
    "objectID": "slides/2024-11-04-webscrape.html#more-ethics-compas-2",
    "href": "slides/2024-11-04-webscrape.html#more-ethics-compas-2",
    "title": "Web Scraping",
    "section": "More ethics: COMPAS",
    "text": "More ethics: COMPAS\n\nFalse positive and false negative rates broken down by race."
  },
  {
    "objectID": "slides/2024-11-11-db.html#what-is-a-database",
    "href": "slides/2024-11-11-db.html#what-is-a-database",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "What is a database?",
    "text": "What is a database?\n\nstructured collection of data organized with\n\nefficient storage\neasy retrieval\nconsistent management\n\ndata stored in tables which are linked to one another via keys (called a relational database, think join)"
  },
  {
    "objectID": "slides/2024-11-11-db.html#tidy-data",
    "href": "slides/2024-11-11-db.html#tidy-data",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "Tidy data",
    "text": "Tidy data\n\ndata frame (R) or table (SQL)\ncolumns of variables\nrows of observational units"
  },
  {
    "objectID": "slides/2024-11-11-db.html#differences-between-r-and-sql",
    "href": "slides/2024-11-11-db.html#differences-between-r-and-sql",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "Differences between R and SQL",
    "text": "Differences between R and SQL\n\ntables in SQL databases can be arbitrarily large\n\nlive in storage, computer’s hard drive (usually remote)\n\ndata frames in R\n\nlive in memory (RAM) on your personal computer\n\ntables in a database are linked via a key"
  },
  {
    "objectID": "slides/2024-11-11-db.html#the-airlines-database",
    "href": "slides/2024-11-11-db.html#the-airlines-database",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "The airlines database",
    "text": "The airlines database\nConsider a database of US flights between 2013 and 2015. The flights are downloaded from the Bureau of Transportation Statistics, US Department of Transportation. The database is a superset of the nycflights13 R package that tracks only flights in and out of airports serving New York City in 2013."
  },
  {
    "objectID": "slides/2024-11-11-db.html#sql-connection",
    "href": "slides/2024-11-11-db.html#sql-connection",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "SQL connection",
    "text": "SQL connection\nTo set up a SQL connection, you need the location of the server (host) as well as a username and password.\n\ncon_air &lt;- DBI::dbConnect(\n  RMariaDB::MariaDB(),\n  dbname = \"airlines\",\n  host = Sys.getenv(\"MDSR_HOST\"),\n  user = Sys.getenv(\"MDSR_USER\"),\n  password = Sys.getenv(\"MDSR_PWD\")\n)\n\nHadley Wickham discusses how to use Sys.getenv: https://cran.r-project.org/web/packages/httr/vignettes/secrets.html"
  },
  {
    "objectID": "slides/2024-11-11-db.html#tables-in-airlines-database",
    "href": "slides/2024-11-11-db.html#tables-in-airlines-database",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "Tables in airlines database",
    "text": "Tables in airlines database\n\nDBI::dbListTables(con_air)\n\n[1] \"planes\"          \"carriers\"        \"airports\"        \"flights_summary\"\n[5] \"flights\""
  },
  {
    "objectID": "slides/2024-11-11-db.html#sql-tables-as-tbl",
    "href": "slides/2024-11-11-db.html#sql-tables-as-tbl",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "SQL tables as tbl",
    "text": "SQL tables as tbl\n\ncarriers &lt;- dplyr::tbl(con_air, \"carriers\")\ndim(carriers)\n\n[1] NA  2\n\nhead(carriers)\n\n# Source:   SQL [6 x 2]\n# Database: mysql  [mdsr_public@mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com:3306/airlines]\n  carrier name                         \n  &lt;chr&gt;   &lt;chr&gt;                        \n1 02Q     Titan Airways                \n2 04Q     Tradewind Aviation           \n3 05Q     Comlux Aviation, AG          \n4 06Q     Master Top Linhas Aereas Ltd.\n5 07Q     Flair Airlines Ltd.          \n6 09Q     Swift Air, LLC"
  },
  {
    "objectID": "slides/2024-11-11-db.html#sql-tables-as-tibble",
    "href": "slides/2024-11-11-db.html#sql-tables-as-tibble",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "SQL tables as tibble",
    "text": "SQL tables as tibble\nThe function collect() copies a SQL table from its server location on disk to your local memory location in R.\n\ncarriers_tibble &lt;- carriers |&gt;\n  dplyr::collect()\n\ndim(carriers_tibble)\n\n[1] 1610    2\n\nhead(carriers_tibble)\n\n# A tibble: 6 × 2\n  carrier name                         \n  &lt;chr&gt;   &lt;chr&gt;                        \n1 02Q     Titan Airways                \n2 04Q     Tradewind Aviation           \n3 05Q     Comlux Aviation, AG          \n4 06Q     Master Top Linhas Aereas Ltd.\n5 07Q     Flair Airlines Ltd.          \n6 09Q     Swift Air, LLC"
  },
  {
    "objectID": "slides/2024-11-11-db.html#how-much-space-does-carriers-take-up",
    "href": "slides/2024-11-11-db.html#how-much-space-does-carriers-take-up",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "How much space does carriers take up?",
    "text": "How much space does carriers take up?\nThe data frame in R takes up 2 orders of magnitude of memory more than the table which just points to the object in SQL.\n\ncarriers |&gt;\n  object.size() |&gt;\n  print(units = \"Kb\")\n\n5.3 Kb\n\ncarriers_tibble |&gt;\n  object.size() |&gt;\n  print(units = \"Kb\")\n\n234.8 Kb"
  },
  {
    "objectID": "slides/2024-11-11-db.html#what-is-sql",
    "href": "slides/2024-11-11-db.html#what-is-sql",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "What is SQL?",
    "text": "What is SQL?\n\nSQL is a programming language for working with relational databases.\nSQL has been around since the 1970s, but has, unfortunately, many different dialects.\nTo connect to the mdsr database (via R and DBeaver), use MySQL.\nTo connect to DuckDB, use the dialect native to DuckDB."
  },
  {
    "objectID": "slides/2024-11-11-db.html#translating-dplyr-code-into-sql",
    "href": "slides/2024-11-11-db.html#translating-dplyr-code-into-sql",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\nThe function dbListTables() in the DBI package will tell us what tables exist in the airlines database.\n\nDBI::dbListTables(con_air)\n\n[1] \"planes\"          \"carriers\"        \"airports\"        \"flights_summary\"\n[5] \"flights\"        \n\nflights &lt;- dplyr::tbl(con_air, \"flights\")\ncarriers &lt;- dplyr::tbl(con_air, \"carriers\")"
  },
  {
    "objectID": "slides/2024-11-11-db.html#translating-dplyr-code-into-sql-1",
    "href": "slides/2024-11-11-db.html#translating-dplyr-code-into-sql-1",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\n\nOver what years is the flights data taken?\n\n\nyrs &lt;- flights |&gt;\n  summarize(min_year = min(year), max_year = max(year))\n\nyrs\n\n# Source:   SQL [1 x 2]\n# Database: mysql  [mdsr_public@mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com:3306/airlines]\n  min_year max_year\n     &lt;int&gt;    &lt;int&gt;\n1     2013     2015"
  },
  {
    "objectID": "slides/2024-11-11-db.html#translating-dplyr-code-into-sql-2",
    "href": "slides/2024-11-11-db.html#translating-dplyr-code-into-sql-2",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\nBecause flights is not actually a data.frame in R (but instead a tbl in SQL), the work that was done above was actually performed in SQL. To see the SQL code, we can use the function show_query.\n\ndplyr::show_query(yrs)\n\n&lt;SQL&gt;\nSELECT MIN(`year`) AS `min_year`, MAX(`year`) AS `max_year`\nFROM `flights`"
  },
  {
    "objectID": "slides/2024-11-11-db.html#translating-dplyr-code-into-sql-3",
    "href": "slides/2024-11-11-db.html#translating-dplyr-code-into-sql-3",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\n\nCreate a data set containing only flights between LAX and BOS in 2015.\n\n\nla_bos &lt;- flights |&gt;\n  filter(year == 2015 & ((origin == \"LAX\" & dest == \"BOS\") | \n           (origin == \"BOS\" & dest == \"LAX\"))) \n\ndplyr::show_query(la_bos)\n\n&lt;SQL&gt;\nSELECT `flights`.*\nFROM `flights`\nWHERE (`year` = 2015.0 AND ((`origin` = 'LAX' AND `dest` = 'BOS') OR (`origin` = 'BOS' AND `dest` = 'LAX')))"
  },
  {
    "objectID": "slides/2024-11-11-db.html#translating-dplyr-code-into-sql-4",
    "href": "slides/2024-11-11-db.html#translating-dplyr-code-into-sql-4",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\n\ndbplyr doesn’t translate every R command into SQL.\nSQL is not a statistical software and doesn’t, for example, have a mechanism for creating data visualizations.\ntrack which R commands are connected to SQL at the dbplyr reference sheet."
  },
  {
    "objectID": "slides/2024-11-11-db.html#sql-queries-via-the-dbi-package",
    "href": "slides/2024-11-11-db.html#sql-queries-via-the-dbi-package",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "2. SQL queries via the DBI package",
    "text": "2. SQL queries via the DBI package\n\nLook at the first few rows of the flights data.\n\n\nDBI::dbGetQuery(con_air,\n                \"SELECT * FROM flights LIMIT 8;\")\n\n  year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n1 2013    10   1        2             10        -8      453            505\n2 2013    10   1        4           2359         5      730            729\n3 2013    10   1       11             15        -4      528            530\n4 2013    10   1       14           2355        19      544            540\n5 2013    10   1       16             17        -1      515            525\n6 2013    10   1       22             20         2      552            554\n7 2013    10   1       29             35        -6      808            816\n8 2013    10   1       29             35        -6      449            458\n  arr_delay carrier tailnum flight origin dest air_time distance cancelled\n1       -12      AA  N201AA   2400    LAX  DFW      149     1235         0\n2         1      FL  N344AT    710    SFO  ATL      247     2139         0\n3        -2      AA  N3KMAA   1052    SFO  DFW      182     1464         0\n4         4      AA  N3ENAA   2392    SEA  ORD      191     1721         0\n5       -10      UA  N38473   1614    LAX  IAH      157     1379         0\n6        -2      UA  N458UA    291    SFO  IAH      188     1635         0\n7        -8      US  N551UW    436    LAX  CLT      256     2125         0\n8        -9      AS  N402AS    108    ANC  SEA      181     1448         0\n  diverted hour minute           time_hour\n1        0    0     10 2013-10-01 00:10:00\n2        0   23     59 2013-10-01 23:59:00\n3        0    0     15 2013-10-01 00:15:00\n4        0   23     55 2013-10-01 23:55:00\n5        0    0     17 2013-10-01 00:17:00\n6        0    0     20 2013-10-01 00:20:00\n7        0    0     35 2013-10-01 00:35:00\n8        0    0     35 2013-10-01 00:35:00"
  },
  {
    "objectID": "slides/2024-11-11-db.html#sql-queries-via-the-dbi-package-1",
    "href": "slides/2024-11-11-db.html#sql-queries-via-the-dbi-package-1",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "2. SQL queries via the DBI package",
    "text": "2. SQL queries via the DBI package\n\nHow many flights per year are in the flights table?\n\n\nDBI::dbGetQuery(con_air, \n  \"SELECT year, count(*) AS num_flights FROM flights GROUP BY year ORDER BY num_flights;\")\n\n  year num_flights\n1 2015     5819079\n2 2014     5819811\n3 2013     6369482"
  },
  {
    "objectID": "slides/2024-11-11-db.html#direct-sql-queries-via-sql-chunks",
    "href": "slides/2024-11-11-db.html#direct-sql-queries-via-sql-chunks",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "3. Direct SQL queries via sql chunks",
    "text": "3. Direct SQL queries via sql chunks\nSQL queries can be written directly inside a sql chunk in RStudio.\n\n```{sql}\n#| connection: con_air\n\nSELECT * FROM flights LIMIT 8;\n```\n\n\n8 records\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nyear\nmonth\nday\ndep_time\nsched_dep_time\ndep_delay\narr_time\nsched_arr_time\narr_delay\ncarrier\ntailnum\nflight\norigin\ndest\nair_time\ndistance\ncancelled\ndiverted\nhour\nminute\ntime_hour\n\n\n\n\n2013\n10\n1\n2\n10\n-8\n453\n505\n-12\nAA\nN201AA\n2400\nLAX\nDFW\n149\n1235\n0\n0\n0\n10\n2013-10-01 00:10:00\n\n\n2013\n10\n1\n4\n2359\n5\n730\n729\n1\nFL\nN344AT\n710\nSFO\nATL\n247\n2139\n0\n0\n23\n59\n2013-10-01 23:59:00\n\n\n2013\n10\n1\n11\n15\n-4\n528\n530\n-2\nAA\nN3KMAA\n1052\nSFO\nDFW\n182\n1464\n0\n0\n0\n15\n2013-10-01 00:15:00\n\n\n2013\n10\n1\n14\n2355\n19\n544\n540\n4\nAA\nN3ENAA\n2392\nSEA\nORD\n191\n1721\n0\n0\n23\n55\n2013-10-01 23:55:00\n\n\n2013\n10\n1\n16\n17\n-1\n515\n525\n-10\nUA\nN38473\n1614\nLAX\nIAH\n157\n1379\n0\n0\n0\n17\n2013-10-01 00:17:00\n\n\n2013\n10\n1\n22\n20\n2\n552\n554\n-2\nUA\nN458UA\n291\nSFO\nIAH\n188\n1635\n0\n0\n0\n20\n2013-10-01 00:20:00\n\n\n2013\n10\n1\n29\n35\n-6\n808\n816\n-8\nUS\nN551UW\n436\nLAX\nCLT\n256\n2125\n0\n0\n0\n35\n2013-10-01 00:35:00\n\n\n2013\n10\n1\n29\n35\n-6\n449\n458\n-9\nAS\nN402AS\n108\nANC\nSEA\n181\n1448\n0\n0\n0\n35\n2013-10-01 00:35:00"
  },
  {
    "objectID": "slides/2024-11-11-db.html#direct-sql-queries-via-sql-chunks-1",
    "href": "slides/2024-11-11-db.html#direct-sql-queries-via-sql-chunks-1",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "3. Direct SQL queries via sql chunks",
    "text": "3. Direct SQL queries via sql chunks\nSQL queries can be written directly inside a sql chunk in RStudio.\n\n```{sql}\n#| connection: con_air\n\nSELECT year, count(*) AS num_flights \n       FROM flights \n       GROUP BY year \n       ORDER BY num_flights;\n```\n\n\n3 records\n\n\nyear\nnum_flights\n\n\n\n\n2015\n5819079\n\n\n2014\n5819811\n\n\n2013\n6369482"
  },
  {
    "objectID": "slides/2024-11-11-db.html#good-practice",
    "href": "slides/2024-11-11-db.html#good-practice",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "Good practice",
    "text": "Good practice\nAlways a good idea to terminate the SQL connection when you are done with it.\n\ndbDisconnect(con_air, shutdown = TRUE)"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#imdb",
    "href": "slides/2024-11-13-clauses.html#imdb",
    "title": "SQL clauses",
    "section": "IMDb",
    "text": "IMDb\n88 tables in the traffic database! Lots of details on traffic stops across cities and highway patrols.\n\nSHOW TABLES;\n\n\nDisplaying records 1 - 10\n\n\nTables_in_traffic\n\n\n\n\nar_little_rock_2020_04_01\n\n\naz_gilbert_2020_04_01\n\n\naz_mesa_2023_01_26\n\n\naz_statewide_2020_04_01\n\n\nca_anaheim_2020_04_01\n\n\nca_bakersfield_2020_04_01\n\n\nca_long_beach_2020_04_01\n\n\nca_los_angeles_2020_04_01\n\n\nca_oakland_2020_04_01\n\n\nca_san_bernardino_2020_04_01"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#establishing-a-sql-connection",
    "href": "slides/2024-11-13-clauses.html#establishing-a-sql-connection",
    "title": "SQL clauses",
    "section": "Establishing a SQL connection",
    "text": "Establishing a SQL connection\n\ncon_traffic &lt;- DBI::dbConnect(\n  RMariaDB::MariaDB(),\n  dbname = \"traffic\",\n  host = Sys.getenv(\"TRAFFIC_HOST\"),\n  user = Sys.getenv(\"TRAFFIC_USER\"),\n  password = Sys.getenv(\"TRAFFIC_PWD\")\n)"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#imdb-1",
    "href": "slides/2024-11-13-clauses.html#imdb-1",
    "title": "SQL clauses",
    "section": "IMDb",
    "text": "IMDb\n88 tables in the traffic database! Lots of details on traffic stops across cities and highway patrols.\n\nSHOW TABLES;\n\n\nDisplaying records 1 - 10\n\n\nTables_in_traffic\n\n\n\n\nar_little_rock_2020_04_01\n\n\naz_gilbert_2020_04_01\n\n\naz_mesa_2023_01_26\n\n\naz_statewide_2020_04_01\n\n\nca_anaheim_2020_04_01\n\n\nca_bakersfield_2020_04_01\n\n\nca_long_beach_2020_04_01\n\n\nca_los_angeles_2020_04_01\n\n\nca_oakland_2020_04_01\n\n\nca_san_bernardino_2020_04_01"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#imdb---glance-through-tables",
    "href": "slides/2024-11-13-clauses.html#imdb---glance-through-tables",
    "title": "SQL clauses",
    "section": "IMDb - glance through tables",
    "text": "IMDb - glance through tables\n\nSELECT * FROM ca_los_angeles_2020_04_01\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nraw_row_number\ndate\ntime\ndistrict\nregion\nsubject_race\nsubject_sex\nofficer_id_hash\ntype\nraw_descent_description\n\n\n\n\n5692933\n\n13:59:00\n0753\nWILSHIRE\nhispanic\nmale\n15ecd81b00\npedestrian\nHISPANIC\n\n\n240731\n2010-01-01\n00:05:00\n665\nWEST TRAFFIC\nother\nmale\nb707de41e0\nvehicular\nOTHER\n\n\n240592|240593\n2010-01-01\n00:10:00\n1258\nSEVENTY-SEVENTH\nhispanic\nmale\nb49ae7078c\npedestrian\nHISPANIC\n\n\n241116\n2010-01-01\n00:10:00\n1635\nFOOTHILL\nhispanic\nmale\ne70ce46248\nvehicular\nHISPANIC\n\n\n240681\n2010-01-01\n00:15:00\n882\nWEST LA\nother\nmale\n8587bd743c\nvehicular\nOTHER\n\n\n240602\n2010-01-01\n00:20:00\n559\nHARBOR\nhispanic\nmale\n601bf1fdff\nvehicular\nHISPANIC\n\n\n240594\n2010-01-01\n00:20:00\n667\nHOLLYWOOD\nhispanic\nmale\nfb2e6d8ab3\npedestrian\nHISPANIC\n\n\n241434\n2010-01-01\n00:25:00\n1658\nFOOTHILL\nhispanic\nfemale\n5100c8c759\nvehicular\nHISPANIC\n\n\n240582\n2010-01-01\n00:30:00\n1041\nWEST VALLEY\nblack\nfemale\nd54d90a4d0\nvehicular\nBLACK\n\n\n240642\n2010-01-01\n00:30:00\n1162\nNORTH EAST\nhispanic\nmale\n5d6fbef1d3\npedestrian\nHISPANIC"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#describe-tables",
    "href": "slides/2024-11-13-clauses.html#describe-tables",
    "title": "SQL clauses",
    "section": "DESCRIBE tables",
    "text": "DESCRIBE tables\nStill using a {sql} chunk. The DESCRIBE command shows the 10 field names (variables) in the ca_los_angeles_2020_04_01 table. Some of the variables are characters (text) and some are date or time.\n\nDESCRIBE ca_los_angeles_2020_04_01;\n\n\nDisplaying records 1 - 10\n\n\nField\nType\nNull\nKey\nDefault\nExtra\n\n\n\n\nraw_row_number\ntext\nYES\n\n\n\n\n\ndate\ndate\nYES\n\n\n\n\n\ntime\ntime\nYES\n\n\n\n\n\ndistrict\ntext\nYES\n\n\n\n\n\nregion\ntext\nYES\n\n\n\n\n\nsubject_race\ntext\nYES\n\n\n\n\n\nsubject_sex\ntext\nYES\n\n\n\n\n\nofficer_id_hash\ntext\nYES\n\n\n\n\n\ntype\ntext\nYES\n\n\n\n\n\nraw_descent_description\ntext\nYES"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#parts-of-a-sql-table",
    "href": "slides/2024-11-13-clauses.html#parts-of-a-sql-table",
    "title": "SQL clauses",
    "section": "Parts of a SQL table",
    "text": "Parts of a SQL table\n\nField is the name of the variable\nType is the type of the variable (numeric, character, etc.)\nNull indicates whether or not NULL values are acceptable. NULL values are never allowed for a Primary Key.\nKey designates whether the variable is a Primary Key. PRI is a primary key, all unique, no NULL values. UNI is a unique key, but NULL values are allowed. MUL is a non-unique (“Multiple”) key, allowing for duplicates, can speed up queries.\nDefault provides the default value of the variable if no value is provided when a row is added to the database."
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#order-of-clauses",
    "href": "slides/2024-11-13-clauses.html#order-of-clauses",
    "title": "SQL clauses",
    "section": "Order of clauses",
    "text": "Order of clauses\nQueries in SQL start with the SELECT keyword and consist of several clauses, which must be written in the following order:\n\n\n\nSELECT\nFROM\nJOIN\nWHERE\n\n\n\nGROUP BY\nHAVING\nORDER BY\nLIMIT\n\n\nThe clauses are similar to data wrangling verbs in R, but the order in SQL is super important!"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#select-from",
    "href": "slides/2024-11-13-clauses.html#select-from",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\n\nstart with a SELECT, include a corresponding FROM\ncolumns may be specified or * returns every column\n\nThe shortest SQL query is the following SELECT command. Do not run this command!!! The ca_los_angeles_2020_04_01 table has 5 million rows, and we do not want to look at them (print to screen) simultaneously.\n\nDO NOT RUN:  SELECT * FROM ca_los_angeles_2020_04_01;"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#select-from-1",
    "href": "slides/2024-11-13-clauses.html#select-from-1",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nMuch better for big tables:\n\nSELECT * FROM ca_los_angeles_2020_04_01 LIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nraw_row_number\ndate\ntime\ndistrict\nregion\nsubject_race\nsubject_sex\nofficer_id_hash\ntype\nraw_descent_description\n\n\n\n\n5692933\n\n13:59:00\n0753\nWILSHIRE\nhispanic\nmale\n15ecd81b00\npedestrian\nHISPANIC\n\n\n240731\n2010-01-01\n00:05:00\n665\nWEST TRAFFIC\nother\nmale\nb707de41e0\nvehicular\nOTHER\n\n\n240592|240593\n2010-01-01\n00:10:00\n1258\nSEVENTY-SEVENTH\nhispanic\nmale\nb49ae7078c\npedestrian\nHISPANIC\n\n\n241116\n2010-01-01\n00:10:00\n1635\nFOOTHILL\nhispanic\nmale\ne70ce46248\nvehicular\nHISPANIC\n\n\n240681\n2010-01-01\n00:15:00\n882\nWEST LA\nother\nmale\n8587bd743c\nvehicular\nOTHER\n\n\n240602\n2010-01-01\n00:20:00\n559\nHARBOR\nhispanic\nmale\n601bf1fdff\nvehicular\nHISPANIC\n\n\n240594\n2010-01-01\n00:20:00\n667\nHOLLYWOOD\nhispanic\nmale\nfb2e6d8ab3\npedestrian\nHISPANIC\n\n\n241434\n2010-01-01\n00:25:00\n1658\nFOOTHILL\nhispanic\nfemale\n5100c8c759\nvehicular\nHISPANIC\n\n\n240582\n2010-01-01\n00:30:00\n1041\nWEST VALLEY\nblack\nfemale\nd54d90a4d0\nvehicular\nBLACK\n\n\n240642\n2010-01-01\n00:30:00\n1162\nNORTH EAST\nhispanic\nmale\n5d6fbef1d3\npedestrian\nHISPANIC"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#select-from-2",
    "href": "slides/2024-11-13-clauses.html#select-from-2",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nHow do we know how many traffic stops are in the database? Two different ways of counting the rows (that produce the same number):\n\nSELECT COUNT(*), SUM(1) FROM ca_los_angeles_2020_04_01 LIMIT 0, 10;\n\n\n1 records\n\n\nCOUNT(*)\nSUM(1)\n\n\n\n\n5418402\n5418402\n\n\n\n\n\nMore than 5.4 million LAPD traffic stops."
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#select-from-3",
    "href": "slides/2024-11-13-clauses.html#select-from-3",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nLet’s look at New Orleans, LA\n\nDESCRIBE la_new_orleans_2020_04_01;\n\n\nDisplaying records 1 - 10\n\n\nField\nType\nNull\nKey\nDefault\nExtra\n\n\n\n\nraw_row_number\ntext\nYES\n\n\n\n\n\ndate\ndate\nYES\n\n\n\n\n\ntime\ntime\nYES\n\n\n\n\n\nlocation\ntext\nYES\n\n\n\n\n\nlat\ndouble\nYES\n\n\n\n\n\nlng\ndouble\nYES\n\n\n\n\n\ndistrict\ndouble\nYES\n\n\n\n\n\nzone\ntext\nYES\n\n\n\n\n\nsubject_age\nbigint(20)\nYES\n\n\n\n\n\nsubject_race\ntext\nYES"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#select-from-4",
    "href": "slides/2024-11-13-clauses.html#select-from-4",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nHow old was the car being driven?\nUnfortunately, date is saved as a date variable, and vehicle_year is saved as a double. Fortunately, we can convert vehicle_year to a date variable.\n\nSELECT\n      date, vehicle_year,\n      STR_TO_DATE(CONCAT(vehicle_year, '-01-01'), '%Y-%m-%d') AS vehicle_date\n   FROM la_new_orleans_2020_04_01\n   LIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ndate\nvehicle_year\nvehicle_date\n\n\n\n\n2010-01-01\n2005\n2005-01-01\n\n\n2010-01-01\n2005\n2005-01-01\n\n\n2010-01-01\n2005\n2005-01-01\n\n\n2010-01-01\n2003\n2003-01-01\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#select-from-5",
    "href": "slides/2024-11-13-clauses.html#select-from-5",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nWhy can’t we find the difference between the two time variables?\n\nSELECT\n      date, vehicle_year,\n      STR_TO_DATE(CONCAT(vehicle_year, '-01-01'), '%Y-%m-%d') AS vehicle_date\n      TIMESTAMPDIFF(YEAR, vehicle_date, date) AS car_age\n   FROM la_new_orleans_2020_04_01\n   LIMIT 0, 10;\n\nError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TIMESTAMPDIFF(YEAR, vehicle_date, date) AS car_age\n   FROM la_new_orleans_2020_0' at line 4 [1064]"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#select-from-6",
    "href": "slides/2024-11-13-clauses.html#select-from-6",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nSolution 1: two layers of SELECT\n\nfirst SELECT (i.e., inside) layer creates the new variables\nsecond SELECT (i.e., outside) layer subtracts the two times\n\n\nSELECT \n   date,\n   vehicle_date, \n   TIMESTAMPDIFF(YEAR, vehicle_date, date) AS car_age \nFROM (\n   SELECT\n      date,\n      STR_TO_DATE(CONCAT(vehicle_year, '-01-01'), '%Y-%m-%d') AS vehicle_date\n   FROM la_new_orleans_2020_04_01)\n   AS subquery_table\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ndate\nvehicle_date\ncar_age\n\n\n\n\n2010-01-01\n2005-01-01\n5\n\n\n2010-01-01\n2005-01-01\n5\n\n\n2010-01-01\n2005-01-01\n5\n\n\n2010-01-01\n2003-01-01\n7\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#select-from-7",
    "href": "slides/2024-11-13-clauses.html#select-from-7",
    "title": "SQL clauses",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nSolution 2: apply the STR_TO_DATE() function inside the TIMESTAMPDIFF() function\n\nSELECT \n   date,\n   vehicle_year,\n   TIMESTAMPDIFF(YEAR, \n                 STR_TO_DATE(CONCAT(vehicle_year, '-01-01'), '%Y-%m-%d'),\n                 date) AS car_age \nFROM la_new_orleans_2020_04_01\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ndate\nvehicle_year\ncar_age\n\n\n\n\n2010-01-01\n2005\n5\n\n\n2010-01-01\n2005\n5\n\n\n2010-01-01\n2005\n5\n\n\n2010-01-01\n2003\n7\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#important-note",
    "href": "slides/2024-11-13-clauses.html#important-note",
    "title": "SQL clauses",
    "section": "Important note:",
    "text": "Important note:\nThere is a distinction between clauses that operate on the variables of the original table versus those that operate on the variables of the results set.\ndate and vehicle_year are columns in the original table - they are written to disk on the SQL server.\ncar_age exist only in the results set, which is passed from the server (SQL server) to the client (e.g., RStudio or DBeaver) in your computer’s memory and is not written to disk."
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#select-distinct",
    "href": "slides/2024-11-13-clauses.html#select-distinct",
    "title": "SQL clauses",
    "section": "SELECT DISTINCT",
    "text": "SELECT DISTINCT\nReturns only unique rows.\n\nSELECT DISTINCT raw_actions_taken\nFROM la_new_orleans_2020_04_01\nLIMIT 0, 200;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\nraw_actions_taken\n\n\n\n\n\n\n\nStop Results: Citation Issued;Subject Type: Driver\n\n\nStop Results: Verbal Warning;Search Occurred: Yes;Search Types: Vehicle;Search Types: Pat-down;Search Types: Driver;Legal Basises: Consent to search;Legal Basises: Probable cause\n\n\nStop Results: Verbal Warning;Subject Type: Driver;Search Occurred: No;Evidence Seized: No\n\n\nStop Results: Verbal Warning;Subject Type: Driver\n\n\nStop Results: Verbal Warning;Subject Type: Driver;Search Occurred: No\n\n\nStop Results: No action taken;Search Occurred: No\n\n\nStop Results: Citation Issued;Subject Type: Driver;Search Occurred: No\n\n\nStop Results: Citation Issued;Subject Type: Driver;Search Occurred: No;Evidence Seized: No\n\n\nStop Results: No action taken;Search Occurred: No;Search Types: Pat-down\n\n\n\n\n\n\nSELECT DISTINCT outcome\nFROM la_new_orleans_2020_04_01\nLIMIT 0, 10;\n\n\n4 records\n\n\noutcome\n\n\n\n\n\n\n\ncitation\n\n\nwarning\n\n\narrest\n\n\n\n\n\n\nSELECT DISTINCT vehicle_make, vehicle_color\nFROM la_new_orleans_2020_04_01\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\nvehicle_make\nvehicle_color\n\n\n\n\nDODGE\nBLACK\n\n\nNISSAN\nBLUE\n\n\nJEEP\nGRAY\n\n\n\n\n\n\nGMC - GENERAL MOTORS CORP.\nBLUE\n\n\nCHEVROLET\nYELLOW\n\n\nOLDSMOBILE\nSILVER\n\n\nTOYOTA\nGREEN\n\n\nPONTIAC\nBRONZE\n\n\nCHEVROLET\nWHITE\n\n\n\n\n\n(note that we haven’t yet arranged the distinct values!)"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#where",
    "href": "slides/2024-11-13-clauses.html#where",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nThe WHERE clause is analogous to the filter() function in dplyr. However, keep in mind that there are two SQL commands that resemble the dplyr filter() function. WHERE operates on the original data in the table and HAVING operates on the result set."
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#where-1",
    "href": "slides/2024-11-13-clauses.html#where-1",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nWhat was the time of day for those traffic stops search_conducted was true and vehicle_make was Subaru?\nNote that in SQL the equality logical is = and in R the equality logical is ==. Note also that the WHERE command is case-insensitive!\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE search_conducted = 1\n   AND vehicle_make = \"Subaru\"\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n21:05:00\n1\n1996\nSUBARU\n\n\n21:05:00\n1\n1996\nSUBARU\n\n\n03:27:00\n1\n1998\nSUBARU\n\n\n19:28:00\n1\n2012\nSUBARU\n\n\n21:40:00\n1\n1998\nSUBARU\n\n\n10:38:00\n1\n2014\nSUBARU\n\n\n05:01:00\n1\n1998\nSUBARU\n\n\n22:00:00\n1\n1998\nSUBARU\n\n\n13:46:00\n1\n2007\nSUBARU\n\n\n22:50:00\n1\n1999\nSUBARU"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#where-2",
    "href": "slides/2024-11-13-clauses.html#where-2",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nBETWEEN can be used to specify a range of values for a numeric value. BETWEEN is inclusive.\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_year BETWEEN 1970 and 1999\n   AND vehicle_make = \"Subaru\"\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n20:16:00\n0\n1991\nSUBARU\n\n\n20:54:00\n0\n1998\nSUBARU\n\n\n17:09:00\n0\n1999\nSUBARU\n\n\n13:20:00\n0\n1996\nSUBARU\n\n\n20:44:00\n0\n1998\nSUBARU\n\n\n21:05:00\n1\n1996\nSUBARU\n\n\n21:05:00\n1\n1996\nSUBARU\n\n\n18:52:00\n0\n1995\nSUBARU\n\n\n17:36:00\n0\n1996\nSUBARU\n\n\n08:40:00\n0\n1999\nSUBARU"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#where-3",
    "href": "slides/2024-11-13-clauses.html#where-3",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nIN is similar to the dplyr %in% function which specifies distinct values for the variable.\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_make IN (\"Subaru\", \"Dodge\")\n   AND search_conducted = 1\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n03:45:00\n1\n2010\nDODGE\n\n\n20:29:00\n1\n2012\nDODGE\n\n\n21:12:00\n1\n2011\nDODGE\n\n\n21:12:00\n1\n2011\nDODGE\n\n\n02:00:00\n1\n2014\nDODGE\n\n\n20:46:00\n1\n2008\nDODGE\n\n\n20:46:00\n1\n2008\nDODGE\n\n\n04:47:00\n1\n2014\nDODGE\n\n\n19:16:00\n1\n1995\nDODGE\n\n\n09:43:00\n1\n2009\nDODGE"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#where-4",
    "href": "slides/2024-11-13-clauses.html#where-4",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nAND takes precedent over OR in the order of operations, when there are no parentheses.\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_year BETWEEN 1970 and 1999 OR\n      vehicle_make IN (\"Subaru\", \"Dodge\") AND \n      search_conducted = 1\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n16:03:00\n0\n1997\nGMC - GENERAL MOTORS CORP.\n\n\n16:03:00\n0\n1997\nGMC - GENERAL MOTORS CORP.\n\n\n07:54:00\n0\n1995\nTOYOTA\n\n\n21:01:00\n0\n1997\nGMC - GENERAL MOTORS CORP.\n\n\n21:06:00\n0\n1996\nDODGE\n\n\n21:16:00\n0\n1996\nDODGE\n\n\n10:20:00\n0\n1994\nMERCEDES-BENZ\n\n\n10:35:00\n0\n1998\nPONTIAC\n\n\n12:46:00\n0\n1996\nACURA\n\n\n15:17:00\n0\n1997\nOLDSMOBILE\n\n\n\n\n\nsame as:\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_year BETWEEN 1970 and 1999 OR\n      (vehicle_make IN (\"Subaru\", \"Dodge\") AND \n      search_conducted = 1)\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n16:03:00\n0\n1997\nGMC - GENERAL MOTORS CORP.\n\n\n16:03:00\n0\n1997\nGMC - GENERAL MOTORS CORP.\n\n\n07:54:00\n0\n1995\nTOYOTA\n\n\n21:01:00\n0\n1997\nGMC - GENERAL MOTORS CORP.\n\n\n21:06:00\n0\n1996\nDODGE\n\n\n21:16:00\n0\n1996\nDODGE\n\n\n10:20:00\n0\n1994\nMERCEDES-BENZ\n\n\n10:35:00\n0\n1998\nPONTIAC\n\n\n12:46:00\n0\n1996\nACURA\n\n\n15:17:00\n0\n1997\nOLDSMOBILE"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#where-5",
    "href": "slides/2024-11-13-clauses.html#where-5",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nParentheses take precedent over AND and OR.\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE (vehicle_year BETWEEN 1970 and 1999 OR\n      vehicle_make IN (\"Subaru\", \"Dodge\") ) AND \n      search_conducted = 1\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n03:45:00\n1\n2010\nDODGE\n\n\n07:11:00\n1\n1999\nCADILLAC\n\n\n20:21:00\n1\n1999\nMERCURY\n\n\n20:29:00\n1\n2012\nDODGE\n\n\n20:31:00\n1\n1993\nINFINITY\n\n\n21:12:00\n1\n2011\nDODGE\n\n\n21:12:00\n1\n2011\nDODGE\n\n\n02:00:00\n1\n2014\nDODGE\n\n\n14:31:00\n1\n1994\nJEEP\n\n\n04:39:00\n1\n1995\nCHEVROLET"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#where-6",
    "href": "slides/2024-11-13-clauses.html#where-6",
    "title": "SQL clauses",
    "section": "WHERE",
    "text": "WHERE\nIS NULL not = NULL (because NULL indicates unknown). (Just like how we need to use is.na() in R!)\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_make IS NULL\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n02:06:00\n0\n\n\n\n\n02:06:00\n0\n\n\n\n\n02:06:00\n0\n\n\n\n\n02:06:00\n0\n\n\n\n\n02:06:00\n0\n\n\n\n\n02:06:00\n0\n\n\n\n\n02:06:00\n0\n\n\n\n\n08:02:00\n0\n\n\n\n\n20:05:00\n0\n\n\n\n\n20:05:00\n0\n\n\n\n\n\n\n\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_make = NULL\nLIMIT 0, 10;"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#a-null-example",
    "href": "slides/2024-11-13-clauses.html#a-null-example",
    "title": "SQL clauses",
    "section": "A NULL example",
    "text": "A NULL example\nThe logic of NULL:1\n\nIf you do anything with NULL, you’ll just get NULL. For instance if \\(x\\) is NULL, then \\(x &gt; 3\\), \\(1 = x\\), and \\(x + 4\\) all evaluate to NULL. Even \\(x =\\) NULL evaluates to NULL! if you want to check whether \\(x\\) is NULL, use x IS NULL or x IS NOT NULL.\nNULL short-circuits with boolean operators. That means a boolean expression involving NULL will evaluate to:\n\nTRUE, if it’d evaluate to TRUE regardless of whether the NULL value is really TRUE or FALSE.\nFALSE, if it’d evaluate to FALSE regardless of whether the NULL value is really TRUE or FALSE.\nOr NULL, if it depends on the NULL value.\n\n\ntaken from: https://cs186berkeley.net/notes/note1/#filtering-null-values"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#a-null-example-1",
    "href": "slides/2024-11-13-clauses.html#a-null-example-1",
    "title": "SQL clauses",
    "section": "A NULL example",
    "text": "A NULL example\nConsider the following table and SQL query to evaluate WHERE age &lt;= 20 OR num_dogs = 3:\n\nSELECT * FROM (\n   SELECT 'Ace' AS name, 20 AS age, 4 as num_dogs\n   UNION\n   SELECT 'Ada' AS name, NULL AS age, 3 as num_dogs   \n   UNION\n   SELECT 'Ben' AS name, NULL AS age, NULL as num_dogs\n   UNION\n   SELECT 'Cho' AS name, 27 AS age, NULL as num_dogs\n   ) AS temptable;\n\n\n4 records\n\n\nname\nage\nnum_dogs\n\n\n\n\nAce\n20\n4\n\n\nAda\n\n3\n\n\nBen\n\n\n\n\nCho\n27"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#a-null-example-2",
    "href": "slides/2024-11-13-clauses.html#a-null-example-2",
    "title": "SQL clauses",
    "section": "A NULL example",
    "text": "A NULL example\nWhere does the WHERE clause do? It tells us that we only want to keep the rows satisfying the age &lt;= 20 OR num_dogs = 3. Let’s consider each row one at a time:\n\nFor Ace, age &lt;= 20 evaluates to TRUE so the claim is satisfied.\nFor Ada, age &lt;= 20 evaluates to NULL but num_dogs = 3 evaluates to TRUE so the claim is satisfied.\nFor Ben, age &lt;= 20 evaluates to NULL and num_dogs = 3 evaluates to NULL so the overall expression is NULL which has a FALSE value.\nFor Cho, age &lt;= 20 evaluates to FALSE and num_dogs = 3 evaluates to NULL so the overall expression evaluates to NULL (because it depends on the value of the NULL).\n\nThus we keep only Ace and Ada."
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#a-null-example-3",
    "href": "slides/2024-11-13-clauses.html#a-null-example-3",
    "title": "SQL clauses",
    "section": "A NULL example",
    "text": "A NULL example\n\nSELECT * FROM (\n   SELECT 'Ace' AS name, 20 AS age, 4 as num_dogs\n   UNION\n   SELECT 'Ada' AS name, NULL AS age, 3 as num_dogs   \n   UNION\n   SELECT 'Ben' AS name, NULL AS age, NULL as num_dogs\n   UNION\n   SELECT 'Cho' AS name, 27 AS age, NULL as num_dogs\n   ) AS temptable\nWHERE age &lt;= 20 OR num_dogs = 3;\n\n\n2 records\n\n\nname\nage\nnum_dogs\n\n\n\n\nAce\n20\n4\n\n\nAda\n\n3"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#group-by",
    "href": "slides/2024-11-13-clauses.html#group-by",
    "title": "SQL clauses",
    "section": "GROUP BY",
    "text": "GROUP BY\nThe GROUP BY clause will direct SQL to carry out the query separately for each category in the grouped variable.\n\naggregate functions include COUNT(), SUM(), MAX(), MIN(), and AVG().\n\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       SUM(1) AS num_stops_also,\n       SUM(2) AS double_stops\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_year BETWEEN 1970 and 1999\nGROUP BY subject_race;\n\n\n7 records\n\n\nsubject_race\nnum_stops\nnum_stops_also\ndouble_stops\n\n\n\n\n\n2217\n2217\n4434\n\n\nasian/pacific islander\n315\n315\n630\n\n\nblack\n31586\n31586\n63172\n\n\nhispanic\n2347\n2347\n4694\n\n\nother\n23\n23\n46\n\n\nunknown\n211\n211\n422\n\n\nwhite\n11475\n11475\n22950"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#group-by-1",
    "href": "slides/2024-11-13-clauses.html#group-by-1",
    "title": "SQL clauses",
    "section": "GROUP BY",
    "text": "GROUP BY\nFor those people whose cars are between 1970 and 1999, how old is the youngest and oldest person for each subject_race?\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       MIN(subject_age) AS min_age,\n       MAX(subject_age) AS max_age\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_year BETWEEN 1970 and 1999\nGROUP BY subject_race;\n\n\n7 records\n\n\nsubject_race\nnum_stops\nmin_age\nmax_age\n\n\n\n\n\n2217\n\n\n\n\nasian/pacific islander\n315\n17\n78\n\n\nblack\n31586\n10\n100\n\n\nhispanic\n2347\n13\n87\n\n\nother\n23\n19\n68\n\n\nunknown\n211\n17\n81\n\n\nwhite\n11475\n12\n99"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#group-by-2",
    "href": "slides/2024-11-13-clauses.html#group-by-2",
    "title": "SQL clauses",
    "section": "GROUP BY",
    "text": "GROUP BY\nGROUP BY will work applied to multiple columns.\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       MIN(subject_age) AS min_age,\n       MAX(subject_age) AS max_age,\n       DAYNAME(date) AS wday\nFROM la_new_orleans_2020_04_01\nGROUP BY subject_race, wday;\n\n\nDisplaying records 1 - 10\n\n\nsubject_race\nnum_stops\nmin_age\nmax_age\nwday\n\n\n\n\n\n1800\n\n\nFriday\n\n\n\n1590\n\n\nMonday\n\n\n\n1332\n\n\nSaturday\n\n\n\n1172\n\n\nSunday\n\n\n\n1953\n\n\nThursday\n\n\n\n1877\n\n\nTuesday\n\n\n\n2006\n\n\nWednesday\n\n\nasian/pacific islander\n551\n16\n78\nFriday\n\n\nasian/pacific islander\n484\n13\n78\nMonday\n\n\nasian/pacific islander\n475\n15\n78\nSaturday"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#order-by",
    "href": "slides/2024-11-13-clauses.html#order-by",
    "title": "SQL clauses",
    "section": "ORDER BY",
    "text": "ORDER BY\nORDER BY allows us to look at interesting aspects of the data by sorting the data.\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       MIN(subject_age) AS min_age,\n       MAX(subject_age) AS max_age,\n       DAYNAME(date) AS wday\nFROM la_new_orleans_2020_04_01\nGROUP BY subject_race, wday\nORDER BY min_age ASC;\n\n\nDisplaying records 1 - 10\n\n\nsubject_race\nnum_stops\nmin_age\nmax_age\nwday\n\n\n\n\n\n1332\n\n\nSaturday\n\n\n\n1172\n\n\nSunday\n\n\n\n1877\n\n\nTuesday\n\n\n\n2006\n\n\nWednesday\n\n\n\n1953\n\n\nThursday\n\n\n\n1800\n\n\nFriday\n\n\n\n1590\n\n\nMonday\n\n\nblack\n49945\n10\n110\nFriday\n\n\nblack\n42593\n10\n106\nSaturday\n\n\nblack\n39252\n10\n92\nSunday\n\n\n\n\n\nWHAT?!?!! How are 10 year olds getting pulled over for traffic stops?"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#order-by-1",
    "href": "slides/2024-11-13-clauses.html#order-by-1",
    "title": "SQL clauses",
    "section": "ORDER BY",
    "text": "ORDER BY\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       MIN(subject_age) AS min_age,\n       MAX(subject_age) AS max_age,\n       DAYNAME(date) AS wday\nFROM la_new_orleans_2020_04_01\nGROUP BY subject_race, wday\nORDER BY max_age DESC;\n\n\nDisplaying records 1 - 10\n\n\nsubject_race\nnum_stops\nmin_age\nmax_age\nwday\n\n\n\n\nblack\n49945\n10\n110\nFriday\n\n\nblack\n56459\n10\n110\nTuesday\n\n\nblack\n57153\n10\n110\nWednesday\n\n\nblack\n54858\n10\n110\nThursday\n\n\nhispanic\n2007\n11\n110\nThursday\n\n\nblack\n49557\n10\n110\nMonday\n\n\nwhite\n18494\n11\n107\nFriday\n\n\nblack\n42593\n10\n106\nSaturday\n\n\nwhite\n20764\n11\n105\nWednesday\n\n\nwhite\n15778\n11\n104\nSunday\n\n\n\n\n\nSo many people over 100 years old… the data seem fishy!"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#order-by-2",
    "href": "slides/2024-11-13-clauses.html#order-by-2",
    "title": "SQL clauses",
    "section": "ORDER BY",
    "text": "ORDER BY\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       MIN(subject_age) AS min_age,\n       MAX(subject_age) AS max_age,\n       DAYNAME(date) AS wday\nFROM la_new_orleans_2020_04_01\nGROUP BY subject_race, wday\nORDER BY wday, subject_race;\n\n\nDisplaying records 1 - 10\n\n\nsubject_race\nnum_stops\nmin_age\nmax_age\nwday\n\n\n\n\nblack\n2\n17\n24\n\n\n\nwhite\n2\n23\n57\n\n\n\n\n1800\n\n\nFriday\n\n\nasian/pacific islander\n551\n16\n78\nFriday\n\n\nblack\n49945\n10\n110\nFriday\n\n\nhispanic\n1851\n11\n83\nFriday\n\n\nother\n61\n19\n66\nFriday\n\n\nunknown\n510\n17\n75\nFriday\n\n\nwhite\n18494\n11\n107\nFriday\n\n\n\n1590\n\n\nMonday"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#order-by-3",
    "href": "slides/2024-11-13-clauses.html#order-by-3",
    "title": "SQL clauses",
    "section": "ORDER BY",
    "text": "ORDER BY\n\n\n\nNote that both GROUP BY and ORDER BY evaluate the data after it has been retrieved. Therefore, the functions operate on the results set, not the original rows of the data.\n\n\n\nWe are able to GROUP BY and ORDER BY on the new variables we had created, wday."
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#having",
    "href": "slides/2024-11-13-clauses.html#having",
    "title": "SQL clauses",
    "section": "HAVING",
    "text": "HAVING\nRecall that WHERE acts only on the original data. If we are interested in traffic stops that happened on Friday, we need to use the derived variable wday instead of the raw variable date. Fortunately, HAVING works on the results set."
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#having-1",
    "href": "slides/2024-11-13-clauses.html#having-1",
    "title": "SQL clauses",
    "section": "HAVING",
    "text": "HAVING\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       MIN(subject_age) AS min_age,\n       MAX(subject_age) AS max_age,\n       DAYNAME(date) AS wday\nFROM la_new_orleans_2020_04_01\nGROUP BY subject_race, wday\nHAVING wday = 'Friday';\n\n\n7 records\n\n\nsubject_race\nnum_stops\nmin_age\nmax_age\nwday\n\n\n\n\n\n1800\n\n\nFriday\n\n\nasian/pacific islander\n551\n16\n78\nFriday\n\n\nblack\n49945\n10\n110\nFriday\n\n\nhispanic\n1851\n11\n83\nFriday\n\n\nother\n61\n19\n66\nFriday\n\n\nunknown\n510\n17\n75\nFriday\n\n\nwhite\n18494\n11\n107\nFriday"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#having-2",
    "href": "slides/2024-11-13-clauses.html#having-2",
    "title": "SQL clauses",
    "section": "HAVING",
    "text": "HAVING\nWhile it worked out quite well for us that HAVING was able to filter the data based on the results set, the use of HAVING was quite onerous because the entire data set was considered before the filter was applied. That is, if the filter can be done on the original data using WHERE, the query will be much faster and more efficient.\nNote: HAVING requires a GROUP BY clause. And the variable(s) used in HAVING must also be part of the GROUP BY clause."
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#limit",
    "href": "slides/2024-11-13-clauses.html#limit",
    "title": "SQL clauses",
    "section": "LIMIT",
    "text": "LIMIT\nLIMIT truncates the query to specified rows. The first number is the offset (i.e., the number of rows to skip), the second number is the (maximum) number of rows to return. Here, we return rows 154219 through 154228.\nThe first number is optional.\n\nSELECT * FROM la_new_orleans_2020_04_01 LIMIT 154218, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nraw_row_number\ndate\ntime\nlocation\nlat\nlng\ndistrict\nzone\nsubject_age\nsubject_race\nsubject_sex\nofficer_assignment\ntype\narrest_made\ncitation_issued\nwarning_issued\noutcome\ncontraband_found\ncontraband_drugs\ncontraband_weapons\nfrisk_performed\nsearch_conducted\nsearch_person\nsearch_vehicle\nsearch_basis\nreason_for_stop\nvehicle_color\nvehicle_make\nvehicle_model\nvehicle_year\nraw_actions_taken\nraw_subject_race\n\n\n\n\n442170\n2017-04-20\n13:15:00\nGentilly Blvd & Franklin Ave\n30.0\n-90.0\n3\nY\n31\nblack\nmale\n3rd District\nvehicular\n0\n0\n1\nwarning\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nBLACK\nDODGE\nCHARGER\n2008\nStop Results: Verbal Warning;Subject Type: Driver;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nBLACK\n\n\n442169\n2017-04-20\n13:15:00\nGentilly Blvd & Franklin Ave\n30.0\n-90.0\n3\nY\n32\nblack\nmale\n3rd District\nvehicular\n1\n0\n0\narrest\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nBLACK\nDODGE\nCHARGER\n2008\nStop Results: Physical Arrest;Subject Type: Passenger;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nBLACK\n\n\n442094\n2017-04-20\n01:16:00\nBroadway & Freret St\n29.9\n-90.1\n2\nH\n41\nblack\nmale\n2nd District\npedestrian\n0\n0\n0\n\n0\n0\n0\n1\n1\n1\n1\nconsent\nSUSPECT PERSON\n\n\n\n\nStop Results: No action taken;Subject Type: Pedestrian;Search Occurred: Yes;Search Types: Pat-down;Evidence Seized: No;Legal Basises: Consent to search;Consent To Search: Yes;Exit Vehicle: No\nBLACK\n\n\n442171\n2017-04-20\n13:17:00\nFranklin Ave & Gentilly Blvd\n30.0\n-90.0\n3\nY\n27\nblack\nmale\n3rd District\nvehicular\n0\n1\n0\ncitation\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nGRAY\nPONTIAC\nGRAND PRIX\n2008\nStop Results: Citation Issued;Subject Type: Driver;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: Yes\nBLACK\n\n\n442093\n2017-04-20\n01:22:00\nS Claiborne Ave & Thalia St\n29.9\n-90.1\n6\nJ\n28\nwhite\nfemale\n6th District\nvehicular\n0\n0\n1\nwarning\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nBLUE\nJEEP\nGRAND CHEROKEE\n2002\nStop Results: Verbal Warning;Subject Type: Driver;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nWHITE\n\n\n442162\n2017-04-20\n13:27:00\n007XX Saint Charles Ave\n\n\n8\nH\n30\nwhite\nmale\n8th District\nvehicular\n0\n1\n0\ncitation\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nYELLOW\nDODGE\nGRAND CARAVAN\n2013\nStop Results: Citation Issued;Subject Type: Driver;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nWHITE\n\n\n442160\n2017-04-20\n13:27:00\nTulane Ave & S Jefferson Davis Pkwy\n30.0\n-90.1\n1\nL\n22\nblack\nfemale\n1st District\nvehicular\n0\n1\n1\ncitation\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nWHITE\nCHEVROLET\nOTHER\n2007\nStop Results: Citation Issued;Stop Results: Verbal Warning;Subject Type: Driver;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nBLACK\n\n\n442159\n2017-04-20\n13:31:00\nDiana St & Wagner St\n29.9\n-90.0\n4\nH\n20\nblack\nfemale\n4th District\nvehicular\n0\n0\n1\nwarning\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nWHITE\nNISSAN\nALTIMA\n2003\nStop Results: Verbal Warning;Subject Type: Driver;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nBLACK\n\n\n442161\n2017-04-20\n13:35:00\nS Jefferson Davis Pkwy & Tulane Ave\n30.0\n-90.1\n1\nL\n28\nblack\nmale\n1st District\nvehicular\n0\n1\n0\ncitation\n0\n0\n0\n0\n1\n1\n1\nconsent\nTRAFFIC VIOLATION\nBLACK\nHONDA\nACCORD\n1991\nStop Results: Citation Issued;Subject Type: Driver;Search Occurred: Yes;Search Types: Vehicle;Evidence Seized: No;Legal Basises: Consent to search;Consent To Search: Yes;Exit Vehicle: Yes\nBLACK\n\n\n442650\n2017-04-20\n13:37:00\nSaint Louis St & N Peters St\n30.0\n-90.1\n8\nD\n57\nblack\nmale\n8th District\n\n0\n1\n0\ncitation\n\n\n\n0\n0\n0\n0\n\nCRIMINAL VIOLATION\n\n\n\n\nStop Results: Citation Issued;Subject Type: Pedestrian;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nBLACK"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#saving-sql-queries-as-r-objects",
    "href": "slides/2024-11-13-clauses.html#saving-sql-queries-as-r-objects",
    "title": "SQL clauses",
    "section": "Saving SQL queries as R objects",
    "text": "Saving SQL queries as R objects\nIf you are working in R to run SQL commands, you may want to use the query output for further analysis or visualizations.\n\nuse #| output.var: \"name_of_variable\" inside the {sql} chunk.\nname_of_variable will then be available to be used in the R environment.\n\n\n```{sql}\n#| connection: con_traffic\n#| output.var: \"new_table\"\n\nSELECT *, DAYNAME(date) AS wday\nFROM la_new_orleans_2020_04_01\nLIMIT 0, 1000;\n```"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#saving-sql-queries-as-r-objects-1",
    "href": "slides/2024-11-13-clauses.html#saving-sql-queries-as-r-objects-1",
    "title": "SQL clauses",
    "section": "Saving SQL queries as R objects",
    "text": "Saving SQL queries as R objects\n\n```{r}\nnew_table |&gt;\n  drop_na(wday) |&gt;\n  ggplot(aes(x = vehicle_year, y = subject_age, color = wday)) + \n  geom_point() +\n  xlim(1985, 2025)\n```"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#good-practice",
    "href": "slides/2024-11-13-clauses.html#good-practice",
    "title": "SQL clauses",
    "section": "Good practice",
    "text": "Good practice\nAlways a good idea to terminate the SQL connection when you are done with it.\n\ndbDisconnect(con_traffic, shutdown = TRUE)"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#traffic-stops",
    "href": "slides/2024-11-13-clauses.html#traffic-stops",
    "title": "SQL clauses",
    "section": "Traffic Stops",
    "text": "Traffic Stops\nConsider a database of information from Stanford Open Policing Project on over 200 million traffic stops in the US."
  },
  {
    "objectID": "slides/2024-11-18-joins.html#imdb",
    "href": "slides/2024-11-18-joins.html#imdb",
    "title": "SQL joins",
    "section": "IMDb",
    "text": "IMDb\nConsider a database of information from IMDb."
  },
  {
    "objectID": "slides/2024-11-18-joins.html#imdb-1",
    "href": "slides/2024-11-18-joins.html#imdb-1",
    "title": "SQL joins",
    "section": "IMDb",
    "text": "IMDb\n21 tables in the imdb database! Lots of details on movies, TV series, video games, and more. Today interest is in movies (and details within, like actors and ratings).\n\nSHOW TABLES;\n\n\nDisplaying records 1 - 10\n\n\nTables_in_imdb\n\n\n\n\naka_name\n\n\naka_title\n\n\ncast_info\n\n\nchar_name\n\n\ncomp_cast_type\n\n\ncompany_name\n\n\ncompany_type\n\n\ncomplete_cast\n\n\ninfo_type\n\n\nkeyword"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#imdb---glance-through-tables",
    "href": "slides/2024-11-18-joins.html#imdb---glance-through-tables",
    "title": "SQL joins",
    "section": "IMDb - glance through tables",
    "text": "IMDb - glance through tables\n\nSELECT * FROM kind_type\nLIMIT 0, 10;\n\n\n7 records\n\n\nid\nkind\n\n\n\n\n1\nmovie\n\n\n2\ntv series\n\n\n3\ntv movie\n\n\n4\nvideo movie\n\n\n5\ntv mini series\n\n\n6\nvideo game\n\n\n7\nepisode"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#all-the-joins",
    "href": "slides/2024-11-18-joins.html#all-the-joins",
    "title": "SQL joins",
    "section": "All the JOINs",
    "text": "All the JOINs\n\nJOIN (aka INNER JOIN): include all of the rows that exist in both tables\nLEFT JOIN: include all of the rows in the first table.\n\nRIGHT JOIN: include all of the rows in the second table.\nFULL OUTER JOIN: include all rows in either table. (The functionality doesn’t exist in MySQL but can be created using joins and UNION.)\nCROSS JOIN: match each row of the first table with each row in the second table."
  },
  {
    "objectID": "slides/2024-11-18-joins.html#all-the-joins-1",
    "href": "slides/2024-11-18-joins.html#all-the-joins-1",
    "title": "SQL joins",
    "section": "All the JOINs",
    "text": "All the JOINs\nVenn diagrams of the different types of joins.\n\nVenn diagrams describing different JOINs, image credit: phoenixNAP https://phoenixnap.com/kb/mysql-join"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#all-the-joins-2",
    "href": "slides/2024-11-18-joins.html#all-the-joins-2",
    "title": "SQL joins",
    "section": "All the JOINs",
    "text": "All the JOINs\nMini data tables of the different types of JOIN. (In SQL the missing values will be labeled as NULL (not NA).)\n\nMini data tables describing different JOINs, image credit: Statistics Globe blog, https://statisticsglobe.com/r-dplyr-join-inner-left-right-full-semi-anti"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#all-the-joins-3",
    "href": "slides/2024-11-18-joins.html#all-the-joins-3",
    "title": "SQL joins",
    "section": "All the JOINs",
    "text": "All the JOINs\nEach JOIN clause needs four specific pieces of information:\n\nThe name of the first table you want to JOIN.\nThe type of JOIN being used.\nThe name of the second table you want to JOIN.\nThe condition(s) under which you want the records in the first table to match records in the second table."
  },
  {
    "objectID": "slides/2024-11-18-joins.html#a-toy-example",
    "href": "slides/2024-11-18-joins.html#a-toy-example",
    "title": "SQL joins",
    "section": "A toy example",
    "text": "A toy example\nRock bands from the 60s.\n\nband_members\n\n# A tibble: 3 × 2\n  name  band   \n  &lt;chr&gt; &lt;chr&gt;  \n1 Mick  Stones \n2 John  Beatles\n3 Paul  Beatles\n\nband_instruments\n\n# A tibble: 3 × 2\n  name  plays \n  &lt;chr&gt; &lt;chr&gt; \n1 John  guitar\n2 Paul  bass  \n3 Keith guitar\n\n\nThe function sqldf() in the sqldf R package allows for SQL commands on R objects."
  },
  {
    "objectID": "slides/2024-11-18-joins.html#rock-bands---inner-join",
    "href": "slides/2024-11-18-joins.html#rock-bands---inner-join",
    "title": "SQL joins",
    "section": "Rock bands - INNER JOIN",
    "text": "Rock bands - INNER JOIN\nAn inner join combines two datasets returning only the observations that exist in both of the original datasets.\n\nsqldf::sqldf(\"SELECT star.name,\n                     star.band,\n                     inst.plays\n              FROM band_members AS star\n              JOIN band_instruments AS inst ON star.name = inst.name\")\n\n  name    band  plays\n1 John Beatles guitar\n2 Paul Beatles   bass"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#rock-bands---full-join",
    "href": "slides/2024-11-18-joins.html#rock-bands---full-join",
    "title": "SQL joins",
    "section": "Rock bands - FULL JOIN",
    "text": "Rock bands - FULL JOIN\nA full join combines two datasets returning every observation that exists in either one of the original datasets.\n\nband_members |&gt;\n  full_join(band_instruments)\n\n# A tibble: 4 × 3\n  name  band    plays \n  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n1 Mick  Stones  &lt;NA&gt;  \n2 John  Beatles guitar\n3 Paul  Beatles bass  \n4 Keith &lt;NA&gt;    guitar\n\n\nThe full_join() function does not have an equivalent in MySQL. See notes for using JOINs and UNIONs to produce a full join."
  },
  {
    "objectID": "slides/2024-11-18-joins.html#rock-bands---left-join",
    "href": "slides/2024-11-18-joins.html#rock-bands---left-join",
    "title": "SQL joins",
    "section": "Rock bands - LEFT JOIN",
    "text": "Rock bands - LEFT JOIN\nA left join combines two datasets returning every observation that exists in the left (or first) original dataset.\n\nsqldf::sqldf(\"SELECT star.name,\n                     star.band,\n                      inst.plays\n              FROM band_members AS star\n              LEFT JOIN band_instruments AS inst \n              ON star.name = inst.name\")\n\n  name    band  plays\n1 Mick  Stones   &lt;NA&gt;\n2 John Beatles guitar\n3 Paul Beatles   bass"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#rock-bands---right-join",
    "href": "slides/2024-11-18-joins.html#rock-bands---right-join",
    "title": "SQL joins",
    "section": "Rock bands - RIGHT JOIN",
    "text": "Rock bands - RIGHT JOIN\nA right join combines two datasets returning every observation that exists in the right (or second) original dataset.\n\nsqldf::sqldf(\"SELECT inst.name,\n                     star.band,\n                      inst.plays\n              FROM band_members AS star\n              RIGHT JOIN band_instruments AS inst \n              ON star.name = inst.name\")\n\n   name    band  plays\n1  John Beatles guitar\n2  Paul Beatles   bass\n3 Keith    &lt;NA&gt; guitar"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#rock-bands---cross-join",
    "href": "slides/2024-11-18-joins.html#rock-bands---cross-join",
    "title": "SQL joins",
    "section": "Rock bands - CROSS JOIN",
    "text": "Rock bands - CROSS JOIN\nA cross join combines every row from one table with every row from another table to produce the Cartesian product of the two tables.\n\nsqldf::sqldf(\"SELECT *\n              FROM band_members AS star\n              CROSS JOIN band_instruments AS inst\")\n\n  name    band  name  plays\n1 Mick  Stones  John guitar\n2 Mick  Stones  Paul   bass\n3 Mick  Stones Keith guitar\n4 John Beatles  John guitar\n5 John Beatles  Paul   bass\n6 John Beatles Keith guitar\n7 Paul Beatles  John guitar\n8 Paul Beatles  Paul   bass\n9 Paul Beatles Keith guitar"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#join-imdb-title-votes",
    "href": "slides/2024-11-18-joins.html#join-imdb-title-votes",
    "title": "SQL joins",
    "section": "JOIN IMDb title + votes",
    "text": "JOIN IMDb title + votes\nIn the imdb database, the title table includes information about the 4,626,322 titles in the database, including the id, title, kind_id (indicator for the kind of ID it is), and production_year. It does not, however, include the review of the title.\n\nSELECT * FROM title LIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ntitle\nimdb_index\nkind_id\nproduction_year\nimdb_id\nphonetic_code\nepisode_of_id\nseason_nr\nepisode_nr\nseries_years\nmd5sum\n\n\n\n\n78460\nAdults Recat to the Simpsons (30th Anniversary)\n\n7\n2017\n\nA3432\n78406\n\n\n\n2ae09eed7d576cc2c24774fed5b18168\n\n\n70273\n(2016-05-18)\n\n7\n2016\n\n\n68058\n\n\n\n511dfc14cfff7589d29a95abb30cd66a\n\n\n60105\n(2014-04-11)\n\n7\n2014\n\n\n59138\n\n\n\nc6cdce7e667e07713e431805c407feed\n\n\n32120\n(2008-05-01)\n\n7\n2008\n\n\n32060\n\n\n\n100df65742caf5afd092b2e0ead67d8e\n\n\n97554\nSchmÃ¶lders Traum\n\n7\n2001\n\nS2543\n97302\n10\n1\n\n46862a2f96f9fb2d59e8c9a11ecfdd28\n\n\n57966\n(#1.1)\n\n7\n2013\n\n\n57965\n1\n1\n\n409c37703766c4b24f8a86162fd9cf85\n\n\n76391\nAnniversary\n\n7\n1971\n\nA5162\n76385\n4\n9\n\n5e12ce73fac1d1dcf94136b6e9acd8f8\n\n\n11952\nAngus Black/Lester Barrie/DC Curry\n\n7\n2009\n\nA5214\n11937\n4\n7\n\n9c38b9e5601dc154444b73b518034aa1\n\n\n1554\nNew Orleans\n\n7\n2003\n\nN6452\n1508\n2\n11\n\n621bea735740a547e862e4a3226f35d2\n\n\n58442\nKiss Me Kate\n\n7\n2011\n\nK2523\n58436\n1\n10\n\n293e8c75c7f35a4035abf617962be5a9"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#join-imdb-title-votes-1",
    "href": "slides/2024-11-18-joins.html#join-imdb-title-votes-1",
    "title": "SQL joins",
    "section": "JOIN IMDb title + votes",
    "text": "JOIN IMDb title + votes\nThe movie_info_idx table does not contain much information about each particular film. It does, however, have an indicator for the movie ID (given by movie_id) as well as the number of votes (given by info where type_id = 100).\n\nSELECT * FROM movie_info_idx LIMIT 0, 6;\n\n\n6 records\n\n\nid\nmovie_id\ninfo_type_id\ninfo\nnote\n\n\n\n\n1\n1\n99\n31.2.1..2.\n\n\n\n2\n1\n100\n9\n\n\n\n3\n1\n101\n4.1\n\n\n\n4\n2\n99\n1000000102\n\n\n\n5\n2\n100\n61\n\n\n\n6\n2\n101\n6.4"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#join-imdb-title-votes-2",
    "href": "slides/2024-11-18-joins.html#join-imdb-title-votes-2",
    "title": "SQL joins",
    "section": "JOIN IMDb title + votes",
    "text": "JOIN IMDb title + votes\n\ncombine the titles with the number of votes so that each title with user votes is included (INNER JOIN)\n\n\nSELECT title.id,\n       title.title,\n       movie_info_idx.info\nFROM title\nJOIN movie_info_idx ON title.id = movie_info_idx.movie_id \nWHERE title.production_year = 2015 \n    AND title.kind_id = 1                  # movies only\n    AND movie_info_idx.info_type_id = 100  # info_type is votes\n    AND movie_info_idx.info &gt; 150000       # at least 150,000 votes\nORDER BY movie_info_idx.info DESC\nLIMIT 0, 20;\n\n\nDisplaying records 1 - 10\n\n\nid\ntitle\ninfo\n\n\n\n\n4260166\nStar Wars: Episode VII - The Force Awakens\n691691\n\n\n3915213\nMad Max: Fury Road\n666484\n\n\n4389619\nThe Martian\n583987\n\n\n3313672\nAvengers: Age of Ultron\n540606\n\n\n4414139\nThe Revenant\n526189\n\n\n3787790\nJurassic World\n471237\n\n\n3752999\nInside Out\n443051\n\n\n3292159\nAnt-Man\n390965\n\n\n4364483\nThe Hateful Eight\n363199\n\n\n4251736\nSpectre\n319875\n\n\n\n\n\nSome aspects of the query are worth pointing out:\n\nThe variables in the output are given in the SELECT clause. The id and title (both from the title table) and the info from the movie_info_idx which represents the number of IMDb votes.\nThe variables are preceded by the table from which they came. While not always necessary, it is good practice so as to avoid confusion.\nThe JOIN happens by linking the id variable in the title table with the movie_id variable in the movie_info_idx table.\nThe LIMIT wasn’t necessary (there are only 12 observations), but it’s good practice so that we don’t end up with unwieldy query results.\nThe WHERE clause happens before the JOIN action, despite being written after.\nIn the WHERE clause, we keep only movies, only 2015 production year, and only at least 150,000 votes."
  },
  {
    "objectID": "slides/2024-11-18-joins.html#join-imdb-title-actress",
    "href": "slides/2024-11-18-joins.html#join-imdb-title-actress",
    "title": "SQL joins",
    "section": "JOIN IMDb title + actress",
    "text": "JOIN IMDb title + actress\ncast_info contains the person_id and the movie_id\n\nSELECT * FROM cast_info LIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\nid\nperson_id\nmovie_id\nperson_role_id\nnote\nnr_order\nrole_id\n\n\n\n\n1\n1\n3432997\n1\n\n31\n1\n\n\n2\n2\n1901690\n2\n\n\n1\n\n\n3\n3\n4027567\n2\n\n25\n1\n\n\n4\n3\n4282876\n3\n\n22\n1\n\n\n5\n4\n3542672\n\n\n12\n1\n\n\n6\n5\n3331520\n4\n(as $hutter Boy)\n10\n1\n\n\n7\n5\n4027191\n2\n(as $hutter Boy)\n1\n1\n\n\n8\n5\n4195731\n5\n(uncredited)\n\n1\n\n\n9\n5\n4263956\n6\n(uncredited)\n\n1\n\n\n10\n5\n4267787\n7\n(uncredited)\n\n1\n\n\n\n\n\nperson_role_id is 1 if actor and 2 if actress"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#join-imdb-title-actress-1",
    "href": "slides/2024-11-18-joins.html#join-imdb-title-actress-1",
    "title": "SQL joins",
    "section": "JOIN IMDb title + actress",
    "text": "JOIN IMDb title + actress\naka_name contains person_id and name (of actor)\n\nSELECT * FROM aka_name LIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\nid\nperson_id\nname\nimdb_index\nname_pcode_cf\nname_pcode_nf\nsurname_pcode\nmd5sum\n\n\n\n\n1\n6188450\nSmith, Jessica Noel\n\nS5325\nJ2542\nS53\n25c9d464e3ff2957533546aa92b397ed\n\n\n2\n5125059\nPain, L. $ham\n\nP545\nL515\nP5\n569b1e885ccb51211c01753f0dad9b2c\n\n\n3\n5\nBoy, \\(hutter               |           |B36           |H361          |B             |35092b5604ce378fc48c8a6fc0038a49 |\n|4  |   4152053|Dollasign, Ty              |           |D4253         |T3425         |D425          |0f565a2d8027cfb8ed6c5f4bba719fcd |\n|5  |   4152053|Sign, Ty Dolla             |           |S2534         |T3425         |S25           |2eded1b021b96333b4b74e0fec959650 |\n|6  |         6|Moore, Brandon             |           |M6165         |B6535         |M6            |193a6f5adf4756320f622162d2475608 |\n|7  |         8|\\)torm, Country\n\nT6525\nC5363\nT65\n1654400b707d34323ea392b87060e6cc\n\n\n8\n19\n‘Hooper’, Simon P.J. Kelly\n\nH1625\nS5124\nH16\n3fd8885372c23f8c74e583da91d1fd05\n\n\n9\n19\nHooper\n\nH16\n\n\n24ddc68ab605ee95857ad45b65ffa2d8\n\n\n10\n19\nKelly, Simon P.J.\n\nK4251\nS5124\nK4\n33d976f22e276b73c61513bc5f6e72a6"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#join-imdb-title-actress-2",
    "href": "slides/2024-11-18-joins.html#join-imdb-title-actress-2",
    "title": "SQL joins",
    "section": "JOIN IMDb title + actress",
    "text": "JOIN IMDb title + actress\ntitle contains id and title (of the movie)\n\nSELECT * FROM title LIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ntitle\nimdb_index\nkind_id\nproduction_year\nimdb_id\nphonetic_code\nepisode_of_id\nseason_nr\nepisode_nr\nseries_years\nmd5sum\n\n\n\n\n78460\nAdults Recat to the Simpsons (30th Anniversary)\n\n7\n2017\n\nA3432\n78406\n\n\n\n2ae09eed7d576cc2c24774fed5b18168\n\n\n70273\n(2016-05-18)\n\n7\n2016\n\n\n68058\n\n\n\n511dfc14cfff7589d29a95abb30cd66a\n\n\n60105\n(2014-04-11)\n\n7\n2014\n\n\n59138\n\n\n\nc6cdce7e667e07713e431805c407feed\n\n\n32120\n(2008-05-01)\n\n7\n2008\n\n\n32060\n\n\n\n100df65742caf5afd092b2e0ead67d8e\n\n\n97554\nSchmÃ¶lders Traum\n\n7\n2001\n\nS2543\n97302\n10\n1\n\n46862a2f96f9fb2d59e8c9a11ecfdd28\n\n\n57966\n(#1.1)\n\n7\n2013\n\n\n57965\n1\n1\n\n409c37703766c4b24f8a86162fd9cf85\n\n\n76391\nAnniversary\n\n7\n1971\n\nA5162\n76385\n4\n9\n\n5e12ce73fac1d1dcf94136b6e9acd8f8\n\n\n11952\nAngus Black/Lester Barrie/DC Curry\n\n7\n2009\n\nA5214\n11937\n4\n7\n\n9c38b9e5601dc154444b73b518034aa1\n\n\n1554\nNew Orleans\n\n7\n2003\n\nN6452\n1508\n2\n11\n\n621bea735740a547e862e4a3226f35d2\n\n\n58442\nKiss Me Kate\n\n7\n2011\n\nK2523\n58436\n1\n10\n\n293e8c75c7f35a4035abf617962be5a9"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#join-imdb-title-actress-3",
    "href": "slides/2024-11-18-joins.html#join-imdb-title-actress-3",
    "title": "SQL joins",
    "section": "JOIN IMDb title + actress",
    "text": "JOIN IMDb title + actress\nGoal: identify the actresses in those movies with the highest number of votes.\n\nSELECT DISTINCT t.title,\n       idx.info,\n       a.person_id,\n       n.name\nFROM title AS t\nJOIN movie_info_idx AS idx ON t.id = idx.movie_id \nJOIN cast_info AS a ON idx.movie_id = a.movie_id\nJOIN aka_name AS n ON a.person_id = n.person_id\nWHERE t.production_year = 2015 \n    AND t.kind_id = 1           # movies only\n    AND idx.info_type_id = 100  # info_type is votes\n    AND idx.info &gt; 150000       # at least 150,000 votes\n    AND a.role_id = 2           # actresses only\nORDER BY a.person_id\nLIMIT 0, 50;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\ntitle\ninfo\nperson_id\nname\n\n\n\n\nMission: Impossible - Rogue Nation\n266759\n2674172\nSofz\n\n\nMission: Impossible - Rogue Nation\n266759\n2674172\nSof\n\n\nFocus\n172680\n2678594\nLabouisse, Kate\n\n\nMad Max: Fury Road\n666484\n2681098\nMichelle, Debra\n\n\nThe Hunger Games: Mockingjay - Part 2\n214569\n2685496\nHarris, Ahnie\n\n\nThe Hunger Games: Mockingjay - Part 2\n214569\n2685496\nHarris, Jasmine\n\n\nCreed\n183904\n2686218\nKareema, Kiana A.\n\n\nAnt-Man\n390965\n2687271\nAkana, Anna Kay\n\n\nInside Out\n443051\n2689505\nAllen, Lori\n\n\nInside Out\n443051\n2689505\nDenniberg, Lori Alan\n\n\n\n\n\nConnecting the most popular movies of 2015 with the actresses in those movies requires a series of JOINs. Note that to make the code less onerous, the title table has been aliased by t, the movie_info_idx table has been aliased by idx, the cast_info table has been aliased by a, and the aka_name table has been aliased by n.\nThere is a lot of data cleaning to do as some of the person_id values are one to many!! That is, the person_id matches multiple names in the aka_name database."
  },
  {
    "objectID": "slides/2024-11-18-joins.html#other-joins",
    "href": "slides/2024-11-18-joins.html#other-joins",
    "title": "SQL joins",
    "section": "Other JOINs",
    "text": "Other JOINs\nLet’s look at RIGHT JOIN and LEFT JOIN using two new smaller tables.\n\nThe first has seven movies in it (from 2015 with at least 400,000 IMDb votes).\nThe second consists of almost 3 million actresses (person_role_id = 2). In order to find a subset of actresses, the person_id &gt; 3900000 was set arbitrarily (in order to have a smaller group with which to work).\n\nUsing subqueries, we can JOIN the two datasets using different JOIN techniques."
  },
  {
    "objectID": "slides/2024-11-18-joins.html#movies",
    "href": "slides/2024-11-18-joins.html#movies",
    "title": "SQL joins",
    "section": "movies:",
    "text": "movies:\n\nSELECT t.id,\n       t.title,\n       idx.info,\n       (SELECT COUNT(*)\n       FROM title AS t\n       JOIN movie_info_idx AS idx ON idx.movie_id = t.id\n       WHERE t.production_year = 2015  \n             AND t.kind_id = 1\n             AND idx.info_type_id = 100\n             AND idx.info &gt; 400000) AS row_count\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1             # movies only\n    AND idx.info_type_id = 100    # info_type is votes\n    AND idx.info &gt; 400000         # at least 400,000 votes\nORDER BY idx.info DESC;\n\n\n7 records\n\n\n\n\n\n\n\n\nid\ntitle\ninfo\nrow_count\n\n\n\n\n4260166\nStar Wars: Episode VII - The Force Awakens\n691691\n7\n\n\n3915213\nMad Max: Fury Road\n666484\n7\n\n\n4389619\nThe Martian\n583987\n7\n\n\n3313672\nAvengers: Age of Ultron\n540606\n7\n\n\n4414139\nThe Revenant\n526189\n7\n\n\n3787790\nJurassic World\n471237\n7\n\n\n3752999\nInside Out\n443051\n7"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#actresses",
    "href": "slides/2024-11-18-joins.html#actresses",
    "title": "SQL joins",
    "section": "actresses:",
    "text": "actresses:\n\n\nSELECT a.person_id,\n       a.movie_id,\n       n.name,\n       (SELECT COUNT(*)\n       FROM cast_info AS a\n       JOIN aka_name AS n ON a.person_id = n.person_id\n       WHERE a.person_role_id = 2  \n             AND a.person_id &gt; 390000) AS row_count\nFROM cast_info AS a\nJOIN aka_name AS n ON a.person_id = n.person_id\n       WHERE a.person_role_id = 2  \n             AND a.person_id &gt; 3900000\nLIMIT 0, 20;\n\n\nDisplaying records 1 - 10\n\n\nperson_id\nmovie_id\nname\nrow_count\n\n\n\n\n3900141\n759802\nSimons, Rita Joanne\n2904759\n\n\n3902258\n4365829\nSinger, Rabbi Tovia\n2904759\n\n\n3902699\n3109788\nSingh, Sabine Erika\n2904759\n\n\n3903035\n3215866\nVal\n2904759\n\n\n3904831\n2468067\nMasha\n2904759\n\n\n3904928\n3654347\nFei, Siu Yin\n2904759\n\n\n3904928\n3654347\nHsiao, Yen-fei\n2904759\n\n\n3904928\n3654347\nSiu, Yinfei\n2904759\n\n\n3904928\n3654347\nXiao, Yanfei\n2904759\n\n\n3904928\n3654347\nYin-Fai, Siu\n2904759"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#inner-join",
    "href": "slides/2024-11-18-joins.html#inner-join",
    "title": "SQL joins",
    "section": "Inner JOIN",
    "text": "Inner JOIN\nWith an inner JOIN, there are 32 rows corresponding to all the actresses in the seven 2015 films with the most votes. Because the JOIN is an intersection of the two tables, only the actresses with person_id above 3900000 are included.\n\nSELECT * FROM\n(SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes     \nINNER JOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nLIMIT 0, 300;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\nid\ntitle\nperson_id\nmovie_id\nname\n\n\n\n\n3313672\nAvengers: Age of Ultron\n3916648\n3313672\nSmulders, Jacoba Francisca Maria\n\n\n3752999\nInside Out\n4122876\n3752999\nKuzniar, Lennon Wynn\n\n\n3787790\nJurassic World\n3938423\n3787790\nNorvell, Ingrid\n\n\n3787790\nJurassic World\n3938423\n3787790\nNorvell, Ingrid\n\n\n3787790\nJurassic World\n3950111\n3787790\nSallaway, Seannon Jane\n\n\n3787790\nJurassic World\n4079047\n3787790\nWashington, Kelly Lynn\n\n\n3787790\nJurassic World\n4079047\n3787790\nWashington, Kelly Lynn\n\n\n3787790\nJurassic World\n4084626\n3787790\nWeeks, Jency\n\n\n3787790\nJurassic World\n4084626\n3787790\nJenc\n\n\n3787790\nJurassic World\n4084626\n3787790\nLittle J"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#right-join",
    "href": "slides/2024-11-18-joins.html#right-join",
    "title": "SQL joins",
    "section": "RIGHT JOIN",
    "text": "RIGHT JOIN\nWith a RIGHT JOIN, there are more than 300 rows (the LIMIT clause keeps us from knowing how many rows, but there are a LOT!) corresponding to all the actresses whose person_id above 3900000 are included. Those actresses who acted in one of the seven top 2015 films are also included in the full results table, but they don’t happen to be in the truncated output here.\n\nSELECT * FROM\n(SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes     \nRIGHT JOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nLIMIT 0, 300;\n\n\nDisplaying records 1 - 10\n\n\nid\ntitle\nperson_id\nmovie_id\nname\n\n\n\n\n\n\n3900001\n3355298\nSimonis, Heidi\n\n\n\n\n3900001\n3509490\nSimonis, Heidi\n\n\n\n\n3900001\n3739780\nSimonis, Heidi\n\n\n\n\n3900001\n3943329\nSimonis, Heidi\n\n\n\n\n3900001\n165963\nSimonis, Heidi\n\n\n\n\n3900001\n268249\nSimonis, Heidi\n\n\n\n\n3900001\n268370\nSimonis, Heidi\n\n\n\n\n3900001\n268406\nSimonis, Heidi\n\n\n\n\n3900001\n268475\nSimonis, Heidi\n\n\n\n\n3900001\n279082\nSimonis, Heidi"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#left-join",
    "href": "slides/2024-11-18-joins.html#left-join",
    "title": "SQL joins",
    "section": "LEFT JOIN",
    "text": "LEFT JOIN\nWith a LEFT JOIN, there are 33 rows corresponding to the actresses in the seven top 2015 movies. Only The Revenant did not have any actresses whose person_id is greater than 3900000.\n\nSELECT * FROM\n(SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes     \nLEFT JOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nLIMIT 0, 300;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\nid\ntitle\nperson_id\nmovie_id\nname\n\n\n\n\n3313672\nAvengers: Age of Ultron\n3916648\n3313672\nSmulders, Jacoba Francisca Maria\n\n\n3752999\nInside Out\n4122876\n3752999\nKuzniar, Lennon Wynn\n\n\n3787790\nJurassic World\n3938423\n3787790\nNorvell, Ingrid\n\n\n3787790\nJurassic World\n3938423\n3787790\nNorvell, Ingrid\n\n\n3787790\nJurassic World\n3950111\n3787790\nSallaway, Seannon Jane\n\n\n3787790\nJurassic World\n4079047\n3787790\nWashington, Kelly Lynn\n\n\n3787790\nJurassic World\n4079047\n3787790\nWashington, Kelly Lynn\n\n\n3787790\nJurassic World\n4084626\n3787790\nWeeks, Jency\n\n\n3787790\nJurassic World\n4084626\n3787790\nJenc\n\n\n3787790\nJurassic World\n4084626\n3787790\nLittle J"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#counting-repeat-actresses",
    "href": "slides/2024-11-18-joins.html#counting-repeat-actresses",
    "title": "SQL joins",
    "section": "Counting repeat actresses",
    "text": "Counting repeat actresses\nWe might, for example, want to know how many names / spellings of a name with a specific person_id (above 3900000) exist for each person_id in each of the top voted seven films of 2015.\n\nSELECT acts.person_id, \n       COUNT(*) AS num_repeat_names\nFROM (SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes\nJOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nGROUP BY acts.person_id;\n\n\nDisplaying records 1 - 10\n\n\nperson_id\nnum_repeat_names\n\n\n\n\n3916648\n1\n\n\n4122876\n1\n\n\n3938423\n2\n\n\n3950111\n1\n\n\n4079047\n2\n\n\n4084626\n3\n\n\n4099458\n1\n\n\n3958614\n1\n\n\n3990819\n2\n\n\n4081131\n2"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#counting-number-of-actresses-per-film",
    "href": "slides/2024-11-18-joins.html#counting-number-of-actresses-per-film",
    "title": "SQL joins",
    "section": "Counting number of actresses per film",
    "text": "Counting number of actresses per film\nWe might, for example, want to know how many actresses with a specific person_id (above 3900000) are in each of the top voted seven films of 2015.\n\nSELECT movs.id, \n       movs.title,\n       COUNT(*) AS num_actress\nFROM (SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes\nJOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nGROUP BY movs.id;\n\n\n6 records\n\n\nid\ntitle\nnum_actress\n\n\n\n\n3313672\nAvengers: Age of Ultron\n1\n\n\n3752999\nInside Out\n1\n\n\n3787790\nJurassic World\n9\n\n\n3915213\nMad Max: Fury Road\n5\n\n\n4260166\nStar Wars: Episode VII - The Force Awakens\n15\n\n\n4389619\nThe Martian\n1"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#unioning",
    "href": "slides/2024-11-18-joins.html#unioning",
    "title": "SQL joins",
    "section": "UNIONing",
    "text": "UNIONing\nIn SQL a UNION clause combines two different tables by their rows (whereas JOIN combines two tables by columns). Think about UNION similarly to the bind_rows() command in R.\n\nUNION binds rows while JOIN appends columns, image credit: Jane Williams https://blog.devart.com/mysql-union-tutorial-html.html"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#unions",
    "href": "slides/2024-11-18-joins.html#unions",
    "title": "SQL joins",
    "section": "UNIONs",
    "text": "UNIONs\nSilly example where the column names are ignored.\n\nSELECT \n    1 AS bar,\n    2 AS foo\n\nUNION\n\nSELECT \n    10 AS foo,\n    20 AS bar;\n\n\n2 records\n\n\nbar\nfoo\n\n\n\n\n1\n2\n\n\n10\n20"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#union",
    "href": "slides/2024-11-18-joins.html#union",
    "title": "SQL joins",
    "section": "UNION",
    "text": "UNION\nUNION is specifically designed to bind rows from two different SELECT queries where the variables have been selected in the same order.\nCombine the top voted movies from 2015 with the top voted movies from 2019.\nHowever, to account for time, we require the movies from 2015 to have more votes (400,000) than the movies from 2017 (200,000).\nThat is, the WHERE clause is different for the two subqueries."
  },
  {
    "objectID": "slides/2024-11-18-joins.html#union-1",
    "href": "slides/2024-11-18-joins.html#union-1",
    "title": "SQL joins",
    "section": "UNION",
    "text": "UNION\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 400000)\n\nUNION\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2017  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 200000)\nLIMIT 0, 100;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\ntitle\nproduction_year\nnum_votes\n\n\n\n\nAvengers: Age of Ultron\n2015\n540606\n\n\nInside Out\n2015\n443051\n\n\nJurassic World\n2015\n471237\n\n\nMad Max: Fury Road\n2015\n666484\n\n\nStar Wars: Episode VII - The Force Awakens\n2015\n691691\n\n\nThe Martian\n2015\n583987\n\n\nThe Revenant\n2015\n526189\n\n\nDunkirk\n2017\n229089\n\n\nGuardians of the Galaxy Vol. 2\n2017\n281845\n\n\nLogan\n2017\n397056"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#union-all",
    "href": "slides/2024-11-18-joins.html#union-all",
    "title": "SQL joins",
    "section": "UNION ALL",
    "text": "UNION ALL\nIf the goal is to include duplicates across two tables, use UNION ALL instead of UNION.\nLet’s say that the first table is all movies with production year after 2012 and number of votes greater than 500,000. The second table is movies with production year equal to 2015 and number of votes greater than 400,000.\nThe Martian would be in both tables."
  },
  {
    "objectID": "slides/2024-11-18-joins.html#union-all-1",
    "href": "slides/2024-11-18-joins.html#union-all-1",
    "title": "SQL joins",
    "section": "UNION ALL",
    "text": "UNION ALL\nWith just UNION\n\n(SELECT t.title,\n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year &gt; 2012  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 500000)\n\nUNION\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 400000)\nORDER BY production_year DESC, num_votes;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\ntitle\nproduction_year\nnum_votes\n\n\n\n\nBatman v Superman: Dawn of Justice\n2016\n500037\n\n\nDeadpool\n2016\n673887\n\n\nInside Out\n2015\n443051\n\n\nJurassic World\n2015\n471237\n\n\nThe Revenant\n2015\n526189\n\n\nAvengers: Age of Ultron\n2015\n540606\n\n\nThe Martian\n2015\n583987\n\n\nMad Max: Fury Road\n2015\n666484\n\n\nStar Wars: Episode VII - The Force Awakens\n2015\n691691\n\n\nInterstellar\n2014\n1102826"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#union-all-2",
    "href": "slides/2024-11-18-joins.html#union-all-2",
    "title": "SQL joins",
    "section": "UNION ALL",
    "text": "UNION ALL\nWhen UNION ALL is applied, The Martian is listed twice in the results table.\n\n(SELECT t.title,\n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year &gt; 2012  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 500000)\n\nUNION ALL\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 400000)\nORDER BY production_year DESC, num_votes;\n\n\nDisplaying records 1 - 10\n\n\ntitle\nproduction_year\nnum_votes\n\n\n\n\nBatman v Superman: Dawn of Justice\n2016\n500037\n\n\nDeadpool\n2016\n673887\n\n\nInside Out\n2015\n443051\n\n\nJurassic World\n2015\n471237\n\n\nThe Revenant\n2015\n526189\n\n\nThe Revenant\n2015\n526189\n\n\nAvengers: Age of Ultron\n2015\n540606\n\n\nAvengers: Age of Ultron\n2015\n540606\n\n\nThe Martian\n2015\n583987\n\n\nThe Martian\n2015\n583987"
  },
  {
    "objectID": "slides/2024-11-18-joins.html#best-practice",
    "href": "slides/2024-11-18-joins.html#best-practice",
    "title": "SQL joins",
    "section": "Best practice",
    "text": "Best practice\nIt is always a good idea to terminate the SQL connection when you are done with it.\n\nDBI::dbDisconnect(con_imdb, shutdown = TRUE)"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#traffic-stops-1",
    "href": "slides/2024-11-13-clauses.html#traffic-stops-1",
    "title": "SQL clauses",
    "section": "Traffic Stops",
    "text": "Traffic Stops\n88 tables in the traffic database! Lots of details on traffic stops across cities and highway patrols.\n\nSHOW TABLES;\n\n\nDisplaying records 1 - 10\n\n\nTables_in_traffic\n\n\n\n\nar_little_rock_2020_04_01\n\n\naz_gilbert_2020_04_01\n\n\naz_mesa_2023_01_26\n\n\naz_statewide_2020_04_01\n\n\nca_anaheim_2020_04_01\n\n\nca_bakersfield_2020_04_01\n\n\nca_long_beach_2020_04_01\n\n\nca_los_angeles_2020_04_01\n\n\nca_oakland_2020_04_01\n\n\nca_san_bernardino_2020_04_01"
  },
  {
    "objectID": "slides/2024-11-13-clauses.html#lapd---glance-through-tables",
    "href": "slides/2024-11-13-clauses.html#lapd---glance-through-tables",
    "title": "SQL clauses",
    "section": "LAPD - glance through tables",
    "text": "LAPD - glance through tables\n\nSELECT * FROM ca_los_angeles_2020_04_01\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nraw_row_number\ndate\ntime\ndistrict\nregion\nsubject_race\nsubject_sex\nofficer_id_hash\ntype\nraw_descent_description\n\n\n\n\n5692933\n\n13:59:00\n0753\nWILSHIRE\nhispanic\nmale\n15ecd81b00\npedestrian\nHISPANIC\n\n\n240731\n2010-01-01\n00:05:00\n665\nWEST TRAFFIC\nother\nmale\nb707de41e0\nvehicular\nOTHER\n\n\n240592|240593\n2010-01-01\n00:10:00\n1258\nSEVENTY-SEVENTH\nhispanic\nmale\nb49ae7078c\npedestrian\nHISPANIC\n\n\n241116\n2010-01-01\n00:10:00\n1635\nFOOTHILL\nhispanic\nmale\ne70ce46248\nvehicular\nHISPANIC\n\n\n240681\n2010-01-01\n00:15:00\n882\nWEST LA\nother\nmale\n8587bd743c\nvehicular\nOTHER\n\n\n240602\n2010-01-01\n00:20:00\n559\nHARBOR\nhispanic\nmale\n601bf1fdff\nvehicular\nHISPANIC\n\n\n240594\n2010-01-01\n00:20:00\n667\nHOLLYWOOD\nhispanic\nmale\nfb2e6d8ab3\npedestrian\nHISPANIC\n\n\n241434\n2010-01-01\n00:25:00\n1658\nFOOTHILL\nhispanic\nfemale\n5100c8c759\nvehicular\nHISPANIC\n\n\n240582\n2010-01-01\n00:30:00\n1041\nWEST VALLEY\nblack\nfemale\nd54d90a4d0\nvehicular\nBLACK\n\n\n240642\n2010-01-01\n00:30:00\n1162\nNORTH EAST\nhispanic\nmale\n5d6fbef1d3\npedestrian\nHISPANIC"
  },
  {
    "objectID": "project4.html#timeline",
    "href": "project4.html#timeline",
    "title": "Project 4",
    "section": "Timeline",
    "text": "Timeline\nProject 4 must be submitted on Canvas (not Gradescope) by 11:59 PM on Wednesday April 16. You will add a tab to your Quarto webpage and submit the new page’s URL. [Remember, you should continue to work in your website Rproj. Do not start a new R Project.]"
  },
  {
    "objectID": "project4.html#hints",
    "href": "project4.html#hints",
    "title": "Project 4",
    "section": "Hints",
    "text": "Hints\n\nParse the caption from Figure 1 carefully to determine how mean absorbances are calculated: “Mean absorbances for the 12 studies within the WAI database as of July 1, 2019. Noted in the legend are the peer-reviewed publications associated with the datasets, the number of individual ears, and the equipment used in the study. When multiple measurements were made on the same ear, the average from those measurements was used in the calculation across subjects for a given study. Some subjects have measurements on both a right and a left ear, and some subjects have measurements from only one ear; this figure includes every ear in the database and does not control for the effect of number of ears from each subject.”\nfilter for only the 12 studies shown in Figure 1 (and also for frequencies shown in Figure 1)\nstudy the patterns of frequencies. It seems that most researchers used the same set of frequencies for each subject, ear, and session.\nnote the scale of the x-axis\nthe labels on the legend contains AuthorsShortList, Year, and Instrument, in addition to the number of unique ears (I think Werner’s N may be incorrect?). To get the number of unique ears, you might want something like this inside your SELECT query: COUNT(DISTINCT SubjectNumber, Ear) AS Unique_Ears\nwhen creating the labels, you’ll need to GROUP BY Identifier, Instrument. That is, group by both the Identifier and the Instrument. The Instrument will not perfectly match the labels in the plot.\n\nLogistics:\n\nstart by describing what you plan to do (3-4 sentences). end with a description of what you did (3-4 sentences). That is, use words to guide the reader through your analysis.\nplease include all your code used in the analysis.\nmake sure that all graphs are well-labeled (including x and y axes, title of the graph, and accurate and succinct labels for color and fill).\ndo not include superfluous error or warning messages.\ninclude a few sentences describing each of your plots or tables. That is, tell the reader what they see when they look at the plot. Your narrative description should be in the text part of the qmd file, not as a comment in an R chunk.\ninclude the source of the data."
  },
  {
    "objectID": "project4.html#starter-code",
    "href": "project4.html#starter-code",
    "title": "Project 4",
    "section": "Starter Code",
    "text": "Starter Code\n\nlibrary(RMariaDB)\ncon_wai &lt;- dbConnect(\n  MariaDB(), host = \"scidb.smith.edu\",\n  user = \"waiuser\", password = \"smith_waiDB\", \n  dbname = \"wai\"\n)\nMeasurements &lt;- tbl(con_wai, \"Measurements\")\nPI_Info &lt;- tbl(con_wai, \"PI_Info\")\nSubjects &lt;- tbl(con_wai, \"Subjects\")\n\n# collect(Measurements)\n\n\nSHOW TABLES;\n\n\n7 records\n\n\nTables_in_wai\n\n\n\n\nCodebook\n\n\nMeasurements\n\n\nMeasurements_pre2020\n\n\nPI_Info\n\n\nPI_Info_OLD\n\n\nSubjects\n\n\nSubjects_pre2020\n\n\n\n\n\n\nDESCRIBE Measurements;\n\n\nDisplaying records 1 - 10\n\n\nField\nType\nNull\nKey\nDefault\nExtra\n\n\n\n\nIdentifier\nvarchar(50)\nNO\nPRI\nNA\n\n\n\nSubjectNumber\nint\nNO\nPRI\nNA\n\n\n\nSession\nint\nNO\nPRI\nNA\n\n\n\nEar\nvarchar(50)\nNO\nPRI\n\n\n\n\nInstrument\nvarchar(50)\nNO\nPRI\n\n\n\n\nAge\nfloat\nYES\n\nNA\n\n\n\nAgeCategory\nvarchar(50)\nYES\n\nNA\n\n\n\nEarStatus\nvarchar(50)\nYES\n\nNA\n\n\n\nTPP\nfloat\nYES\n\nNA\n\n\n\nAreaCanal\nfloat\nYES\n\nNA\n\n\n\n\n\n\n\nSELECT *\nFROM Measurements\nLIMIT 0, 5;\n\n\n5 records\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIdentifier\nSubjectNumber\nSession\nEar\nInstrument\nAge\nAgeCategory\nEarStatus\nTPP\nAreaCanal\nPressureCanal\nSweepDirection\nFrequency\nAbsorbance\nZmag\nZang\n\n\n\n\nAbur_2014\n1\n1\nLeft\nHearID\n20\nAdult\nNormal\n-5\n4.42e-05\n0\nAmbient\n210.938\n0.0333379\n113780000\n-0.233504\n\n\nAbur_2014\n1\n1\nLeft\nHearID\n20\nAdult\nNormal\n-5\n4.42e-05\n0\nAmbient\n234.375\n0.0315705\n103585000\n-0.235778\n\n\nAbur_2014\n1\n1\nLeft\nHearID\n20\nAdult\nNormal\n-5\n4.42e-05\n0\nAmbient\n257.812\n0.0405751\n92951696\n-0.233482\n\n\nAbur_2014\n1\n1\nLeft\nHearID\n20\nAdult\nNormal\n-5\n4.42e-05\n0\nAmbient\n281.250\n0.0438399\n86058000\n-0.233421\n\n\nAbur_2014\n1\n1\nLeft\nHearID\n20\nAdult\nNormal\n-5\n4.42e-05\n0\nAmbient\n304.688\n0.0486400\n79492800\n-0.232931"
  },
  {
    "objectID": "project4.html#footnotes",
    "href": "project4.html#footnotes",
    "title": "Project 4",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nhttps://data-feminism.mitpress.mit.edu/pub/vi8obxh7#nhrgx0zws6h↩︎\nhttps://data-feminism.mitpress.mit.edu/pub/vi8obxh7#nifnaq2jmn9↩︎"
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#a-simple-shiny-app",
    "href": "slides/2024-11-25-shiny.html#a-simple-shiny-app",
    "title": "Shiny",
    "section": "A simple Shiny App",
    "text": "A simple Shiny App\nPut the following into a Shiny App using File \\(\\rightarrow\\) New File \\(\\rightarrow\\) Shiny Web App ... as a file called app.R.\n\nlibrary(shiny)\n\nui &lt;- fluidPage(\n  \"Hello, world!\"\n)\n\nserver &lt;- function(input, output, session) {\n}\n\nshinyApp(ui, server)"
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#what-are-the-parts-of-a-shiny-app",
    "href": "slides/2024-11-25-shiny.html#what-are-the-parts-of-a-shiny-app",
    "title": "Shiny",
    "section": "What are the parts of a Shiny App?",
    "text": "What are the parts of a Shiny App?\nLooking closely at the code above, the app.R does four things:\n\nIt calls library(shiny) to load the shiny package.\nIt defines the user interface, the HTML webpage that humans interact with. In this case, it’s a page containing the words “Hello, world!”.\nIt specifies the behaviour of our app by defining a server function. It’s currently empty, so our app doesn’t do anything, but we’ll be back to revisit this shortly.\nIt executes shinyApp(ui, server) to construct and start a Shiny application from UI and server."
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#how-to-run-a-shiny-app",
    "href": "slides/2024-11-25-shiny.html#how-to-run-a-shiny-app",
    "title": "Shiny",
    "section": "How to run a Shiny App?",
    "text": "How to run a Shiny App?\n\n\n\nTo run Shiny\n\n\n\nClick the Run App button in the document toolbar.\n\n\n\n\n\n\n\n\n\n\n\nUse a keyboard shortcut: Cmd/Ctrl + Shift + Enter.\nIf you’re not using RStudio, you can (source()) the whole document, or call shiny::runApp() with the path to the directory containing app.R."
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#shiny",
    "href": "slides/2024-11-25-shiny.html#shiny",
    "title": "Shiny",
    "section": "Shiny",
    "text": "Shiny\n\nShiny is an R package that allows you to easily create rich, interactive web apps. Shiny allows you to take your work in R and expose it via a web browser so that anyone can use it."
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#examples",
    "href": "slides/2024-11-25-shiny.html#examples",
    "title": "Shiny",
    "section": "Examples",
    "text": "Examples\nSee the following gallery of Shiny example from Posit: https://shiny.posit.co/r/gallery/"
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#what-does-it-look-like",
    "href": "slides/2024-11-25-shiny.html#what-does-it-look-like",
    "title": "Shiny",
    "section": "What does it look like?",
    "text": "What does it look like?"
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#back-in-r",
    "href": "slides/2024-11-25-shiny.html#back-in-r",
    "title": "Shiny",
    "section": "Back in R…",
    "text": "Back in R…\nGo back and look at the console. You will see something like:\nListening on http://127.0.0.1:7521\nR is busy! It is running your Shiny App. You can’t do anything in R because the processes are engaged with the Shiny App."
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#pieces",
    "href": "slides/2024-11-25-shiny.html#pieces",
    "title": "Shiny",
    "section": "Pieces",
    "text": "Pieces\nShiny applications will be contained in one app.R file. The file contains two key components:\nui: code for the user interface. The user interface is the webpage that your user will interact with.\nserver: code for the computer part. What should the computer/server do with your inputs as the user changes them.\nThe last code at the bottom, shinyApp(ui = ui, server = server), will compile everything together to result in the interactive webpage.\nPress Run App at the top of RStudio and see what happens!"
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#pieces-1",
    "href": "slides/2024-11-25-shiny.html#pieces-1",
    "title": "Shiny",
    "section": "Pieces",
    "text": "Pieces\n\nlibrary(shiny)\n\nshinyApp(\n  ui = list(\n    # new (to you) widgets go here\n  ),\n  \n  server = function(input, output, session) {\n    # somewhat familiar (to you) code goes here\n  }\n)"
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#a-brief-widget-tour",
    "href": "slides/2024-11-25-shiny.html#a-brief-widget-tour",
    "title": "Shiny",
    "section": "A brief widget tour",
    "text": "A brief widget tour\nhttps://rundel.shinyapps.io/widgets/"
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#the-default-shinny-app",
    "href": "slides/2024-11-25-shiny.html#the-default-shinny-app",
    "title": "Shiny",
    "section": "The default Shinny App",
    "text": "The default Shinny App\n\n#\n# This is a Shiny web application. You can run the application by clicking\n# the 'Run App' button above.\n#\n# Find out more about building applications with Shiny here:\n#\n#    https://shiny.posit.co/\n#\n\nlibrary(shiny)\n\n# Define UI for application that draws a histogram\nui &lt;- fluidPage(\n\n    # Application title\n    titlePanel(\"Old Faithful Geyser Data\"),\n\n    # Sidebar with a slider input for number of bins \n    sidebarLayout(\n        sidebarPanel(\n            sliderInput(\"bins\",\n                        \"Number of bins:\",\n                        min = 1,\n                        max = 50,\n                        value = 30)\n        ),\n\n        # Show a plot of the generated distribution\n        mainPanel(\n           plotOutput(\"distPlot\")\n        )\n    )\n)\n\n# Define server logic required to draw a histogram\nserver &lt;- function(input, output) {\n\n    output$distPlot &lt;- renderPlot({\n        # generate bins based on input$bins from ui.R\n        x    &lt;- faithful[, 2]\n        bins &lt;- seq(min(x), max(x), length.out = input$bins + 1)\n\n        # draw the histogram with the specified number of bins\n        hist(x, breaks = bins, col = 'darkgray', border = 'white',\n             xlab = 'Waiting time to next eruption (in mins)',\n             main = 'Histogram of waiting times')\n    })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)"
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#running-old-faithful",
    "href": "slides/2024-11-25-shiny.html#running-old-faithful",
    "title": "Shiny",
    "section": "Running Old Faithful",
    "text": "Running Old Faithful\n\nRun in RStudio\nSee the app in action here: https://shiny.posit.co/r/gallery/start-simple/faithful/"
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#live-demo",
    "href": "slides/2024-11-25-shiny.html#live-demo",
    "title": "Shiny",
    "section": "Live demo",
    "text": "Live demo\nLet’s build a weather app! See sample files here: https://github.com/hardin47/ds002r-fds/tree/main/Shiny_weather"
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#shiny-in-python",
    "href": "slides/2024-11-25-shiny.html#shiny-in-python",
    "title": "Shiny",
    "section": "Shiny in Python",
    "text": "Shiny in Python\nCheck it out!\nhttps://shiny.posit.co/py/"
  },
  {
    "objectID": "project5.html#tasks",
    "href": "project5.html#tasks",
    "title": "Project 5",
    "section": "Tasks",
    "text": "Tasks\nProject 5 has two main tasks:\n\nThe first is to re-do all the previous projects. Not only should you address all the issues that have been previously brought to light (see comments on projects on Canvas), but you should also do things like removing the warnings & messages. Making sure that all data and ideas have been properly cited. Rewriting any code so that it is actually your work (instead of, for example, copied directly from ChatGPT). Giving all graphs proper captions. Explaining your work. You will write up (and turn in, separate from your website) a document explaining what changes and updates you’ve made.\nThe second thing to do is to prepare a ~5 min presentation on some aspect of your project. It can be about any aspect of the project (or all aspects of the project), and your presentation should be as if to a client about the work. You’ll create the presentation in Quarto (formatted as revealjs) rendered to html. The presentation will be either on Friday Dec 6th during reading days (9am-noon) or during our regularly scheduled final time, Monday Dec 9th 9am-noon (your choice)."
  },
  {
    "objectID": "project5.html#timeline",
    "href": "project5.html#timeline",
    "title": "Project 5",
    "section": "Timeline",
    "text": "Timeline\nProject 5 must be submitted on Canvas (not Gradescope) by 11:59 PM on Wednesday April 30. You will add a tab to your Quarto webpage and submit the new page’s URL. [Remember, you should continue to work in your website Rproj. Do not start a new R Project.]"
  },
  {
    "objectID": "project5.html#presentation",
    "href": "project5.html#presentation",
    "title": "Project 5",
    "section": "Presentation",
    "text": "Presentation\nYour slides should be created in Quarto (formatted as revealjs) and rendered to html. They should be linked to the website. A new slide is created by a second level header: ##. The YAML for the presentation slides might look like this:\n---\ntitle: \"title of presentation\"\nauthor: \"your name\"\nsubtitle: \"date of presentation\"\nformat:\n  revealjs:\n    scrollable: true\n    slide-number: true\n    show-slide-number: all\n    embed-resources: true\nexecute:\n  echo: true\n  warning: false\n  message: false\n---"
  },
  {
    "objectID": "project5.html#hints",
    "href": "project5.html#hints",
    "title": "Project 5",
    "section": "Hints",
    "text": "Hints\nIMPORTANT: you want your website to represent your knowledge. If all the code on the website is from chatGPT, you should go back and re-write the code so that it actually represents what you have learned in the class.\n\nclean up the entire website\n\nno warnings or messages\nall plots with good labeling\nalt text on all plots\ngood narrative describing\nadding a plot when you introduce the data to introduce the reader to the data / context (e.g., if you are doing a permutation test, start by providing a visualization of the data / variables of interest before you do the test so that the reader understands your context.)\nadd comments within the code to help the reader navigate what you are doing.\nmaking sure that all work, data sources, etc. are documented appropriately\n\ncreate a corresponding document (text, Word, Google doc, etc.) describing (in enough detail to receive credit!) all of the changes you’ve made from the original set of projects.\ndon’t call your analyses “my website” or “mini-project 2”, use descriptive names that will make sense after the semester is over (to someone looking at your website who doesn’t know about our class).\nmake sure that your citations are full. That is, provide more than the TidyTuesday URL. Who collected the data? Why? What is the original source of the information?\nif you didn’t put the recent projects onto your website, do so now.\nprovide a narrative setting up the analysis. Don’t just start with code.\nuse exploratory data analysis to set up the example. That is, show a plot / table of the original data. Explain the variables to your reader.\nuse the tidyverse. If you have gotten code from a different place (which uses $ for example), translate the code into a tidy pipeline."
  },
  {
    "objectID": "project5.html#extra-credit",
    "href": "project5.html#extra-credit",
    "title": "Project 5",
    "section": "Extra credit",
    "text": "Extra credit\nYou may earn one extra credit point toward the projects for doing something new / expanding extensively on one of the previous projects. To earn extra credit, please give a full explanation for what you did. Stating “I added regular expressions” is not sufficient for me to get a sense for what you did. Feel free to include before and after images in your project write-up.\nSome examples include:\n\nadd extensive regular expressions to the project on string data\nadd a shiny or plotly example to the graphs from TidyTuesday\nexpanding on the website in new ways: adding a resume, including multiple new tabs to highlight other projects you’ve worked on, changing the format of the website, etc."
  },
  {
    "objectID": "slides/2024-11-25-shiny.html#reactive",
    "href": "slides/2024-11-25-shiny.html#reactive",
    "title": "Shiny",
    "section": "reactive()",
    "text": "reactive()\nThe function reactive() is worth pointing out. It is used to create a reactive expression — an expression that is automatically recalculated when any of its inputs change.\nUse reactive() when\n\nYou want to perform calculations that depend on user input and automatically update when those inputs change.\nYou need to pass dynamically calculated values to other parts of the app (outputs, observers, etc.).\nYou need to create reactive data or state, such as subsets or transformations of input data.\n\nDo not use reactive() on the UI inputs because they are inherently reactive already!"
  },
  {
    "objectID": "slides/2024-12-02-fin.html#data-science-overview",
    "href": "slides/2024-12-02-fin.html#data-science-overview",
    "title": "Fin",
    "section": "Data Science Overview",
    "text": "Data Science Overview\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2024-12-02-fin.html#data-science-overview-1",
    "href": "slides/2024-12-02-fin.html#data-science-overview-1",
    "title": "Fin",
    "section": "Data Science Overview",
    "text": "Data Science Overview\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2024-12-02-fin.html#data-scientists",
    "href": "slides/2024-12-02-fin.html#data-scientists",
    "title": "Fin",
    "section": "Data Scientists",
    "text": "Data Scientists\nWho does data science?\nconnecting, uplifting, and recognizing voices – a database of statisticians and data scientists."
  },
  {
    "objectID": "slides/2024-12-02-fin.html#take-aways",
    "href": "slides/2024-12-02-fin.html#take-aways",
    "title": "Fin",
    "section": "Take-aways",
    "text": "Take-aways\n\n80-90% of data science work is data wrangling and visualization\nwrangling the data well is usually more important than modeling the data well\nthere are many choices along the way, there is no such thing as truth\nif you can’t reproduce the work, you should question whether to trust it\ncommunicating to your audience is likely the most important aspect of doing data science"
  },
  {
    "objectID": "project6.html",
    "href": "project6.html",
    "title": "Project 6",
    "section": "",
    "text": "The plan for project 6 is to update your website (and projects within) so that it puts your best foot forward for anyone who might be looking at it. That is, you should remove all of the information about the class and make it a website about you and your work more generally."
  },
  {
    "objectID": "project6.html#tasks",
    "href": "project6.html#tasks",
    "title": "Project 6",
    "section": "Tasks",
    "text": "Tasks\nProject 6 has three main tasks:\n\nThe first is to re-do all the previous projects. Not only should you address all the issues that have been previously brought to light (see comments on projects on Canvas), but you should also do things like removing the warnings & messages. Make sure that all data and ideas have been properly cited. Rewrite any code so that it is actually your work (instead of, for example, copied directly from ChatGPT). Give all graphs proper captions. Explain your work. You will write up (and turn in, separate from your website) a document explaining what changes and updates you’ve made.\nThe second thing to do is to prepare a ~5 min presentation on some aspect of your project. It can be about any aspect of the project (or all aspects of the project), and your presentation should be as if to a client about the work. You’ll create the presentation in Quarto (formatted as revealjs) rendered to html. The presentation will be either on Thursday May 8th during reading days (9am-noon) or during our regularly scheduled final time, Tuesday May 13th 9am-noon (your choice).\nWrite up a document detailing the changes you have made to your website."
  },
  {
    "objectID": "project6.html#timeline",
    "href": "project6.html#timeline",
    "title": "Project 6",
    "section": "Timeline",
    "text": "Timeline\nProject 6 must be submitted on Canvas (not Gradescope) by 11:59 PM on Tuesday, May 13, 2025. To Canvas submit two things: 1. the URL of your overall website, 2. a document detailing the changes you have made.\nAdditionally, you will give a ~5 min presentation to the class on some aspect(s) of your project. You can describe one of the projects, the creation of the website, the entire project overall, or any other aspect of the project. (You will present either on the Thursday May 8th during reading days (9am-noon) or during our regularly scheduled final time, Tuesday May 13th 9am-noon.)"
  },
  {
    "objectID": "project6.html#presentation",
    "href": "project6.html#presentation",
    "title": "Project 6",
    "section": "Presentation",
    "text": "Presentation\nYour slides should be created in Quarto (formatted as revealjs) and rendered to html. They should be linked to the website. A new slide is created by a second level header: ##. The YAML for the presentation slides might look like this:\n---\ntitle: \"title of presentation\"\nauthor: \"your name\"\nsubtitle: \"date of presentation\"\nformat:\n  revealjs:\n    scrollable: true\n    slide-number: true\n    show-slide-number: all\n    embed-resources: true\nexecute:\n  echo: true\n  warning: false\n  message: false\n---\nThe presentation should be on the website (i.e., it should have a URL). Just like with each of the previous projects, open the .RProject from the appropriate folder, then from the pull down menus click on File -&gt; New File -&gt; Quarto Presentation. Link the project from within “_quarto.yml”."
  },
  {
    "objectID": "project6.html#hints",
    "href": "project6.html#hints",
    "title": "Project 6",
    "section": "Hints",
    "text": "Hints\nIMPORTANT: you want your website to represent your knowledge. If all the code on the website is from ChatGPT, you should go back and re-write the code so that it actually represents what you have learned in the class.\n\nclean up the entire website\n\nno warnings or messages\nall plots with good labeling\nalt text on all plots (make your website accessible! how to add alt text. you must have alt text on all your plots to get full credit on this project.)\ngood narrative descriptions\nadding a plot when you introduce the data to introduce the reader to the data / context (e.g., if you are doing a permutation test, start by providing a visualization of the data / variables of interest before you do the test so that the reader understands your context.)\nadd comments within the code to help the reader navigate what you are doing.\nmaking sure that all work, data sources, etc. are documented appropriately\n\ncreate a corresponding document (text, Word, Google doc, pdf, etc.) describing (in enough detail to receive credit!) all of the changes you’ve made from the original set of projects.\non the navigation bar at the top of your website, don’t call your analyses “my website” or “project 2”, use descriptive names that will make sense after the semester is over (to someone looking at your website who doesn’t know about our class).\nmake sure that your citations are full. A hyperlink is not sufficient. That is, provide more than the TidyTuesday URL (include authors, title, publication source, year, etc.). Who collected the data? Why? What is the original source of the information? To reference data, you are very likely to need two citations: one for where you got the data, and one for where they got the data.\nprovide a narrative setting up the analysis. Don’t just start with code.\nuse exploratory data analysis to set up the example. That is, show a plot / table of the original data. Explain the variables to your reader.\nuse the tidyverse. If you have gotten code from a different place (which uses $ for example), translate the code into a tidy pipeline."
  },
  {
    "objectID": "project6.html#extra-credit",
    "href": "project6.html#extra-credit",
    "title": "Project 6",
    "section": "Extra credit",
    "text": "Extra credit\nYou may earn one extra credit point toward the projects for doing something new / expanding extensively on one of the previous projects. To earn extra credit, please give a full explanation for what you did. Stating “I added regular expressions” is not sufficient for me to get a sense for what you did. Feel free to include before and after images in your project write-up.\nSome examples include:\n\nadd extensive regular expressions to the project on string data\nadd regular expressions to the SQL project (regular expressions in SQL are slightly different)\nadd a shiny or plotly example to the graphs from TidyTuesday\nexpand on the website extensively in new ways. For example, doing most of the following: adding a resume, including multiple new tabs to highlight other projects you’ve worked on, changing the format (colors, fonts) of the website, etc."
  },
  {
    "objectID": "syllabus.html#ds002r-spring-2025",
    "href": "syllabus.html#ds002r-spring-2025",
    "title": "syllabus",
    "section": "",
    "text": "Jo Hardin 2351 Estella jo.hardin@pomona.edu\nClass: Mondays & Wednesday, 11-12:15pm\nOffice Hours: (Estella 2351)\nMonday: 2:30-4:30pm\nTuesday: 9-11am\nThursday: 1:15-3pm\nMentor Sessions:\nSunday & Tuesday 6-8pm\nEstella 2141\nMentors: Maren Rusk & Taha Disbudak\n\n\n\n\n\nArtwork by @allison_horst."
  },
  {
    "objectID": "slides/2025-01-22-intro.html#course-structure",
    "href": "slides/2025-01-22-intro.html#course-structure",
    "title": "Introduction to DS002R",
    "section": "Course structure",
    "text": "Course structure\n\nbi-weekly HW (to GitHub + Gradescope)\nbi-weekly quizzes\nmini-projects\nin-class activities / clickers\nethical considerations"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#additional-details",
    "href": "slides/2025-01-22-intro.html#additional-details",
    "title": "Introduction to DS002R",
    "section": "Additional details",
    "text": "Additional details\n\nCanvas has all the links\n\ncourse website – almost everything\nclass notes\nCanvas page – solutions and assignments\n\nno computers (tablets fine)\ngood communication\nTidyTuesday"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#syllabus",
    "href": "slides/2025-01-22-intro.html#syllabus",
    "title": "Introduction to DS002R",
    "section": "Syllabus",
    "text": "Syllabus\n\n\n\noffice hours\nmentor sessions\nanonymous feedback\ndates for assignments\n\n\n\nlinks to resources\nHW grading\nproject information\n\n\n\n\n\n\n\n\nImportant\n\n\nI need your GitHub user name - please email it to me."
  },
  {
    "objectID": "slides/2025-01-22-intro.html#v1.0---drew-conway",
    "href": "slides/2025-01-22-intro.html#v1.0---drew-conway",
    "title": "Introduction to DS002R",
    "section": "V1.0 - Drew Conway",
    "text": "V1.0 - Drew Conway\n\n2010: http://drewconway.com/zia/2013/3/26/the-data-science-venn-diagram"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#v2.0---steve-geringer",
    "href": "slides/2025-01-22-intro.html#v2.0---steve-geringer",
    "title": "Introduction to DS002R",
    "section": "V2.0 - Steve Geringer",
    "text": "V2.0 - Steve Geringer\n\n2014: http://www.anlytcs.com/2014/01/data-science-venn-diagram-v20.html"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#v3.0---writuparna-banerjee",
    "href": "slides/2025-01-22-intro.html#v3.0---writuparna-banerjee",
    "title": "Introduction to DS002R",
    "section": "V3.0 - Writuparna Banerjee",
    "text": "V3.0 - Writuparna Banerjee\n\n2020: https://medium.com/@writuparnabanerjee/the-difference-in-the-career-options-in-data-science-data-scientist-vs-data-engineer-vs-data-33209d0ac880"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#v4.0---joel-grus",
    "href": "slides/2025-01-22-intro.html#v4.0---joel-grus",
    "title": "Introduction to DS002R",
    "section": "V4.0 - Joel Grus",
    "text": "V4.0 - Joel Grus\n\n2013: https://posit.co/wp-content/themes/Posit/public/markdown-blogs/role-of-the-data-scientist/index.html?wtime=%7Bseek_to_second_number%7D"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#data-science-overview",
    "href": "slides/2025-01-22-intro.html#data-science-overview",
    "title": "Introduction to DS002R",
    "section": "Data Science Overview",
    "text": "Data Science Overview\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#data-science-in-ds-002r",
    "href": "slides/2025-01-22-intro.html#data-science-in-ds-002r",
    "title": "Introduction to DS002R",
    "section": "Data Science in DS 002R",
    "text": "Data Science in DS 002R\n\n\n\n\n\n\n\n\n\n\n\n\n\nDS workflow\nin DS002R\nbeyond DS002R\n\n\n\n\ndata acquisition\nweb scraping, relational databases\nAPIs\n\n\ndata exploration\nwrangling, strings, regular expressions\nnatural language processing\n\n\ndata visualization\ngrammar of graphics\nanimations\n\n\ndata conclusions\niteration, permutation tests\npredictive modeling, machine learning, AI\n\n\ndata communication\nyes!\nyes!"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#data-science-in-the-wild",
    "href": "slides/2025-01-22-intro.html#data-science-in-the-wild",
    "title": "Introduction to DS002R",
    "section": "Data Science in the Wild",
    "text": "Data Science in the Wild\nData science extracts knowledge from within a particular domain of inquiry. Examples from Pomona!\n\nShannon Burns (Psychological Science and Neuroscience) uses data to understand brain processes of social communication.\nCharlotte Chang (Environmental Analysis & Biology) uses data to study and improve earth stewardship.\nAnthony (Tony) Clark (Computer Science) uses data to improve the safety and reliability of mobile robots.\nManisha Goel (Economics) uses data to understand how people’s identities shape the fortunes of businesses where they work.\nJun Lang (Asian Languages and Literatures) uses data to analyze (1) the intersection of language, gender, and society, and (2) second language acquisition and pedagogy.\nFrank Pericolosi (Physical Education) uses data to improve his team’s chances on the field.\nAmi Radunskaya (Mathematics) uses data to model tumor growth and treatment.\nYuqing Zhu (Neuroscience) uses data to figure out how a jumble of neurons becomes smart."
  },
  {
    "objectID": "slides/2025-01-22-intro.html#learning-goals",
    "href": "slides/2025-01-22-intro.html#learning-goals",
    "title": "Introduction to DS002R",
    "section": "Learning goals",
    "text": "Learning goals\nBy the end of the course, you will be able to…\n\n\ngain insight from data\ngain insight from data, reproducibly\ngain insight from data, reproducibly, using modern programming tools and techniques\ngain insight from data, reproducibly (with literate programming and version control), using modern programming tools and techniques"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#activity",
    "href": "slides/2025-01-22-intro.html#activity",
    "title": "Introduction to DS002R",
    "section": "Activity",
    "text": "Activity\n\nWhat problem or task would you like to investigate using data?\nWhat would be hard about executing the project?\nWhat are the potential ethical frameworks to consider?\nHow would you define success?"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#reproducibility-checklist",
    "href": "slides/2025-01-22-intro.html#reproducibility-checklist",
    "title": "Introduction to DS002R",
    "section": "Reproducibility checklist",
    "text": "Reproducibility checklist\n\nWhat does it mean for a data analysis to be “reproducible”?\n\nShort-term goals:\n\nAre the tables and figures reproducible from the code and data?\nDoes the code actually do what you think it does?\nIn addition to what was done, is it clear why it was done?\n\nLong-term goals:\n\nCan the code be used for other data?\nCan you extend the code to do other things?"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#toolkit-for-reproducibility",
    "href": "slides/2025-01-22-intro.html#toolkit-for-reproducibility",
    "title": "Introduction to DS002R",
    "section": "Toolkit for reproducibility",
    "text": "Toolkit for reproducibility\n\nScriptability \\(\\rightarrow\\) R\nLiterate programming (code, narrative, output in one place) \\(\\rightarrow\\) Quarto\nVersion control \\(\\rightarrow\\) Git / GitHub"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#r-and-rstudio-1",
    "href": "slides/2025-01-22-intro.html#r-and-rstudio-1",
    "title": "Introduction to DS002R",
    "section": "R and RStudio",
    "text": "R and RStudio\n\n\n\n\n\n\n\n\nR is an open-source statistical programming language\nR is also an environment for statistical computing and graphics\nIt’s easily extensible with packages\n\n\n\n\nRStudio is a convenient interface for R called an IDE (integrated development environment), e.g. “I write R code in the RStudio IDE”\nRStudio is not a requirement for programming with R, but it’s very commonly used by R programmers and data scientists"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#r-vs.-rstudio",
    "href": "slides/2025-01-22-intro.html#r-vs.-rstudio",
    "title": "Introduction to DS002R",
    "section": "R vs. RStudio",
    "text": "R vs. RStudio\n\n\n\n\n\n\n\nSource: Modern Dive."
  },
  {
    "objectID": "slides/2025-01-22-intro.html#r-packages",
    "href": "slides/2025-01-22-intro.html#r-packages",
    "title": "Introduction to DS002R",
    "section": "R packages",
    "text": "R packages\n\nPackages: Fundamental units of reproducible R code, including reusable R functions, the documentation that describes how to use them, and sample data1\nAs of August 26, 2024, there are 21,145 R packages available on CRAN (the Comprehensive R Archive Network)2\nWe’re going to work with a small (but important) subset of these!\n\n\n\n1 Wickham and Bryan, R Packages.\n2 CRAN contributed packages."
  },
  {
    "objectID": "slides/2025-01-22-intro.html#tour-r-rstudio",
    "href": "slides/2025-01-22-intro.html#tour-r-rstudio",
    "title": "Introduction to DS002R",
    "section": "Tour: R + RStudio",
    "text": "Tour: R + RStudio"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#tour-recap-r-rstudio",
    "href": "slides/2025-01-22-intro.html#tour-recap-r-rstudio",
    "title": "Introduction to DS002R",
    "section": "Tour recap: R + RStudio",
    "text": "Tour recap: R + RStudio"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#a-short-list-for-now-of-r-essentials",
    "href": "slides/2025-01-22-intro.html#a-short-list-for-now-of-r-essentials",
    "title": "Introduction to DS002R",
    "section": "A short list (for now) of R essentials",
    "text": "A short list (for now) of R essentials\n\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses:\n\n\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n\n\n\nPackages are installed with the install.packages() function and loaded with the library function, once per session:\n\n\ninstall.packages(\"package_name\")\nlibrary(package_name)"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#r-essentials-continued",
    "href": "slides/2025-01-22-intro.html#r-essentials-continued",
    "title": "Introduction to DS002R",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\n\nColumns (variables) in data frames are accessed with $:\n\n\ndataframe$var_name\n\n\n\nObject documentation can be accessed with ?\n\n\n?mean"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#tidyverse",
    "href": "slides/2025-01-22-intro.html#tidyverse",
    "title": "Introduction to DS002R",
    "section": "tidyverse",
    "text": "tidyverse\n\n\n\n\ntidyverse.org\n\nThe tidyverse is an opinionated collection of R packages designed for data science\nAll packages share an underlying philosophy and a common grammar"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#quarto-1",
    "href": "slides/2025-01-22-intro.html#quarto-1",
    "title": "Introduction to DS002R",
    "section": "Quarto",
    "text": "Quarto\n\nFully reproducible reports – each time you Render, the analysis is run from the beginning\nCode goes in chunks\nNarrative goes outside of chunks"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#tour-quarto",
    "href": "slides/2025-01-22-intro.html#tour-quarto",
    "title": "Introduction to DS002R",
    "section": "Tour: Quarto",
    "text": "Tour: Quarto"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#tour-recap-quarto",
    "href": "slides/2025-01-22-intro.html#tour-recap-quarto",
    "title": "Introduction to DS002R",
    "section": "Tour recap: Quarto",
    "text": "Tour recap: Quarto"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#environments",
    "href": "slides/2025-01-22-intro.html#environments",
    "title": "Introduction to DS002R",
    "section": "Environments",
    "text": "Environments\n\n\n\n\n\n\nImportant\n\n\nThe environment of your Quarto document is separate from the Console!\n\n\n\nRemember this, and expect it to bite you a few times as you’re learning to work with Quarto!"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#environments-1",
    "href": "slides/2025-01-22-intro.html#environments-1",
    "title": "Introduction to DS002R",
    "section": "Environments",
    "text": "Environments\n\n\nFirst, run the following in the console:\n\nx &lt;- 2\nx * 3\n\n\n\nAll looks good, eh?\n\n\nThen, add the following in an R chunk in your Quarto document\n\nx * 3\n\n\n\nWhat happens? Why the error?"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#how-will-we-use-quarto",
    "href": "slides/2025-01-22-intro.html#how-will-we-use-quarto",
    "title": "Introduction to DS002R",
    "section": "How will we use Quarto?",
    "text": "How will we use Quarto?\n\nEvery assignment is an Quarto document.\nYou’ll always have a template Quarto document to start with.\nThe amount of scaffolding in the template will decrease over the semester."
  },
  {
    "objectID": "slides/2025-01-22-intro.html#git-and-github",
    "href": "slides/2025-01-22-intro.html#git-and-github",
    "title": "Introduction to DS002R",
    "section": "Git and GitHub",
    "text": "Git and GitHub\n\n\n\n\n\n\n\n\nGit is a version control system – like “Track Changes” features from Microsoft Word, on steroids\nIt’s not the only version control system, but it’s a very popular one\n\n\n\n\n\n\n\n\nGitHub is the home for your Git-based projects on the internet – like DropBox but much, much better\nWe will use GitHub as a platform for web hosting and collaboration (and as our course management system!)"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#versioning---done-badly",
    "href": "slides/2025-01-22-intro.html#versioning---done-badly",
    "title": "Introduction to DS002R",
    "section": "Versioning - done badly",
    "text": "Versioning - done badly"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#versioning---done-better",
    "href": "slides/2025-01-22-intro.html#versioning---done-better",
    "title": "Introduction to DS002R",
    "section": "Versioning - done better",
    "text": "Versioning - done better"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#versioning---done-even-better",
    "href": "slides/2025-01-22-intro.html#versioning---done-even-better",
    "title": "Introduction to DS002R",
    "section": "Versioning - done even better",
    "text": "Versioning - done even better\nwith human readable messages"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#how-will-we-use-git-and-github",
    "href": "slides/2025-01-22-intro.html#how-will-we-use-git-and-github",
    "title": "Introduction to DS002R",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#how-will-we-use-git-and-github-1",
    "href": "slides/2025-01-22-intro.html#how-will-we-use-git-and-github-1",
    "title": "Introduction to DS002R",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#how-will-we-use-git-and-github-2",
    "href": "slides/2025-01-22-intro.html#how-will-we-use-git-and-github-2",
    "title": "Introduction to DS002R",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#how-will-we-use-git-and-github-3",
    "href": "slides/2025-01-22-intro.html#how-will-we-use-git-and-github-3",
    "title": "Introduction to DS002R",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#git-and-github-tips",
    "href": "slides/2025-01-22-intro.html#git-and-github-tips",
    "title": "Introduction to DS002R",
    "section": "Git and GitHub tips",
    "text": "Git and GitHub tips\n\n\nThere are millions of git commands – ok, that’s an exaggeration, but there are a lot of them – and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.\nWe will be doing Git things and interfacing with GitHub through RStudio, but if you Google for help you might come across methods for doing these things in the command line – skip that and move on to the next resource unless you feel comfortable trying it out.\nThere is a great resource for working with git and R: happygitwithr.com. Some of the content in there is beyond the scope of this course, but it’s a good place to look for help."
  },
  {
    "objectID": "slides/2025-01-22-intro.html#tour-git-github",
    "href": "slides/2025-01-22-intro.html#tour-git-github",
    "title": "Introduction to DS002R",
    "section": "Tour: Git + GitHub",
    "text": "Tour: Git + GitHub"
  },
  {
    "objectID": "slides/2025-01-22-intro.html#participation",
    "href": "slides/2025-01-22-intro.html#participation",
    "title": "Introduction to DS002R",
    "section": "Participation",
    "text": "Participation\nFor full participation points, you’ll need to share at least one R-tip-of-the day.\n\nBeginning of class, I’ll ask if anyone has ideas\nYou share the tip\nI’ll post the tip online"
  },
  {
    "objectID": "slides/ae-01-meet-the-penguins.html",
    "href": "slides/ae-01-meet-the-penguins.html",
    "title": "Meet the Penguins",
    "section": "",
    "text": "For this application exercise, we’ll use the tidyverse and palmerpenguins packages.\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nThe dataset we will visualize is called penguins. Let’s glimpse() at it.\n\nYour turn: Replace #add code here with the code for “glimpse”ing at the penguins data frame – glimpse(penguins). Render the document and view the output.\n\n\n# add code here\n\n\nDemo: Replace the blank below with the number of rows in the penguins data frame based on the output of the chunk below.\n\n\nnrow(penguins)\n\n[1] 344\n\n\nThere are ___ penguins in the penguins data frame.\n\n\n\nReuseCC-BY-SA-4.0"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#nssd",
    "href": "slides/2025-01-27-dataviz.html#nssd",
    "title": "Better Data Visualizations",
    "section": "",
    "text": "What was Hilary trying to answer in her data collection?\nName two of Hilary’s main hurdles in gathering accurate data.\nWhich is better: high touch (manual) or low touch (automatic) data collection? Why?\nWhat additional covariates are needed / desired? Any problems with them?\nHow much data does she need?\nAre there any ethical considerations to think about?"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#grammar-of-graphics",
    "href": "slides/2025-01-27-dataviz.html#grammar-of-graphics",
    "title": "Better Data Visualizations",
    "section": "Grammar of graphics",
    "text": "Grammar of graphics\nYau (2013) gives us nine visual cues, and Wickham (2014) translates them into a language using ggplot2.\n\nVisual Cues: the aspects of the figure where we should focus.\nPosition (numerical) where in relation to other things?\nLength (numerical) how big (in one dimension)?\nAngle (numerical) how wide? parallel to something else?\nDirection (numerical) at what slope? In a time series, going up or down?\nShape (categorical) belonging to what group?\nArea (numerical) how big (in two dimensions)? Beware of improper scaling!\nVolume (numerical) how big (in three dimensions)? Beware of improper scaling!\nShade (either) to what extent? how severely?\nColor (either) to what extent? how severely? Beware of red/green color blindness.\nCoordinate System: rectangular, polar, geographic, etc.\nScale: numeric (linear? logarithmic?), categorical (ordered?), time\nContext: in comparison to what (think back to ideas from Tufte)"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#pieces-of-the-graph",
    "href": "slides/2025-01-27-dataviz.html#pieces-of-the-graph",
    "title": "Better Data Visualizations",
    "section": "Pieces of the Graph",
    "text": "Pieces of the Graph\n\n\nVisual Cues of Yau (2013):\nPosition (numerical)\nLength (numerical)\nAngle (numerical)\nDirection (numerical)\nShape (categorical)\nArea (numerical)\nVolume (numerical)\nShade (either)\nColor (either)"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#order-matters",
    "href": "slides/2025-01-27-dataviz.html#order-matters",
    "title": "Better Data Visualizations",
    "section": "Order Matters",
    "text": "Order Matters"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#cues-together",
    "href": "slides/2025-01-27-dataviz.html#cues-together",
    "title": "Better Data Visualizations",
    "section": "Cues Together",
    "text": "Cues Together"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#attributes",
    "href": "slides/2025-01-27-dataviz.html#attributes",
    "title": "Better Data Visualizations",
    "section": "Attributes",
    "text": "Attributes\nAttributes can focus your reader’s attention.1"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#advice-for-plotting",
    "href": "slides/2025-01-27-dataviz.html#advice-for-plotting",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\n\n\n\nAvoid having other graph elements interfere with data\nUse visually prominent symbols\nAvoid over-plotting (One way to avoid over plotting: jitter the values)\nDifferent values of data may obscure each other\nInclude all or nearly all of the data\nFill data region"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#advice-for-plotting-1",
    "href": "slides/2025-01-27-dataviz.html#advice-for-plotting-1",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\n\n\n\nChart junk & stuff that adds no meaning, e.g. butterflies on top of barplots, background images\nExtra tick marks and grid lines\nUnnecessary text and arrows\nDecimal places beyond the measurement error or the level of difference"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#advice-for-plotting-2",
    "href": "slides/2025-01-27-dataviz.html#advice-for-plotting-2",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\n\n\n\nPut juxtaposed plots on same scale\nMake it easy to distinguish elements of superposed plots (e.g. color)\nEmphasizes the important difference\nComparison: volume, area, height (be careful, volume can seem bigger than you mean it to)"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#advice-for-plotting-3",
    "href": "slides/2025-01-27-dataviz.html#advice-for-plotting-3",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\n\n\n\nKeep scales on x and y axes the same for both plots to facilitate the comparison\nZoom in to focus on the region that contains the bulk of the data\nKeep the scale the same throughout the plot (i.e. don’t change it mid-axis)\nOrigin need not be on the scale\nChoose a scale that improves resolution\nAvoid jiggling the baseline"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#advice-for-plotting-4",
    "href": "slides/2025-01-27-dataviz.html#advice-for-plotting-4",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\n\n\n\nDescribe what you see in the caption\nAdd context with reference markers (lines and points) including text\nAdd legends and labels\nUse color and plotting symbols to add more information\nPlot the same thing more than once in different ways/scales\nReduce clutter"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#advice-for-plotting-5",
    "href": "slides/2025-01-27-dataviz.html#advice-for-plotting-5",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\nCaptions should\n\n\n\nBe comprehensive\nSelf-contained\nDescribe what has been graphed\nDraw attention to important features\nDescribe conclusions drawn from graph"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#advice-for-plotting-6",
    "href": "slides/2025-01-27-dataviz.html#advice-for-plotting-6",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\nCaptions should\nGood Plot Making Practice\n\n\n\nPut major conclusions in graphical form\nProvide reference information\nProof read for clarity and consistency\nGraphing is an iterative process\nMultiplicity is OK, i.e. two plots of the same variable may provide different messages\nMake plots data rich"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#getting-help",
    "href": "slides/2025-01-27-dataviz.html#getting-help",
    "title": "Better Data Visualizations",
    "section": "Getting help",
    "text": "Getting help\n\nOne of the best ways to get started with ggplot is to Google what you want to do with the word ggplot. Then look through the images that come up. More often than not, the associated code is there. There are also ggplot galleries of images, one of them is here: https://plot.ly/ggplot2/\nLook at the end of this presentation and the syllabus. More help options there."
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#what-are-the-visual-cues-on-this-plot",
    "href": "slides/2025-01-27-dataviz.html#what-are-the-visual-cues-on-this-plot",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#what-are-the-visual-cues-on-this-plot-1",
    "href": "slides/2025-01-27-dataviz.html#what-are-the-visual-cues-on-this-plot-1",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#what-are-the-visual-cues-on-this-plot-2",
    "href": "slides/2025-01-27-dataviz.html#what-are-the-visual-cues-on-this-plot-2",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#the-grammar-of-graphics-ggplot",
    "href": "slides/2025-01-27-dataviz.html#the-grammar-of-graphics-ggplot",
    "title": "Better Data Visualizations",
    "section": "The grammar of graphics ggplot",
    "text": "The grammar of graphics ggplot\ngeom: the geometric “shape” used to display data\n\nbar, point, line, ribbon, text, etc.\n\naesthetic: an attribute controlling how geom is displayed with respect to variables\n\nx position, y position, color, fill, shape, size, etc.\n\n\nguide: helps user convert visual data back into raw data (legends, axes)\nstat: a transformation applied to data before geom gets it\n\nexample: histograms work on binned data"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#set-up",
    "href": "slides/2025-01-27-dataviz.html#set-up",
    "title": "Better Data Visualizations",
    "section": "Set up",
    "text": "Set up\n\nlibrary(mosaic)\ndata(Births2015)\n\n\nhead(Births2015)\n\n\n\n\n\n\n\n\n\ndate\nbirths\nwday\nyear\nmonth\nday_of_year\nday_of_month\nday_of_week\n\n\n\n\n2015-01-01\n8068\nThu\n2015\n1\n1\n1\n5\n\n\n2015-01-02\n10850\nFri\n2015\n1\n2\n2\n6\n\n\n2015-01-03\n8328\nSat\n2015\n1\n3\n3\n7\n\n\n2015-01-04\n7065\nSun\n2015\n1\n4\n4\n1\n\n\n2015-01-05\n11892\nMon\n2015\n1\n5\n5\n2\n\n\n2015-01-06\n12425\nTue\n2015\n1\n6\n6\n3\n\n\n\n\n\n\n\nObtained from the National Center for Health Statistics, National Vital Statistics System, Natality, 2015 data."
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot",
    "href": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nTwo Questions:\n\nWhat do we want R to do? (What is the goal?)\nWhat does R need to know?"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-1",
    "href": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-1",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nGoal: scatterplot = a plot with points\nWhat does R need to know?\n\ndata source: Births2015\naesthetics:\n\ndate -&gt; x\nbirths -&gt; y\npoints (!)"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-2",
    "href": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-2",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births)) + \n  geom_point() +\n  labs(title = \"US Births in 2015\")\n\nggplot() +\n  geom_point(data = Births2015, \n             aes(x = date, y = births)) +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#layers",
    "href": "slides/2025-01-27-dataviz.html#layers",
    "title": "Better Data Visualizations",
    "section": "Layers",
    "text": "Layers\n\nLayer 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births))"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#layers-1",
    "href": "slides/2025-01-27-dataviz.html#layers-1",
    "title": "Better Data Visualizations",
    "section": "Layers",
    "text": "Layers\n\nLayer 2\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births)) + \n  geom_point()"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#layers-2",
    "href": "slides/2025-01-27-dataviz.html#layers-2",
    "title": "Better Data Visualizations",
    "section": "Layers",
    "text": "Layers\n\nLayer 3\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births)) + \n  geom_point() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-3",
    "href": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-3",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nWhat has changed?\n\nnew aesthetic: mapping color to day of week"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-4",
    "href": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-4",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015,\n       aes(x = date,\n           y = births, \n           color = wday)) +\n  geom_point() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-5",
    "href": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-5",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-6",
    "href": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-6",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nlines instead of dots!\n\nggplot(data = Births2015,\n         aes(x = date, \n             y = births,\n             color = wday)) +\n  geom_line() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-7",
    "href": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-7",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-8",
    "href": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-8",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nNow there are two layers: one with points and one with lines\n\nggplot(data = Births2015,\n       aes(x = date,\n           y = births,\n           color = wday)) + \n  geom_point() +  \n  geom_line() +\n  labs(title = \"US Births in 2015\")\n\n\nThe layers are placed one on top of the other: the points are below and the lines are above.\ndata and aes specified in ggplot() affect all geoms"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#what-does-this-code-do",
    "href": "slides/2025-01-27-dataviz.html#what-does-this-code-do",
    "title": "Better Data Visualizations",
    "section": "What does this code do?",
    "text": "What does this code do?\n\nggplot(data = Births2015,\n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#what-does-this-code-do-1",
    "href": "slides/2025-01-27-dataviz.html#what-does-this-code-do-1",
    "title": "Better Data Visualizations",
    "section": "What does this code do?",
    "text": "What does this code do?\n\nggplot(data = Births2015,\n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point()  +\n  labs(title = \"US Births in 2015\")\n\n\n\n\n\n\n\n\nThis is mapping the color aesthetic to a new variable with only one value (“navy”).\nSo all the dots get set to the same color, but it’s not navy."
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#setting-vs.-mapping",
    "href": "slides/2025-01-27-dataviz.html#setting-vs.-mapping",
    "title": "Better Data Visualizations",
    "section": "Setting vs. Mapping",
    "text": "Setting vs. Mapping\nIf we want to set the color to be navy for all of the dots, we do it outside the aes() designation:\n\nggplot(data = Births2015,\n       aes(x = date, y = births)) +   # map variables \n  geom_point(color = \"navy\")    +   # set attributes\n  labs(title = \"US Births in 2015\")\n\n\n\n\n\n\n\n\n\nNote that color = \"navy\" is now outside of the aesthetics list. That’s how ggplot2 distinguishes between mapping and setting."
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-9",
    "href": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-9",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-10",
    "href": "slides/2025-01-27-dataviz.html#how-do-we-make-this-plot-10",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015,\n       aes(x = date,\n           y = births)) + \n  geom_line(aes(color = wday)) +      \n  geom_point(color = \"navy\")  +         \n  labs(title = \"US Births in 2015\")\n\n\nggplot() establishes the default data and aesthetics for the geoms, but each geom may change these defaults.\ngood practice: put into ggplot() the things that affect all (or most) of the layers; rest in geom_XXXX()"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#setting-vs.-mapping-again",
    "href": "slides/2025-01-27-dataviz.html#setting-vs.-mapping-again",
    "title": "Better Data Visualizations",
    "section": "Setting vs. Mapping (again)",
    "text": "Setting vs. Mapping (again)\nInformation gets passed to the plot via:\n\nmap the variable information inside the aes (aesthetic) command\nset the non-variable information outside the aes (aesthetic) command"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#other-geoms",
    "href": "slides/2025-01-27-dataviz.html#other-geoms",
    "title": "Better Data Visualizations",
    "section": "Other geoms",
    "text": "Other geoms\n\napropos(\"^geom_\")\n\n [1] \"geom_abline\"                  \"geom_area\"                   \n [3] \"geom_ash\"                     \"geom_bar\"                    \n [5] \"geom_bin_2d\"                  \"geom_bin2d\"                  \n [7] \"geom_blank\"                   \"geom_boxplot\"                \n [9] \"geom_bracket\"                 \"geom_col\"                    \n[11] \"geom_contour\"                 \"geom_contour_filled\"         \n[13] \"geom_count\"                   \"geom_crossbar\"               \n[15] \"geom_curve\"                   \"geom_density\"                \n[17] \"geom_density_2d\"              \"geom_density_2d_filled\"      \n[19] \"geom_density_line\"            \"geom_density_ridges\"         \n[21] \"geom_density_ridges_gradient\" \"geom_density_ridges2\"        \n[23] \"geom_density2d\"               \"geom_density2d_filled\"       \n[25] \"geom_dotplot\"                 \"geom_errorbar\"               \n[27] \"geom_errorbarh\"               \"geom_exec\"                   \n[29] \"geom_freqpoly\"                \"geom_function\"               \n[31] \"geom_hex\"                     \"geom_histogram\"              \n[33] \"geom_hline\"                   \"geom_jitter\"                 \n[35] \"geom_label\"                   \"geom_label_repel\"            \n[37] \"geom_line\"                    \"geom_linerange\"              \n[39] \"geom_lm\"                      \"geom_map\"                    \n[41] \"geom_mosaic\"                  \"geom_mosaic_jitter\"          \n[43] \"geom_mosaic_text\"             \"geom_path\"                   \n[45] \"geom_pictogram\"               \"geom_point\"                  \n[47] \"geom_pointrange\"              \"geom_polygon\"                \n[49] \"geom_pwc\"                     \"geom_qq\"                     \n[51] \"geom_qq_line\"                 \"geom_quantile\"               \n[53] \"geom_rangeframe\"              \"geom_raster\"                 \n[55] \"geom_rect\"                    \"geom_ribbon\"                 \n[57] \"geom_ridgeline\"               \"geom_ridgeline_gradient\"     \n[59] \"geom_rug\"                     \"geom_segment\"                \n[61] \"geom_sf\"                      \"geom_sf_label\"               \n[63] \"geom_sf_text\"                 \"geom_signif\"                 \n[65] \"geom_smooth\"                  \"geom_spline\"                 \n[67] \"geom_spoke\"                   \"geom_step\"                   \n[69] \"geom_stripped_cols\"           \"geom_stripped_rows\"          \n[71] \"geom_text\"                    \"geom_text_repel\"             \n[73] \"geom_tile\"                    \"geom_tufteboxplot\"           \n[75] \"geom_violin\"                  \"geom_vline\"                  \n[77] \"geom_vridgeline\"              \"geom_waffle\""
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#other-geoms-1",
    "href": "slides/2025-01-27-dataviz.html#other-geoms-1",
    "title": "Better Data Visualizations",
    "section": "Other geoms",
    "text": "Other geoms\nhelp pages will tell you their aesthetics, default stats, etc.\n\n?geom_area             # for example"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#lets-try-geom_area",
    "href": "slides/2025-01-27-dataviz.html#lets-try-geom_area",
    "title": "Better Data Visualizations",
    "section": "Let’s try geom_area",
    "text": "Let’s try geom_area\n\n\n\nggplot(data = Births2015,\n       aes(x = date,\n           y = births, \n           fill = wday)) + \n  geom_area() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#lets-try-geom_area-1",
    "href": "slides/2025-01-27-dataviz.html#lets-try-geom_area-1",
    "title": "Better Data Visualizations",
    "section": "Let’s try geom_area",
    "text": "Let’s try geom_area\n\n\n\nggplot(data = Births2015,\n       aes(x = date, y = births, fill = wday)) + \n  geom_area() +\n  labs(title = \"US Births in 2015\")\n\n\n\n\n\n\n\n\n\n… not a good plot\n\noverplotting is hiding much of the data\nextending y-axis to 0 may or may not be desirable."
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#side-note-what-makes-a-plot-good",
    "href": "slides/2025-01-27-dataviz.html#side-note-what-makes-a-plot-good",
    "title": "Better Data Visualizations",
    "section": "Side note: what makes a plot good?",
    "text": "Side note: what makes a plot good?\nMost (all?) graphics are intended to help us make comparisons\n\nHow does something change over time?\nDo my treatments matter? How much?\nDo treatment and control respond the same way?\n\n\n\n\n\n\n\nKey plot metric\n\n\n\nDoes my plot make the comparisons I am interested in:\n\neasily, and\naccurately?"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#time-for-some-different-data",
    "href": "slides/2025-01-27-dataviz.html#time-for-some-different-data",
    "title": "Better Data Visualizations",
    "section": "Time for some different data",
    "text": "Time for some different data\nHELPrct: Health Evaluation and Linkage to Primary care randomized clinical trial. Subjects admitted for treatment for addiction to one of three substances.\n\nhead(HELPrct)\n\n\n\n\n\n\n\n\n\nage\nanysubstatus\nanysub\ncesd\nd1\ndaysanysub\ndayslink\ndrugrisk\ne2b\nfemale\nsex\ng1b\nhomeless\ni1\ni2\nid\nindtot\nlinkstatus\nlink\nmcs\npcs\npss_fr\nracegrp\nsatreat\nsexrisk\nsubstance\ntreat\navg_drinks\nmax_drinks\nhospitalizations\n\n\n\n\n37\n1\nyes\n49\n3\n177\n225\n0\nNA\n0\nmale\nyes\nhoused\n13\n26\n1\n39\n1\nyes\n25.11\n58.4\n0\nblack\nno\n4\ncocaine\nyes\n13\n26\n3\n\n\n37\n1\nyes\n30\n22\n2\nNA\n0\nNA\n0\nmale\nyes\nhomeless\n56\n62\n2\n43\nNA\nNA\n26.67\n36.0\n1\nwhite\nno\n7\nalcohol\nyes\n56\n62\n22\n\n\n26\n1\nyes\n39\n0\n3\n365\n20\nNA\n0\nmale\nno\nhoused\n0\n0\n3\n41\n0\nno\n6.76\n74.8\n13\nblack\nno\n2\nheroin\nno\n0\n0\n0\n\n\n39\n1\nyes\n15\n2\n189\n343\n0\n1\n1\nfemale\nno\nhoused\n5\n5\n4\n28\n0\nno\n43.97\n61.9\n11\nwhite\nyes\n4\nheroin\nno\n5\n5\n2\n\n\n32\n1\nyes\n39\n12\n2\n57\n0\n1\n0\nmale\nno\nhomeless\n10\n13\n5\n38\n1\nyes\n21.68\n37.3\n10\nblack\nno\n6\ncocaine\nno\n10\n13\n12\n\n\n47\n1\nyes\n6\n1\n31\n365\n0\nNA\n1\nfemale\nno\nhoused\n4\n4\n6\n29\n0\nno\n55.51\n46.5\n5\nblack\nno\n5\ncocaine\nyes\n4\n4\n1"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#who-are-the-people-in-the-study",
    "href": "slides/2025-01-27-dataviz.html#who-are-the-people-in-the-study",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = substance)) + \n  geom_bar() +\n  labs(title = \"HELP trial\")\n\n\nHmm. What’s up with y?\n\nstat_bin() is being applied to the data before the geom_bar() gets to do its thing. Binning creates the y values."
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#who-are-the-people-in-the-study-1",
    "href": "slides/2025-01-27-dataviz.html#who-are-the-people-in-the-study-1",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = substance,\n           fill = children)) + \n  geom_bar() +\n  labs(title = \"HELP trial\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#who-are-the-people-in-the-study-2",
    "href": "slides/2025-01-27-dataviz.html#who-are-the-people-in-the-study-2",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(HELP_data,\n       aes(x = substance,\n           fill = children)) + \n  geom_bar(position = \"fill\") +\n  labs(title = \"HELP trial\",\n       y = \"actually, percent\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-old-are-people-in-the-help-study",
    "href": "slides/2025-01-27-dataviz.html#how-old-are-people-in-the-help-study",
    "title": "Better Data Visualizations",
    "section": "How old are people in the HELP study?",
    "text": "How old are people in the HELP study?\n\n\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_histogram() +\n  labs(title = \"HELP trial\")\n\nNotice the messages\n\nstat_bin: Histograms are not mapping the raw data but binned data.\nstat_bin() performs the data transformation.\nbinwidth: a default binwidth has been selected, but we should really choose our own."
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#setting-the-binwidth-manually",
    "href": "slides/2025-01-27-dataviz.html#setting-the-binwidth-manually",
    "title": "Better Data Visualizations",
    "section": "Setting the binwidth manually",
    "text": "Setting the binwidth manually\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_histogram(binwidth = 2) +\n  labs(title = \"HELP trial\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-old-are-people-in-the-help-study-other-geoms",
    "href": "slides/2025-01-27-dataviz.html#how-old-are-people-in-the-help-study-other-geoms",
    "title": "Better Data Visualizations",
    "section": "How old are people in the HELP study? – Other geoms",
    "text": "How old are people in the HELP study? – Other geoms\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_freqpoly(binwidth = 2) +\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_density() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#selecting-stat-and-geom-manually",
    "href": "slides/2025-01-27-dataviz.html#selecting-stat-and-geom-manually",
    "title": "Better Data Visualizations",
    "section": "Selecting stat and geom manually",
    "text": "Selecting stat and geom manually\nEvery geom comes with a default stat\n\nfor simple cases, the stat is stat_identity() which does nothing\nwe can mix and match geoms and stats however we like\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_line(stat = \"density\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#selecting-stat-and-geom-manually-1",
    "href": "slides/2025-01-27-dataviz.html#selecting-stat-and-geom-manually-1",
    "title": "Better Data Visualizations",
    "section": "Selecting stat and geom manually",
    "text": "Selecting stat and geom manually\nEvery stat comes with a default geom, every geom with a default stat\n\nwe can specify stats instead of geom, if we prefer\nwe can mix and match geoms and stats however we like\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  stat_density(geom = \"line\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#more-combinations",
    "href": "slides/2025-01-27-dataviz.html#more-combinations",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_point(stat = \"bin\", binwidth = 3) + \n  geom_line(stat = \"bin\", binwidth = 3)  +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#more-combinations-1",
    "href": "slides/2025-01-27-dataviz.html#more-combinations-1",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_area(stat = \"bin\", binwidth = 3)  +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#more-combinations-2",
    "href": "slides/2025-01-27-dataviz.html#more-combinations-2",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_point(stat = \"bin\", \n             binwidth = 3, \n             aes(size = ..count..)) +\n  geom_line(stat = \"bin\", binwidth = 3) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-much-drinking-i1",
    "href": "slides/2025-01-27-dataviz.html#how-much-drinking-i1",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_histogram() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-much-drinking-i1-1",
    "href": "slides/2025-01-27-dataviz.html#how-much-drinking-i1-1",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_density() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#how-much-drinking-i1-2",
    "href": "slides/2025-01-27-dataviz.html#how-much-drinking-i1-2",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_area(stat = \"density\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#covariates-adding-in-more-variables",
    "href": "slides/2025-01-27-dataviz.html#covariates-adding-in-more-variables",
    "title": "Better Data Visualizations",
    "section": "Covariates: Adding in more variables",
    "text": "Covariates: Adding in more variables\nUsing color and linetype:\n\nggplot(data = HELP_data,\n       aes(x = i1,\n           color = substance,\n           linetype = children)) + \n  geom_line(stat = \"density\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#using-color-and-facets",
    "href": "slides/2025-01-27-dataviz.html#using-color-and-facets",
    "title": "Better Data Visualizations",
    "section": "Using color and facets",
    "text": "Using color and facets\n\nggplot(data = HELP_data,\n       aes(x = i1, color = substance)) + \n  geom_line(stat = \"density\") + \n  facet_grid( . ~ children ) +\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = i1, color = substance)) + \n  geom_line(stat = \"density\") + \n  facet_grid( children ~ . ) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#boxplots",
    "href": "slides/2025-01-27-dataviz.html#boxplots",
    "title": "Better Data Visualizations",
    "section": "Boxplots",
    "text": "Boxplots\nBoxplots use stat_quantile() (five number summary).\nThe quantitative variable must be y, and there must be an additional x variable.\n\nHELP_data |&gt; \n  ggplot(aes(x = substance, y = age, color = children)) + \n  geom_boxplot() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#horizontal-boxplots",
    "href": "slides/2025-01-27-dataviz.html#horizontal-boxplots",
    "title": "Better Data Visualizations",
    "section": "Horizontal boxplots",
    "text": "Horizontal boxplots\nHorizontal boxplots are obtained by flipping the coordinate system:\n\ncoord_flip() may be used with other plots as well to reverse the roles of x and y on the plot.\n\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot() +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#axes-scaling-with-boxplots",
    "href": "slides/2025-01-27-dataviz.html#axes-scaling-with-boxplots",
    "title": "Better Data Visualizations",
    "section": "Axes scaling with boxplots",
    "text": "Axes scaling with boxplots\nWe can scale the continuous axis\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot() +\n  coord_trans(y = \"exp\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#give-me-some-space",
    "href": "slides/2025-01-27-dataviz.html#give-me-some-space",
    "title": "Better Data Visualizations",
    "section": "Give me some space",
    "text": "Give me some space\nWe’ve triggered a new feature: dodge (for dodging things left/right). We can control how much if we set the dodge manually.\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot(position = position_dodge(width=1)) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#issues-with-bigger-data",
    "href": "slides/2025-01-27-dataviz.html#issues-with-bigger-data",
    "title": "Better Data Visualizations",
    "section": "Issues with bigger data",
    "text": "Issues with bigger data\n\nAlthough we can see a generally positive association (as we would expect), the overplotting may be hiding information.\n\n\nlibrary(NHANES)\ndim(NHANES)\n\n[1] 10000    76\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_point() + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#using-alpha-opacity",
    "href": "slides/2025-01-27-dataviz.html#using-alpha-opacity",
    "title": "Better Data Visualizations",
    "section": "Using alpha (opacity)",
    "text": "Using alpha (opacity)\nOne way to deal with overplotting is to set the opacity low.\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_point(alpha=0.01) + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#geom_density2d",
    "href": "slides/2025-01-27-dataviz.html#geom_density2d",
    "title": "Better Data Visualizations",
    "section": "geom_density2d",
    "text": "geom_density2d\nAlternatively (or simultaneously) we might prefer a different geom altogether.\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_density2d() + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#multiple-layers",
    "href": "slides/2025-01-27-dataviz.html#multiple-layers",
    "title": "Better Data Visualizations",
    "section": "Multiple layers",
    "text": "Multiple layers\n\n\n\nggplot(data = HELP_data, \n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_point(alpha=.6) +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_jitter(alpha=.6, width = 0.1) +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#multiple-layers-1",
    "href": "slides/2025-01-27-dataviz.html#multiple-layers-1",
    "title": "Better Data Visualizations",
    "section": "Multiple layers",
    "text": "Multiple layers\n\nggplot(data = HELP_data,\n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_point(alpha=.6, \n             position = position_jitter(width=.1, height=0)) +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#things-i-havent-mentioned-much",
    "href": "slides/2025-01-27-dataviz.html#things-i-havent-mentioned-much",
    "title": "Better Data Visualizations",
    "section": "Things I haven’t mentioned (much)",
    "text": "Things I haven’t mentioned (much)\n\ncoords (coord_flip() is good to know about)\nthemes (for customizing appearance)\nposition (position_dodge(), position_jitterdodge(), position_stack(), etc.)\ntransforming axes"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#themes",
    "href": "slides/2025-01-27-dataviz.html#themes",
    "title": "Better Data Visualizations",
    "section": "themes",
    "text": "themes\n\nlibrary(ggthemes)\nggplot(Births2015, aes(x = date, y = births)) + \n  geom_point() + \n  theme_wsj()"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#jitterdodge",
    "href": "slides/2025-01-27-dataviz.html#jitterdodge",
    "title": "Better Data Visualizations",
    "section": "jitterdodge()",
    "text": "jitterdodge()\n\nggplot(data = HELP_data, \n       aes(x = substance, y = age, color = children)) +\n  geom_boxplot(coef = 10, position = position_dodge()) +\n  geom_point(aes(color = children, \n                 fill = children), \n             position = position_jitterdodge()) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#a-little-bit-of-everything",
    "href": "slides/2025-01-27-dataviz.html#a-little-bit-of-everything",
    "title": "Better Data Visualizations",
    "section": "A little bit of everything",
    "text": "A little bit of everything\n\nggplot(data = HELP_data, aes(x = substance, y = age, color = children)) +\n  geom_boxplot(coef = 10, position = position_dodge(width=1)) +\n  geom_point(aes(fill = children), alpha=.5, \n             position = position_jitterdodge(dodge.width=1, jitter.width = 0.2)) + \n  facet_wrap(~homeless) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#want-to-learn-more",
    "href": "slides/2025-01-27-dataviz.html#want-to-learn-more",
    "title": "Better Data Visualizations",
    "section": "Want to learn more?",
    "text": "Want to learn more?\n\ndocs.ggplot2.org/\nR for Data Science by Hadley Wickham and Garrett Grolemund"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#whats-around-the-corner",
    "href": "slides/2025-01-27-dataviz.html#whats-around-the-corner",
    "title": "Better Data Visualizations",
    "section": "What’s around the corner?",
    "text": "What’s around the corner?\nshiny\n\ninteractive graphics / modeling\nhttps://shiny.rstudio.com/\n\nplotly\n\nPlotly is an R package for creating interactive web-based graphs via plotly’s JavaScript graphing library, plotly.js. The plotly R libary contains the ggplotly function , which will convert ggplot2 figures into a Plotly object. Furthermore, you have the option of manipulating the Plotly object with the style function.\n\n\nhttps://plot.ly/ggplot2/getting-started/\n\ngganimate\n\ngganimate tutorial"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#preliminaries",
    "href": "slides/2025-01-27-dataviz.html#preliminaries",
    "title": "Better Data Visualizations",
    "section": "Preliminaries",
    "text": "Preliminaries\n\nMake the data stand out\nFacilitate comparison\nAdd information\n\n(Nolan & Perrrett, 2016)"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#preliminaries-1",
    "href": "slides/2025-01-27-dataviz.html#preliminaries-1",
    "title": "Better Data Visualizations",
    "section": "Preliminaries",
    "text": "Preliminaries\nTufte lists two main motivational steps to working with graphics as part of an argument.\n\n“An essential analytic task in making decisions based on evidence is to understand how things work.”\nMaking decisions based on evidence requires the appropriate display of that evidence.”"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#cholera---a-picture-tells-1000-words",
    "href": "slides/2025-01-27-dataviz.html#cholera---a-picture-tells-1000-words",
    "title": "Better Data Visualizations",
    "section": "Cholera - a picture tells 1000 words",
    "text": "Cholera - a picture tells 1000 words\n\n\n\n\n\nHow many aspects of this graph can you point out which are relevant to figuring out that cholera infection was coming from a single pump? Are there any distracting aspects?"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#cholera---difficult-to-interpret",
    "href": "slides/2025-01-27-dataviz.html#cholera---difficult-to-interpret",
    "title": "Better Data Visualizations",
    "section": "Cholera - difficult to interpret",
    "text": "Cholera - difficult to interpret\n\n\n\n\n\nWhy would the outbreak already have begun to decline before the pump handle was removed?"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#challenger---problematic",
    "href": "slides/2025-01-27-dataviz.html#challenger---problematic",
    "title": "Better Data Visualizations",
    "section": "Challenger - Problematic",
    "text": "Challenger - Problematic\n\n\n\n\n\nOne of the graphics which was particularly unconvincing in trying to explain that O-rings fail in the cold."
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#challenger---better",
    "href": "slides/2025-01-27-dataviz.html#challenger---better",
    "title": "Better Data Visualizations",
    "section": "Challenger - Better????",
    "text": "Challenger - Better????\n\n\n\n\n\nA different graph of the Challenger information, now sorted by temperature"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#challenger---improved",
    "href": "slides/2025-01-27-dataviz.html#challenger---improved",
    "title": "Better Data Visualizations",
    "section": "Challenger - Improved",
    "text": "Challenger - Improved\n\n\n\n\n\nThe graphic the engineers should have led with in trying to persuade the administrators not to launch. It is evident that the number of O-ring failures is quite highly associated with the ambient temperature. Note the vital information on the x-axis associated with the large number of launches at warm temperatures that had zero O-ring failures.\n\n\n\n\nNote that the “improved” Challenger graphic was made by Tufte, not by the engineers working on the problem at the time."
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#fonts-matter",
    "href": "slides/2025-01-27-dataviz.html#fonts-matter",
    "title": "Better Data Visualizations",
    "section": "Fonts matter",
    "text": "Fonts matter"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#advice-on-plotting-specific",
    "href": "slides/2025-01-27-dataviz.html#advice-on-plotting-specific",
    "title": "Better Data Visualizations",
    "section": "Advice on plotting, specific",
    "text": "Advice on plotting, specific\n\nAvoid having other graph elements interfere with data\nUse visually prominent symbols\nAvoid over-plotting (One way to avoid over plotting: jitter the values)\nDifferent values of data may obscure each other\nInclude all or nearly all of the data\nFill data region"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#advice-on-plotting-general",
    "href": "slides/2025-01-27-dataviz.html#advice-on-plotting-general",
    "title": "Better Data Visualizations",
    "section": "Advice on plotting, general",
    "text": "Advice on plotting, general\n\nEliminate superfluous material\nFacilitate comparisons\nChoose the best scale\nMake the plot data / information rich\nUse good captions, alt text, conclusions"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#simplify",
    "href": "slides/2025-01-27-dataviz.html#simplify",
    "title": "Better Data Visualizations",
    "section": "Simplify",
    "text": "Simplify\n\n\n\n\n\nimage credit: https://www.darkhorseanalytics.com/portfolio-data-looks-better-naked"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#simplified",
    "href": "slides/2025-01-27-dataviz.html#simplified",
    "title": "Better Data Visualizations",
    "section": "Simplified",
    "text": "Simplified\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimage credit: https://www.darkhorseanalytics.com/portfolio-data-looks-better-naked"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#nyt-9721",
    "href": "slides/2025-01-27-dataviz.html#nyt-9721",
    "title": "Better Data Visualizations",
    "section": "NYT 9/7/21",
    "text": "NYT 9/7/21\n\nData VizWhat they did well\n\n\n\n\n\n\n\nOne in 5,000, NYT, D. Leonhardt 9/7/21; image credit: https://www.nytimes.com/2021/09/07/briefing/risk-breakthrough-infections-delta.html\n\n\n\n\n\n\n\nlighter grid lines\nno extra information\ngood caption\nregression line to give context to the trend\ny axes labels horizontal, not vertical\na few states (and the US) are highlighted to draw the reader’s eye"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#worth-a-mention",
    "href": "slides/2025-01-27-dataviz.html#worth-a-mention",
    "title": "Better Data Visualizations",
    "section": "Worth a Mention",
    "text": "Worth a Mention\n\n\nW.E.B. Du Bois (1868-1963)\n\nsociologist\ndata scientist\n\n\n\n\n\n\n\nimage credit: wikipedia\n\n\n\n\n\n\nIn 1900 Du Bois contributed approximately 60 data visualizations to an exhibit at the Exposition Universelle in Paris, an exhibit designed to illustrate the progress made by African Americans since the end of slavery (only 37 years prior, in 1863)."
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#beautiful-informative-graphics",
    "href": "slides/2025-01-27-dataviz.html#beautiful-informative-graphics",
    "title": "Better Data Visualizations",
    "section": "Beautiful & Informative Graphics",
    "text": "Beautiful & Informative Graphics\nhttps://drawingmatter.org/w-e-b-du-bois-visionary-infographics/"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#tidy-data",
    "href": "slides/2024-02-05-verbs.html#tidy-data",
    "title": "Data Wrangling",
    "section": "Tidy data",
    "text": "Tidy data\n\neach row = a unit of observation (here, a penguin)\neach column = a measure on some variable of interest, either quantitative (numbers with units) or categorical (discrete possibilities or categories)\neach entry contains a single data value; no analysis, summaries, footnotes, comments, etc, and only one value per cell"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#definition-of-datum",
    "href": "slides/2024-02-05-verbs.html#definition-of-datum",
    "title": "Data Wrangling",
    "section": "Definition of datum",
    "text": "Definition of datum\nThe definition of datum can be much broader:\n\nDefinition of datum from the Oxford English Dictionary"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#tidying-data",
    "href": "slides/2024-02-05-verbs.html#tidying-data",
    "title": "Data Wrangling",
    "section": "Tidying data",
    "text": "Tidying data\nHow would you wrangle each data example into a tidy format?\n\nthe emails in your inbox\n\nsocial media texts\n\nimages\n\nvideos\n\naudio files"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#not-tidy-active-duty-military",
    "href": "slides/2024-02-05-verbs.html#not-tidy-active-duty-military",
    "title": "Data Wrangling",
    "section": "Not tidy – Active Duty Military",
    "text": "Not tidy – Active Duty Military\nThe Active Duty data are not tidy! What are the cases? How are the data not tidy? What might the data look like in tidy form? Suppose that the case was “an individual in the armed forces.” What variables would you use to capture the information in the following table?"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#tidy-packages-the-tidyverse",
    "href": "slides/2024-02-05-verbs.html#tidy-packages-the-tidyverse",
    "title": "Data Wrangling",
    "section": "Tidy packages: the tidyverse",
    "text": "Tidy packages: the tidyverse\n\nimage credit: https://www.tidyverse.org/."
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#some-basic-verbs",
    "href": "slides/2024-02-05-verbs.html#some-basic-verbs",
    "title": "Data Wrangling",
    "section": "Some Basic Verbs",
    "text": "Some Basic Verbs\n\nfilter()\narrange()\nselect()\ndistinct()\nmutate()\nsummarize()\nsample_n()"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#filter",
    "href": "slides/2024-02-05-verbs.html#filter",
    "title": "Data Wrangling",
    "section": "filter()",
    "text": "filter()\nAllows you to select a subset of the rows of a data frame. The first argument is the name of the data frame, the following arguments are the filters that you’d like to apply\nFor all flights on January 1st:\n\nfilter(flights, month == 1, day == 1)\n\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#constructing-filters",
    "href": "slides/2024-02-05-verbs.html#constructing-filters",
    "title": "Data Wrangling",
    "section": "Constructing filters",
    "text": "Constructing filters\nFilters are constructed of logical operators: &lt;, &gt;, &lt;=, &gt;=, ==, != (and some others).\nAdding them one by one to filter() is akin to saying “this AND that”. To say “this OR that OR both”, use |.\n\nfilter(flights, month == 1 | month == 2)\n\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 51,945 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#practice",
    "href": "slides/2024-02-05-verbs.html#practice",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nConstruct filters to isolate:\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours."
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#solution",
    "href": "slides/2024-02-05-verbs.html#solution",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours.\n\n\nfilter(flights, month == 3, day == 17)\nfilter(flights, dest == \"ORD\")\nfilter(flights, dest == \"ORD\", carrier == \"UA\")\nfilter(flights, distance &gt; 2000 | air_time &gt; 5*60)"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#arrange",
    "href": "slides/2024-02-05-verbs.html#arrange",
    "title": "Data Wrangling",
    "section": "arrange()",
    "text": "arrange()\narrange() reorders the rows: It takes a data frame, and a set of column names (or more complicated expressions) to order by. If you provide more than one column name, each additional column will be used to break ties in the values of preceding columns:\n\narrange(flights, year, month, day)\n\nUse desc() to sort in descending order.\n\narrange(flights, desc(arr_delay))"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#select",
    "href": "slides/2024-02-05-verbs.html#select",
    "title": "Data Wrangling",
    "section": "select()",
    "text": "select()\nOften you work with large datasets with many columns where only a few are actually of interest to you. select() allows you to rapidly zoom in on a useful subset using operations that usually only work on numeric variable positions:\n\nselect(flights, year, month, day)\n\nYou can exclude columns using - and specify a range using :.\n\nselect(flights, -(year:day))"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#distinct",
    "href": "slides/2024-02-05-verbs.html#distinct",
    "title": "Data Wrangling",
    "section": "distinct()",
    "text": "distinct()\nA common use of select() is to find out which values a set of variables takes. This is particularly useful in conjunction with the distinct() verb which only returns the unique values in a table.\nWhat do the following data correspond to?\n\ndistinct(select(flights, origin, dest))\n\n# A tibble: 224 × 2\n   origin dest \n   &lt;chr&gt;  &lt;chr&gt;\n 1 EWR    IAH  \n 2 LGA    IAH  \n 3 JFK    MIA  \n 4 JFK    BQN  \n 5 LGA    ATL  \n 6 EWR    ORD  \n 7 EWR    FLL  \n 8 LGA    IAD  \n 9 JFK    MCO  \n10 LGA    ORD  \n# ℹ 214 more rows"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#mutate",
    "href": "slides/2024-02-05-verbs.html#mutate",
    "title": "Data Wrangling",
    "section": "mutate()",
    "text": "mutate()\nAs well as selecting from the set of existing columns, it’s often useful to add new columns that are functions of existing columns. This is the job of mutate():\n\nselect(mutate(flights, gain = dep_delay - arr_delay), \n       flight, dep_delay, arr_delay, gain)\n\n# A tibble: 336,776 × 4\n   flight dep_delay arr_delay  gain\n    &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1   1545         2        11    -9\n 2   1714         4        20   -16\n 3   1141         2        33   -31\n 4    725        -1       -18    17\n 5    461        -6       -25    19\n 6   1696        -4        12   -16\n 7    507        -5        19   -24\n 8   5708        -3       -14    11\n 9     79        -3        -8     5\n10    301        -2         8   -10\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#summarize-and-sample_n",
    "href": "slides/2024-02-05-verbs.html#summarize-and-sample_n",
    "title": "Data Wrangling",
    "section": "summarize() and sample_n()",
    "text": "summarize() and sample_n()\nsummarize() collapses a data frame to a single row based on some function. It’s not very useful yet, but it will be.\nsample_n() provides you with a random sample of rows.\n\nsummarize(flights, delay = mean(dep_delay, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  delay\n  &lt;dbl&gt;\n1  12.6\n\nsample_n(flights, 10)\n\n# A tibble: 10 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013    11    21     1741           1740         1     1856           1900\n 2  2013    10    15      901            852         9     1151           1208\n 3  2013    12     1     1957           2000        -3     2251           2315\n 4  2013    11     3      624            625        -1      719            735\n 5  2013     9    17     1345           1345         0     1622           1650\n 6  2013     1    26     1942           1945        -3     2218           2241\n 7  2013     1    30      605            610        -5      858            910\n 8  2013    10    14     1841           1742        59     2050           1940\n 9  2013     6     7      923            925        -2     1109           1110\n10  2013     8    19     2119           2119         0     2356           2354\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#practice-1",
    "href": "slides/2024-02-05-verbs.html#practice-1",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object."
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#practice-2",
    "href": "slides/2024-02-05-verbs.html#practice-2",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object.\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\nspeed_data &lt;- select(flights2, tailnum, speed)"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#group_by",
    "href": "slides/2024-02-05-verbs.html#group_by",
    "title": "Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nsummarize() and sample_n() are even more powerful when combined with the idea of “group by”, repeating the operation separately on groups of observations within the dataset.\nThe group_by() function describes how to break a dataset down into groups of rows."
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#group_by-1",
    "href": "slides/2024-02-05-verbs.html#group_by-1",
    "title": "Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nFind the fastest airplanes in the bunch, measured as the average speed per airplane.\n\nby_tailnum &lt;- group_by(speed_data, tailnum)\navg_speed &lt;- summarize(by_tailnum, \n                       count = n(), \n                       avg_speed = mean(speed, na.rm = TRUE))\narrange(avg_speed, desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum count avg_speed\n   &lt;chr&gt;   &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA      1      501.\n 2 N315AS      1      499.\n 3 N654UA      1      499.\n 4 N819AW      1      490.\n 5 N382HA     26      486.\n 6 N388HA     36      484.\n 7 N391HA     21      484.\n 8 N777UA      1      483.\n 9 N385HA     28      483.\n10 N392HA     13      482.\n# ℹ 4,034 more rows"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#chaining",
    "href": "slides/2024-02-05-verbs.html#chaining",
    "title": "Data Wrangling",
    "section": "Chaining",
    "text": "Chaining\nInstead of applying each verb step-by-step, we can chain them into a single data pipeline, connected with the |&gt; operator. You start the pipeline with a data frame and then pass it to each function in turn.\nThe pipe syntax (|&gt;) takes a data frame and sends it to the argument of a function. The mapping goes to the first available argument in the function. For example:\nx |&gt;  f() is the same as f(x)\nx |&gt;  f(y) is the same as f(x, y)"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#mornings",
    "href": "slides/2024-02-05-verbs.html#mornings",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\nme_step1 &lt;- dress(me, what = sports)  \nme_step2 &lt;- exercise(me_step1, how = running)  \nme_step3 &lt;- eat(me_step2, choice = cereal)  \nme_step4 &lt;- dress(me_step3, what = school)  \nme_step5 &lt;- commute(me_step4, transportation = bike)"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#mornings-1",
    "href": "slides/2024-02-05-verbs.html#mornings-1",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\ncommute(dress(eat(exercise(dress(me, what = sports), how = running), choice = cereal), what = school), transportation = bike)"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#morning",
    "href": "slides/2024-02-05-verbs.html#morning",
    "title": "Data Wrangling",
    "section": "Morning",
    "text": "Morning\n(better??)\n\ncommute(\n  dress(\n    eat(\n      exercise(\n        dress(me, \n              what = sports), \n        how = running), \n      choice = cereal), \n    what = school), \n  transportation = bike)"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#mornings-2",
    "href": "slides/2024-02-05-verbs.html#mornings-2",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\nme |&gt; \n  dress(what = sports) |&gt; \n  exercise(how = running) |&gt; \n  eat(choice = cereal) |&gt; \n  dress(what = school) |&gt; \n  commute(transportation = bike)"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#little-bunny-foo-foo",
    "href": "slides/2024-02-05-verbs.html#little-bunny-foo-foo",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nFrom Hadley Wickham, how to think about tidy data.\n\nLittle bunny Foo Foo\n\n\nWent hopping through the forest\n\n\nScooping up the field mice\n\n\nAnd bopping them on the head"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#little-bunny-foo-foo-1",
    "href": "slides/2024-02-05-verbs.html#little-bunny-foo-foo-1",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nThe nursery rhyme could be created by a series of steps where the output from each step is saved as an object along the way.\n\nfoo_foo &lt;- little_bunny()\nfoo_foo_1 &lt;- hop(foo_foo, through = forest)\nfoo_foo_2 &lt;- scoop(foo_foo_2, up = field_mice)\nfoo_foo_3 &lt;- bop(foo_foo_2, on = head)"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#little-bunny-foo-foo-2",
    "href": "slides/2024-02-05-verbs.html#little-bunny-foo-foo-2",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nAnother approach is to concatenate the functions so that there is only one output.\n\nbop(\n   scoop(\n      hop(foo_foo, through = forest),\n      up = field_mice),\n   on = head)"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#little-bunny-foo-foo-3",
    "href": "slides/2024-02-05-verbs.html#little-bunny-foo-foo-3",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nOr even worse, as one line:\n\nbop(scoop(hop(foo_foo, through = forest), up = field_mice), on = head)))"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#little-bunny-foo-foo-4",
    "href": "slides/2024-02-05-verbs.html#little-bunny-foo-foo-4",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nInstead, the code can be written using the pipe in the order in which the function is evaluated:\n\nfoo_foo |&gt; \n   hop(through = forest) |&gt; \n       scoop(up = field_mice) |&gt; \n           bop(on = head)"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#flights",
    "href": "slides/2024-02-05-verbs.html#flights",
    "title": "Data Wrangling",
    "section": "Flights",
    "text": "Flights\n\nNo pipePipe\n\n\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\ntail_speed &lt;- select(flights2, tailnum, speed)\ntail_speed_grp &lt;- group_by(tail_speed, tailnum)\ntail_ave &lt;- summarize(tail_speed_grp, number = n(),\n                      avg_speed = mean(speed, na.rm = TRUE))\narrange(tail_ave, desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum number avg_speed\n   &lt;chr&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA       1      501.\n 2 N315AS       1      499.\n 3 N654UA       1      499.\n 4 N819AW       1      490.\n 5 N382HA      26      486.\n 6 N388HA      36      484.\n 7 N391HA      21      484.\n 8 N777UA       1      483.\n 9 N385HA      28      483.\n10 N392HA      13      482.\n# ℹ 4,034 more rows\n\n\n\n\n\nflights |&gt; \n  mutate(speed = distance / (air_time/60)) |&gt; \n  select(tailnum, speed) |&gt; \n  group_by(tailnum) |&gt;  \n  summarize(number = n(), \n            avg_speed = mean(speed, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum number avg_speed\n   &lt;chr&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA       1      501.\n 2 N315AS       1      499.\n 3 N654UA       1      499.\n 4 N819AW       1      490.\n 5 N382HA      26      486.\n 6 N388HA      36      484.\n 7 N391HA      21      484.\n 8 N777UA       1      483.\n 9 N385HA      28      483.\n10 N392HA      13      482.\n# ℹ 4,034 more rows"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#practice-3",
    "href": "slides/2024-02-05-verbs.html#practice-3",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#practice-4",
    "href": "slides/2024-02-05-verbs.html#practice-4",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?\n\nflights |&gt; \n  group_by(carrier) |&gt; \n  summarize(avg_delay = mean(dep_delay, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_delay))\n\n# A tibble: 16 × 2\n   carrier avg_delay\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 F9          20.2 \n 2 EV          20.0 \n 3 YV          19.0 \n 4 FL          18.7 \n 5 WN          17.7 \n 6 9E          16.7 \n 7 B6          13.0 \n 8 VX          12.9 \n 9 OO          12.6 \n10 UA          12.1 \n11 MQ          10.6 \n12 DL           9.26\n13 AA           8.59\n14 AS           5.80\n15 HA           4.90\n16 US           3.78"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#practice-again",
    "href": "slides/2024-02-05-verbs.html#practice-again",
    "title": "Data Wrangling",
    "section": "Practice again",
    "text": "Practice again\nSay you’re curious about the relationship between the number of flights that each plane made in 2013, the mean distance that each of those planes flew, and the mean arrival delay. You also want to exclude the edge cases from your analysis, so focus on the planes that have logged more than 20 flights and flown an average distance of less than 2000 miles. Please form the chain that creates this dataset."
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#solution-1",
    "href": "slides/2024-02-05-verbs.html#solution-1",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\ndelay_data &lt;- flights |&gt; \n  group_by(tailnum) |&gt; \n  summarize(number = n(),\n            dist = mean(distance, na.rm = TRUE), \n            delay = mean(arr_delay, na.rm = TRUE)) |&gt; \n  filter(number &gt; 20, dist &lt; 2000)"
  },
  {
    "objectID": "slides/2024-02-05-verbs.html#visualizing-the-data",
    "href": "slides/2024-02-05-verbs.html#visualizing-the-data",
    "title": "Data Wrangling",
    "section": "Visualizing the data",
    "text": "Visualizing the data\n\nVizCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndelay_data |&gt; \n ggplot(aes(dist, delay)) +\n geom_point(aes(size = number), \n            alpha = 1/2) +\n geom_smooth() +\n scale_size_area()\n\nWhen scale_size_area is used, the default behavior is to scale the area of points to be proportional to the value."
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#tidy-data",
    "href": "slides/2025-02-05-verbs.html#tidy-data",
    "title": "Data Wrangling",
    "section": "Tidy data",
    "text": "Tidy data\n\neach row = a unit of observation (here, a penguin)\neach column = a measure on some variable of interest, either quantitative (numbers with units) or categorical (discrete possibilities or categories)\neach entry contains a single data value; no analysis, summaries, footnotes, comments, etc, and only one value per cell"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#definition-of-datum",
    "href": "slides/2025-02-05-verbs.html#definition-of-datum",
    "title": "Data Wrangling",
    "section": "Definition of datum",
    "text": "Definition of datum\nThe definition of datum can be much broader:\n\nDefinition of datum from the Oxford English Dictionary"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#tidying-data",
    "href": "slides/2025-02-05-verbs.html#tidying-data",
    "title": "Data Wrangling",
    "section": "Tidying data",
    "text": "Tidying data\nHow would you wrangle each data example into a tidy format?\n\nthe emails in your inbox\n\nsocial media texts\n\nimages\n\nvideos\n\naudio files"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#not-tidy-active-duty-military",
    "href": "slides/2025-02-05-verbs.html#not-tidy-active-duty-military",
    "title": "Data Wrangling",
    "section": "Not tidy – Active Duty Military",
    "text": "Not tidy – Active Duty Military\nThe Active Duty data are not tidy! What are the cases? How are the data not tidy? What might the data look like in tidy form? Suppose that the case was “an individual in the armed forces.” What variables would you use to capture the information in the following table?"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#tidy-packages-the-tidyverse",
    "href": "slides/2025-02-05-verbs.html#tidy-packages-the-tidyverse",
    "title": "Data Wrangling",
    "section": "Tidy packages: the tidyverse",
    "text": "Tidy packages: the tidyverse\n\nimage credit: https://www.tidyverse.org/."
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#some-basic-verbs",
    "href": "slides/2025-02-05-verbs.html#some-basic-verbs",
    "title": "Data Wrangling",
    "section": "Some Basic Verbs",
    "text": "Some Basic Verbs\n\nfilter()\\(^*\\)\narrange()\nselect()\\(^*\\)\ndistinct()\nmutate()\\(^*\\)\nsummarize()\\(^*\\)\nsample_n()\ngroup_by()\\(^*\\)\n\nThe most used verbs are denoted with \\(^*\\)."
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#filter",
    "href": "slides/2025-02-05-verbs.html#filter",
    "title": "Data Wrangling",
    "section": "filter()",
    "text": "filter()\nAllows you to select a subset of the rows of a data frame. The first argument is the name of the data frame, the following arguments are the filters that you’d like to apply\nFor all flights on January 1st:\n\nfilter(flights, month == 1, day == 1)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#constructing-filters",
    "href": "slides/2025-02-05-verbs.html#constructing-filters",
    "title": "Data Wrangling",
    "section": "Constructing filters",
    "text": "Constructing filters\nFilters are constructed of logical operators: &lt;, &gt;, &lt;=, &gt;=, ==, != (and some others).\nAdding them one by one to filter() is akin to saying “this AND that”. To say “this OR that OR both”, use |.\n\nfilter(flights, month == 1 | month == 2)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#practice",
    "href": "slides/2025-02-05-verbs.html#practice",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nConstruct filters to isolate:\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours."
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#solution",
    "href": "slides/2025-02-05-verbs.html#solution",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours.\n\n\nfilter(flights, month == 3, day == 17)\nfilter(flights, dest == \"ORD\")\nfilter(flights, dest == \"ORD\", carrier == \"UA\")\nfilter(flights, distance &gt; 2000 | air_time &gt; 5*60)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#arrange",
    "href": "slides/2025-02-05-verbs.html#arrange",
    "title": "Data Wrangling",
    "section": "arrange()",
    "text": "arrange()\narrange() reorders the rows: It takes a data frame, and a set of column names (or more complicated expressions) to order by. If you provide more than one column name, each additional column will be used to break ties in the values of preceding columns:\n\narrange(flights, year, month, day)\n\n\n  \n\n\n\nUse desc() to sort in descending order.\n\narrange(flights, desc(dep_delay))"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#select",
    "href": "slides/2025-02-05-verbs.html#select",
    "title": "Data Wrangling",
    "section": "select()",
    "text": "select()\nOften you work with large datasets with many columns where only a few are actually of interest to you. select() allows you to rapidly zoom in on a useful subset using operations that usually only work on numeric variable positions:\n\nselect(flights, year, month, day)\n\n\n  \n\n\n\nYou can exclude columns using - and specify a range using :.\n\nselect(flights, -(year:day))"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#distinct",
    "href": "slides/2025-02-05-verbs.html#distinct",
    "title": "Data Wrangling",
    "section": "distinct()",
    "text": "distinct()\nA common use of select() is to find out which values a set of variables takes. This is particularly useful in conjunction with the distinct() verb which only returns the unique values in a table.\nWhat do the following data correspond to?\n\ndistinct(select(flights, origin, dest))"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#mutate",
    "href": "slides/2025-02-05-verbs.html#mutate",
    "title": "Data Wrangling",
    "section": "mutate()",
    "text": "mutate()\nAs well as selecting from the set of existing columns, it’s often useful to add new columns that are functions of existing columns. This is the job of mutate():\n\nselect(mutate(flights, gain = dep_delay - arr_delay), \n       flight, dep_delay, arr_delay, gain)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#summarize-and-sample_n",
    "href": "slides/2025-02-05-verbs.html#summarize-and-sample_n",
    "title": "Data Wrangling",
    "section": "summarize() and sample_n()",
    "text": "summarize() and sample_n()\nsummarize() collapses a data frame to a single row based on some function. It’s not very useful yet, but it will be.\nsample_n() provides you with a random sample of rows.\n\nsummarize(flights, delay = mean(dep_delay, na.rm = TRUE))\n\n\n  \n\n\nsample_n(flights, 10)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#practice-1",
    "href": "slides/2025-02-05-verbs.html#practice-1",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object."
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#practice-2",
    "href": "slides/2025-02-05-verbs.html#practice-2",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object.\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\nspeed_data &lt;- select(flights2, tailnum, speed)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#group_by",
    "href": "slides/2025-02-05-verbs.html#group_by",
    "title": "Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nsummarize() and sample_n() are even more powerful when combined with the idea of “group by”, repeating the operation separately on groups of observations within the dataset.\nThe group_by() function describes how to break a dataset down into groups of rows.\ngroup_by() does not change anything about the data frame. Rather, it holds the rows of the data frame separately so that any future verbs applied to the data frame are done separately per group being held."
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#group_by-1",
    "href": "slides/2025-02-05-verbs.html#group_by-1",
    "title": "Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nFind the fastest airplanes in the bunch, measured as the average speed per airplane.\n\nby_tailnum &lt;- group_by(speed_data, tailnum)\navg_speed &lt;- summarize(by_tailnum, \n                       count = n(), \n                       avg_speed = mean(speed, na.rm = TRUE))\narrange(avg_speed, desc(avg_speed))"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#chaining",
    "href": "slides/2025-02-05-verbs.html#chaining",
    "title": "Data Wrangling",
    "section": "Chaining",
    "text": "Chaining\nInstead of applying each verb step-by-step, we can chain them into a single data pipeline, connected with the |&gt; operator. You start the pipeline with a data frame and then pass it to each function in turn.\nThe pipe syntax (|&gt;) takes a data frame and sends it to the argument of a function. The mapping goes to the first available argument in the function. For example:\nx |&gt;  f() is the same as f(x)\nx |&gt;  f(y) is the same as f(x, y)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#mornings",
    "href": "slides/2025-02-05-verbs.html#mornings",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\nme_step1 &lt;- dress(me, what = sports)  \nme_step2 &lt;- exercise(me_step1, how = running)  \nme_step3 &lt;- eat(me_step2, choice = cereal)  \nme_step4 &lt;- dress(me_step3, what = school)  \nme_step5 &lt;- commute(me_step4, transportation = bike)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#mornings-1",
    "href": "slides/2025-02-05-verbs.html#mornings-1",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\ncommute(dress(eat(exercise(dress(me, what = sports), how = running), choice = cereal), what = school), transportation = bike)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#morning",
    "href": "slides/2025-02-05-verbs.html#morning",
    "title": "Data Wrangling",
    "section": "Morning",
    "text": "Morning\n(better??)\n\ncommute(\n  dress(\n    eat(\n      exercise(\n        dress(me, \n              what = sports), \n        how = running), \n      choice = cereal), \n    what = school), \n  transportation = bike)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#mornings-2",
    "href": "slides/2025-02-05-verbs.html#mornings-2",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\nme |&gt; \n  dress(what = sports) |&gt; \n  exercise(how = running) |&gt; \n  eat(choice = cereal) |&gt; \n  dress(what = school) |&gt; \n  commute(transportation = bike)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#little-bunny-foo-foo",
    "href": "slides/2025-02-05-verbs.html#little-bunny-foo-foo",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nFrom Hadley Wickham, how to think about tidy data.\n\nLittle bunny Foo Foo\n\n\nWent hopping through the forest\n\n\nScooping up the field mice\n\n\nAnd bopping them on the head"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#little-bunny-foo-foo-1",
    "href": "slides/2025-02-05-verbs.html#little-bunny-foo-foo-1",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nThe nursery rhyme could be created by a series of steps where the output from each step is saved as an object along the way.\n\nfoo_foo &lt;- little_bunny()\nfoo_foo_1 &lt;- hop(foo_foo, through = forest)\nfoo_foo_2 &lt;- scoop(foo_foo_2, up = field_mice)\nfoo_foo_3 &lt;- bop(foo_foo_2, on = head)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#little-bunny-foo-foo-2",
    "href": "slides/2025-02-05-verbs.html#little-bunny-foo-foo-2",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nAnother approach is to concatenate the functions so that there is only one output.\n\nbop(\n   scoop(\n      hop(foo_foo, through = forest),\n      up = field_mice),\n   on = head)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#little-bunny-foo-foo-3",
    "href": "slides/2025-02-05-verbs.html#little-bunny-foo-foo-3",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nOr even worse, as one line:\n\nbop(scoop(hop(foo_foo, through = forest), up = field_mice), on = head)))"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#little-bunny-foo-foo-4",
    "href": "slides/2025-02-05-verbs.html#little-bunny-foo-foo-4",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nInstead, the code can be written using the pipe in the order in which the function is evaluated:\n\nfoo_foo |&gt; \n   hop(through = forest) |&gt; \n       scoop(up = field_mice) |&gt; \n           bop(on = head)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#flights",
    "href": "slides/2025-02-05-verbs.html#flights",
    "title": "Data Wrangling",
    "section": "Flights",
    "text": "Flights\n\nNo pipePipe\n\n\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\ntail_speed &lt;- select(flights2, tailnum, speed)\ntail_speed_grp &lt;- group_by(tail_speed, tailnum)\ntail_ave &lt;- summarize(tail_speed_grp, number = n(),\n                      avg_speed = mean(speed, na.rm = TRUE))\narrange(tail_ave, desc(avg_speed))\n\n\n  \n\n\n\n\n\n\nflights |&gt; \n  mutate(speed = distance / (air_time/60)) |&gt; \n  select(tailnum, speed) |&gt; \n  group_by(tailnum) |&gt;  \n  summarize(number = n(), \n            avg_speed = mean(speed, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_speed))"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#practice-3",
    "href": "slides/2025-02-05-verbs.html#practice-3",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#practice-4",
    "href": "slides/2025-02-05-verbs.html#practice-4",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?\n\nflights |&gt; \n  group_by(carrier) |&gt; \n  summarize(avg_delay = mean(dep_delay, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_delay))"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#practice-again",
    "href": "slides/2025-02-05-verbs.html#practice-again",
    "title": "Data Wrangling",
    "section": "Practice again",
    "text": "Practice again\nSay you’re curious about the relationship between the number of flights that each plane made in 2013, the mean distance that each of those planes flew, and the mean arrival delay. You also want to exclude the edge cases from your analysis, so focus on the planes that have logged more than 20 flights and flown an average distance of less than 2000 miles. Please form the chain that creates this dataset."
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#solution-1",
    "href": "slides/2025-02-05-verbs.html#solution-1",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\ndelay_data &lt;- flights |&gt; \n  group_by(tailnum) |&gt; \n  summarize(number = n(),\n            dist = mean(distance, na.rm = TRUE), \n            delay = mean(arr_delay, na.rm = TRUE)) |&gt; \n  filter(number &gt; 20, dist &lt; 2000)"
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#visualizing-the-data",
    "href": "slides/2025-02-05-verbs.html#visualizing-the-data",
    "title": "Data Wrangling",
    "section": "Visualizing the data",
    "text": "Visualizing the data\n\nVizCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndelay_data |&gt; \n ggplot(aes(dist, delay)) +\n geom_point(aes(size = number), \n            alpha = 1/2) +\n geom_smooth() +\n scale_size_area()\n\nWhen scale_size_area is used, the default behavior is to scale the area of points to be proportional to the value."
  },
  {
    "objectID": "slides/2025-02-05-verbs.html#out-of-nyc-flights-data-2013",
    "href": "slides/2025-02-05-verbs.html#out-of-nyc-flights-data-2013",
    "title": "Data Wrangling",
    "section": "(out of) NYC, flights data (2013)",
    "text": "(out of) NYC, flights data (2013)\n\nlibrary(nycflights13)\nflights"
  },
  {
    "objectID": "project1.html#footnotes",
    "href": "project1.html#footnotes",
    "title": "Mini-Project 1",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nOne option is to use code folding so that the user can see the code if they want to: https://quarto.org/docs/output-formats/html-code.html#folding-code.↩︎"
  },
  {
    "objectID": "superfluous_material.html",
    "href": "superfluous_material.html",
    "title": "superfluous material examples",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "superfluous_material.html#solutions",
    "href": "superfluous_material.html#solutions",
    "title": "superfluous material examples",
    "section": "Solutions",
    "text": "Solutions\nOne way to print only the top of the data frame is to use the head() function:\n\nsmokecancer |&gt; \n  head()\n\n      action     outcome\n1 non-smoker lung_cancer\n2 non-smoker lung_cancer\n3 non-smoker lung_cancer\n4 non-smoker lung_cancer\n5 non-smoker lung_cancer\n6 non-smoker lung_cancer\n\n\nAnother way to print only the top few rows is to change the object from a data.frame into a tibble (a tibble is like a data.frame but it has nice printing options). Note that one benefit of tibble() over head() is that the reader can see the size of the data frame (number of rows and columns).\n\nsmokecancer |&gt; \n  tibble()\n\n# A tibble: 120 × 2\n   action     outcome    \n   &lt;chr&gt;      &lt;chr&gt;      \n 1 non-smoker lung_cancer\n 2 non-smoker lung_cancer\n 3 non-smoker lung_cancer\n 4 non-smoker lung_cancer\n 5 non-smoker lung_cancer\n 6 non-smoker lung_cancer\n 7 non-smoker lung_cancer\n 8 non-smoker lung_cancer\n 9 non-smoker lung_cancer\n10 non-smoker lung_cancer\n# ℹ 110 more rows"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#from-wide-to-long-and-long-to-wide",
    "href": "slides/2024-02-10-pivotjoin.html#from-wide-to-long-and-long-to-wide",
    "title": "Pivoting and Joining",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide\n\npivot_longer() makes the data frame “longer” – many columns into a few columns (more rows):\n\npivot_longer(data,cols,names_to=,value_to=)\n\npivot_wider() makes the data frame “wider” – a few columns into many columns (fewer rows):\n\npivot_wider(data,names_from=,values_from=)"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#from-wide-to-long-and-long-to-wide-1",
    "href": "slides/2024-02-10-pivotjoin.html#from-wide-to-long-and-long-to-wide-1",
    "title": "Pivoting and Joining",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#pivot_longer",
    "href": "slides/2024-02-10-pivotjoin.html#pivot_longer",
    "title": "Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\npivot_longer will be demonstrated using datasets from GapMinder.\nlitF represents country, year, and female literacy rate.\n\nlibrary(googlesheets4)\ngs4_deauth()\nlitF &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1hDinTIRHQIaZg1RUn6Z_6mo12PtKwEPFIz_mJVF6P5I/pub?gid=0\")\n\nlitF\n\n# A tibble: 260 × 38\n   Adult (15+) literacy rate …¹ `1975` `1976` `1977` `1978` `1979` `1980` `1981`\n   &lt;chr&gt;                         &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 Afghanistan                      NA     NA     NA     NA   4.99   NA       NA\n 2 Albania                          NA     NA     NA     NA  NA      NA       NA\n 3 Algeria                          NA     NA     NA     NA  NA      NA       NA\n 4 Andorra                          NA     NA     NA     NA  NA      NA       NA\n 5 Angola                           NA     NA     NA     NA  NA      NA       NA\n 6 Anguilla                         NA     NA     NA     NA  NA      NA       NA\n 7 Antigua and Barbuda              NA     NA     NA     NA  NA      NA       NA\n 8 Argentina                        NA     NA     NA     NA  NA      93.6     NA\n 9 Armenia                          NA     NA     NA     NA  NA      NA       NA\n10 Aruba                            NA     NA     NA     NA  NA      NA       NA\n# ℹ 250 more rows\n# ℹ abbreviated name: ¹​`Adult (15+) literacy rate (%). Female`\n# ℹ 30 more variables: `1982` &lt;dbl&gt;, `1983` &lt;dbl&gt;, `1984` &lt;dbl&gt;, `1985` &lt;dbl&gt;,\n#   `1986` &lt;dbl&gt;, `1987` &lt;dbl&gt;, `1988` &lt;dbl&gt;, `1989` &lt;dbl&gt;, `1990` &lt;dbl&gt;,\n#   `1991` &lt;dbl&gt;, `1992` &lt;dbl&gt;, `1993` &lt;dbl&gt;, `1994` &lt;dbl&gt;, `1995` &lt;dbl&gt;,\n#   `1996` &lt;dbl&gt;, `1997` &lt;dbl&gt;, `1998` &lt;dbl&gt;, `1999` &lt;dbl&gt;, `2000` &lt;dbl&gt;,\n#   `2001` &lt;dbl&gt;, `2002` &lt;dbl&gt;, `2003` &lt;dbl&gt;, `2004` &lt;dbl&gt;, `2005` &lt;dbl&gt;, …"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#pivot_longer-1",
    "href": "slides/2024-02-10-pivotjoin.html#pivot_longer-1",
    "title": "Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\n\nlitF &lt;- litF |&gt; \n  select(country = starts_with(\"Adult\"), everything()) |&gt; \n  pivot_longer(cols = -country,\n               names_to = \"year\", \n               values_to = \"litRateF\") |&gt; \n  filter(!is.na(litRateF))\n\nlitF\n\n# A tibble: 571 × 3\n   country     year  litRateF\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt;\n 1 Afghanistan 1979      4.99\n 2 Afghanistan 2011     13   \n 3 Albania     2001     98.3 \n 4 Albania     2008     94.7 \n 5 Albania     2011     95.7 \n 6 Algeria     1987     35.8 \n 7 Algeria     2002     60.1 \n 8 Algeria     2006     63.9 \n 9 Angola      2001     54.2 \n10 Angola      2011     58.6 \n# ℹ 561 more rows"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#pivot_longer-2",
    "href": "slides/2024-02-10-pivotjoin.html#pivot_longer-2",
    "title": "Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\nGDP represents country, year, and gdp (in fixed 2000 US$).\n\nGDP &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1RctTQmKB0hzbm1E8rGcufYdMshRdhmYdeL29nXqmvsc/pub?gid=0\")\n\nGDP &lt;- GDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n  pivot_longer(cols = -country, \n               names_to = \"year\",\n               values_to = \"gdp\") |&gt; \n  filter(!is.na(gdp))\n\nGDP\n\n# A tibble: 7,988 × 3\n   country year    gdp\n   &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;\n 1 Albania 1980  1061.\n 2 Albania 1981  1100.\n 3 Albania 1982  1111.\n 4 Albania 1983  1101.\n 5 Albania 1984  1065.\n 6 Albania 1985  1060.\n 7 Albania 1986  1092.\n 8 Albania 1987  1054.\n 9 Albania 1988  1014.\n10 Albania 1989  1092.\n# ℹ 7,978 more rows"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#pivot_wider",
    "href": "slides/2024-02-10-pivotjoin.html#pivot_wider",
    "title": "Pivoting and Joining",
    "section": "pivot_wider",
    "text": "pivot_wider\npivot_wider will be demonstrated using the babynames dataset.\n\nlibrary(babynames)\n\nbabynames\n\n# A tibble: 1,924,665 × 5\n    year sex   name          n   prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;int&gt;  &lt;dbl&gt;\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# ℹ 1,924,655 more rows"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#pivot_wider-babynames",
    "href": "slides/2024-02-10-pivotjoin.html#pivot_wider-babynames",
    "title": "Pivoting and Joining",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  select(-prop) |&gt; \n  pivot_wider(names_from = sex, values_from = n) \n\n# A tibble: 1,756,284 × 4\n    year name          F     M\n   &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt; &lt;int&gt;\n 1  1880 Mary       7065    27\n 2  1880 Anna       2604    12\n 3  1880 Emma       2003    10\n 4  1880 Elizabeth  1939     9\n 5  1880 Minnie     1746     9\n 6  1880 Margaret   1578    NA\n 7  1880 Ida        1472     8\n 8  1880 Alice      1414    NA\n 9  1880 Bertha     1320    NA\n10  1880 Sarah      1288    NA\n# ℹ 1,756,274 more rows"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#pivot_wider-babynames-1",
    "href": "slides/2024-02-10-pivotjoin.html#pivot_wider-babynames-1",
    "title": "Pivoting and Joining",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  select(-prop) |&gt;  \n  pivot_wider(names_from = sex, values_from = n) |&gt; \n  filter(!is.na(F), !is.na(M)) |&gt; \n  arrange(desc(year), desc(F))\n\n# A tibble: 168,381 × 4\n    year name          F     M\n   &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt; &lt;int&gt;\n 1  2017 Emma      19738    14\n 2  2017 Olivia    18632    10\n 3  2017 Ava       15902    12\n 4  2017 Isabella  15100    12\n 5  2017 Sophia    14831    17\n 6  2017 Mia       13437    16\n 7  2017 Charlotte 12893     7\n 8  2017 Amelia    11800    11\n 9  2017 Evelyn    10675    11\n10  2017 Abigail   10551     6\n# ℹ 168,371 more rows"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#pivot_wider-babynames-2",
    "href": "slides/2024-02-10-pivotjoin.html#pivot_wider-babynames-2",
    "title": "Pivoting and Joining",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  pivot_wider(names_from = sex, values_from = n) |&gt; \n  mutate(maxcount = pmax(F, M, na.rm = TRUE)) |&gt; \n  arrange(desc(maxcount))\n\n# A tibble: 1,924,653 × 6\n    year name      prop     F     M maxcount\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;\n 1  1947 Linda   0.0548 99686    NA    99686\n 2  1948 Linda   0.0552 96209    NA    96209\n 3  1947 James   0.0510    NA 94756    94756\n 4  1957 Michael 0.0424    NA 92695    92695\n 5  1947 Robert  0.0493    NA 91642    91642\n 6  1949 Linda   0.0518 91016    NA    91016\n 7  1956 Michael 0.0423    NA 90620    90620\n 8  1958 Michael 0.0420    NA 90520    90520\n 9  1948 James   0.0497    NA 88588    88588\n10  1954 Michael 0.0428    NA 88514    88514\n# ℹ 1,924,643 more rows"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#relational-data-multiple-data-frames",
    "href": "slides/2024-02-10-pivotjoin.html#relational-data-multiple-data-frames",
    "title": "Pivoting and Joining",
    "section": "Relational data (multiple data frames)",
    "text": "Relational data (multiple data frames)\n\nSee the Posit cheatsheets on wrangling & joining and pivoting."
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#joining-two-or-more-data-frames",
    "href": "slides/2024-02-10-pivotjoin.html#joining-two-or-more-data-frames",
    "title": "Pivoting and Joining",
    "section": "Joining two (or more) data frames:",
    "text": "Joining two (or more) data frames:\n\nleft_join returns all rows from the left table, and any rows with matching keys from the right table.\ninner_join returns only the rows in which the left table have matching keys in the right table (i.e., matching rows in both sets).\nfull_join returns all rows from both tables, join records from the left which have matching keys in the right table.\n\nGood practice: always specify the by argument when joining data frames."
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#women-in-science",
    "href": "slides/2024-02-10-pivotjoin.html#women-in-science",
    "title": "Pivoting and Joining",
    "section": "Women in Science",
    "text": "Women in Science\n10 women in science who changed the world (source: Discover Magazine)1\n\n\n\n\n\nname\nprofession\n\n\n\n\nAda Lovelace\nMathematician\n\n\nMarie Curie\nPhysicist and Chemist\n\n\nJanaki Ammal\nBotanist\n\n\nChien-Shiung Wu\nPhysicist\n\n\nKatherine Johnson\nMathematician\n\n\nRosalind Franklin\nChemist\n\n\nVera Rubin\nAstronomer\n\n\nGladys West\nMathematician\n\n\nFlossie Wong-Staal\nVirologist and Molecular Biologist\n\n\nJennifer Doudna\nBiochemist\n\n\n\n\n\nExample from DataScience in a Box"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#inputs",
    "href": "slides/2024-02-10-pivotjoin.html#inputs",
    "title": "Pivoting and Joining",
    "section": "Inputs",
    "text": "Inputs\n\nProfessionsDatesWorks\n\n\n\nprofessions\n\n# A tibble: 10 × 2\n   name               profession                        \n   &lt;chr&gt;              &lt;chr&gt;                             \n 1 Ada Lovelace       Mathematician                     \n 2 Marie Curie        Physicist and Chemist             \n 3 Janaki Ammal       Botanist                          \n 4 Chien-Shiung Wu    Physicist                         \n 5 Katherine Johnson  Mathematician                     \n 6 Rosalind Franklin  Chemist                           \n 7 Vera Rubin         Astronomer                        \n 8 Gladys West        Mathematician                     \n 9 Flossie Wong-Staal Virologist and Molecular Biologist\n10 Jennifer Doudna    Biochemist                        \n\n\n\n\n\ndates\n\n# A tibble: 8 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Rosalind Franklin        1920       1958\n5 Vera Rubin               1928       2016\n6 Gladys West              1930         NA\n7 Flossie Wong-Staal       1947       2020\n8 Jennifer Doudna          1964         NA\n\n\n\n\n\nworks\n\n# A tibble: 9 × 2\n  name               known_for                                                  \n  &lt;chr&gt;              &lt;chr&gt;                                                      \n1 Ada Lovelace       first computer algorithm                                   \n2 Marie Curie        theory of radioactivity,  discovery of elements polonium a…\n3 Janaki Ammal       hybrid species, biodiversity protection                    \n4 Chien-Shiung Wu    confim and refine theory of radioactive beta decy, Wu expe…\n5 Katherine Johnson  calculations of orbital mechanics critical to sending the …\n6 Vera Rubin         existence of dark matter                                   \n7 Gladys West        mathematical modeling of the shape of the Earth which serv…\n8 Flossie Wong-Staal first scientist to clone HIV and create a map of its genes…\n9 Jennifer Doudna    one of the primary developers of CRISPR, a ground-breaking…"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#desired-output",
    "href": "slides/2024-02-10-pivotjoin.html#desired-output",
    "title": "Pivoting and Joining",
    "section": "Desired output",
    "text": "Desired output\nWe’d like to put together the data to look like:\n\n\n# A tibble: 10 × 5\n   name               profession                 birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician                      NA         NA first co…\n 2 Marie Curie        Physicist and Chemist              NA         NA theory o…\n 3 Janaki Ammal       Botanist                         1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist                        1912       1997 confim a…\n 5 Katherine Johnson  Mathematician                    1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                          1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer                       1928       2016 existenc…\n 8 Gladys West        Mathematician                    1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and Molecular …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist                       1964         NA one of t…"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#inputs-reminder",
    "href": "slides/2024-02-10-pivotjoin.html#inputs-reminder",
    "title": "Pivoting and Joining",
    "section": "Inputs, reminder",
    "text": "Inputs, reminder\n\n\n\nnrow(professions)\n\n[1] 10\n\nnrow(dates)\n\n[1] 8\n\nnrow(works)\n\n[1] 9\n\n\n\n\nnames(professions)\n\n[1] \"name\"       \"profession\"\n\nnames(dates)\n\n[1] \"name\"       \"birth_year\" \"death_year\"\n\nnames(works)\n\n[1] \"name\"      \"known_for\""
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#setup",
    "href": "slides/2024-02-10-pivotjoin.html#setup",
    "title": "Pivoting and Joining",
    "section": "Setup",
    "text": "Setup\nFor the next few slides…\n\n\n\nx\n\n# A tibble: 3 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n\n\n\n\ny\n\n# A tibble: 3 × 2\n     id value_y\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 y1     \n2     2 y2     \n3     4 y4"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#left_join",
    "href": "slides/2024-02-10-pivotjoin.html#left_join",
    "title": "Pivoting and Joining",
    "section": "left_join()",
    "text": "left_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nleft_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#left_join-1",
    "href": "slides/2024-02-10-pivotjoin.html#left_join-1",
    "title": "Pivoting and Joining",
    "section": "left_join()",
    "text": "left_join()\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") \n\n# A tibble: 10 × 4\n   name               profession                         birth_year death_year\n   &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n 1 Ada Lovelace       Mathematician                              NA         NA\n 2 Marie Curie        Physicist and Chemist                      NA         NA\n 3 Janaki Ammal       Botanist                                 1897       1984\n 4 Chien-Shiung Wu    Physicist                                1912       1997\n 5 Katherine Johnson  Mathematician                            1918       2020\n 6 Rosalind Franklin  Chemist                                  1920       1958\n 7 Vera Rubin         Astronomer                               1928       2016\n 8 Gladys West        Mathematician                            1930         NA\n 9 Flossie Wong-Staal Virologist and Molecular Biologist       1947       2020\n10 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#right_join",
    "href": "slides/2024-02-10-pivotjoin.html#right_join",
    "title": "Pivoting and Joining",
    "section": "right_join()",
    "text": "right_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nright_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#right_join-1",
    "href": "slides/2024-02-10-pivotjoin.html#right_join-1",
    "title": "Pivoting and Joining",
    "section": "right_join()",
    "text": "right_join()\n\nprofessions |&gt; \n  right_join(dates, by = \"name\") \n\n# A tibble: 8 × 4\n  name               profession                         birth_year death_year\n  &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal       Botanist                                 1897       1984\n2 Chien-Shiung Wu    Physicist                                1912       1997\n3 Katherine Johnson  Mathematician                            1918       2020\n4 Rosalind Franklin  Chemist                                  1920       1958\n5 Vera Rubin         Astronomer                               1928       2016\n6 Gladys West        Mathematician                            1930         NA\n7 Flossie Wong-Staal Virologist and Molecular Biologist       1947       2020\n8 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#full_join",
    "href": "slides/2024-02-10-pivotjoin.html#full_join",
    "title": "Pivoting and Joining",
    "section": "full_join()",
    "text": "full_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nfull_join(x, y, by = \"id\")\n\n# A tibble: 4 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;   \n4     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#full_join-1",
    "href": "slides/2024-02-10-pivotjoin.html#full_join-1",
    "title": "Pivoting and Joining",
    "section": "full_join()",
    "text": "full_join()\n\ndates |&gt; \n  full_join(works, by = \"name\") \n\n# A tibble: 10 × 4\n   name               birth_year death_year known_for                           \n   &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                               \n 1 Janaki Ammal             1897       1984 hybrid species, biodiversity protec…\n 2 Chien-Shiung Wu          1912       1997 confim and refine theory of radioac…\n 3 Katherine Johnson        1918       2020 calculations of orbital mechanics c…\n 4 Rosalind Franklin        1920       1958 &lt;NA&gt;                                \n 5 Vera Rubin               1928       2016 existence of dark matter            \n 6 Gladys West              1930         NA mathematical modeling of the shape …\n 7 Flossie Wong-Staal       1947       2020 first scientist to clone HIV and cr…\n 8 Jennifer Doudna          1964         NA one of the primary developers of CR…\n 9 Ada Lovelace               NA         NA first computer algorithm            \n10 Marie Curie                NA         NA theory of radioactivity,  discovery…"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#inner_join",
    "href": "slides/2024-02-10-pivotjoin.html#inner_join",
    "title": "Pivoting and Joining",
    "section": "inner_join()",
    "text": "inner_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\ninner_join(x, y, by = \"id\")\n\n# A tibble: 2 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#inner_join-1",
    "href": "slides/2024-02-10-pivotjoin.html#inner_join-1",
    "title": "Pivoting and Joining",
    "section": "inner_join()",
    "text": "inner_join()\n\ndates |&gt; \n  inner_join(works, by = \"name\") \n\n# A tibble: 7 × 4\n  name               birth_year death_year known_for                            \n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                                \n1 Janaki Ammal             1897       1984 hybrid species, biodiversity protect…\n2 Chien-Shiung Wu          1912       1997 confim and refine theory of radioact…\n3 Katherine Johnson        1918       2020 calculations of orbital mechanics cr…\n4 Vera Rubin               1928       2016 existence of dark matter             \n5 Gladys West              1930         NA mathematical modeling of the shape o…\n6 Flossie Wong-Staal       1947       2020 first scientist to clone HIV and cre…\n7 Jennifer Doudna          1964         NA one of the primary developers of CRI…"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#semi_join",
    "href": "slides/2024-02-10-pivotjoin.html#semi_join",
    "title": "Pivoting and Joining",
    "section": "semi_join()",
    "text": "semi_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nsemi_join(x, y, by = \"id\")\n\n# A tibble: 2 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#semi_join-1",
    "href": "slides/2024-02-10-pivotjoin.html#semi_join-1",
    "title": "Pivoting and Joining",
    "section": "semi_join()",
    "text": "semi_join()\n\ndates |&gt; \n  semi_join(works, by = \"name\") \n\n# A tibble: 7 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Vera Rubin               1928       2016\n5 Gladys West              1930         NA\n6 Flossie Wong-Staal       1947       2020\n7 Jennifer Doudna          1964         NA"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#anti_join",
    "href": "slides/2024-02-10-pivotjoin.html#anti_join",
    "title": "Pivoting and Joining",
    "section": "anti_join()",
    "text": "anti_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nanti_join(x, y, by = \"id\")\n\n# A tibble: 1 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     3 x3"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#anti_join-1",
    "href": "slides/2024-02-10-pivotjoin.html#anti_join-1",
    "title": "Pivoting and Joining",
    "section": "anti_join()",
    "text": "anti_join()\n\ndates |&gt; \n  anti_join(works, by = \"name\") \n\n# A tibble: 1 × 3\n  name              birth_year death_year\n  &lt;chr&gt;                  &lt;dbl&gt;      &lt;dbl&gt;\n1 Rosalind Franklin       1920       1958"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#putting-it-all-together",
    "href": "slides/2024-02-10-pivotjoin.html#putting-it-all-together",
    "title": "Pivoting and Joining",
    "section": "Putting it all together",
    "text": "Putting it all together\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") |&gt; \n  left_join(works, by = \"name\")\n\n# A tibble: 10 × 5\n   name               profession                 birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician                      NA         NA first co…\n 2 Marie Curie        Physicist and Chemist              NA         NA theory o…\n 3 Janaki Ammal       Botanist                         1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist                        1912       1997 confim a…\n 5 Katherine Johnson  Mathematician                    1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                          1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer                       1928       2016 existenc…\n 8 Gladys West        Mathematician                    1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and Molecular …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist                       1964         NA one of t…"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#practice-litf-and-gdp-from-gapminder.",
    "href": "slides/2024-02-10-pivotjoin.html#practice-litf-and-gdp-from-gapminder.",
    "title": "Pivoting and Joining",
    "section": "Practice litF and GDP from Gapminder.",
    "text": "Practice litF and GDP from Gapminder."
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#left",
    "href": "slides/2024-02-10-pivotjoin.html#left",
    "title": "Pivoting and Joining",
    "section": "left",
    "text": "left\n\nlitGDPleft &lt;- left_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPleft)\n\n[1] 571   4\n\nlitGDPleft\n\n# A tibble: 571 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 561 more rows"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#right",
    "href": "slides/2024-02-10-pivotjoin.html#right",
    "title": "Pivoting and Joining",
    "section": "right",
    "text": "right\n\nlitGDPright &lt;- right_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPright)\n\n[1] 7988    4\n\nlitGDPright\n\n# A tibble: 7,988 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 7,978 more rows"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#inner",
    "href": "slides/2024-02-10-pivotjoin.html#inner",
    "title": "Pivoting and Joining",
    "section": "inner",
    "text": "inner\n\nlitGDPinner &lt;- inner_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPinner)\n\n[1] 505   4\n\nlitGDPinner\n\n# A tibble: 505 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 495 more rows"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#full",
    "href": "slides/2024-02-10-pivotjoin.html#full",
    "title": "Pivoting and Joining",
    "section": "full",
    "text": "full\n\nlitGDPfull &lt;- full_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPfull)\n\n[1] 8054    4\n\nlitGDPfull\n\n# A tibble: 8,054 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 8,044 more rows"
  },
  {
    "objectID": "slides/2024-02-10-pivotjoin.html#join-to-merge-two-datasets",
    "href": "slides/2024-02-10-pivotjoin.html#join-to-merge-two-datasets",
    "title": "Pivoting and Joining",
    "section": "join to merge two datasets",
    "text": "join to merge two datasets\n\nIf you ever need to understand which join is the right join for you, try to find an image that will lay out what the function is doing. I found this one that is quite good and is taken from the Statistics Globe blog."
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#from-wide-to-long-and-long-to-wide",
    "href": "slides/2025-02-10-pivotjoin.html#from-wide-to-long-and-long-to-wide",
    "title": "Pivoting and Joining",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide\n\npivot_longer() makes the data frame “longer” – many columns into a few columns (more rows):\n\npivot_longer(data,cols,names_to=,value_to=)\n\npivot_wider() makes the data frame “wider” – a few columns into many columns (fewer rows):\n\npivot_wider(data,names_from=,values_from=)"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#from-wide-to-long-and-long-to-wide-1",
    "href": "slides/2025-02-10-pivotjoin.html#from-wide-to-long-and-long-to-wide-1",
    "title": "Pivoting and Joining",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#pivot_longer",
    "href": "slides/2025-02-10-pivotjoin.html#pivot_longer",
    "title": "Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\npivot_longer will be demonstrated using datasets from GapMinder.\nlitF represents country, year, and female literacy rate.\n\nlibrary(googlesheets4)\ngs4_deauth()\nlitF &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1hDinTIRHQIaZg1RUn6Z_6mo12PtKwEPFIz_mJVF6P5I/pub?gid=0\")\n\nlitF |&gt; \n  gt::gt()\n\n\n\n\n\n\n\nAdult (15+) literacy rate (%). Female\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n\n\n\n\nAfghanistan\nNA\nNA\nNA\nNA\n4.987460\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n13.00000\n\n\nAlbania\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.252274\nNA\nNA\nNA\nNA\nNA\nNA\n94.68181\nNA\nNA\n95.69148\n\n\nAlgeria\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n35.83992\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n60.07508\nNA\nNA\nNA\n63.91879\nNA\nNA\nNA\nNA\nNA\n\n\nAndorra\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAngola\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n54.194488\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n58.60846\n\n\nAnguilla\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.71493\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAntigua and Barbuda\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.420000\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.42000\n\n\nArgentina\nNA\nNA\nNA\nNA\nNA\n93.58089\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.041358\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.193411\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.89042\n\n\nArmenia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.15014\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.161066\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.45376\n\n\nAruba\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.07136\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.71978\nNA\n\n\nAustralia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAustria\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAzerbaijan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.17478\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.39788\nNA\n99.68215\nNA\nNA\n\n\nBahamas\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBahrain\nNA\nNA\nNA\nNA\nNA\nNA\n58.591092\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n76.932319\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n83.557418\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.61258\nNA\n\n\nBangladesh\nNA\nNA\nNA\nNA\nNA\nNA\n17.971629\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n25.838980\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n40.823350\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n53.41050\n\n\nBarbados\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBelarus\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.62822\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.41972\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.49399\nNA\nNA\n\n\nBelgium\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBelize\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.328394\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBenin\nNA\nNA\nNA\nNA\n9.539080\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n16.56524\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n23.30014\nNA\nNA\nNA\n18.44291\nNA\nNA\nNA\nNA\nNA\n\n\nBermuda\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBhutan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n38.68066\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBolivia\nNA\n51.374645\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n72.31322\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.654383\nNA\nNA\nNA\nNA\nNA\n85.98594\n86.83175\n86.82146\nNA\nNA\n\n\nBosnia and Herzegovina\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.35994\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.69526\n\n\nBotswana\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n71.299236\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n81.80795\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n85.56156\n\n\nBrazil\nNA\nNA\nNA\nNA\nNA\n72.85315\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.50005\nNA\nNA\nNA\n88.80613\nNA\n89.85559\n90.22801\n90.21955\n90.41122\n90.68170\nNA\n\n\nBritish Virgin Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBrunei\nNA\nNA\nNA\nNA\nNA\nNA\n68.982584\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n82.461356\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.161545\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.92081\n\n\nBulgaria\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.706486\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.98390\n\n\nBurkina Faso\n3.182766\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n8.225427\nNA\nNA\nNA\nNA\n8.05798\nNA\nNA\nNA\nNA\nNA\nNA\n15.18877\nNA\n16.62224\nNA\n21.57957\nNA\nNA\nNA\nNA\n\n\nBurundi\nNA\nNA\nNA\nNA\n11.983568\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n27.52930\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n52.23776\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n84.59147\nNA\nNA\nNA\n\n\nCambodia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n56.99250\nNA\nNA\nNA\nNA\nNA\n64.05099\nNA\nNA\nNA\n70.85820\n65.93125\nNA\nNA\n\n\nCameroon\nNA\n29.116129\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n58.72176\nNA\nNA\nNA\nNA\nNA\nNA\n63.02206\nNA\nNA\n64.79950\nNA\n\n\nCanada\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCape Verde\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n52.99862\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n74.06926\nNA\nNA\nNA\nNA\nNA\nNA\n80.25824\n\n\nCayman Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.02148\nNA\nNA\nNA\nNA\n\n\nCentral African Rep.\n8.399576\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n20.33688\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n35.29090\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n44.17747\n\n\nChad\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n4.591826\nNA\nNA\nNA\nNA\nNA\nNA\n12.79642\nNA\nNA\nNA\n17.98058\nNA\nNA\nNA\nNA\nNA\nNA\n25.39826\n\n\nChile\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.80012\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.03671\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.64093\nNA\nNA\nNA\nNA\nNA\n98.69557\n98.49128\nNA\nNA\n\n\nChina\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n51.13681\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n68.07208\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.52660\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.71123\nNA\n\n\nColombia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n81.235482\nNA\nNA\n91.31400\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.71463\n92.91125\n92.22060\n92.84562\n93.43537\n93.41513\n93.48679\n93.66714\n\n\nComoros\nNA\nNA\nNA\nNA\nNA\n40.31762\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n63.45902\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.57002\n\n\nCongo, Dem. Rep.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n54.060896\nNA\nNA\nNA\nNA\nNA\n46.10425\nNA\nNA\nNA\nNA\n\n\nCongo, Rep.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCook Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCosta Rica\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.57713\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.08079\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.47886\n\n\nCote d'Ivoire\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n23.43378\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n28.47667\nNA\n38.61451\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n47.58359\n\n\nCroatia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.817222\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.083898\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.31105\n\n\nCuba\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.79092\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.82679\n\n\nCyprus\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.00178\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.079665\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.11623\n\n\nCzech Rep.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nDenmark\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nDjibouti\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nDominica\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nDominican Rep.\nNA\nNA\nNA\nNA\nNA\nNA\n72.536085\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n87.17709\nNA\nNA\nNA\nNA\n88.27717\nNA\nNA\n89.69730\n90.22552\n\n\nEcuador\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.40523\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.19333\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n89.697087\nNA\nNA\nNA\nNA\nNA\n81.68059\nNA\n81.45120\n90.47011\n90.22082\n\n\nEgypt\nNA\n22.438008\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n31.40419\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n43.59531\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n59.35558\n57.81191\nNA\nNA\nNA\n63.51581\n64.63623\n\n\nEl Salvador\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n71.28053\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n78.35865\nNA\n81.00382\n79.66213\n81.35950\n81.81795\n82.30802\nNA\n\n\nEquatorial Guinea\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n81.62300\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.07868\n\n\nEritrea\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n40.22442\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n59.03992\n\n\nEstonia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.60148\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.76006\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.81971\n\n\nEthiopia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n18.51498\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n22.80000\n17.97720\nNA\n28.92164\nNA\nNA\nNA\nNA\n\n\nFiji\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFinland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFrance\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGabon\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n65.326310\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n79.30927\nNA\nNA\nNA\nNA\nNA\nNA\n85.63833\n\n\nGambia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n25.06155\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n41.88712\n\n\nGeorgia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.55285\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.68613\n\n\nGermany\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGhana\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n49.79196\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n65.29469\nNA\n\n\nGibraltar\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGreece\nNA\nNA\nNA\nNA\nNA\nNA\n85.319987\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n89.353296\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.239412\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.27898\n\n\nGrenada\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGuatemala\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n57.29266\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n63.34138\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n71.08082\n\n\nGuinea\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n9.74307\nNA\nNA\nNA\nNA\nNA\nNA\n18.23868\nNA\nNA\nNA\nNA\nNA\nNA\n12.19197\nNA\n\n\nGuinea-Bissau\nNA\nNA\nNA\nNA\n8.588262\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n27.49421\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n42.06704\n\n\nGuyana\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n87.25198\nNA\nNA\n\n\nHaiti\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n32.52496\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n54.86147\nNA\nNA\n44.59945\nNA\nNA\nNA\nNA\nNA\n\n\nHoly See\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nHonduras\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.223602\nNA\nNA\nNA\nNA\nNA\n83.45277\nNA\nNA\n84.72503\n84.93035\n\n\nHong Kong, China\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nHungary\nNA\nNA\nNA\nNA\nNA\n98.45413\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.71310\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.85411\nNA\nNA\nNA\nNA\nNA\nNA\n98.93870\n\n\nIceland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nIndia\nNA\nNA\nNA\nNA\nNA\nNA\n25.676252\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n33.729527\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n47.842099\nNA\nNA\nNA\nNA\n50.82376\nNA\nNA\nNA\nNA\nNA\n\n\nIndonesia\nNA\nNA\nNA\nNA\nNA\n57.69463\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n75.27012\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.79959\nNA\n88.78698\nNA\n89.10139\n89.67712\nNA\n90.06870\n\n\nIran\nNA\n24.423083\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n41.03395\nNA\nNA\nNA\nNA\n56.156417\nNA\nNA\nNA\nNA\n66.06776\nNA\nNA\nNA\nNA\nNA\n70.40000\nNA\nNA\n76.80264\n77.24002\nNA\n80.65532\nNA\nNA\nNA\n\n\nIraq\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n64.16950\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n71.20716\n\n\nIreland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nIsrael\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n88.67472\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nItaly\nNA\nNA\nNA\nNA\nNA\nNA\n95.536669\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.042153\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.74161\n\n\nJamaica\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n85.87208\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.76553\n\n\nJapan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nJordan\nNA\nNA\nNA\nNA\n52.110613\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n84.71392\nNA\n87.00581\nNA\n88.90331\nNA\nNA\n89.20774\n93.93346\n\n\nKazakhstan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.13877\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.28990\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.68429\nNA\nNA\n\n\nKenya\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n77.89298\nNA\nNA\nNA\nNA\nNA\nNA\n66.86312\nNA\nNA\nNA\nNA\n\n\nKiribati\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nKorea, Dem. Rep.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.99762\nNA\nNA\nNA\n\n\nKorea, Rep.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nKuwait\n48.015214\nNA\nNA\nNA\nNA\n59.11050\nNA\nNA\nNA\nNA\n68.84937\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n74.14872\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.04250\n90.82863\n91.50349\n91.79302\nNA\nNA\nNA\n\n\nKyrgyzstan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.13063\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.98121\nNA\nNA\n\n\nLaos\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n47.90236\nNA\nNA\nNA\nNA\n58.46070\n60.902520\nNA\nNA\nNA\n63.22699\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nLatvia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.20255\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.70973\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.79728\n\n\nLebanon\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n85.96778\nNA\nNA\nNA\nNA\n\n\nLesotho\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.04645\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n84.96396\nNA\nNA\n\n\nLiberia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n19.30279\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n32.01852\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n47.87633\nNA\nNA\n27.03491\nNA\nNA\nNA\nNA\n\n\nLibya\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n42.31355\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n64.95931\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n78.19782\nNA\nNA\nNA\nNA\nNA\nNA\n83.32303\n\n\nLiechtenstein\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nLithuania\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.78159\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.647943\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.72063\n\n\nLuxembourg\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMacao, China\nNA\nNA\nNA\nNA\nNA\nNA\n86.215884\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n87.774972\nNA\nNA\nNA\nNA\n90.72359\nNA\nNA\nNA\nNA\n93.73191\n\n\nMacedonia, FYR\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.92802\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.05607\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.04252\n\n\nMadagascar\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n65.27857\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n61.64141\nNA\nNA\n\n\nMalawi\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n33.52302\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n53.99712\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n51.25197\nNA\n\n\nMalaysia\nNA\nNA\nNA\nNA\nNA\n61.24850\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n77.283088\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n85.35422\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.74768\nNA\n\n\nMaldives\nNA\nNA\n82.17816\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.35901\nNA\nNA\nNA\nNA\n96.14601\nNA\nNA\nNA\nNA\n96.44298\nNA\nNA\nNA\nNA\n96.44298\nNA\nNA\nNA\nNA\nNA\n98.42985\nNA\nNA\nNA\nNA\nNA\n\n\nMali\nNA\n5.735281\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n11.89343\nNA\nNA\nNA\nNA\n15.90000\nNA\nNA\n18.19091\nNA\nNA\nNA\n20.28793\n24.56741\n\n\nMalta\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n88.29275\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n89.24264\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.50425\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMarshall Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMauritania\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n43.41736\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n51.97767\n\n\nMauritius\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n74.66089\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.50003\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.66407\n\n\nMexico\nNA\nNA\nNA\nNA\nNA\n79.89100\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n84.95591\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n88.68204\nNA\n88.72863\nNA\n89.63102\n90.21041\n89.83451\n91.35555\n91.45361\n92.11625\n91.85342\n92.33828\n\n\nMicronesia, Fed. Sts.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMoldova\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.44448\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.49230\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.48289\n\n\nMonaco\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMongolia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.52880\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.87714\n\n\nMontenegro\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.58914\n\n\nMontserrat\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMorocco\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n17.51487\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n28.72542\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n39.61956\nNA\nNA\nNA\n42.58785\n43.92108\nNA\n57.63999\n\n\nMozambique\nNA\nNA\nNA\nNA\nNA\n12.14632\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n24.96420\nNA\nNA\nNA\nNA\nNA\n33.19396\nNA\nNA\nNA\nNA\nNA\n36.45228\nNA\nNA\n\n\nMyanmar\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n71.63087\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.41518\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.37064\n\n\nNamibia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n73.986597\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n83.490088\nNA\nNA\nNA\nNA\nNA\n78.35098\nNA\nNA\nNA\nNA\n\n\nNauru\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNepal\nNA\nNA\nNA\nNA\nNA\nNA\n9.153116\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n17.381793\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n34.886764\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n46.70610\n\n\nNetherlands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNetherlands Antilles\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.01091\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.53381\n\n\nNew Zealand\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNicaragua\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n76.601656\nNA\nNA\nNA\n77.91604\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNiger\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n9.398724\nNA\nNA\nNA\n15.08414\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNigeria\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n43.729197\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n43.32205\nNA\nNA\nNA\nNA\n41.38676\nNA\nNA\nNA\n\n\nNiue\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNorway\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nOman\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n73.53171\nNA\nNA\nNA\nNA\n80.87226\nNA\n81.80323\nNA\n\n\nPakistan\nNA\nNA\nNA\nNA\nNA\nNA\n14.771552\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n29.04384\nNA\nNA\nNA\nNA\nNA\nNA\n35.36752\n39.61323\nNA\n40.08118\n40.31462\nNA\nNA\n\n\nPalau\nNA\nNA\nNA\nNA\nNA\n90.50324\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPanama\nNA\nNA\nNA\nNA\nNA\n88.04653\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n88.21485\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.24718\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.48526\nNA\n\n\nPapua New Guinea\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n50.91774\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n59.40146\n\n\nParaguay\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n75.85298\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n88.55871\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.45327\n92.49443\n93.14401\n92.92574\nNA\n\n\nPeru\nNA\nNA\nNA\nNA\nNA\nNA\n73.858337\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n81.658753\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n82.06262\n82.45437\n83.45487\n84.64688\nNA\nNA\nNA\nNA\n\n\nPhilippines\nNA\nNA\nNA\nNA\nNA\n82.76215\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.18072\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.65491\nNA\nNA\n93.56453\nNA\nNA\nNA\nNA\n95.82563\nNA\nNA\nNA\n\n\nPoland\nNA\nNA\nNA\n98.25198\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.11849\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.42229\nNA\nNA\nNA\nNA\nNA\nNA\n99.58486\n\n\nPortugal\nNA\nNA\nNA\nNA\nNA\nNA\n74.607990\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n84.658214\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.95712\n\n\nPuerto Rico\nNA\nNA\nNA\nNA\nNA\n85.85034\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n89.73096\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.95798\nNA\nNA\nNA\nNA\nNA\nNA\n90.91396\n\n\nQatar\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n72.45895\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.88868\nNA\nNA\nNA\nNA\nNA\nNA\n88.60922\nNA\nNA\n90.43612\n92.66382\n92.91018\n95.40186\nNA\n\n\nRomania\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.98269\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.26632\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.14531\n\n\nRussia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.75817\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.22836\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.64778\nNA\n\n\nRwanda\nNA\nNA\nNA\n26.57358\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n59.75034\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n61.54861\nNA\n\n\nSaint Kitts and Nevis\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSaint Lucia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSaint Vincent and the Grenadines\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSamoa\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.421739\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.24641\nNA\nNA\nNA\nNA\nNA\nNA\n98.61721\n\n\nSan Marino\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSao Tome and Principe\nNA\nNA\nNA\nNA\nNA\nNA\n42.363383\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n61.920478\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n77.949235\nNA\nNA\nNA\nNA\nNA\nNA\n60.08303\nNA\nNA\nNA\n\n\nSaudi Arabia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n57.27784\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n69.29119\nNA\nNA\nNA\n76.33516\nNA\nNA\nNA\nNA\nNA\nNA\n82.23673\n\n\nSenegal\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n17.86327\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n29.24734\nNA\nNA\nNA\n32.98758\nNA\nNA\n38.66625\nNA\nNA\n\n\nSerbia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.87049\n\n\nSeychelles\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n85.48930\nNA\nNA\nNA\nNA\nNA\nNA\n88.58660\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.25898\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.25898\n\n\nSierra Leone\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n24.15893\nNA\nNA\nNA\nNA\nNA\nNA\n32.62891\n\n\nSingapore\nNA\nNA\nNA\nNA\nNA\n73.96854\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n83.02685\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n88.64518\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.77481\nNA\n\n\nSlovak Republic\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSlovenia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.453752\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.61597\nNA\nNA\nNA\nNA\nNA\nNA\n99.67143\n\n\nSolomon Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSomalia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSouth Africa\nNA\nNA\nNA\nNA\nNA\n74.80719\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.92863\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n87.04310\nNA\nNA\nNA\n92.18371\n\n\nSpain\nNA\nNA\nNA\nNA\nNA\nNA\n89.936922\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.050996\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.92515\nNA\n97.26032\n96.88684\n96.92597\n97.00450\nNA\n\n\nSri Lanka\nNA\nNA\nNA\nNA\nNA\nNA\n82.021974\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n89.135764\nNA\nNA\nNA\nNA\n89.09135\nNA\n89.07347\nNA\n89.95868\nNA\n\n\nSudan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n52.14640\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n63.16023\n\n\nSuriname\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n87.19744\nNA\nNA\nNA\n93.76537\nNA\n94.00354\nNA\n\n\nSwaziland\nNA\n53.665959\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n65.22288\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.32875\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n87.32746\n\n\nSweden\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSwitzerland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSyria\nNA\nNA\nNA\nNA\nNA\nNA\n37.059159\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n74.24044\nNA\n73.62656\nNA\nNA\nNA\nNA\nNA\nNA\n77.74985\n\n\nTajikistan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.64180\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.22174\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.61533\n\n\nTanzania\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n48.08802\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n62.17232\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n60.75262\nNA\n\n\nThailand\nNA\nNA\nNA\nNA\nNA\n83.89335\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.51602\nNA\nNA\nNA\nNA\n91.52955\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nTimor-Leste\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n30.000000\nNA\nNA\nNA\nNA\nNA\n42.50000\nNA\nNA\n52.95900\nNA\n\n\nTogo\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n38.45329\nNA\nNA\nNA\nNA\nNA\n44.37663\nNA\nNA\n43.60690\nNA\n47.97739\n\n\nTokelau\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nTonga\nNA\n99.525535\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.97555\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.08251\nNA\nNA\nNA\nNA\nNA\n\n\nTrinidad and Tobago\nNA\nNA\nNA\nNA\nNA\n93.46417\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.66179\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.81030\nNA\nNA\nNA\nNA\nNA\nNA\n98.48690\n\n\nTunisia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n35.76757\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n48.24096\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n65.34786\nNA\nNA\n68.50938\n70.96418\nNA\n71.08821\nNA\n\n\nTurkey\n45.098921\nNA\nNA\nNA\nNA\n49.80641\nNA\nNA\nNA\nNA\n64.23172\nNA\nNA\nNA\nNA\n68.51966\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n79.58169\n80.54895\n80.38516\n81.26383\nNA\n85.34716\n88.07317\n90.31010\n\n\nTurkmenistan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.26177\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.49422\n\n\nTurks and Caicos Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nTuvalu\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nUganda\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n44.826692\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n58.90988\nNA\nNA\nNA\n62.07897\nNA\nNA\nNA\n64.59145\nNA\n\n\nUkraine\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.171572\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.66040\n\n\nUnited Arab Emirates\n38.124870\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n68.66128\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.47475\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nUnited Kingdom\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nUnited States\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nUruguay\n94.304522\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.88154\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.27096\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.08436\n98.24193\n98.46366\n98.60602\n98.49095\nNA\n\n\nUzbekistan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.13858\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.23196\n\n\nVanuatu\nNA\nNA\nNA\nNA\n47.782592\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n65.45371\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n76.04636\nNA\nNA\nNA\nNA\nNA\nNA\n81.55354\n\n\nVenezuela\nNA\nNA\nNA\nNA\nNA\nNA\n83.004664\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n89.00485\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.715979\nNA\nNA\nNA\nNA\nNA\n94.92964\nNA\n95.35040\nNA\nNA\n\n\nWest Bank and Gaza\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n79.72662\nNA\nNA\nNA\nNA\nNA\nNA\n87.95174\nNA\n89.75692\n90.46518\n90.90285\n91.70453\n92.17280\n92.61618\n\n\nVietnam\nNA\nNA\nNA\nNA\n78.140390\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n82.82939\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.92008\n86.61011\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.38346\n\n\nYemen, Rep.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n17.05956\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n35.48549\nNA\nNA\nNA\nNA\nNA\nNA\n48.53905\n\n\nZambia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n57.35772\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n59.80285\nNA\nNA\n61.83928\nNA\nNA\nNA\nNA\n51.78697\nNA\nNA\nNA\nNA\n\n\nZimbabwe\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n71.85393\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n78.51702\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.06566\n\n\nAbkhazia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAkrotiri and Dhekelia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAmerican Samoa\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nChannel Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nChristmas Island\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCocos Island\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCzechoslovakia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nEast Germany\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nEritrea and Ethiopia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFaeroe Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFalkland Islands (Malvinas)\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFrench Guiana\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFrench Polynesia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGreenland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGuadeloupe\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGuam\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGuernsey\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nIsle of Man\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nJersey\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nKorea, United\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nKosovo\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMartinique\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMayotte\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNew Caledonia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNgorno-Karabakh\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNorfolk Island\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNorthern Cyprus\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNorthern Mariana Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPitcairn\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nReunion\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSaint Barthélemy\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSaint Helena\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSaint Martin\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSaint-Pierre-et-Miquelon\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSerbia and Montenegro\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSerbia excluding Kosovo\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSomaliland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSouth Ossetia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSouth Sudan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSvalbard\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nTaiwan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nTransnistria\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nUSSR\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nWallis et Futuna\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nWest Germany\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nWestern Sahara\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nVirgin Islands (U.S.)\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nYemen Arab Republic (Former)\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nYemen Democratic (Former)\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nYugoslavia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nÅland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#pivot_longer-1",
    "href": "slides/2025-02-10-pivotjoin.html#pivot_longer-1",
    "title": "Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\n\nlitF &lt;- litF |&gt; \n  select(country = starts_with(\"Adult\"), everything()) |&gt; \n  pivot_longer(cols = -country,\n               names_to = \"year\", \n               values_to = \"litRateF\") |&gt; \n  filter(!is.na(litRateF))\n\nlitF |&gt; \n  gt::gt()\n\n\n\n\n\n\n\ncountry\nyear\nlitRateF\n\n\n\n\nAfghanistan\n1979\n4.987460\n\n\nAfghanistan\n2011\n13.000000\n\n\nAlbania\n2001\n98.252274\n\n\nAlbania\n2008\n94.681814\n\n\nAlbania\n2011\n95.691480\n\n\nAlgeria\n1987\n35.839915\n\n\nAlgeria\n2002\n60.075082\n\n\nAlgeria\n2006\n63.918785\n\n\nAngola\n2001\n54.194488\n\n\nAngola\n2011\n58.608460\n\n\nAnguilla\n1984\n95.714930\n\n\nAntigua and Barbuda\n2001\n99.420000\n\n\nAntigua and Barbuda\n2011\n99.420000\n\n\nArgentina\n1980\n93.580894\n\n\nArgentina\n1991\n96.041358\n\n\nArgentina\n2001\n97.193411\n\n\nArgentina\n2011\n97.890420\n\n\nArmenia\n1989\n98.150136\n\n\nArmenia\n2001\n99.161066\n\n\nArmenia\n2011\n99.453760\n\n\nAruba\n2000\n97.071360\n\n\nAruba\n2010\n96.719777\n\n\nAzerbaijan\n1999\n98.174785\n\n\nAzerbaijan\n2007\n99.397876\n\n\nAzerbaijan\n2009\n99.682152\n\n\nBahrain\n1981\n58.591092\n\n\nBahrain\n1991\n76.932319\n\n\nBahrain\n2001\n83.557418\n\n\nBahrain\n2010\n91.612576\n\n\nBangladesh\n1981\n17.971629\n\n\nBangladesh\n1991\n25.838980\n\n\nBangladesh\n2001\n40.823350\n\n\nBangladesh\n2011\n53.410500\n\n\nBelarus\n1989\n96.628221\n\n\nBelarus\n1999\n99.419719\n\n\nBelarus\n2009\n99.493993\n\n\nBelize\n1991\n70.328394\n\n\nBenin\n1979\n9.539080\n\n\nBenin\n1992\n16.565239\n\n\nBenin\n2002\n23.300138\n\n\nBenin\n2006\n18.442914\n\n\nBhutan\n2005\n38.680657\n\n\nBolivia\n1976\n51.374645\n\n\nBolivia\n1992\n72.313217\n\n\nBolivia\n2001\n80.654383\n\n\nBolivia\n2007\n85.985939\n\n\nBolivia\n2008\n86.831754\n\n\nBolivia\n2009\n86.821457\n\n\nBosnia and Herzegovina\n2000\n94.359945\n\n\nBosnia and Herzegovina\n2011\n96.695260\n\n\nBotswana\n1991\n71.299236\n\n\nBotswana\n2003\n81.807948\n\n\nBotswana\n2011\n85.561560\n\n\nBrazil\n1980\n72.853148\n\n\nBrazil\n2000\n86.500048\n\n\nBrazil\n2004\n88.806127\n\n\nBrazil\n2006\n89.855592\n\n\nBrazil\n2007\n90.228007\n\n\nBrazil\n2008\n90.219555\n\n\nBrazil\n2009\n90.411217\n\n\nBrazil\n2010\n90.681695\n\n\nBrunei\n1981\n68.982584\n\n\nBrunei\n1991\n82.461356\n\n\nBrunei\n2001\n90.161545\n\n\nBrunei\n2011\n93.920810\n\n\nBulgaria\n2001\n97.706486\n\n\nBulgaria\n2011\n97.983897\n\n\nBurkina Faso\n1975\n3.182766\n\n\nBurkina Faso\n1991\n8.225427\n\n\nBurkina Faso\n1996\n8.057980\n\n\nBurkina Faso\n2003\n15.188768\n\n\nBurkina Faso\n2005\n16.622242\n\n\nBurkina Faso\n2007\n21.579565\n\n\nBurundi\n1979\n11.983568\n\n\nBurundi\n1990\n27.529298\n\n\nBurundi\n2000\n52.237762\n\n\nBurundi\n2008\n84.591468\n\n\nCambodia\n1998\n56.992504\n\n\nCambodia\n2004\n64.050990\n\n\nCambodia\n2008\n70.858199\n\n\nCambodia\n2009\n65.931248\n\n\nCameroon\n1976\n29.116129\n\n\nCameroon\n2000\n58.721762\n\n\nCameroon\n2007\n63.022058\n\n\nCameroon\n2010\n64.799498\n\n\nCape Verde\n1990\n52.998616\n\n\nCape Verde\n2004\n74.069260\n\n\nCape Verde\n2011\n80.258240\n\n\nCayman Islands\n2007\n99.021477\n\n\nCentral African Rep.\n1975\n8.399576\n\n\nCentral African Rep.\n1988\n20.336880\n\n\nCentral African Rep.\n2000\n35.290904\n\n\nCentral African Rep.\n2011\n44.177470\n\n\nChad\n1993\n4.591826\n\n\nChad\n2000\n12.796419\n\n\nChad\n2004\n17.980583\n\n\nChad\n2011\n25.398260\n\n\nChile\n1982\n90.800121\n\n\nChile\n1992\n94.036714\n\n\nChile\n2002\n95.640927\n\n\nChile\n2008\n98.695573\n\n\nChile\n2009\n98.491277\n\n\nChina\n1982\n51.136808\n\n\nChina\n1990\n68.072077\n\n\nChina\n2000\n86.526595\n\n\nChina\n2010\n92.711235\n\n\nColombia\n1993\n81.235482\n\n\nColombia\n1996\n91.314000\n\n\nColombia\n2004\n92.714627\n\n\nColombia\n2005\n92.911248\n\n\nColombia\n2006\n92.220596\n\n\nColombia\n2007\n92.845624\n\n\nColombia\n2008\n93.435373\n\n\nColombia\n2009\n93.415130\n\n\nColombia\n2010\n93.486789\n\n\nColombia\n2011\n93.667138\n\n\nComoros\n1980\n40.317616\n\n\nComoros\n2000\n63.459016\n\n\nComoros\n2011\n70.570020\n\n\nCongo, Dem. Rep.\n2001\n54.060896\n\n\nCongo, Dem. Rep.\n2007\n46.104254\n\n\nCosta Rica\n1984\n92.577129\n\n\nCosta Rica\n2000\n95.080791\n\n\nCosta Rica\n2011\n96.478860\n\n\nCote d'Ivoire\n1988\n23.433782\n\n\nCote d'Ivoire\n1998\n28.476671\n\n\nCote d'Ivoire\n2000\n38.614513\n\n\nCote d'Ivoire\n2011\n47.583590\n\n\nCroatia\n1991\n94.817222\n\n\nCroatia\n2001\n97.083898\n\n\nCroatia\n2011\n98.311050\n\n\nCuba\n2002\n99.790922\n\n\nCuba\n2011\n99.826790\n\n\nCyprus\n1992\n91.001781\n\n\nCyprus\n2001\n95.079665\n\n\nCyprus\n2011\n98.116229\n\n\nDominican Rep.\n1981\n72.536085\n\n\nDominican Rep.\n2002\n87.177093\n\n\nDominican Rep.\n2007\n88.277171\n\n\nDominican Rep.\n2010\n89.697297\n\n\nDominican Rep.\n2011\n90.225520\n\n\nEcuador\n1982\n80.405227\n\n\nEcuador\n1990\n86.193333\n\n\nEcuador\n2001\n89.697087\n\n\nEcuador\n2007\n81.680587\n\n\nEcuador\n2009\n81.451195\n\n\nEcuador\n2010\n90.470106\n\n\nEcuador\n2011\n90.220825\n\n\nEgypt\n1976\n22.438008\n\n\nEgypt\n1986\n31.404191\n\n\nEgypt\n1996\n43.595306\n\n\nEgypt\n2005\n59.355576\n\n\nEgypt\n2006\n57.811914\n\n\nEgypt\n2010\n63.515813\n\n\nEgypt\n2011\n64.636235\n\n\nEl Salvador\n1992\n71.280532\n\n\nEl Salvador\n2004\n78.358650\n\n\nEl Salvador\n2006\n81.003825\n\n\nEl Salvador\n2007\n79.662128\n\n\nEl Salvador\n2008\n81.359502\n\n\nEl Salvador\n2009\n81.817946\n\n\nEl Salvador\n2010\n82.308023\n\n\nEquatorial Guinea\n2000\n81.622999\n\n\nEquatorial Guinea\n2011\n91.078680\n\n\nEritrea\n2002\n40.224423\n\n\nEritrea\n2011\n59.039920\n\n\nEstonia\n1989\n99.601483\n\n\nEstonia\n2000\n99.760061\n\n\nEstonia\n2011\n99.819710\n\n\nEthiopia\n1994\n18.514981\n\n\nEthiopia\n2004\n22.800000\n\n\nEthiopia\n2005\n17.977197\n\n\nEthiopia\n2007\n28.921636\n\n\nGabon\n1993\n65.326310\n\n\nGabon\n2004\n79.309270\n\n\nGabon\n2011\n85.638330\n\n\nGambia\n2000\n25.061546\n\n\nGambia\n2011\n41.887120\n\n\nGeorgia\n2002\n99.552854\n\n\nGeorgia\n2011\n99.686130\n\n\nGhana\n2000\n49.791962\n\n\nGhana\n2010\n65.294686\n\n\nGreece\n1981\n85.319987\n\n\nGreece\n1991\n89.353296\n\n\nGreece\n2001\n94.239412\n\n\nGreece\n2011\n96.278980\n\n\nGuatemala\n1994\n57.292661\n\n\nGuatemala\n2002\n63.341381\n\n\nGuatemala\n2011\n71.080820\n\n\nGuinea\n1996\n9.743070\n\n\nGuinea\n2003\n18.238683\n\n\nGuinea\n2010\n12.191970\n\n\nGuinea-Bissau\n1979\n8.588262\n\n\nGuinea-Bissau\n2000\n27.494212\n\n\nGuinea-Bissau\n2011\n42.067040\n\n\nGuyana\n2009\n87.251977\n\n\nHaiti\n1982\n32.524956\n\n\nHaiti\n2003\n54.861468\n\n\nHaiti\n2006\n44.599454\n\n\nHonduras\n2001\n80.223602\n\n\nHonduras\n2007\n83.452774\n\n\nHonduras\n2010\n84.725034\n\n\nHonduras\n2011\n84.930350\n\n\nHungary\n1980\n98.454130\n\n\nHungary\n1994\n98.713100\n\n\nHungary\n2004\n98.854110\n\n\nHungary\n2011\n98.938700\n\n\nIndia\n1981\n25.676252\n\n\nIndia\n1991\n33.729527\n\n\nIndia\n2001\n47.842099\n\n\nIndia\n2006\n50.823756\n\n\nIndonesia\n1980\n57.694628\n\n\nIndonesia\n1990\n75.270119\n\n\nIndonesia\n2004\n86.799589\n\n\nIndonesia\n2006\n88.786984\n\n\nIndonesia\n2008\n89.101391\n\n\nIndonesia\n2009\n89.677117\n\n\nIndonesia\n2011\n90.068697\n\n\nIran\n1976\n24.423083\n\n\nIran\n1986\n41.033950\n\n\nIran\n1991\n56.156417\n\n\nIran\n1996\n66.067764\n\n\nIran\n2002\n70.400000\n\n\nIran\n2005\n76.802638\n\n\nIran\n2006\n77.240018\n\n\nIran\n2008\n80.655322\n\n\nIraq\n2000\n64.169502\n\n\nIraq\n2011\n71.207160\n\n\nIsrael\n1983\n88.674717\n\n\nItaly\n1981\n95.536669\n\n\nItaly\n2001\n98.042153\n\n\nItaly\n2011\n98.741610\n\n\nJamaica\n1999\n85.872082\n\n\nJamaica\n2011\n91.765530\n\n\nJordan\n1979\n52.110613\n\n\nJordan\n2003\n84.713925\n\n\nJordan\n2005\n87.005809\n\n\nJordan\n2007\n88.903312\n\n\nJordan\n2010\n89.207744\n\n\nJordan\n2011\n93.933457\n\n\nKazakhstan\n1989\n96.138771\n\n\nKazakhstan\n1999\n99.289895\n\n\nKazakhstan\n2009\n99.684290\n\n\nKenya\n2000\n77.892980\n\n\nKenya\n2007\n66.863118\n\n\nKorea, Dem. Rep.\n2008\n99.997615\n\n\nKuwait\n1975\n48.015214\n\n\nKuwait\n1980\n59.110502\n\n\nKuwait\n1985\n68.849366\n\n\nKuwait\n1995\n74.148717\n\n\nKuwait\n2005\n91.042500\n\n\nKuwait\n2006\n90.828634\n\n\nKuwait\n2007\n91.503495\n\n\nKuwait\n2008\n91.793021\n\n\nKyrgyzstan\n1999\n98.130627\n\n\nKyrgyzstan\n2009\n98.981213\n\n\nLaos\n1995\n47.902362\n\n\nLaos\n2000\n58.460699\n\n\nLaos\n2001\n60.902520\n\n\nLaos\n2005\n63.226986\n\n\nLatvia\n1989\n99.202551\n\n\nLatvia\n2000\n99.709731\n\n\nLatvia\n2011\n99.797280\n\n\nLebanon\n2007\n85.967782\n\n\nLesotho\n2000\n92.046453\n\n\nLesotho\n2009\n84.963959\n\n\nLiberia\n1984\n19.302791\n\n\nLiberia\n1994\n32.018520\n\n\nLiberia\n2004\n47.876330\n\n\nLiberia\n2007\n27.034907\n\n\nLibya\n1984\n42.313554\n\n\nLibya\n1994\n64.959310\n\n\nLibya\n2004\n78.197820\n\n\nLibya\n2011\n83.323030\n\n\nLithuania\n1989\n97.781588\n\n\nLithuania\n2001\n99.647943\n\n\nLithuania\n2011\n99.720630\n\n\nMacao, China\n1981\n86.215884\n\n\nMacao, China\n2001\n87.774972\n\n\nMacao, China\n2006\n90.723589\n\n\nMacao, China\n2011\n93.731906\n\n\nMacedonia, FYR\n1994\n90.928024\n\n\nMacedonia, FYR\n2002\n94.056068\n\n\nMacedonia, FYR\n2011\n96.042520\n\n\nMadagascar\n2000\n65.278572\n\n\nMadagascar\n2009\n61.641406\n\n\nMalawi\n1987\n33.523022\n\n\nMalawi\n1998\n53.997116\n\n\nMalawi\n2010\n51.251965\n\n\nMalaysia\n1980\n61.248496\n\n\nMalaysia\n1991\n77.283088\n\n\nMalaysia\n2000\n85.354224\n\n\nMalaysia\n2010\n90.747682\n\n\nMaldives\n1977\n82.178163\n\n\nMaldives\n1985\n92.359012\n\n\nMaldives\n1990\n96.146011\n\n\nMaldives\n1995\n96.442981\n\n\nMaldives\n2000\n96.442981\n\n\nMaldives\n2006\n98.429847\n\n\nMali\n1976\n5.735281\n\n\nMali\n1998\n11.893428\n\n\nMali\n2003\n15.900000\n\n\nMali\n2006\n18.190913\n\n\nMali\n2010\n20.287932\n\n\nMali\n2011\n24.567414\n\n\nMalta\n1985\n88.292746\n\n\nMalta\n1995\n89.242644\n\n\nMalta\n2005\n93.504251\n\n\nMauritania\n2000\n43.417359\n\n\nMauritania\n2011\n51.977670\n\n\nMauritius\n1990\n74.660887\n\n\nMauritius\n2000\n80.500029\n\n\nMauritius\n2011\n86.664070\n\n\nMexico\n1980\n79.890999\n\n\nMexico\n1990\n84.955907\n\n\nMexico\n2000\n88.682040\n\n\nMexico\n2002\n88.728630\n\n\nMexico\n2004\n89.631020\n\n\nMexico\n2005\n90.210413\n\n\nMexico\n2006\n89.834511\n\n\nMexico\n2007\n91.355551\n\n\nMexico\n2008\n91.453608\n\n\nMexico\n2009\n92.116246\n\n\nMexico\n2010\n91.853422\n\n\nMexico\n2011\n92.338282\n\n\nMoldova\n1989\n94.444478\n\n\nMoldova\n2000\n95.492298\n\n\nMoldova\n2011\n98.482890\n\n\nMongolia\n2000\n97.528800\n\n\nMongolia\n2011\n97.877140\n\n\nMontenegro\n2011\n97.589140\n\n\nMorocco\n1982\n17.514867\n\n\nMorocco\n1994\n28.725419\n\n\nMorocco\n2004\n39.619556\n\n\nMorocco\n2008\n42.587848\n\n\nMorocco\n2009\n43.921080\n\n\nMorocco\n2011\n57.639991\n\n\nMozambique\n1980\n12.146315\n\n\nMozambique\n1997\n24.964204\n\n\nMozambique\n2003\n33.193959\n\n\nMozambique\n2009\n36.452282\n\n\nMyanmar\n1983\n71.630874\n\n\nMyanmar\n2000\n86.415182\n\n\nMyanmar\n2011\n90.370640\n\n\nNamibia\n1991\n73.986597\n\n\nNamibia\n2001\n83.490088\n\n\nNamibia\n2007\n78.350978\n\n\nNepal\n1981\n9.153116\n\n\nNepal\n1991\n17.381793\n\n\nNepal\n2001\n34.886764\n\n\nNepal\n2011\n46.706098\n\n\nNetherlands Antilles\n1992\n95.010912\n\n\nNetherlands Antilles\n2011\n96.533810\n\n\nNicaragua\n2001\n76.601656\n\n\nNicaragua\n2005\n77.916042\n\n\nNiger\n2001\n9.398724\n\n\nNiger\n2005\n15.084138\n\n\nNigeria\n1991\n43.729197\n\n\nNigeria\n2003\n43.322054\n\n\nNigeria\n2008\n41.386756\n\n\nOman\n2003\n73.531714\n\n\nOman\n2008\n80.872258\n\n\nOman\n2010\n81.803227\n\n\nPakistan\n1981\n14.771552\n\n\nPakistan\n1998\n29.043839\n\n\nPakistan\n2005\n35.367520\n\n\nPakistan\n2006\n39.613234\n\n\nPakistan\n2008\n40.081179\n\n\nPakistan\n2009\n40.314619\n\n\nPalau\n1980\n90.503238\n\n\nPanama\n1980\n88.046528\n\n\nPanama\n1990\n88.214846\n\n\nPanama\n2000\n91.247179\n\n\nPanama\n2010\n93.485262\n\n\nPapua New Guinea\n2000\n50.917736\n\n\nPapua New Guinea\n2011\n59.401460\n\n\nParaguay\n1982\n75.852982\n\n\nParaguay\n1992\n88.558712\n\n\nParaguay\n2007\n93.453270\n\n\nParaguay\n2008\n92.494428\n\n\nParaguay\n2009\n93.144014\n\n\nParaguay\n2010\n92.925745\n\n\nPeru\n1981\n73.858337\n\n\nPeru\n1993\n81.658753\n\n\nPeru\n2004\n82.062620\n\n\nPeru\n2005\n82.454367\n\n\nPeru\n2006\n83.454865\n\n\nPeru\n2007\n84.646878\n\n\nPhilippines\n1980\n82.762148\n\n\nPhilippines\n1990\n93.180725\n\n\nPhilippines\n2000\n92.654907\n\n\nPhilippines\n2003\n93.564533\n\n\nPhilippines\n2008\n95.825633\n\n\nPoland\n1978\n98.251980\n\n\nPoland\n1994\n99.118490\n\n\nPoland\n2004\n99.422290\n\n\nPoland\n2011\n99.584860\n\n\nPortugal\n1981\n74.607990\n\n\nPortugal\n1991\n84.658214\n\n\nPortugal\n2011\n93.957120\n\n\nPuerto Rico\n1980\n85.850339\n\n\nPuerto Rico\n1990\n89.730961\n\n\nPuerto Rico\n2004\n90.957980\n\n\nPuerto Rico\n2011\n90.913960\n\n\nQatar\n1986\n72.458947\n\n\nQatar\n1997\n80.888683\n\n\nQatar\n2004\n88.609219\n\n\nQatar\n2007\n90.436121\n\n\nQatar\n2008\n92.663825\n\n\nQatar\n2009\n92.910178\n\n\nQatar\n2010\n95.401856\n\n\nRomania\n1992\n94.982691\n\n\nRomania\n2002\n96.266316\n\n\nRomania\n2011\n97.145310\n\n\nRussia\n1989\n96.758170\n\n\nRussia\n2002\n99.228357\n\n\nRussia\n2010\n99.647776\n\n\nRwanda\n1978\n26.573577\n\n\nRwanda\n2000\n59.750337\n\n\nRwanda\n2010\n61.548613\n\n\nSamoa\n1991\n97.421739\n\n\nSamoa\n2004\n98.246410\n\n\nSamoa\n2011\n98.617210\n\n\nSao Tome and Principe\n1981\n42.363383\n\n\nSao Tome and Principe\n1991\n61.920478\n\n\nSao Tome and Principe\n2001\n77.949235\n\n\nSao Tome and Principe\n2008\n60.083026\n\n\nSaudi Arabia\n1992\n57.277841\n\n\nSaudi Arabia\n2000\n69.291193\n\n\nSaudi Arabia\n2004\n76.335155\n\n\nSaudi Arabia\n2011\n82.236730\n\n\nSenegal\n1988\n17.863266\n\n\nSenegal\n2002\n29.247343\n\n\nSenegal\n2006\n32.987585\n\n\nSenegal\n2009\n38.666249\n\n\nSerbia\n2011\n96.870490\n\n\nSeychelles\n1987\n85.489304\n\n\nSeychelles\n1994\n88.586598\n\n\nSeychelles\n2002\n92.258980\n\n\nSeychelles\n2011\n92.258980\n\n\nSierra Leone\n2004\n24.158927\n\n\nSierra Leone\n2011\n32.628910\n\n\nSingapore\n1980\n73.968537\n\n\nSingapore\n1990\n83.026848\n\n\nSingapore\n2000\n88.645175\n\n\nSingapore\n2010\n93.774814\n\n\nSlovenia\n1991\n99.453752\n\n\nSlovenia\n2004\n99.615970\n\n\nSlovenia\n2011\n99.671430\n\n\nSouth Africa\n1980\n74.807189\n\n\nSouth Africa\n1996\n80.928629\n\n\nSouth Africa\n2007\n87.043102\n\n\nSouth Africa\n2011\n92.183714\n\n\nSpain\n1981\n89.936922\n\n\nSpain\n1991\n95.050996\n\n\nSpain\n2005\n96.925155\n\n\nSpain\n2007\n97.260323\n\n\nSpain\n2008\n96.886839\n\n\nSpain\n2009\n96.925968\n\n\nSpain\n2010\n97.004504\n\n\nSri Lanka\n1981\n82.021974\n\n\nSri Lanka\n2001\n89.135764\n\n\nSri Lanka\n2006\n89.091352\n\n\nSri Lanka\n2008\n89.073472\n\n\nSri Lanka\n2010\n89.958678\n\n\nSudan\n2000\n52.146397\n\n\nSudan\n2011\n63.160230\n\n\nSuriname\n2004\n87.197436\n\n\nSuriname\n2008\n93.765371\n\n\nSuriname\n2010\n94.003541\n\n\nSwaziland\n1976\n53.665959\n\n\nSwaziland\n1986\n65.222882\n\n\nSwaziland\n2000\n80.328752\n\n\nSwaziland\n2011\n87.327460\n\n\nSyria\n1981\n37.059159\n\n\nSyria\n2002\n74.240440\n\n\nSyria\n2004\n73.626561\n\n\nSyria\n2011\n77.749850\n\n\nTajikistan\n1989\n96.641803\n\n\nTajikistan\n2000\n99.221736\n\n\nTajikistan\n2011\n99.615330\n\n\nTanzania\n1988\n48.088024\n\n\nTanzania\n2002\n62.172318\n\n\nTanzania\n2010\n60.752618\n\n\nThailand\n1980\n83.893354\n\n\nThailand\n2000\n90.516017\n\n\nThailand\n2005\n91.529549\n\n\nTimor-Leste\n2001\n30.000000\n\n\nTimor-Leste\n2007\n42.500000\n\n\nTimor-Leste\n2010\n52.959000\n\n\nTogo\n2000\n38.453292\n\n\nTogo\n2006\n44.376626\n\n\nTogo\n2009\n43.606898\n\n\nTogo\n2011\n47.977387\n\n\nTonga\n1976\n99.525535\n\n\nTonga\n1996\n98.975550\n\n\nTonga\n2006\n99.082511\n\n\nTrinidad and Tobago\n1980\n93.464165\n\n\nTrinidad and Tobago\n1990\n95.661794\n\n\nTrinidad and Tobago\n2004\n97.810300\n\n\nTrinidad and Tobago\n2011\n98.486900\n\n\nTunisia\n1984\n35.767567\n\n\nTunisia\n1994\n48.240960\n\n\nTunisia\n2004\n65.347859\n\n\nTunisia\n2007\n68.509379\n\n\nTunisia\n2008\n70.964177\n\n\nTunisia\n2010\n71.088212\n\n\nTurkey\n1975\n45.098921\n\n\nTurkey\n1980\n49.806407\n\n\nTurkey\n1985\n64.231724\n\n\nTurkey\n1990\n68.519655\n\n\nTurkey\n2004\n79.581693\n\n\nTurkey\n2005\n80.548953\n\n\nTurkey\n2006\n80.385161\n\n\nTurkey\n2007\n81.263827\n\n\nTurkey\n2009\n85.347157\n\n\nTurkey\n2010\n88.073171\n\n\nTurkey\n2011\n90.310105\n\n\nTurkmenistan\n1995\n98.261765\n\n\nTurkmenistan\n2011\n99.494220\n\n\nUganda\n1991\n44.826692\n\n\nUganda\n2002\n58.909883\n\n\nUganda\n2006\n62.078969\n\n\nUganda\n2010\n64.591451\n\n\nUkraine\n2001\n99.171572\n\n\nUkraine\n2011\n99.660400\n\n\nUnited Arab Emirates\n1975\n38.124870\n\n\nUnited Arab Emirates\n1985\n68.661283\n\n\nUnited Arab Emirates\n2005\n91.474749\n\n\nUruguay\n1975\n94.304522\n\n\nUruguay\n1985\n95.881538\n\n\nUruguay\n1996\n97.270960\n\n\nUruguay\n2006\n98.084359\n\n\nUruguay\n2007\n98.241933\n\n\nUruguay\n2008\n98.463660\n\n\nUruguay\n2009\n98.606016\n\n\nUruguay\n2010\n98.490953\n\n\nUzbekistan\n2000\n98.138584\n\n\nUzbekistan\n2011\n99.231960\n\n\nVanuatu\n1979\n47.782592\n\n\nVanuatu\n1994\n65.453710\n\n\nVanuatu\n2004\n76.046360\n\n\nVanuatu\n2011\n81.553540\n\n\nVenezuela\n1981\n83.004664\n\n\nVenezuela\n1990\n89.004855\n\n\nVenezuela\n2001\n92.715979\n\n\nVenezuela\n2007\n94.929643\n\n\nVenezuela\n2009\n95.350398\n\n\nWest Bank and Gaza\n1997\n79.726622\n\n\nWest Bank and Gaza\n2004\n87.951736\n\n\nWest Bank and Gaza\n2006\n89.756918\n\n\nWest Bank and Gaza\n2007\n90.465184\n\n\nWest Bank and Gaza\n2008\n90.902854\n\n\nWest Bank and Gaza\n2009\n91.704532\n\n\nWest Bank and Gaza\n2010\n92.172796\n\n\nWest Bank and Gaza\n2011\n92.616180\n\n\nVietnam\n1979\n78.140390\n\n\nVietnam\n1989\n82.829392\n\n\nVietnam\n1999\n86.920080\n\n\nVietnam\n2000\n86.610113\n\n\nVietnam\n2011\n91.383460\n\n\nYemen, Rep.\n1994\n17.059565\n\n\nYemen, Rep.\n2004\n35.485490\n\n\nYemen, Rep.\n2011\n48.539050\n\n\nZambia\n1990\n57.357722\n\n\nZambia\n1999\n59.802846\n\n\nZambia\n2002\n61.839278\n\n\nZambia\n2007\n51.786967\n\n\nZimbabwe\n1982\n71.853928\n\n\nZimbabwe\n1992\n78.517018\n\n\nZimbabwe\n2011\n80.065659"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#pivot_longer-2",
    "href": "slides/2025-02-10-pivotjoin.html#pivot_longer-2",
    "title": "Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\nGDP represents country, year, and gdp (in fixed 2000 US$).\n\nGDP &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1RctTQmKB0hzbm1E8rGcufYdMshRdhmYdeL29nXqmvsc/pub?gid=0\")\n\nGDP &lt;- GDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n  pivot_longer(cols = -country, \n               names_to = \"year\",\n               values_to = \"gdp\") |&gt; \n  filter(!is.na(gdp))\n\nGDP |&gt; \n  gt::gt()\n\n\n\n\n\n\n\ncountry\nyear\ngdp\n\n\n\n\nAlbania\n1980\n1060.68460\n\n\nAlbania\n1981\n1099.51270\n\n\nAlbania\n1982\n1110.51226\n\n\nAlbania\n1983\n1101.33565\n\n\nAlbania\n1984\n1065.23535\n\n\nAlbania\n1985\n1059.86574\n\n\nAlbania\n1986\n1091.56056\n\n\nAlbania\n1987\n1054.24780\n\n\nAlbania\n1988\n1013.62901\n\n\nAlbania\n1989\n1092.47457\n\n\nAlbania\n1990\n977.76553\n\n\nAlbania\n1991\n687.99187\n\n\nAlbania\n1992\n643.28585\n\n\nAlbania\n1993\n714.24143\n\n\nAlbania\n1994\n784.58315\n\n\nAlbania\n1995\n899.78294\n\n\nAlbania\n1996\n990.65320\n\n\nAlbania\n1997\n895.56097\n\n\nAlbania\n1998\n1013.51432\n\n\nAlbania\n1999\n1118.17151\n\n\nAlbania\n2000\n1200.13744\n\n\nAlbania\n2001\n1281.84280\n\n\nAlbania\n2002\n1313.72273\n\n\nAlbania\n2003\n1381.04083\n\n\nAlbania\n2004\n1454.02285\n\n\nAlbania\n2005\n1525.72359\n\n\nAlbania\n2006\n1594.49507\n\n\nAlbania\n2007\n1681.61391\n\n\nAlbania\n2008\n1804.41942\n\n\nAlbania\n2009\n1857.35295\n\n\nAlbania\n2010\n1915.42446\n\n\nAlbania\n2011\n1965.70723\n\n\nAlgeria\n1960\n1280.38483\n\n\nAlgeria\n1961\n1085.41461\n\n\nAlgeria\n1962\n855.94799\n\n\nAlgeria\n1963\n1128.41578\n\n\nAlgeria\n1964\n1170.32390\n\n\nAlgeria\n1965\n1215.01578\n\n\nAlgeria\n1966\n1127.61429\n\n\nAlgeria\n1967\n1200.55822\n\n\nAlgeria\n1968\n1291.86398\n\n\nAlgeria\n1969\n1359.49100\n\n\nAlgeria\n1970\n1436.12977\n\n\nAlgeria\n1971\n1235.66380\n\n\nAlgeria\n1972\n1527.64637\n\n\nAlgeria\n1973\n1538.30643\n\n\nAlgeria\n1974\n1603.34962\n\n\nAlgeria\n1975\n1632.29602\n\n\nAlgeria\n1976\n1714.07005\n\n\nAlgeria\n1977\n1747.66513\n\n\nAlgeria\n1978\n1848.43751\n\n\nAlgeria\n1979\n1923.29062\n\n\nAlgeria\n1980\n1876.07564\n\n\nAlgeria\n1981\n1869.62128\n\n\nAlgeria\n1982\n1924.61409\n\n\nAlgeria\n1983\n1963.36510\n\n\nAlgeria\n1984\n2008.47218\n\n\nAlgeria\n1985\n2020.08722\n\n\nAlgeria\n1986\n1969.76422\n\n\nAlgeria\n1987\n1902.06110\n\n\nAlgeria\n1988\n1833.15288\n\n\nAlgeria\n1989\n1864.71258\n\n\nAlgeria\n1990\n1832.74337\n\n\nAlgeria\n1991\n1766.66084\n\n\nAlgeria\n1992\n1755.97370\n\n\nAlgeria\n1993\n1680.37986\n\n\nAlgeria\n1994\n1630.38151\n\n\nAlgeria\n1995\n1660.00419\n\n\nAlgeria\n1996\n1698.33382\n\n\nAlgeria\n1997\n1690.23754\n\n\nAlgeria\n1998\n1750.65090\n\n\nAlgeria\n1999\n1781.14246\n\n\nAlgeria\n2000\n1794.40523\n\n\nAlgeria\n2001\n1814.41513\n\n\nAlgeria\n2002\n1871.92199\n\n\nAlgeria\n2003\n1971.51280\n\n\nAlgeria\n2004\n2043.13571\n\n\nAlgeria\n2005\n2115.18603\n\n\nAlgeria\n2006\n2124.95775\n\n\nAlgeria\n2007\n2155.48523\n\n\nAlgeria\n2008\n2173.78790\n\n\nAlgeria\n2009\n2192.70398\n\n\nAlgeria\n2010\n2231.98025\n\n\nAlgeria\n2011\n2255.22548\n\n\nAndorra\n1970\n18256.27007\n\n\nAndorra\n1971\n18142.98509\n\n\nAndorra\n1972\n18646.94486\n\n\nAndorra\n1973\n19135.29663\n\n\nAndorra\n1974\n19304.37348\n\n\nAndorra\n1975\n18607.40954\n\n\nAndorra\n1976\n18511.40113\n\n\nAndorra\n1977\n18394.46205\n\n\nAndorra\n1978\n18038.59978\n\n\nAndorra\n1979\n17379.32803\n\n\nAndorra\n1980\n17013.69849\n\n\nAndorra\n1981\n16169.02170\n\n\nAndorra\n1982\n15514.65763\n\n\nAndorra\n1983\n14976.59061\n\n\nAndorra\n1984\n14554.76284\n\n\nAndorra\n1985\n14354.90656\n\n\nAndorra\n1986\n14444.46206\n\n\nAndorra\n1987\n14983.63217\n\n\nAndorra\n1988\n15517.49469\n\n\nAndorra\n1989\n15947.49017\n\n\nAndorra\n1990\n16070.06577\n\n\nAndorra\n1991\n15813.10160\n\n\nAndorra\n1992\n15194.45922\n\n\nAndorra\n1993\n14318.18901\n\n\nAndorra\n1994\n14092.42408\n\n\nAndorra\n1995\n14125.59342\n\n\nAndorra\n1996\n14662.73640\n\n\nAndorra\n1997\n16071.64491\n\n\nAndorra\n1998\n16755.22069\n\n\nAndorra\n1999\n17513.17824\n\n\nAndorra\n2000\n17539.44200\n\n\nAndorra\n2001\n19085.36406\n\n\nAndorra\n2002\n19430.05478\n\n\nAndorra\n2003\n19834.63262\n\n\nAndorra\n2004\n20254.34629\n\n\nAndorra\n2005\n20737.94512\n\n\nAndorra\n2006\n21595.39548\n\n\nAndorra\n2007\n21495.80508\n\n\nAndorra\n2008\n21943.33990\n\n\nAngola\n1985\n362.47670\n\n\nAngola\n1986\n362.35414\n\n\nAngola\n1987\n381.15752\n\n\nAngola\n1988\n392.77281\n\n\nAngola\n1989\n384.42360\n\n\nAngola\n1990\n372.79451\n\n\nAngola\n1991\n357.31085\n\n\nAngola\n1992\n322.09297\n\n\nAngola\n1993\n234.66941\n\n\nAngola\n1994\n235.20500\n\n\nAngola\n1995\n251.89796\n\n\nAngola\n1996\n272.29119\n\n\nAngola\n1997\n286.00455\n\n\nAngola\n1998\n297.42128\n\n\nAngola\n1999\n298.57348\n\n\nAngola\n2000\n298.40584\n\n\nAngola\n2001\n297.90168\n\n\nAngola\n2002\n329.56559\n\n\nAngola\n2003\n328.77800\n\n\nAngola\n2004\n353.23147\n\n\nAngola\n2005\n404.27030\n\n\nAngola\n2006\n473.13634\n\n\nAngola\n2007\n562.98768\n\n\nAngola\n2008\n622.56688\n\n\nAngola\n2009\n619.81858\n\n\nAngola\n2010\n623.24527\n\n\nAngola\n2011\n629.95531\n\n\nAntigua and Barbuda\n1977\n3815.95369\n\n\nAntigua and Barbuda\n1978\n3962.54093\n\n\nAntigua and Barbuda\n1979\n4254.01537\n\n\nAntigua and Barbuda\n1980\n4639.18769\n\n\nAntigua and Barbuda\n1981\n4869.47943\n\n\nAntigua and Barbuda\n1982\n4936.89236\n\n\nAntigua and Barbuda\n1983\n5244.92903\n\n\nAntigua and Barbuda\n1984\n5850.65611\n\n\nAntigua and Barbuda\n1985\n6422.81186\n\n\nAntigua and Barbuda\n1986\n7360.34616\n\n\nAntigua and Barbuda\n1987\n8097.65208\n\n\nAntigua and Barbuda\n1988\n8651.25071\n\n\nAntigua and Barbuda\n1989\n9220.86108\n\n\nAntigua and Barbuda\n1990\n9454.02125\n\n\nAntigua and Barbuda\n1991\n9561.69317\n\n\nAntigua and Barbuda\n1992\n9484.40312\n\n\nAntigua and Barbuda\n1993\n9775.60140\n\n\nAntigua and Barbuda\n1994\n10136.69964\n\n\nAntigua and Barbuda\n1995\n9466.09534\n\n\nAntigua and Barbuda\n1996\n9844.76197\n\n\nAntigua and Barbuda\n1997\n10058.48732\n\n\nAntigua and Barbuda\n1998\n10237.41099\n\n\nAntigua and Barbuda\n1999\n9863.38799\n\n\nAntigua and Barbuda\n2000\n10143.36808\n\n\nAntigua and Barbuda\n2001\n9639.57767\n\n\nAntigua and Barbuda\n2002\n9753.30831\n\n\nAntigua and Barbuda\n2003\n10241.68484\n\n\nAntigua and Barbuda\n2004\n10599.28467\n\n\nAntigua and Barbuda\n2005\n11102.93216\n\n\nAntigua and Barbuda\n2006\n12452.28204\n\n\nAntigua and Barbuda\n2007\n13495.12747\n\n\nAntigua and Barbuda\n2008\n13352.16854\n\n\nAntigua and Barbuda\n2009\n11645.63491\n\n\nAntigua and Barbuda\n2010\n10614.79432\n\n\nAntigua and Barbuda\n2011\n9977.95707\n\n\nArgentina\n1960\n5251.87675\n\n\nArgentina\n1961\n5448.30363\n\n\nArgentina\n1962\n5316.57897\n\n\nArgentina\n1963\n4956.21652\n\n\nArgentina\n1964\n5375.46371\n\n\nArgentina\n1965\n5855.61156\n\n\nArgentina\n1966\n5733.31195\n\n\nArgentina\n1967\n5833.05231\n\n\nArgentina\n1968\n6028.12433\n\n\nArgentina\n1969\n6515.36426\n\n\nArgentina\n1970\n6611.23420\n\n\nArgentina\n1971\n6872.75834\n\n\nArgentina\n1972\n6867.51079\n\n\nArgentina\n1973\n6940.16863\n\n\nArgentina\n1974\n7200.90831\n\n\nArgentina\n1975\n7081.66069\n\n\nArgentina\n1976\n6830.30772\n\n\nArgentina\n1977\n7193.56503\n\n\nArgentina\n1978\n6767.81221\n\n\nArgentina\n1979\n7349.62394\n\n\nArgentina\n1980\n7540.68526\n\n\nArgentina\n1981\n7004.45874\n\n\nArgentina\n1982\n6556.34759\n\n\nArgentina\n1983\n6707.05686\n\n\nArgentina\n1984\n6751.82011\n\n\nArgentina\n1985\n6146.15545\n\n\nArgentina\n1986\n6531.92642\n\n\nArgentina\n1987\n6623.37451\n\n\nArgentina\n1988\n6360.58862\n\n\nArgentina\n1989\n5800.05698\n\n\nArgentina\n1990\n5581.96234\n\n\nArgentina\n1991\n6203.44566\n\n\nArgentina\n1992\n6851.75259\n\n\nArgentina\n1993\n7162.09342\n\n\nArgentina\n1994\n7483.56092\n\n\nArgentina\n1995\n7179.93883\n\n\nArgentina\n1996\n7484.00402\n\n\nArgentina\n1997\n7994.11555\n\n\nArgentina\n1998\n8205.47459\n\n\nArgentina\n1999\n7839.51494\n\n\nArgentina\n2000\n7695.59407\n\n\nArgentina\n2001\n7283.06292\n\n\nArgentina\n2002\n6428.39384\n\n\nArgentina\n2003\n6933.15559\n\n\nArgentina\n2004\n7492.24951\n\n\nArgentina\n2005\n8107.97536\n\n\nArgentina\n2006\n8717.17630\n\n\nArgentina\n2007\n9388.68852\n\n\nArgentina\n2008\n9935.83425\n\n\nArgentina\n2009\n9933.22902\n\n\nArgentina\n2010\n10749.31922\n\n\nArgentina\n2011\n11601.63022\n\n\nArmenia\n1990\n795.37891\n\n\nArmenia\n1991\n708.84754\n\n\nArmenia\n1992\n419.97658\n\n\nArmenia\n1993\n392.06086\n\n\nArmenia\n1994\n423.25774\n\n\nArmenia\n1995\n461.91936\n\n\nArmenia\n1996\n496.87291\n\n\nArmenia\n1997\n519.49089\n\n\nArmenia\n1998\n562.02761\n\n\nArmenia\n1999\n584.04544\n\n\nArmenia\n2000\n621.42483\n\n\nArmenia\n2001\n683.09678\n\n\nArmenia\n2002\n774.36998\n\n\nArmenia\n2003\n883.24570\n\n\nArmenia\n2004\n975.04682\n\n\nArmenia\n2005\n1109.03379\n\n\nArmenia\n2006\n1253.81330\n\n\nArmenia\n2007\n1424.19056\n\n\nArmenia\n2008\n1520.03393\n\n\nArmenia\n2009\n1302.45698\n\n\nArmenia\n2010\n1326.71086\n\n\nArmenia\n2011\n1384.08516\n\n\nAruba\n1987\n12995.83203\n\n\nAruba\n1988\n15394.32469\n\n\nAruba\n1989\n16791.73153\n\n\nAruba\n1990\n18467.96227\n\n\nAruba\n1991\n18465.43608\n\n\nAruba\n1992\n18178.83714\n\n\nAruba\n1993\n17789.11366\n\n\nAruba\n1994\n17827.54038\n\n\nAruba\n1995\n18952.47289\n\n\nAruba\n1996\n18550.77411\n\n\nAruba\n1997\n19503.05297\n\n\nAruba\n1998\n20408.19595\n\n\nAruba\n1999\n20269.25648\n\n\nAruba\n2000\n20589.77183\n\n\nAruba\n2001\n19983.97746\n\n\nAruba\n2002\n19009.17065\n\n\nAruba\n2003\n18853.12990\n\n\nAustralia\n1960\n9407.68508\n\n\nAustralia\n1961\n9451.54630\n\n\nAustralia\n1962\n9351.02327\n\n\nAustralia\n1963\n9749.12856\n\n\nAustralia\n1964\n10231.14447\n\n\nAustralia\n1965\n10633.09440\n\n\nAustralia\n1966\n10635.67791\n\n\nAustralia\n1967\n11165.70646\n\n\nAustralia\n1968\n11533.02832\n\n\nAustralia\n1969\n12091.75533\n\n\nAustralia\n1970\n12708.91935\n\n\nAustralia\n1971\n12777.83407\n\n\nAustralia\n1972\n13034.08135\n\n\nAustralia\n1973\n13176.58538\n\n\nAustralia\n1974\n13375.98120\n\n\nAustralia\n1975\n13375.55956\n\n\nAustralia\n1976\n13590.09440\n\n\nAustralia\n1977\n13918.04043\n\n\nAustralia\n1978\n13879.18525\n\n\nAustralia\n1979\n14297.38143\n\n\nAustralia\n1980\n14555.94770\n\n\nAustralia\n1981\n14814.07307\n\n\nAustralia\n1982\n15040.84822\n\n\nAustralia\n1983\n14510.14370\n\n\nAustralia\n1984\n15027.66949\n\n\nAustralia\n1985\n15574.44144\n\n\nAustralia\n1986\n16024.03402\n\n\nAustralia\n1987\n16195.46821\n\n\nAustralia\n1988\n16832.69865\n\n\nAustralia\n1989\n17199.91102\n\n\nAustralia\n1990\n17553.37684\n\n\nAustralia\n1991\n17270.32870\n\n\nAustralia\n1992\n17137.55850\n\n\nAustralia\n1993\n17669.31990\n\n\nAustralia\n1994\n18191.16457\n\n\nAustralia\n1995\n18690.43658\n\n\nAustralia\n1996\n19183.14039\n\n\nAustralia\n1997\n19709.66050\n\n\nAustralia\n1998\n20387.77284\n\n\nAustralia\n1999\n21154.75805\n\n\nAustralia\n2000\n21708.03726\n\n\nAustralia\n2001\n21824.08607\n\n\nAustralia\n2002\n22402.99102\n\n\nAustralia\n2003\n22825.57102\n\n\nAustralia\n2004\n23498.26199\n\n\nAustralia\n2005\n23929.16440\n\n\nAustralia\n2006\n24295.08138\n\n\nAustralia\n2007\n24765.54890\n\n\nAustralia\n2008\n25190.72063\n\n\nAustralia\n2009\n25007.69776\n\n\nAustralia\n2010\n25190.83986\n\n\nAustralia\n2011\n25306.82494\n\n\nAustria\n1960\n7434.18372\n\n\nAustria\n1961\n7802.97255\n\n\nAustria\n1962\n7960.70727\n\n\nAustria\n1963\n8237.06053\n\n\nAustria\n1964\n8683.45452\n\n\nAustria\n1965\n8927.46070\n\n\nAustria\n1966\n9365.30613\n\n\nAustria\n1967\n9575.18356\n\n\nAustria\n1968\n9951.60718\n\n\nAustria\n1969\n10539.69700\n\n\nAustria\n1970\n11085.10449\n\n\nAustria\n1971\n11600.22295\n\n\nAustria\n1972\n12248.95167\n\n\nAustria\n1973\n12776.99245\n\n\nAustria\n1974\n13258.09388\n\n\nAustria\n1975\n13244.96435\n\n\nAustria\n1976\n13875.87098\n\n\nAustria\n1977\n14575.16601\n\n\nAustria\n1978\n14556.24303\n\n\nAustria\n1979\n15362.14184\n\n\nAustria\n1980\n15628.11853\n\n\nAustria\n1981\n15565.82167\n\n\nAustria\n1982\n15867.50615\n\n\nAustria\n1983\n16365.68683\n\n\nAustria\n1984\n16375.10914\n\n\nAustria\n1985\n16776.39194\n\n\nAustria\n1986\n17151.57949\n\n\nAustria\n1987\n17373.35717\n\n\nAustria\n1988\n17920.57394\n\n\nAustria\n1989\n18533.47580\n\n\nAustria\n1990\n19192.07172\n\n\nAustria\n1991\n19655.36566\n\n\nAustria\n1992\n19847.22018\n\n\nAustria\n1993\n19787.92580\n\n\nAustria\n1994\n20185.41806\n\n\nAustria\n1995\n20692.25631\n\n\nAustria\n1996\n21174.05212\n\n\nAustria\n1997\n21638.40830\n\n\nAustria\n1998\n22432.91072\n\n\nAustria\n1999\n23181.69316\n\n\nAustria\n2000\n23974.18307\n\n\nAustria\n2001\n24087.35538\n\n\nAustria\n2002\n24375.11384\n\n\nAustria\n2003\n24466.70630\n\n\nAustria\n2004\n24945.04777\n\n\nAustria\n2005\n25370.46587\n\n\nAustria\n2006\n26171.69091\n\n\nAustria\n2007\n27036.48733\n\n\nAustria\n2008\n27305.92329\n\n\nAustria\n2009\n26183.99760\n\n\nAustria\n2010\n26642.99386\n\n\nAustria\n2011\n27266.40335\n\n\nAzerbaijan\n1990\n1250.74006\n\n\nAzerbaijan\n1991\n1222.85377\n\n\nAzerbaijan\n1992\n932.25687\n\n\nAzerbaijan\n1993\n706.09695\n\n\nAzerbaijan\n1994\n559.38316\n\n\nAzerbaijan\n1995\n487.72636\n\n\nAzerbaijan\n1996\n489.10259\n\n\nAzerbaijan\n1997\n512.50264\n\n\nAzerbaijan\n1998\n558.42742\n\n\nAzerbaijan\n1999\n594.51067\n\n\nAzerbaijan\n2000\n655.09743\n\n\nAzerbaijan\n2001\n714.39569\n\n\nAzerbaijan\n2002\n784.24789\n\n\nAzerbaijan\n2003\n865.50127\n\n\nAzerbaijan\n2004\n945.46917\n\n\nAzerbaijan\n2005\n1182.91845\n\n\nAzerbaijan\n2006\n1573.64218\n\n\nAzerbaijan\n2007\n1945.63755\n\n\nAzerbaijan\n2008\n2110.97043\n\n\nAzerbaijan\n2009\n2259.88174\n\n\nAzerbaijan\n2010\n2344.81093\n\n\nAzerbaijan\n2011\n2338.89656\n\n\nBahamas\n1960\n11926.46097\n\n\nBahamas\n1961\n12558.29581\n\n\nBahamas\n1962\n13186.10406\n\n\nBahamas\n1963\n13858.51689\n\n\nBahamas\n1964\n14584.42775\n\n\nBahamas\n1965\n15374.33583\n\n\nBahamas\n1966\n16045.52760\n\n\nBahamas\n1967\n16866.14700\n\n\nBahamas\n1968\n17592.54560\n\n\nBahamas\n1969\n18516.80315\n\n\nBahamas\n1970\n16944.17706\n\n\nBahamas\n1971\n16773.32431\n\n\nBahamas\n1972\n15825.01611\n\n\nBahamas\n1973\n16681.08272\n\n\nBahamas\n1974\n13616.13388\n\n\nBahamas\n1975\n11368.41198\n\n\nBahamas\n1976\n11708.97569\n\n\nBahamas\n1977\n12508.23765\n\n\nBahamas\n1978\n13971.07784\n\n\nBahamas\n1979\n17236.66283\n\n\nBahamas\n1980\n17954.41744\n\n\nBahamas\n1981\n15939.86648\n\n\nBahamas\n1982\n16632.42252\n\n\nBahamas\n1983\n16855.97410\n\n\nBahamas\n1984\n18841.51612\n\n\nBahamas\n1985\n19359.49950\n\n\nBahamas\n1986\n19341.59051\n\n\nBahamas\n1987\n19571.05278\n\n\nBahamas\n1988\n19685.36145\n\n\nBahamas\n1989\n20653.86580\n\n\nBahamas\n1990\n19970.50833\n\n\nBahamas\n1991\n18789.34949\n\n\nBahamas\n1992\n17736.28159\n\n\nBahamas\n1993\n17466.21081\n\n\nBahamas\n1994\n17707.13476\n\n\nBahamas\n1995\n18195.24765\n\n\nBahamas\n1996\n18702.81496\n\n\nBahamas\n1997\n18853.24266\n\n\nBahamas\n1998\n19514.56795\n\n\nBahamas\n1999\n20665.69366\n\n\nBahamas\n2000\n21258.29243\n\n\nBahamas\n2001\n21530.37380\n\n\nBahamas\n2002\n21809.34718\n\n\nBahamas\n2003\n21228.07569\n\n\nBahamas\n2004\n21106.72008\n\n\nBahamas\n2005\n21507.71526\n\n\nBahamas\n2006\n21728.70888\n\n\nBahamas\n2007\n21721.61841\n\n\nBahamas\n2008\n20911.59943\n\n\nBahamas\n2009\n19619.12136\n\n\nBahamas\n2010\n19395.15231\n\n\nBahamas\n2011\n19466.99052\n\n\nBahrain\n1980\n11127.86976\n\n\nBahrain\n1981\n10136.47546\n\n\nBahrain\n1982\n9084.60413\n\n\nBahrain\n1983\n9409.40677\n\n\nBahrain\n1984\n9619.93098\n\n\nBahrain\n1985\n8896.28641\n\n\nBahrain\n1986\n8710.78582\n\n\nBahrain\n1987\n9286.89317\n\n\nBahrain\n1988\n9592.07145\n\n\nBahrain\n1989\n9308.54802\n\n\nBahrain\n1990\n9427.85608\n\n\nBahrain\n1991\n10201.11682\n\n\nBahrain\n1992\n10611.09237\n\n\nBahrain\n1993\n11691.78916\n\n\nBahrain\n1994\n11385.24365\n\n\nBahrain\n1995\n11541.87605\n\n\nBahrain\n1996\n11685.07226\n\n\nBahrain\n1997\n11679.35936\n\n\nBahrain\n1998\n11873.36110\n\n\nBahrain\n1999\n12077.10624\n\n\nBahrain\n2000\n12489.46775\n\n\nBahrain\n2001\n12976.20687\n\n\nBahrain\n2002\n13668.11547\n\n\nBahrain\n2003\n14536.88826\n\n\nBahrain\n2004\n14788.89008\n\n\nBahrain\n2005\n14775.63326\n\n\nBahrain\n2006\n14082.91460\n\n\nBahrain\n2007\n13373.21994\n\n\nBahrain\n2008\n12505.21254\n\n\nBahrain\n2009\n11600.70738\n\n\nBahrain\n2010\n11236.40498\n\n\nBangladesh\n1960\n254.82508\n\n\nBangladesh\n1961\n262.76563\n\n\nBangladesh\n1962\n269.53207\n\n\nBangladesh\n1963\n260.92990\n\n\nBangladesh\n1964\n281.26439\n\n\nBangladesh\n1965\n277.27331\n\n\nBangladesh\n1966\n275.38706\n\n\nBangladesh\n1967\n261.36779\n\n\nBangladesh\n1968\n277.18326\n\n\nBangladesh\n1969\n272.97766\n\n\nBangladesh\n1970\n282.25452\n\n\nBangladesh\n1971\n262.98158\n\n\nBangladesh\n1972\n224.20911\n\n\nBangladesh\n1973\n230.08098\n\n\nBangladesh\n1974\n249.85177\n\n\nBangladesh\n1975\n236.19234\n\n\nBangladesh\n1976\n244.46651\n\n\nBangladesh\n1977\n244.67898\n\n\nBangladesh\n1978\n254.58003\n\n\nBangladesh\n1979\n259.05154\n\n\nBangladesh\n1980\n253.78228\n\n\nBangladesh\n1981\n256.25063\n\n\nBangladesh\n1982\n255.33861\n\n\nBangladesh\n1983\n258.59838\n\n\nBangladesh\n1984\n264.82342\n\n\nBangladesh\n1985\n266.08682\n\n\nBangladesh\n1986\n269.95592\n\n\nBangladesh\n1987\n272.54757\n\n\nBangladesh\n1988\n271.10577\n\n\nBangladesh\n1989\n271.09171\n\n\nBangladesh\n1990\n280.17368\n\n\nBangladesh\n1991\n282.77904\n\n\nBangladesh\n1992\n290.40821\n\n\nBangladesh\n1993\n297.16850\n\n\nBangladesh\n1994\n302.81872\n\n\nBangladesh\n1995\n311.16657\n\n\nBangladesh\n1996\n318.92047\n\n\nBangladesh\n1997\n329.39605\n\n\nBangladesh\n1998\n339.85832\n\n\nBangladesh\n1999\n349.65074\n\n\nBangladesh\n2000\n363.63993\n\n\nBangladesh\n2001\n375.99346\n\n\nBangladesh\n2002\n385.80604\n\n\nBangladesh\n2003\n399.39596\n\n\nBangladesh\n2004\n417.95368\n\n\nBangladesh\n2005\n436.68818\n\n\nBangladesh\n2006\n459.86251\n\n\nBangladesh\n2007\n483.97087\n\n\nBangladesh\n2008\n508.55577\n\n\nBangladesh\n2009\n532.07700\n\n\nBangladesh\n2010\n558.06238\n\n\nBangladesh\n2011\n588.36918\n\n\nBarbados\n1960\n3396.94571\n\n\nBarbados\n1961\n3646.65478\n\n\nBarbados\n1962\n3961.39989\n\n\nBarbados\n1963\n3744.02269\n\n\nBarbados\n1964\n3915.32559\n\n\nBarbados\n1965\n4347.90445\n\n\nBarbados\n1966\n4509.68050\n\n\nBarbados\n1967\n4978.13129\n\n\nBarbados\n1968\n5310.78177\n\n\nBarbados\n1969\n5693.65773\n\n\nBarbados\n1970\n6210.63034\n\n\nBarbados\n1971\n6420.05392\n\n\nBarbados\n1972\n6461.31486\n\n\nBarbados\n1973\n6504.71086\n\n\nBarbados\n1974\n6164.53240\n\n\nBarbados\n1975\n6379.77148\n\n\nBarbados\n1976\n6351.82920\n\n\nBarbados\n1977\n6613.62819\n\n\nBarbados\n1978\n7006.11526\n\n\nBarbados\n1979\n7527.67208\n\n\nBarbados\n1980\n7861.83475\n\n\nBarbados\n1981\n7581.70030\n\n\nBarbados\n1982\n7170.53953\n\n\nBarbados\n1983\n7148.99775\n\n\nBarbados\n1984\n7353.51925\n\n\nBarbados\n1985\n7356.83354\n\n\nBarbados\n1986\n8015.60127\n\n\nBarbados\n1987\n8063.65339\n\n\nBarbados\n1988\n8533.74312\n\n\nBarbados\n1989\n8930.25645\n\n\nBarbados\n1990\n8471.08863\n\n\nBarbados\n1991\n8197.55478\n\n\nBarbados\n1992\n7765.99957\n\n\nBarbados\n1993\n7820.32961\n\n\nBarbados\n1994\n8107.89161\n\n\nBarbados\n1995\n8204.37523\n\n\nBarbados\n1996\n8328.88574\n\n\nBarbados\n1997\n8833.04760\n\n\nBarbados\n1998\n9166.79771\n\n\nBarbados\n1999\n9375.65822\n\n\nBarbados\n2000\n9565.40123\n\n\nBarbados\n2001\n9058.90024\n\n\nBarbados\n2002\n8717.53464\n\n\nBarbados\n2003\n8873.56808\n\n\nBarbados\n2004\n9181.61603\n\n\nBarbados\n2005\n9454.34246\n\n\nBarbados\n2006\n9757.44343\n\n\nBarbados\n2007\n9783.98417\n\n\nBarbados\n2008\n9781.35691\n\n\nBarbados\n2009\n9243.58705\n\n\nBelarus\n1990\n1409.77836\n\n\nBelarus\n1991\n1392.17784\n\n\nBelarus\n1992\n1255.81855\n\n\nBelarus\n1993\n1157.76977\n\n\nBelarus\n1994\n1023.51025\n\n\nBelarus\n1995\n920.03390\n\n\nBelarus\n1996\n948.95992\n\n\nBelarus\n1997\n1061.63448\n\n\nBelarus\n1998\n1156.29782\n\n\nBelarus\n1999\n1199.66285\n\n\nBelarus\n2000\n1273.04912\n\n\nBelarus\n2001\n1337.84996\n\n\nBelarus\n2002\n1411.75674\n\n\nBelarus\n2003\n1518.99982\n\n\nBelarus\n2004\n1701.45091\n\n\nBelarus\n2005\n1871.39367\n\n\nBelarus\n2006\n2067.60942\n\n\nBelarus\n2007\n2253.46411\n\n\nBelarus\n2008\n2510.27848\n\n\nBelarus\n2009\n2539.50899\n\n\nBelarus\n2010\n2739.95064\n\n\nBelarus\n2011\n2890.34567\n\n\nBelgium\n1960\n7454.71654\n\n\nBelgium\n1961\n7799.88908\n\n\nBelgium\n1962\n8173.81846\n\n\nBelgium\n1963\n8465.97962\n\n\nBelgium\n1964\n8969.63255\n\n\nBelgium\n1965\n9205.03559\n\n\nBelgium\n1966\n9431.61409\n\n\nBelgium\n1967\n9742.06281\n\n\nBelgium\n1968\n10110.80421\n\n\nBelgium\n1969\n10750.64458\n\n\nBelgium\n1970\n11360.19747\n\n\nBelgium\n1971\n11791.48609\n\n\nBelgium\n1972\n12367.39264\n\n\nBelgium\n1973\n13115.30933\n\n\nBelgium\n1974\n13670.97581\n\n\nBelgium\n1975\n13363.53885\n\n\nBelgium\n1976\n14093.74132\n\n\nBelgium\n1977\n14164.48890\n\n\nBelgium\n1978\n14553.44433\n\n\nBelgium\n1979\n14880.76986\n\n\nBelgium\n1980\n15524.95964\n\n\nBelgium\n1981\n15482.00925\n\n\nBelgium\n1982\n15578.35832\n\n\nBelgium\n1983\n15628.17983\n\n\nBelgium\n1984\n16013.87103\n\n\nBelgium\n1985\n16273.53897\n\n\nBelgium\n1986\n16564.26086\n\n\nBelgium\n1987\n16931.90098\n\n\nBelgium\n1988\n17675.34605\n\n\nBelgium\n1989\n18222.22107\n\n\nBelgium\n1990\n18737.95878\n\n\nBelgium\n1991\n19010.66574\n\n\nBelgium\n1992\n19223.50264\n\n\nBelgium\n1993\n18964.36992\n\n\nBelgium\n1994\n19516.10388\n\n\nBelgium\n1995\n19939.71072\n\n\nBelgium\n1996\n20184.32950\n\n\nBelgium\n1997\n20887.61420\n\n\nBelgium\n1998\n21245.09101\n\n\nBelgium\n1999\n21946.74568\n\n\nBelgium\n2000\n22697.01230\n\n\nBelgium\n2001\n22801.77672\n\n\nBelgium\n2002\n23008.44994\n\n\nBelgium\n2003\n23097.21262\n\n\nBelgium\n2004\n23750.45981\n\n\nBelgium\n2005\n24033.78330\n\n\nBelgium\n2006\n24512.41314\n\n\nBelgium\n2007\n25034.66692\n\n\nBelgium\n2008\n25082.37413\n\n\nBelgium\n2009\n24190.59495\n\n\nBelgium\n2010\n24550.39655\n\n\nBelgium\n2011\n24733.62696\n\n\nBelize\n1960\n950.42401\n\n\nBelize\n1961\n963.11376\n\n\nBelize\n1962\n974.77072\n\n\nBelize\n1963\n987.47082\n\n\nBelize\n1964\n1003.12106\n\n\nBelize\n1965\n1021.89359\n\n\nBelize\n1966\n1042.51213\n\n\nBelize\n1967\n1067.77505\n\n\nBelize\n1968\n1122.14180\n\n\nBelize\n1969\n1157.37174\n\n\nBelize\n1970\n1193.02891\n\n\nBelize\n1971\n1222.44407\n\n\nBelize\n1972\n1331.03017\n\n\nBelize\n1973\n1385.88494\n\n\nBelize\n1974\n1552.02401\n\n\nBelize\n1975\n1579.64092\n\n\nBelize\n1976\n1546.19208\n\n\nBelize\n1977\n1606.72394\n\n\nBelize\n1978\n1688.09883\n\n\nBelize\n1979\n1765.48426\n\n\nBelize\n1980\n1979.79968\n\n\nBelize\n1981\n1953.27105\n\n\nBelize\n1982\n1897.66205\n\n\nBelize\n1983\n1820.56843\n\n\nBelize\n1984\n1798.95854\n\n\nBelize\n1985\n1772.01230\n\n\nBelize\n1986\n1807.39431\n\n\nBelize\n1987\n1955.03638\n\n\nBelize\n1988\n2080.99664\n\n\nBelize\n1989\n2309.73964\n\n\nBelize\n1990\n2476.81753\n\n\nBelize\n1991\n2666.27384\n\n\nBelize\n1992\n2912.12531\n\n\nBelize\n1993\n3004.32413\n\n\nBelize\n1994\n2923.50315\n\n\nBelize\n1995\n2867.58216\n\n\nBelize\n1996\n2836.49324\n\n\nBelize\n1997\n2834.89380\n\n\nBelize\n1998\n2836.13232\n\n\nBelize\n1999\n3026.77709\n\n\nBelize\n2000\n3329.66373\n\n\nBelize\n2001\n3392.85384\n\n\nBelize\n2002\n3459.62445\n\n\nBelize\n2003\n3664.65161\n\n\nBelize\n2004\n3713.23379\n\n\nBelize\n2005\n3705.05269\n\n\nBelize\n2006\n3754.12286\n\n\nBelize\n2007\n3680.91643\n\n\nBelize\n2008\n3684.07473\n\n\nBelize\n2009\n3561.34595\n\n\nBelize\n2010\n3542.36450\n\n\nBelize\n2011\n3490.23407\n\n\nBenin\n1960\n256.97877\n\n\nBenin\n1961\n261.64722\n\n\nBenin\n1962\n249.21253\n\n\nBenin\n1963\n257.20486\n\n\nBenin\n1964\n270.12294\n\n\nBenin\n1965\n279.89089\n\n\nBenin\n1966\n285.09899\n\n\nBenin\n1967\n283.21829\n\n\nBenin\n1968\n288.83758\n\n\nBenin\n1969\n291.59702\n\n\nBenin\n1970\n291.90122\n\n\nBenin\n1971\n281.67939\n\n\nBenin\n1972\n293.44537\n\n\nBenin\n1973\n297.66202\n\n\nBenin\n1974\n300.65561\n\n\nBenin\n1975\n279.29244\n\n\nBenin\n1976\n275.03898\n\n\nBenin\n1977\n281.68638\n\n\nBenin\n1978\n278.09338\n\n\nBenin\n1979\n288.71723\n\n\nBenin\n1980\n300.29990\n\n\nBenin\n1981\n321.45863\n\n\nBenin\n1982\n319.79204\n\n\nBenin\n1983\n297.56422\n\n\nBenin\n1984\n312.41003\n\n\nBenin\n1985\n326.80771\n\n\nBenin\n1986\n324.92907\n\n\nBenin\n1987\n311.49283\n\n\nBenin\n1988\n313.30092\n\n\nBenin\n1989\n295.61375\n\n\nBenin\n1990\n295.78329\n\n\nBenin\n1991\n299.64818\n\n\nBenin\n1992\n301.03238\n\n\nBenin\n1993\n300.89314\n\n\nBenin\n1994\n303.56893\n\n\nBenin\n1995\n307.54822\n\n\nBenin\n1996\n315.08363\n\n\nBenin\n1997\n325.17750\n\n\nBenin\n1998\n330.74035\n\n\nBenin\n1999\n336.71468\n\n\nBenin\n2000\n345.95036\n\n\nBenin\n2001\n352.24846\n\n\nBenin\n2002\n356.60523\n\n\nBenin\n2003\n358.77475\n\n\nBenin\n2004\n358.24640\n\n\nBenin\n2005\n357.25007\n\n\nBenin\n2006\n360.65541\n\n\nBenin\n2007\n366.04497\n\n\nBenin\n2008\n373.50669\n\n\nBenin\n2009\n376.62162\n\n\nBenin\n2010\n377.04430\n\n\nBenin\n2011\n378.05179\n\n\nBermuda\n1960\n19588.61270\n\n\nBermuda\n1961\n20009.62580\n\n\nBermuda\n1962\n20410.61269\n\n\nBermuda\n1963\n20153.28493\n\n\nBermuda\n1964\n21842.81022\n\n\nBermuda\n1965\n22334.44348\n\n\nBermuda\n1966\n25091.73205\n\n\nBermuda\n1967\n27876.07966\n\n\nBermuda\n1968\n27925.90781\n\n\nBermuda\n1969\n28350.64320\n\n\nBermuda\n1970\n29592.21471\n\n\nBermuda\n1971\n30833.69212\n\n\nBermuda\n1972\n31624.29080\n\n\nBermuda\n1973\n32332.10726\n\n\nBermuda\n1974\n32860.03476\n\n\nBermuda\n1975\n34355.58417\n\n\nBermuda\n1976\n37285.77335\n\n\nBermuda\n1977\n39336.79524\n\n\nBermuda\n1978\n39759.36263\n\n\nBermuda\n1979\n40462.40324\n\n\nBermuda\n1980\n43514.94072\n\n\nBermuda\n1981\n44223.42978\n\n\nBermuda\n1982\n41580.30169\n\n\nBermuda\n1983\n42108.26068\n\n\nBermuda\n1984\n42006.57456\n\n\nBermuda\n1985\n40870.94386\n\n\nBermuda\n1986\n42906.11095\n\n\nBermuda\n1987\n43821.94857\n\n\nBermuda\n1988\n44900.32535\n\n\nBermuda\n1989\n44418.57836\n\n\nBermuda\n1990\n43766.21300\n\n\nBermuda\n1991\n41873.28701\n\n\nBermuda\n1992\n41848.27310\n\n\nBermuda\n1993\n43107.30662\n\n\nBermuda\n1994\n43153.55311\n\n\nBermuda\n1995\n44759.87078\n\n\nBermuda\n1996\n45849.53008\n\n\nBermuda\n1997\n47881.13090\n\n\nBermuda\n1998\n49668.25550\n\n\nBermuda\n1999\n51348.35811\n\n\nBermuda\n2000\n56042.17391\n\n\nBermuda\n2001\n59314.22778\n\n\nBermuda\n2002\n58134.33624\n\n\nBermuda\n2003\n59963.42534\n\n\nBermuda\n2004\n61227.96747\n\n\nBermuda\n2005\n62143.33633\n\n\nBermuda\n2006\n65430.60131\n\n\nBermuda\n2007\n67138.52171\n\n\nBermuda\n2008\n67554.23287\n\n\nBermuda\n2009\n64094.35952\n\n\nBermuda\n2010\n63036.36061\n\n\nBhutan\n1980\n244.55798\n\n\nBhutan\n1981\n271.00907\n\n\nBhutan\n1982\n273.37805\n\n\nBhutan\n1983\n297.07309\n\n\nBhutan\n1984\n302.56742\n\n\nBhutan\n1985\n306.57235\n\n\nBhutan\n1986\n331.72310\n\n\nBhutan\n1987\n412.49015\n\n\nBhutan\n1988\n419.62406\n\n\nBhutan\n1989\n440.83857\n\n\nBhutan\n1990\n484.11002\n\n\nBhutan\n1991\n484.52381\n\n\nBhutan\n1992\n515.52759\n\n\nBhutan\n1993\n538.03918\n\n\nBhutan\n1994\n575.98423\n\n\nBhutan\n1995\n622.47771\n\n\nBhutan\n1996\n654.66429\n\n\nBhutan\n1997\n679.79803\n\n\nBhutan\n1998\n703.63682\n\n\nBhutan\n1999\n739.47124\n\n\nBhutan\n2000\n768.75100\n\n\nBhutan\n2001\n808.07037\n\n\nBhutan\n2002\n868.22132\n\n\nBhutan\n2003\n907.20967\n\n\nBhutan\n2004\n933.83000\n\n\nBhutan\n2005\n974.71093\n\n\nBhutan\n2006\n1017.71873\n\n\nBhutan\n2007\n1175.92639\n\n\nBhutan\n2008\n1208.40331\n\n\nBhutan\n2009\n1267.47634\n\n\nBhutan\n2010\n1392.68625\n\n\nBhutan\n2011\n1445.76000\n\n\nBolivia\n1960\n894.75697\n\n\nBolivia\n1961\n893.32654\n\n\nBolivia\n1962\n922.31606\n\n\nBolivia\n1963\n959.80837\n\n\nBolivia\n1964\n983.40937\n\n\nBolivia\n1965\n1015.38711\n\n\nBolivia\n1966\n1056.89838\n\n\nBolivia\n1967\n1104.19753\n\n\nBolivia\n1968\n947.55436\n\n\nBolivia\n1969\n954.18239\n\n\nBolivia\n1970\n927.09822\n\n\nBolivia\n1971\n950.81614\n\n\nBolivia\n1972\n1001.88265\n\n\nBolivia\n1973\n1033.80858\n\n\nBolivia\n1974\n1038.56496\n\n\nBolivia\n1975\n1087.83343\n\n\nBolivia\n1976\n1110.98164\n\n\nBolivia\n1977\n1138.68580\n\n\nBolivia\n1978\n1134.99732\n\n\nBolivia\n1979\n1110.59325\n\n\nBolivia\n1980\n1071.00132\n\n\nBolivia\n1981\n1050.71617\n\n\nBolivia\n1982\n987.98251\n\n\nBolivia\n1983\n928.22779\n\n\nBolivia\n1984\n906.94577\n\n\nBolivia\n1985\n872.80991\n\n\nBolivia\n1986\n832.05342\n\n\nBolivia\n1987\n834.02046\n\n\nBolivia\n1988\n839.41068\n\n\nBolivia\n1989\n851.82263\n\n\nBolivia\n1990\n871.22608\n\n\nBolivia\n1991\n896.19706\n\n\nBolivia\n1992\n890.01042\n\n\nBolivia\n1993\n906.68197\n\n\nBolivia\n1994\n927.42837\n\n\nBolivia\n1995\n949.15470\n\n\nBolivia\n1996\n968.93104\n\n\nBolivia\n1997\n995.21083\n\n\nBolivia\n1998\n1023.37750\n\n\nBolivia\n1999\n1006.58648\n\n\nBolivia\n2000\n1010.90737\n\n\nBolivia\n2001\n1007.37931\n\n\nBolivia\n2002\n1012.12621\n\n\nBolivia\n2003\n1019.61027\n\n\nBolivia\n2004\n1042.41443\n\n\nBolivia\n2005\n1069.01833\n\n\nBolivia\n2006\n1101.03846\n\n\nBolivia\n2007\n1132.21388\n\n\nBolivia\n2008\n1182.46464\n\n\nBolivia\n2009\n1202.78048\n\n\nBolivia\n2010\n1232.68873\n\n\nBolivia\n2011\n1276.12861\n\n\nBosnia and Herzegovina\n1994\n387.86986\n\n\nBosnia and Herzegovina\n1995\n486.81762\n\n\nBosnia and Herzegovina\n1996\n927.23285\n\n\nBosnia and Herzegovina\n1997\n1223.91028\n\n\nBosnia and Herzegovina\n1998\n1368.22385\n\n\nBosnia and Herzegovina\n1999\n1449.12744\n\n\nBosnia and Herzegovina\n2000\n1490.64283\n\n\nBosnia and Herzegovina\n2001\n1533.53265\n\n\nBosnia and Herzegovina\n2002\n1603.04355\n\n\nBosnia and Herzegovina\n2003\n1664.15333\n\n\nBosnia and Herzegovina\n2004\n1766.30126\n\n\nBosnia and Herzegovina\n2005\n1854.79143\n\n\nBosnia and Herzegovina\n2006\n1969.48274\n\n\nBosnia and Herzegovina\n2007\n2105.57803\n\n\nBosnia and Herzegovina\n2008\n2222.56455\n\n\nBosnia and Herzegovina\n2009\n2161.59983\n\n\nBosnia and Herzegovina\n2010\n2183.25835\n\n\nBosnia and Herzegovina\n2011\n2225.29015\n\n\nBotswana\n1960\n237.52222\n\n\nBotswana\n1961\n246.68401\n\n\nBotswana\n1962\n256.71205\n\n\nBotswana\n1963\n265.00969\n\n\nBotswana\n1964\n275.67015\n\n\nBotswana\n1965\n283.77505\n\n\nBotswana\n1966\n293.30599\n\n\nBotswana\n1967\n301.66469\n\n\nBotswana\n1968\n323.57155\n\n\nBotswana\n1969\n361.09075\n\n\nBotswana\n1970\n409.65970\n\n\nBotswana\n1971\n499.02922\n\n\nBotswana\n1972\n610.17575\n\n\nBotswana\n1973\n715.57310\n\n\nBotswana\n1974\n751.67632\n\n\nBotswana\n1975\n785.89810\n\n\nBotswana\n1976\n837.15449\n\n\nBotswana\n1977\n901.86015\n\n\nBotswana\n1978\n991.45338\n\n\nBotswana\n1979\n1069.78106\n\n\nBotswana\n1980\n1153.96808\n\n\nBotswana\n1981\n1213.88156\n\n\nBotswana\n1982\n1314.69360\n\n\nBotswana\n1983\n1437.67743\n\n\nBotswana\n1984\n1509.20752\n\n\nBotswana\n1985\n1564.30800\n\n\nBotswana\n1986\n1638.16139\n\n\nBotswana\n1987\n1775.48571\n\n\nBotswana\n1988\n2055.76377\n\n\nBotswana\n1989\n2254.25121\n\n\nBotswana\n1990\n2335.83437\n\n\nBotswana\n1991\n2437.41483\n\n\nBotswana\n1992\n2437.70191\n\n\nBotswana\n1993\n2416.58946\n\n\nBotswana\n1994\n2438.87482\n\n\nBotswana\n1995\n2483.29333\n\n\nBotswana\n1996\n2559.71767\n\n\nBotswana\n1997\n2757.47827\n\n\nBotswana\n1998\n2986.00911\n\n\nBotswana\n1999\n3078.10168\n\n\nBotswana\n2000\n3204.11548\n\n\nBotswana\n2001\n3268.35881\n\n\nBotswana\n2002\n3516.20792\n\n\nBotswana\n2003\n3691.88280\n\n\nBotswana\n2004\n3865.86164\n\n\nBotswana\n2005\n3880.26689\n\n\nBotswana\n2006\n4025.39536\n\n\nBotswana\n2007\n4160.66260\n\n\nBotswana\n2008\n4223.23415\n\n\nBotswana\n2009\n3965.18897\n\n\nBotswana\n2010\n4189.68670\n\n\nBotswana\n2011\n4377.55574\n\n\nBrazil\n1960\n1447.84381\n\n\nBrazil\n1961\n1549.41455\n\n\nBrazil\n1962\n1581.62542\n\n\nBrazil\n1963\n1548.13472\n\n\nBrazil\n1964\n1555.61576\n\n\nBrazil\n1965\n1558.14856\n\n\nBrazil\n1966\n1578.92025\n\n\nBrazil\n1967\n1613.13692\n\n\nBrazil\n1968\n1751.71552\n\n\nBrazil\n1969\n1874.41069\n\n\nBrazil\n1970\n1988.92152\n\n\nBrazil\n1971\n2160.35304\n\n\nBrazil\n1972\n2363.51120\n\n\nBrazil\n1973\n2630.91785\n\n\nBrazil\n1974\n2802.01627\n\n\nBrazil\n1975\n2879.31347\n\n\nBrazil\n1976\n3087.58287\n\n\nBrazil\n1977\n3154.72055\n\n\nBrazil\n1978\n3181.06143\n\n\nBrazil\n1979\n3317.53596\n\n\nBrazil\n1980\n3536.04587\n\n\nBrazil\n1981\n3302.63936\n\n\nBrazil\n1982\n3245.57315\n\n\nBrazil\n1983\n3064.15363\n\n\nBrazil\n1984\n3154.96563\n\n\nBrazil\n1985\n3333.99963\n\n\nBrazil\n1986\n3527.76124\n\n\nBrazil\n1987\n3584.07402\n\n\nBrazil\n1988\n3513.99949\n\n\nBrazil\n1989\n3564.63619\n\n\nBrazil\n1990\n3352.96540\n\n\nBrazil\n1991\n3347.81147\n\n\nBrazil\n1992\n3279.68640\n\n\nBrazil\n1993\n3380.12839\n\n\nBrazil\n1994\n3506.54411\n\n\nBrazil\n1995\n3606.00592\n\n\nBrazil\n1996\n3627.62700\n\n\nBrazil\n1997\n3693.27582\n\n\nBrazil\n1998\n3639.18167\n\n\nBrazil\n1999\n3594.86982\n\n\nBrazil\n2000\n3696.14677\n\n\nBrazil\n2001\n3692.84018\n\n\nBrazil\n2002\n3739.91939\n\n\nBrazil\n2003\n3733.99242\n\n\nBrazil\n2004\n3899.25536\n\n\nBrazil\n2005\n3976.61917\n\n\nBrazil\n2006\n4090.55580\n\n\nBrazil\n2007\n4297.82385\n\n\nBrazil\n2008\n4478.80919\n\n\nBrazil\n2009\n4424.75869\n\n\nBrazil\n2010\n4716.61413\n\n\nBrazil\n2011\n4803.39824\n\n\nBrunei\n1974\n23642.85481\n\n\nBrunei\n1975\n22733.54730\n\n\nBrunei\n1976\n26208.78718\n\n\nBrunei\n1977\n27930.67280\n\n\nBrunei\n1978\n28704.04441\n\n\nBrunei\n1979\n33931.08658\n\n\nBrunei\n1980\n30504.46158\n\n\nBrunei\n1981\n23693.67508\n\n\nBrunei\n1982\n23908.37276\n\n\nBrunei\n1983\n23352.96949\n\n\nBrunei\n1984\n22844.52382\n\n\nBrunei\n1985\n21882.63169\n\n\nBrunei\n1986\n20698.96047\n\n\nBrunei\n1987\n20530.50365\n\n\nBrunei\n1988\n20180.51870\n\n\nBrunei\n1989\n19409.33142\n\n\nBrunei\n1990\n19075.01748\n\n\nBrunei\n1991\n19126.47888\n\n\nBrunei\n1992\n19478.09789\n\n\nBrunei\n1993\n18997.87973\n\n\nBrunei\n1994\n19065.31927\n\n\nBrunei\n1995\n19395.52004\n\n\nBrunei\n1996\n19445.25163\n\n\nBrunei\n1997\n18685.23843\n\n\nBrunei\n1998\n18135.12818\n\n\nBrunei\n1999\n18253.77631\n\n\nBrunei\n2000\n18350.13062\n\n\nBrunei\n2001\n18441.34689\n\n\nBrunei\n2002\n18749.57707\n\n\nBrunei\n2003\n18896.52592\n\n\nBrunei\n2004\n18609.15264\n\n\nBrunei\n2005\n18311.88135\n\n\nBrunei\n2006\n18745.80477\n\n\nBrunei\n2007\n18416.90501\n\n\nBrunei\n2008\n17722.65838\n\n\nBrunei\n2009\n17092.46000\n\n\nBrunei\n2010\n17225.31562\n\n\nBrunei\n2011\n17301.33869\n\n\nBulgaria\n1980\n1294.03235\n\n\nBulgaria\n1981\n1352.92562\n\n\nBulgaria\n1982\n1380.42105\n\n\nBulgaria\n1983\n1424.21520\n\n\nBulgaria\n1984\n1469.14644\n\n\nBulgaria\n1985\n1508.59234\n\n\nBulgaria\n1986\n1572.48487\n\n\nBulgaria\n1987\n1665.23966\n\n\nBulgaria\n1988\n1845.42010\n\n\nBulgaria\n1989\n1805.71237\n\n\nBulgaria\n1990\n1670.94830\n\n\nBulgaria\n1991\n1545.05790\n\n\nBulgaria\n1992\n1448.16325\n\n\nBulgaria\n1993\n1438.15335\n\n\nBulgaria\n1994\n1469.28014\n\n\nBulgaria\n1995\n1518.05068\n\n\nBulgaria\n1996\n1388.11034\n\n\nBulgaria\n1997\n1373.60564\n\n\nBulgaria\n1998\n1450.02542\n\n\nBulgaria\n1999\n1486.81847\n\n\nBulgaria\n2000\n1579.34824\n\n\nBulgaria\n2001\n1676.43678\n\n\nBulgaria\n2002\n1789.09465\n\n\nBulgaria\n2003\n1898.32999\n\n\nBulgaria\n2004\n2036.55423\n\n\nBulgaria\n2005\n2178.44529\n\n\nBulgaria\n2006\n2332.36313\n\n\nBulgaria\n2007\n2494.35265\n\n\nBulgaria\n2008\n2661.64014\n\n\nBulgaria\n2009\n2527.93838\n\n\nBulgaria\n2010\n2555.17710\n\n\nBulgaria\n2011\n2618.87604\n\n\nBurkina Faso\n1960\n122.20784\n\n\nBurkina Faso\n1961\n125.22668\n\n\nBurkina Faso\n1962\n130.88493\n\n\nBurkina Faso\n1963\n127.22947\n\n\nBurkina Faso\n1964\n128.04963\n\n\nBurkina Faso\n1965\n130.64000\n\n\nBurkina Faso\n1966\n129.02976\n\n\nBurkina Faso\n1967\n137.84096\n\n\nBurkina Faso\n1968\n139.38933\n\n\nBurkina Faso\n1969\n139.47578\n\n\nBurkina Faso\n1970\n136.92041\n\n\nBurkina Faso\n1971\n136.12585\n\n\nBurkina Faso\n1972\n136.49921\n\n\nBurkina Faso\n1973\n134.33812\n\n\nBurkina Faso\n1974\n142.46540\n\n\nBurkina Faso\n1975\n143.63516\n\n\nBurkina Faso\n1976\n152.52331\n\n\nBurkina Faso\n1977\n149.70792\n\n\nBurkina Faso\n1978\n153.07652\n\n\nBurkina Faso\n1979\n155.03748\n\n\nBurkina Faso\n1980\n152.61017\n\n\nBurkina Faso\n1981\n155.30590\n\n\nBurkina Faso\n1982\n166.02399\n\n\nBurkina Faso\n1983\n162.48905\n\n\nBurkina Faso\n1984\n155.60798\n\n\nBurkina Faso\n1985\n164.58767\n\n\nBurkina Faso\n1986\n173.13362\n\n\nBurkina Faso\n1987\n168.25771\n\n\nBurkina Faso\n1988\n173.36240\n\n\nBurkina Faso\n1989\n172.42781\n\n\nBurkina Faso\n1990\n166.84128\n\n\nBurkina Faso\n1991\n177.11027\n\n\nBurkina Faso\n1992\n172.74586\n\n\nBurkina Faso\n1993\n173.89084\n\n\nBurkina Faso\n1994\n171.39425\n\n\nBurkina Faso\n1995\n176.25851\n\n\nBurkina Faso\n1996\n190.33202\n\n\nBurkina Faso\n1997\n196.81450\n\n\nBurkina Faso\n1998\n205.38979\n\n\nBurkina Faso\n1999\n214.49628\n\n\nBurkina Faso\n2000\n212.37539\n\n\nBurkina Faso\n2001\n220.14794\n\n\nBurkina Faso\n2002\n223.99523\n\n\nBurkina Faso\n2003\n235.14602\n\n\nBurkina Faso\n2004\n239.01195\n\n\nBurkina Faso\n2005\n252.21472\n\n\nBurkina Faso\n2006\n261.48051\n\n\nBurkina Faso\n2007\n263.01493\n\n\nBurkina Faso\n2008\n270.12486\n\n\nBurkina Faso\n2009\n269.97065\n\n\nBurkina Faso\n2010\n282.69694\n\n\nBurkina Faso\n2011\n285.80303\n\n\nBurundi\n1960\n116.00986\n\n\nBurundi\n1961\n98.31124\n\n\nBurundi\n1962\n105.37297\n\n\nBurundi\n1963\n107.83755\n\n\nBurundi\n1964\n112.58149\n\n\nBurundi\n1965\n114.92065\n\n\nBurundi\n1966\n117.92423\n\n\nBurundi\n1967\n131.57157\n\n\nBurundi\n1968\n128.66999\n\n\nBurundi\n1969\n124.65001\n\n\nBurundi\n1970\n149.15308\n\n\nBurundi\n1971\n151.68016\n\n\nBurundi\n1972\n140.88225\n\n\nBurundi\n1973\n149.54189\n\n\nBurundi\n1974\n147.14454\n\n\nBurundi\n1975\n146.31484\n\n\nBurundi\n1976\n155.31750\n\n\nBurundi\n1977\n169.65621\n\n\nBurundi\n1978\n164.14882\n\n\nBurundi\n1979\n162.55549\n\n\nBurundi\n1980\n159.56320\n\n\nBurundi\n1981\n173.61954\n\n\nBurundi\n1982\n166.38683\n\n\nBurundi\n1983\n166.98764\n\n\nBurundi\n1984\n161.81154\n\n\nBurundi\n1985\n175.07832\n\n\nBurundi\n1986\n175.08004\n\n\nBurundi\n1987\n179.05865\n\n\nBurundi\n1988\n182.59930\n\n\nBurundi\n1989\n180.11128\n\n\nBurundi\n1990\n181.94537\n\n\nBurundi\n1991\n186.95484\n\n\nBurundi\n1992\n185.24941\n\n\nBurundi\n1993\n170.81452\n\n\nBurundi\n1994\n161.98359\n\n\nBurundi\n1995\n147.44837\n\n\nBurundi\n1996\n134.47041\n\n\nBurundi\n1997\n131.44958\n\n\nBurundi\n1998\n136.76371\n\n\nBurundi\n1999\n134.08652\n\n\nBurundi\n2000\n131.04633\n\n\nBurundi\n2001\n131.16203\n\n\nBurundi\n2002\n133.77480\n\n\nBurundi\n2003\n128.60779\n\n\nBurundi\n2004\n130.97902\n\n\nBurundi\n2005\n128.29612\n\n\nBurundi\n2006\n131.17166\n\n\nBurundi\n2007\n133.28688\n\n\nBurundi\n2008\n135.86245\n\n\nBurundi\n2009\n136.66128\n\n\nBurundi\n2010\n138.24824\n\n\nBurundi\n2011\n140.81250\n\n\nCambodia\n1993\n209.79545\n\n\nCambodia\n1994\n222.08303\n\n\nCambodia\n1995\n229.89064\n\n\nCambodia\n1996\n236.20808\n\n\nCambodia\n1997\n243.69098\n\n\nCambodia\n1998\n250.45468\n\n\nCambodia\n1999\n274.81977\n\n\nCambodia\n2000\n293.56847\n\n\nCambodia\n2001\n311.98549\n\n\nCambodia\n2002\n327.88750\n\n\nCambodia\n2003\n350.88899\n\n\nCambodia\n2004\n382.19033\n\n\nCambodia\n2005\n427.52925\n\n\nCambodia\n2006\n468.03183\n\n\nCambodia\n2007\n510.01977\n\n\nCambodia\n2008\n538.13346\n\n\nCambodia\n2009\n532.61752\n\n\nCambodia\n2010\n557.97691\n\n\nCambodia\n2011\n590.45211\n\n\nCameroon\n1960\n469.20043\n\n\nCameroon\n1961\n464.75325\n\n\nCameroon\n1962\n468.52386\n\n\nCameroon\n1963\n475.28233\n\n\nCameroon\n1964\n481.00877\n\n\nCameroon\n1965\n479.45590\n\n\nCameroon\n1966\n489.82997\n\n\nCameroon\n1967\n425.96217\n\n\nCameroon\n1968\n441.97647\n\n\nCameroon\n1969\n452.14527\n\n\nCameroon\n1970\n454.34435\n\n\nCameroon\n1971\n458.07844\n\n\nCameroon\n1972\n458.05383\n\n\nCameroon\n1973\n469.72044\n\n\nCameroon\n1974\n505.88219\n\n\nCameroon\n1975\n546.87455\n\n\nCameroon\n1976\n501.78142\n\n\nCameroon\n1977\n553.73157\n\n\nCameroon\n1978\n655.26765\n\n\nCameroon\n1979\n674.07476\n\n\nCameroon\n1980\n641.43183\n\n\nCameroon\n1981\n729.43560\n\n\nCameroon\n1982\n762.12340\n\n\nCameroon\n1983\n791.63233\n\n\nCameroon\n1984\n826.80773\n\n\nCameroon\n1985\n867.92123\n\n\nCameroon\n1986\n899.82756\n\n\nCameroon\n1987\n854.81232\n\n\nCameroon\n1988\n764.95797\n\n\nCameroon\n1989\n729.36700\n\n\nCameroon\n1990\n665.41064\n\n\nCameroon\n1991\n622.23543\n\n\nCameroon\n1992\n586.44311\n\n\nCameroon\n1993\n552.49208\n\n\nCameroon\n1994\n524.68227\n\n\nCameroon\n1995\n528.36405\n\n\nCameroon\n1996\n541.30291\n\n\nCameroon\n1997\n555.51731\n\n\nCameroon\n1998\n570.09673\n\n\nCameroon\n1999\n581.63608\n\n\nCameroon\n2000\n592.37200\n\n\nCameroon\n2001\n605.16108\n\n\nCameroon\n2002\n615.29224\n\n\nCameroon\n2003\n625.78193\n\n\nCameroon\n2004\n634.50937\n\n\nCameroon\n2005\n634.72281\n\n\nCameroon\n2006\n640.76282\n\n\nCameroon\n2007\n647.94454\n\n\nCameroon\n2008\n650.03610\n\n\nCameroon\n2009\n648.48566\n\n\nCameroon\n2010\n653.02869\n\n\nCameroon\n2011\n665.79823\n\n\nCanada\n1960\n9374.88282\n\n\nCanada\n1961\n9479.82403\n\n\nCanada\n1962\n9967.36564\n\n\nCanada\n1963\n10290.36200\n\n\nCanada\n1964\n10774.65331\n\n\nCanada\n1965\n11283.60611\n\n\nCanada\n1966\n11804.66776\n\n\nCanada\n1967\n11932.16501\n\n\nCanada\n1968\n12362.93157\n\n\nCanada\n1969\n12837.46788\n\n\nCanada\n1970\n12986.31241\n\n\nCanada\n1971\n13320.19496\n\n\nCanada\n1972\n13823.29238\n\n\nCanada\n1973\n14537.58953\n\n\nCanada\n1974\n14806.31259\n\n\nCanada\n1975\n14793.71474\n\n\nCanada\n1976\n15358.40595\n\n\nCanada\n1977\n15703.90339\n\n\nCanada\n1978\n16161.76834\n\n\nCanada\n1979\n16610.16721\n\n\nCanada\n1980\n16751.33878\n\n\nCanada\n1981\n17124.39055\n\n\nCanada\n1982\n16435.46551\n\n\nCanada\n1983\n16713.69949\n\n\nCanada\n1984\n17516.23999\n\n\nCanada\n1985\n18183.73352\n\n\nCanada\n1986\n18437.71141\n\n\nCanada\n1987\n18971.40746\n\n\nCanada\n1988\n19659.67026\n\n\nCanada\n1989\n19817.99342\n\n\nCanada\n1990\n19561.87934\n\n\nCanada\n1991\n18893.80497\n\n\nCanada\n1992\n18826.65615\n\n\nCanada\n1993\n19057.23091\n\n\nCanada\n1994\n19781.71278\n\n\nCanada\n1995\n20169.53897\n\n\nCanada\n1996\n20276.45211\n\n\nCanada\n1997\n20911.11206\n\n\nCanada\n1998\n21580.31775\n\n\nCanada\n1999\n22586.44127\n\n\nCanada\n2000\n23559.50369\n\n\nCanada\n2001\n23738.89538\n\n\nCanada\n2002\n24214.92928\n\n\nCanada\n2003\n24425.87539\n\n\nCanada\n2004\n24936.82539\n\n\nCanada\n2005\n25437.65134\n\n\nCanada\n2006\n25943.73602\n\n\nCanada\n2007\n26229.74308\n\n\nCanada\n2008\n26101.76407\n\n\nCanada\n2009\n25069.86915\n\n\nCanada\n2010\n25575.21698\n\n\nCanada\n2011\n25933.28833\n\n\nCape Verde\n1980\n559.92066\n\n\nCape Verde\n1981\n601.84699\n\n\nCape Verde\n1982\n607.82077\n\n\nCape Verde\n1983\n650.53608\n\n\nCape Verde\n1984\n660.18202\n\n\nCape Verde\n1985\n704.30707\n\n\nCape Verde\n1986\n715.18187\n\n\nCape Verde\n1987\n738.91402\n\n\nCape Verde\n1988\n776.54343\n\n\nCape Verde\n1989\n811.71413\n\n\nCape Verde\n1990\n804.37650\n\n\nCape Verde\n1991\n798.49331\n\n\nCape Verde\n1992\n802.33643\n\n\nCape Verde\n1993\n837.80683\n\n\nCape Verde\n1994\n871.94614\n\n\nCape Verde\n1995\n913.90446\n\n\nCape Verde\n1996\n952.83525\n\n\nCape Verde\n1997\n1003.94853\n\n\nCape Verde\n1998\n1066.93709\n\n\nCape Verde\n1999\n1171.02752\n\n\nCape Verde\n2000\n1233.25752\n\n\nCape Verde\n2001\n1285.84111\n\n\nCape Verde\n2002\n1330.90878\n\n\nCape Verde\n2003\n1371.15693\n\n\nCape Verde\n2004\n1409.15681\n\n\nCape Verde\n2005\n1481.68668\n\n\nCape Verde\n2006\n1613.58441\n\n\nCape Verde\n2007\n1735.88389\n\n\nCape Verde\n2008\n1827.02130\n\n\nCape Verde\n2009\n1878.47131\n\n\nCape Verde\n2010\n1958.88846\n\n\nCape Verde\n2011\n2038.88010\n\n\nCentral African Republic\n1960\n355.82276\n\n\nCentral African Republic\n1961\n367.16535\n\n\nCentral African Republic\n1962\n347.30105\n\n\nCentral African Republic\n1963\n338.51469\n\n\nCentral African Republic\n1964\n338.98373\n\n\nCentral African Republic\n1965\n335.48947\n\n\nCentral African Republic\n1966\n330.82318\n\n\nCentral African Republic\n1967\n339.10456\n\n\nCentral African Republic\n1968\n336.67689\n\n\nCentral African Republic\n1969\n353.13052\n\n\nCentral African Republic\n1970\n354.14397\n\n\nCentral African Republic\n1971\n351.22153\n\n\nCentral African Republic\n1972\n344.57421\n\n\nCentral African Republic\n1973\n344.43429\n\n\nCentral African Republic\n1974\n359.11820\n\n\nCentral African Republic\n1975\n353.17714\n\n\nCentral African Republic\n1976\n364.39676\n\n\nCentral African Republic\n1977\n369.87580\n\n\nCentral African Republic\n1978\n365.62249\n\n\nCentral African Republic\n1979\n347.75760\n\n\nCentral African Republic\n1980\n323.39662\n\n\nCentral African Republic\n1981\n309.40269\n\n\nCentral African Republic\n1982\n323.40402\n\n\nCentral African Republic\n1983\n288.28196\n\n\nCentral African Republic\n1984\n306.64638\n\n\nCentral African Republic\n1985\n310.33812\n\n\nCentral African Republic\n1986\n313.84129\n\n\nCentral African Republic\n1987\n291.89007\n\n\nCentral African Republic\n1988\n290.74252\n\n\nCentral African Republic\n1989\n290.21257\n\n\nCentral African Republic\n1990\n277.56808\n\n\nCentral African Republic\n1991\n269.37376\n\n\nCentral African Republic\n1992\n245.72741\n\n\nCentral African Republic\n1993\n240.24979\n\n\nCentral African Republic\n1994\n245.69038\n\n\nCentral African Republic\n1995\n257.02819\n\n\nCentral African Republic\n1996\n241.04344\n\n\nCentral African Republic\n1997\n248.16717\n\n\nCentral African Republic\n1998\n254.31432\n\n\nCentral African Republic\n1999\n258.19754\n\n\nCentral African Republic\n2000\n247.02818\n\n\nCentral African Republic\n2001\n244.19195\n\n\nCentral African Republic\n2002\n238.78620\n\n\nCentral African Republic\n2003\n218.36314\n\n\nCentral African Republic\n2004\n217.07553\n\n\nCentral African Republic\n2005\n218.65614\n\n\nCentral African Republic\n2006\n223.09745\n\n\nCentral African Republic\n2007\n227.27062\n\n\nCentral African Republic\n2008\n227.60299\n\n\nCentral African Republic\n2009\n227.17491\n\n\nCentral African Republic\n2010\n229.58140\n\n\nCentral African Republic\n2011\n232.62325\n\n\nChad\n1960\n253.94417\n\n\nChad\n1961\n252.09369\n\n\nChad\n1962\n259.94716\n\n\nChad\n1963\n250.30506\n\n\nChad\n1964\n238.81615\n\n\nChad\n1965\n235.20168\n\n\nChad\n1966\n226.17652\n\n\nChad\n1967\n223.26321\n\n\nChad\n1968\n217.68329\n\n\nChad\n1969\n227.74357\n\n\nChad\n1970\n226.86246\n\n\nChad\n1971\n216.62758\n\n\nChad\n1972\n213.86118\n\n\nChad\n1973\n191.21214\n\n\nChad\n1974\n196.01272\n\n\nChad\n1975\n208.95842\n\n\nChad\n1976\n210.73175\n\n\nChad\n1977\n211.18477\n\n\nChad\n1978\n206.11363\n\n\nChad\n1979\n158.70652\n\n\nChad\n1980\n145.99746\n\n\nChad\n1981\n144.28757\n\n\nChad\n1982\n148.52370\n\n\nChad\n1983\n167.66706\n\n\nChad\n1984\n166.72076\n\n\nChad\n1985\n197.53153\n\n\nChad\n1986\n183.99861\n\n\nChad\n1987\n174.16213\n\n\nChad\n1988\n194.87451\n\n\nChad\n1989\n198.03532\n\n\nChad\n1990\n183.94412\n\n\nChad\n1991\n193.63507\n\n\nChad\n1992\n202.90541\n\n\nChad\n1993\n165.95738\n\n\nChad\n1994\n177.31876\n\n\nChad\n1995\n174.06647\n\n\nChad\n1996\n172.47504\n\n\nChad\n1997\n176.61103\n\n\nChad\n1998\n182.96235\n\n\nChad\n1999\n175.83318\n\n\nChad\n2000\n168.45000\n\n\nChad\n2001\n181.56049\n\n\nChad\n2002\n189.99011\n\n\nChad\n2003\n210.27628\n\n\nChad\n2004\n271.47408\n\n\nChad\n2005\n308.40090\n\n\nChad\n2006\n299.88009\n\n\nChad\n2007\n292.14346\n\n\nChad\n2008\n283.27503\n\n\nChad\n2009\n272.62550\n\n\nChad\n2010\n300.10615\n\n\nChad\n2011\n301.40171\n\n\nChannel Islands\n1998\n40765.90844\n\n\nChannel Islands\n1999\n42080.56260\n\n\nChannel Islands\n2000\n44310.90232\n\n\nChannel Islands\n2001\n43441.71524\n\n\nChannel Islands\n2002\n42548.75816\n\n\nChannel Islands\n2003\n41008.40348\n\n\nChannel Islands\n2004\n40905.62335\n\n\nChannel Islands\n2005\n41246.18599\n\n\nChannel Islands\n2006\n42994.34591\n\n\nChannel Islands\n2007\n45226.03170\n\n\nChile\n1960\n1841.08015\n\n\nChile\n1961\n1867.60909\n\n\nChile\n1962\n1915.33270\n\n\nChile\n1963\n1982.23041\n\n\nChile\n1964\n1986.32701\n\n\nChile\n1965\n1948.83184\n\n\nChile\n1966\n2096.92315\n\n\nChile\n1967\n2128.05403\n\n\nChile\n1968\n2163.99492\n\n\nChile\n1969\n2196.26654\n\n\nChile\n1970\n2201.35147\n\n\nChile\n1971\n2356.71427\n\n\nChile\n1972\n2296.66910\n\n\nChile\n1973\n2146.52576\n\n\nChile\n1974\n2164.77405\n\n\nChile\n1975\n1889.54033\n\n\nChile\n1976\n1925.67926\n\n\nChile\n1977\n2064.23574\n\n\nChile\n1978\n2188.19888\n\n\nChile\n1979\n2345.43174\n\n\nChile\n1980\n2500.26773\n\n\nChile\n1981\n2579.57132\n\n\nChile\n1982\n2277.38844\n\n\nChile\n1983\n2156.14423\n\n\nChile\n1984\n2290.18327\n\n\nChile\n1985\n2412.89698\n\n\nChile\n1986\n2505.82515\n\n\nChile\n1987\n2626.62901\n\n\nChile\n1988\n2771.19008\n\n\nChile\n1989\n3011.17796\n\n\nChile\n1990\n3067.65058\n\n\nChile\n1991\n3252.58105\n\n\nChile\n1992\n3585.43576\n\n\nChile\n1993\n3766.79863\n\n\nChile\n1994\n3912.84956\n\n\nChile\n1995\n4258.23739\n\n\nChile\n1996\n4504.72132\n\n\nChile\n1997\n4734.56415\n\n\nChile\n1998\n4822.81946\n\n\nChile\n1999\n4984.10180\n\n\nChile\n2000\n5144.58925\n\n\nChile\n2001\n5254.01534\n\n\nChile\n2002\n5306.72122\n\n\nChile\n2003\n5455.92675\n\n\nChile\n2004\n5723.69014\n\n\nChile\n2005\n5979.06803\n\n\nChile\n2006\n6190.10940\n\n\nChile\n2007\n6410.80673\n\n\nChile\n2008\n6581.35795\n\n\nChile\n2009\n6451.63113\n\n\nChile\n2010\n6781.69648\n\n\nChile\n2011\n7122.93846\n\n\nChina\n1960\n105.45899\n\n\nChina\n1961\n77.66231\n\n\nChina\n1962\n72.32493\n\n\nChina\n1963\n77.86737\n\n\nChina\n1964\n88.13005\n\n\nChina\n1965\n100.13752\n\n\nChina\n1966\n107.80508\n\n\nChina\n1967\n99.08012\n\n\nChina\n1968\n92.56912\n\n\nChina\n1969\n105.28851\n\n\nChina\n1970\n122.29015\n\n\nChina\n1971\n127.30503\n\n\nChina\n1972\n128.93498\n\n\nChina\n1973\n135.98016\n\n\nChina\n1974\n136.26328\n\n\nChina\n1975\n145.52481\n\n\nChina\n1976\n140.99774\n\n\nChina\n1977\n149.66007\n\n\nChina\n1978\n164.94815\n\n\nChina\n1979\n175.13242\n\n\nChina\n1980\n186.43966\n\n\nChina\n1981\n193.63816\n\n\nChina\n1982\n208.17086\n\n\nChina\n1983\n227.54964\n\n\nChina\n1984\n258.72023\n\n\nChina\n1985\n289.67597\n\n\nChina\n1986\n310.51435\n\n\nChina\n1987\n341.02129\n\n\nChina\n1988\n373.49450\n\n\nChina\n1989\n382.89216\n\n\nChina\n1990\n391.65295\n\n\nChina\n1991\n421.88917\n\n\nChina\n1992\n475.92887\n\n\nChina\n1993\n536.35726\n\n\nChina\n1994\n599.80228\n\n\nChina\n1995\n657.99260\n\n\nChina\n1996\n716.24512\n\n\nChina\n1997\n774.88463\n\n\nChina\n1998\n827.34860\n\n\nChina\n1999\n882.55232\n\n\nChina\n2000\n949.17806\n\n\nChina\n2001\n1020.51999\n\n\nChina\n2002\n1105.95256\n\n\nChina\n2003\n1208.99396\n\n\nChina\n2004\n1323.21993\n\n\nChina\n2005\n1464.10763\n\n\nChina\n2006\n1640.86152\n\n\nChina\n2007\n1864.10270\n\n\nChina\n2008\n2032.61498\n\n\nChina\n2009\n2208.40395\n\n\nChina\n2010\n2426.33247\n\n\nChina\n2011\n2639.54156\n\n\nColombia\n1960\n1188.25353\n\n\nColombia\n1961\n1214.20110\n\n\nColombia\n1962\n1243.08390\n\n\nColombia\n1963\n1241.81301\n\n\nColombia\n1964\n1285.29718\n\n\nColombia\n1965\n1285.78509\n\n\nColombia\n1966\n1315.35296\n\n\nColombia\n1967\n1331.51277\n\n\nColombia\n1968\n1377.66313\n\n\nColombia\n1969\n1428.12821\n\n\nColombia\n1970\n1488.34837\n\n\nColombia\n1971\n1538.55798\n\n\nColombia\n1972\n1618.11493\n\n\nColombia\n1973\n1688.03791\n\n\nColombia\n1974\n1745.07709\n\n\nColombia\n1975\n1744.17169\n\n\nColombia\n1976\n1786.67989\n\n\nColombia\n1977\n1818.35346\n\n\nColombia\n1978\n1927.24670\n\n\nColombia\n1979\n1984.90918\n\n\nColombia\n1980\n2019.85473\n\n\nColombia\n1981\n2019.66847\n\n\nColombia\n1982\n1993.95000\n\n\nColombia\n1983\n1981.46856\n\n\nColombia\n1984\n2003.99201\n\n\nColombia\n1985\n2022.21197\n\n\nColombia\n1986\n2095.75024\n\n\nColombia\n1987\n2163.12114\n\n\nColombia\n1988\n2205.62890\n\n\nColombia\n1989\n2235.86653\n\n\nColombia\n1990\n2324.84363\n\n\nColombia\n1991\n2332.36188\n\n\nColombia\n1992\n2403.77231\n\n\nColombia\n1993\n2415.20667\n\n\nColombia\n1994\n2509.61573\n\n\nColombia\n1995\n2592.71082\n\n\nColombia\n1996\n2599.00831\n\n\nColombia\n1997\n2641.02163\n\n\nColombia\n1998\n2610.18549\n\n\nColombia\n1999\n2458.02136\n\n\nColombia\n2000\n2511.97467\n\n\nColombia\n2001\n2512.51974\n\n\nColombia\n2002\n2534.33310\n\n\nColombia\n2003\n2592.37627\n\n\nColombia\n2004\n2688.50843\n\n\nColombia\n2005\n2772.21473\n\n\nColombia\n2006\n2913.47983\n\n\nColombia\n2007\n3068.47727\n\n\nColombia\n2008\n3131.17767\n\n\nColombia\n2009\n3137.69533\n\n\nColombia\n2010\n3218.07170\n\n\nColombia\n2011\n3362.46560\n\n\nComoros\n1980\n412.36506\n\n\nComoros\n1981\n413.32491\n\n\nComoros\n1982\n425.18926\n\n\nComoros\n1983\n431.78999\n\n\nComoros\n1984\n436.23453\n\n\nComoros\n1985\n433.58823\n\n\nComoros\n1986\n429.81622\n\n\nComoros\n1987\n425.68059\n\n\nComoros\n1988\n426.34785\n\n\nComoros\n1989\n402.82459\n\n\nComoros\n1990\n413.19815\n\n\nComoros\n1991\n381.57931\n\n\nComoros\n1992\n404.27293\n\n\nComoros\n1993\n406.47369\n\n\nComoros\n1994\n375.73817\n\n\nComoros\n1995\n379.78843\n\n\nComoros\n1996\n365.58509\n\n\nComoros\n1997\n370.74912\n\n\nComoros\n1998\n365.93465\n\n\nComoros\n1999\n363.36985\n\n\nComoros\n2000\n358.95291\n\n\nComoros\n2001\n361.20628\n\n\nComoros\n2002\n366.29992\n\n\nComoros\n2003\n365.44482\n\n\nComoros\n2004\n354.89570\n\n\nComoros\n2005\n360.07079\n\n\nComoros\n2006\n354.83876\n\n\nComoros\n2007\n347.10003\n\n\nComoros\n2008\n341.21599\n\n\nComoros\n2009\n338.29790\n\n\nComoros\n2010\n336.48164\n\n\nComoros\n2011\n335.21924\n\n\nCongo, Dem. Rep.\n1960\n324.90317\n\n\nCongo, Dem. Rep.\n1961\n282.30170\n\n\nCongo, Dem. Rep.\n1962\n333.40127\n\n\nCongo, Dem. Rep.\n1963\n341.68033\n\n\nCongo, Dem. Rep.\n1964\n324.49323\n\n\nCongo, Dem. Rep.\n1965\n318.80163\n\n\nCongo, Dem. Rep.\n1966\n330.87698\n\n\nCongo, Dem. Rep.\n1967\n318.25775\n\n\nCongo, Dem. Rep.\n1968\n322.48030\n\n\nCongo, Dem. Rep.\n1969\n342.46212\n\n\nCongo, Dem. Rep.\n1970\n331.97206\n\n\nCongo, Dem. Rep.\n1971\n342.14796\n\n\nCongo, Dem. Rep.\n1972\n333.29148\n\n\nCongo, Dem. Rep.\n1973\n350.57570\n\n\nCongo, Dem. Rep.\n1974\n351.55841\n\n\nCongo, Dem. Rep.\n1975\n324.62015\n\n\nCongo, Dem. Rep.\n1976\n298.49291\n\n\nCongo, Dem. Rep.\n1977\n291.90244\n\n\nCongo, Dem. Rep.\n1978\n268.13840\n\n\nCongo, Dem. Rep.\n1979\n261.47156\n\n\nCongo, Dem. Rep.\n1980\n259.66613\n\n\nCongo, Dem. Rep.\n1981\n258.47654\n\n\nCongo, Dem. Rep.\n1982\n250.35264\n\n\nCongo, Dem. Rep.\n1983\n247.05086\n\n\nCongo, Dem. Rep.\n1984\n253.59842\n\n\nCongo, Dem. Rep.\n1985\n247.59070\n\n\nCongo, Dem. Rep.\n1986\n251.81074\n\n\nCongo, Dem. Rep.\n1987\n250.98229\n\n\nCongo, Dem. Rep.\n1988\n244.45555\n\n\nCongo, Dem. Rep.\n1989\n233.44093\n\n\nCongo, Dem. Rep.\n1990\n210.38885\n\n\nCongo, Dem. Rep.\n1991\n185.29209\n\n\nCongo, Dem. Rep.\n1992\n159.16152\n\n\nCongo, Dem. Rep.\n1993\n132.23284\n\n\nCongo, Dem. Rep.\n1994\n122.40252\n\n\nCongo, Dem. Rep.\n1995\n119.29555\n\n\nCongo, Dem. Rep.\n1996\n114.87467\n\n\nCongo, Dem. Rep.\n1997\n105.91015\n\n\nCongo, Dem. Rep.\n1998\n101.98132\n\n\nCongo, Dem. Rep.\n1999\n95.49728\n\n\nCongo, Dem. Rep.\n2000\n86.75451\n\n\nCongo, Dem. Rep.\n2001\n82.66194\n\n\nCongo, Dem. Rep.\n2002\n83.08186\n\n\nCongo, Dem. Rep.\n2003\n85.28262\n\n\nCongo, Dem. Rep.\n2004\n88.24305\n\n\nCongo, Dem. Rep.\n2005\n92.36726\n\n\nCongo, Dem. Rep.\n2006\n94.76974\n\n\nCongo, Dem. Rep.\n2007\n97.91018\n\n\nCongo, Dem. Rep.\n2008\n101.10385\n\n\nCongo, Dem. Rep.\n2009\n101.16901\n\n\nCongo, Dem. Rep.\n2010\n105.53174\n\n\nCongo, Dem. Rep.\n2011\n109.80930\n\n\nCongo, Rep.\n1960\n617.73755\n\n\nCongo, Rep.\n1961\n652.34485\n\n\nCongo, Rep.\n1962\n668.51663\n\n\nCongo, Rep.\n1963\n624.67986\n\n\nCongo, Rep.\n1964\n631.19313\n\n\nCongo, Rep.\n1965\n636.69744\n\n\nCongo, Rep.\n1966\n627.73252\n\n\nCongo, Rep.\n1967\n623.35331\n\n\nCongo, Rep.\n1968\n652.17803\n\n\nCongo, Rep.\n1969\n681.42745\n\n\nCongo, Rep.\n1970\n703.66925\n\n\nCongo, Rep.\n1971\n735.68796\n\n\nCongo, Rep.\n1972\n774.95921\n\n\nCongo, Rep.\n1973\n813.29391\n\n\nCongo, Rep.\n1974\n850.99671\n\n\nCongo, Rep.\n1975\n889.59861\n\n\nCongo, Rep.\n1976\n871.61641\n\n\nCongo, Rep.\n1977\n770.82809\n\n\nCongo, Rep.\n1978\n796.53882\n\n\nCongo, Rep.\n1979\n849.78903\n\n\nCongo, Rep.\n1980\n970.97363\n\n\nCongo, Rep.\n1981\n1108.99900\n\n\nCongo, Rep.\n1982\n1330.85475\n\n\nCongo, Rep.\n1983\n1367.90597\n\n\nCongo, Rep.\n1984\n1421.33251\n\n\nCongo, Rep.\n1985\n1364.79265\n\n\nCongo, Rep.\n1986\n1235.79496\n\n\nCongo, Rep.\n1987\n1204.15414\n\n\nCongo, Rep.\n1988\n1192.17118\n\n\nCongo, Rep.\n1989\n1190.26164\n\n\nCongo, Rep.\n1990\n1170.02459\n\n\nCongo, Rep.\n1991\n1166.29938\n\n\nCongo, Rep.\n1992\n1165.29866\n\n\nCongo, Rep.\n1993\n1123.53420\n\n\nCongo, Rep.\n1994\n1033.59324\n\n\nCongo, Rep.\n1995\n1045.77594\n\n\nCongo, Rep.\n1996\n1060.60012\n\n\nCongo, Rep.\n1997\n1024.54252\n\n\nCongo, Rep.\n1998\n1033.34947\n\n\nCongo, Rep.\n1999\n979.61444\n\n\nCongo, Rep.\n2000\n1026.83156\n\n\nCongo, Rep.\n2001\n1040.15182\n\n\nCongo, Rep.\n2002\n1062.80787\n\n\nCongo, Rep.\n2003\n1047.17437\n\n\nCongo, Rep.\n2004\n1058.23658\n\n\nCongo, Rep.\n2005\n1112.09918\n\n\nCongo, Rep.\n2006\n1150.39288\n\n\nCongo, Rep.\n2007\n1101.21998\n\n\nCongo, Rep.\n2008\n1130.54284\n\n\nCongo, Rep.\n2009\n1182.57925\n\n\nCongo, Rep.\n2010\n1253.80415\n\n\nCongo, Rep.\n2011\n1266.35606\n\n\nCosta Rica\n1960\n1797.96646\n\n\nCosta Rica\n1961\n1719.66280\n\n\nCosta Rica\n1962\n1795.49299\n\n\nCosta Rica\n1963\n1817.02628\n\n\nCosta Rica\n1964\n1829.66675\n\n\nCosta Rica\n1965\n1945.90154\n\n\nCosta Rica\n1966\n2035.71387\n\n\nCosta Rica\n1967\n2088.61059\n\n\nCosta Rica\n1968\n2201.29531\n\n\nCosta Rica\n1969\n2262.92864\n\n\nCosta Rica\n1970\n2371.55976\n\n\nCosta Rica\n1971\n2471.67753\n\n\nCosta Rica\n1972\n2612.35817\n\n\nCosta Rica\n1973\n2749.96618\n\n\nCosta Rica\n1974\n2835.31801\n\n\nCosta Rica\n1975\n2825.08616\n\n\nCosta Rica\n1976\n2905.86229\n\n\nCosta Rica\n1977\n3082.03920\n\n\nCosta Rica\n1978\n3187.50085\n\n\nCosta Rica\n1979\n3254.09065\n\n\nCosta Rica\n1980\n3189.03983\n\n\nCosta Rica\n1981\n3031.48171\n\n\nCosta Rica\n1982\n2733.29332\n\n\nCosta Rica\n1983\n2734.28688\n\n\nCosta Rica\n1984\n2824.58088\n\n\nCosta Rica\n1985\n2776.89398\n\n\nCosta Rica\n1986\n2859.06550\n\n\nCosta Rica\n1987\n2974.95965\n\n\nCosta Rica\n1988\n3008.20212\n\n\nCosta Rica\n1989\n3079.73407\n\n\nCosta Rica\n1990\n3119.63256\n\n\nCosta Rica\n1991\n3121.37006\n\n\nCosta Rica\n1992\n3325.26772\n\n\nCosta Rica\n1993\n3486.84692\n\n\nCosta Rica\n1994\n3564.27160\n\n\nCosta Rica\n1995\n3613.88100\n\n\nCosta Rica\n1996\n3555.54250\n\n\nCosta Rica\n1997\n3660.07007\n\n\nCosta Rica\n1998\n3869.52339\n\n\nCosta Rica\n1999\n4088.30441\n\n\nCosta Rica\n2000\n4068.82135\n\n\nCosta Rica\n2001\n4026.55724\n\n\nCosta Rica\n2002\n4061.98073\n\n\nCosta Rica\n2003\n4241.88777\n\n\nCosta Rica\n2004\n4344.08420\n\n\nCosta Rica\n2005\n4521.01195\n\n\nCosta Rica\n2006\n4836.67431\n\n\nCosta Rica\n2007\n5137.48526\n\n\nCosta Rica\n2008\n5196.68914\n\n\nCosta Rica\n2009\n5066.96600\n\n\nCosta Rica\n2010\n5226.56618\n\n\nCosta Rica\n2011\n5367.79988\n\n\nCote d'Ivoire\n1960\n550.69035\n\n\nCote d'Ivoire\n1961\n583.08655\n\n\nCote d'Ivoire\n1962\n567.79027\n\n\nCote d'Ivoire\n1963\n624.84493\n\n\nCote d'Ivoire\n1964\n706.21508\n\n\nCote d'Ivoire\n1965\n657.58915\n\n\nCote d'Ivoire\n1966\n705.24053\n\n\nCote d'Ivoire\n1967\n708.99337\n\n\nCote d'Ivoire\n1968\n766.60510\n\n\nCote d'Ivoire\n1969\n806.01062\n\n\nCote d'Ivoire\n1970\n852.92559\n\n\nCote d'Ivoire\n1971\n894.12280\n\n\nCote d'Ivoire\n1972\n891.88588\n\n\nCote d'Ivoire\n1973\n903.55321\n\n\nCote d'Ivoire\n1974\n900.93669\n\n\nCote d'Ivoire\n1975\n931.75050\n\n\nCote d'Ivoire\n1976\n1004.89384\n\n\nCote d'Ivoire\n1977\n1029.96438\n\n\nCote d'Ivoire\n1978\n1091.20033\n\n\nCote d'Ivoire\n1979\n1067.71347\n\n\nCote d'Ivoire\n1980\n909.00707\n\n\nCote d'Ivoire\n1981\n900.07380\n\n\nCote d'Ivoire\n1982\n863.43116\n\n\nCote d'Ivoire\n1983\n795.23653\n\n\nCote d'Ivoire\n1984\n742.65929\n\n\nCote d'Ivoire\n1985\n746.14948\n\n\nCote d'Ivoire\n1986\n742.08335\n\n\nCote d'Ivoire\n1987\n713.40161\n\n\nCote d'Ivoire\n1988\n696.85952\n\n\nCote d'Ivoire\n1989\n693.30783\n\n\nCote d'Ivoire\n1990\n662.86753\n\n\nCote d'Ivoire\n1991\n641.20729\n\n\nCote d'Ivoire\n1992\n618.80257\n\n\nCote d'Ivoire\n1993\n598.01850\n\n\nCote d'Ivoire\n1994\n584.52539\n\n\nCote d'Ivoire\n1995\n608.12003\n\n\nCote d'Ivoire\n1996\n637.20587\n\n\nCote d'Ivoire\n1997\n656.15843\n\n\nCote d'Ivoire\n1998\n670.61471\n\n\nCote d'Ivoire\n1999\n665.97289\n\n\nCote d'Ivoire\n2000\n628.22811\n\n\nCote d'Ivoire\n2001\n616.52358\n\n\nCote d'Ivoire\n2002\n597.52298\n\n\nCote d'Ivoire\n2003\n578.96713\n\n\nCote d'Ivoire\n2004\n580.16829\n\n\nCote d'Ivoire\n2005\n578.03061\n\n\nCote d'Ivoire\n2006\n572.29713\n\n\nCote d'Ivoire\n2007\n572.09627\n\n\nCote d'Ivoire\n2008\n574.93510\n\n\nCote d'Ivoire\n2009\n585.30449\n\n\nCote d'Ivoire\n2010\n587.54454\n\n\nCote d'Ivoire\n2011\n548.23144\n\n\nCroatia\n1995\n3900.57775\n\n\nCroatia\n1996\n4292.38737\n\n\nCroatia\n1997\n4495.24426\n\n\nCroatia\n1998\n4656.41563\n\n\nCroatia\n1999\n4554.22835\n\n\nCroatia\n2000\n4861.67751\n\n\nCroatia\n2001\n5023.53028\n\n\nCroatia\n2002\n5268.59143\n\n\nCroatia\n2003\n5551.57104\n\n\nCroatia\n2004\n5782.06643\n\n\nCroatia\n2005\n6025.45548\n\n\nCroatia\n2006\n6325.67427\n\n\nCroatia\n2007\n6651.74148\n\n\nCroatia\n2008\n6793.44909\n\n\nCroatia\n2009\n6328.63075\n\n\nCroatia\n2010\n6255.23989\n\n\nCroatia\n2011\n6270.03572\n\n\nCuba\n1970\n1777.65568\n\n\nCuba\n1971\n1896.65892\n\n\nCuba\n1972\n1954.09254\n\n\nCuba\n1973\n1988.12112\n\n\nCuba\n1974\n1977.82050\n\n\nCuba\n1975\n2137.22258\n\n\nCuba\n1976\n2228.53067\n\n\nCuba\n1977\n2400.24332\n\n\nCuba\n1978\n2538.68939\n\n\nCuba\n1979\n2549.20884\n\n\nCuba\n1980\n2411.27844\n\n\nCuba\n1981\n2871.36985\n\n\nCuba\n1982\n3113.77633\n\n\nCuba\n1983\n3267.93662\n\n\nCuba\n1984\n3508.54396\n\n\nCuba\n1985\n3540.63523\n\n\nCuba\n1986\n3514.02316\n\n\nCuba\n1987\n3395.64315\n\n\nCuba\n1988\n3484.16929\n\n\nCuba\n1989\n3471.96065\n\n\nCuba\n1990\n3338.78508\n\n\nCuba\n1991\n2958.32767\n\n\nCuba\n1992\n2597.94293\n\n\nCuba\n1993\n2198.38268\n\n\nCuba\n1994\n2202.47748\n\n\nCuba\n1995\n2245.63487\n\n\nCuba\n1996\n2410.95738\n\n\nCuba\n1997\n2468.38978\n\n\nCuba\n1998\n2463.46221\n\n\nCuba\n1999\n2607.24643\n\n\nCuba\n2000\n2752.55209\n\n\nCuba\n2001\n2831.00354\n\n\nCuba\n2002\n2862.38565\n\n\nCuba\n2003\n2962.26918\n\n\nCuba\n2004\n3125.70481\n\n\nCuba\n2005\n3469.88520\n\n\nCuba\n2006\n3884.79851\n\n\nCuba\n2007\n4165.60038\n\n\nCuba\n2008\n4337.77695\n\n\nCuba\n2009\n4402.30755\n\n\nCuba\n2010\n4495.05465\n\n\nCyprus\n1975\n3846.25139\n\n\nCyprus\n1976\n4663.38247\n\n\nCyprus\n1977\n5425.75116\n\n\nCyprus\n1978\n5826.08204\n\n\nCyprus\n1979\n6353.59573\n\n\nCyprus\n1980\n6646.53721\n\n\nCyprus\n1981\n6701.62542\n\n\nCyprus\n1982\n7021.59548\n\n\nCyprus\n1983\n7352.66680\n\n\nCyprus\n1984\n7893.65797\n\n\nCyprus\n1985\n8179.03238\n\n\nCyprus\n1986\n8385.25910\n\n\nCyprus\n1987\n8880.59908\n\n\nCyprus\n1988\n9546.71385\n\n\nCyprus\n1989\n10159.56615\n\n\nCyprus\n1990\n10681.76480\n\n\nCyprus\n1991\n10485.78175\n\n\nCyprus\n1992\n11170.27638\n\n\nCyprus\n1993\n10980.08812\n\n\nCyprus\n1994\n11389.88722\n\n\nCyprus\n1995\n11867.54710\n\n\nCyprus\n1996\n11895.83673\n\n\nCyprus\n1997\n12003.84645\n\n\nCyprus\n1998\n12455.57131\n\n\nCyprus\n1999\n12913.95440\n\n\nCyprus\n2000\n13421.65542\n\n\nCyprus\n2001\n13812.27004\n\n\nCyprus\n2002\n13926.54510\n\n\nCyprus\n2003\n13952.06534\n\n\nCyprus\n2004\n14206.95908\n\n\nCyprus\n2005\n14411.32418\n\n\nCyprus\n2006\n14719.25766\n\n\nCyprus\n2007\n15248.86529\n\n\nCyprus\n2008\n15620.66611\n\n\nCyprus\n2009\n15227.17046\n\n\nCyprus\n2010\n15328.33481\n\n\nCyprus\n2011\n15378.16704\n\n\nCzech Republic\n1990\n5401.37932\n\n\nCzech Republic\n1991\n4785.47199\n\n\nCzech Republic\n1992\n4756.37974\n\n\nCzech Republic\n1993\n4754.38496\n\n\nCzech Republic\n1994\n4890.93740\n\n\nCzech Republic\n1995\n5198.40146\n\n\nCzech Republic\n1996\n5440.70912\n\n\nCzech Republic\n1997\n5400.15979\n\n\nCzech Republic\n1998\n5392.51005\n\n\nCzech Republic\n1999\n5488.68228\n\n\nCzech Republic\n2000\n5724.83747\n\n\nCzech Republic\n2001\n5922.82176\n\n\nCzech Republic\n2002\n6068.85978\n\n\nCzech Republic\n2003\n6295.88499\n\n\nCzech Republic\n2004\n6588.89579\n\n\nCzech Republic\n2005\n7020.19041\n\n\nCzech Republic\n2006\n7488.66902\n\n\nCzech Republic\n2007\n7868.31627\n\n\nCzech Republic\n2008\n8041.97453\n\n\nCzech Republic\n2009\n7633.49348\n\n\nCzech Republic\n2010\n7799.50951\n\n\nCzech Republic\n2011\n7926.93819\n\n\nDenmark\n1960\n11390.66975\n\n\nDenmark\n1961\n12032.96040\n\n\nDenmark\n1962\n12616.25178\n\n\nDenmark\n1963\n12596.99811\n\n\nDenmark\n1964\n13655.16097\n\n\nDenmark\n1965\n14166.36717\n\n\nDenmark\n1966\n14438.24780\n\n\nDenmark\n1967\n14815.00155\n\n\nDenmark\n1968\n15310.39116\n\n\nDenmark\n1969\n16188.61838\n\n\nDenmark\n1970\n16392.96976\n\n\nDenmark\n1971\n16768.14070\n\n\nDenmark\n1972\n17368.57872\n\n\nDenmark\n1973\n17912.89592\n\n\nDenmark\n1974\n17684.20628\n\n\nDenmark\n1975\n17417.91937\n\n\nDenmark\n1976\n18432.89087\n\n\nDenmark\n1977\n18739.19748\n\n\nDenmark\n1978\n19105.99455\n\n\nDenmark\n1979\n19811.98194\n\n\nDenmark\n1980\n19691.43009\n\n\nDenmark\n1981\n19522.33061\n\n\nDenmark\n1982\n20262.27005\n\n\nDenmark\n1983\n20813.88373\n\n\nDenmark\n1984\n21692.26082\n\n\nDenmark\n1985\n22556.10850\n\n\nDenmark\n1986\n23640.82914\n\n\nDenmark\n1987\n23679.36030\n\n\nDenmark\n1988\n23634.09096\n\n\nDenmark\n1989\n23755.23628\n\n\nDenmark\n1990\n24097.90792\n\n\nDenmark\n1991\n24348.01403\n\n\nDenmark\n1992\n24747.03263\n\n\nDenmark\n1993\n24642.62019\n\n\nDenmark\n1994\n25916.55271\n\n\nDenmark\n1995\n26572.14846\n\n\nDenmark\n1996\n27171.14342\n\n\nDenmark\n1997\n27923.91653\n\n\nDenmark\n1998\n28423.78832\n\n\nDenmark\n1999\n29055.26650\n\n\nDenmark\n2000\n29980.15547\n\n\nDenmark\n2001\n30083.47866\n\n\nDenmark\n2002\n30127.21553\n\n\nDenmark\n2003\n30160.70124\n\n\nDenmark\n2004\n30773.70579\n\n\nDenmark\n2005\n31439.43910\n\n\nDenmark\n2006\n32400.06061\n\n\nDenmark\n2007\n32767.40349\n\n\nDenmark\n2008\n32320.10054\n\n\nDenmark\n2009\n30326.03845\n\n\nDenmark\n2010\n30667.82486\n\n\nDenmark\n2011\n30860.12808\n\n\nDjibouti\n1990\n1173.82654\n\n\nDjibouti\n1991\n1086.23245\n\n\nDjibouti\n1992\n1062.65898\n\n\nDjibouti\n1993\n977.34474\n\n\nDjibouti\n1994\n952.89246\n\n\nDjibouti\n1995\n900.10446\n\n\nDjibouti\n1996\n839.09204\n\n\nDjibouti\n1997\n806.16175\n\n\nDjibouti\n1998\n779.80606\n\n\nDjibouti\n1999\n771.45433\n\n\nDjibouti\n2000\n753.11965\n\n\nDjibouti\n2001\n750.42125\n\n\nDjibouti\n2002\n754.29439\n\n\nDjibouti\n2003\n764.09676\n\n\nDjibouti\n2004\n779.24390\n\n\nDjibouti\n2005\n789.39389\n\n\nDjibouti\n2006\n811.90176\n\n\nDjibouti\n2007\n837.27793\n\n\nDjibouti\n2008\n869.08548\n\n\nDjibouti\n2009\n895.31834\n\n\nDominica\n1977\n2202.69071\n\n\nDominica\n1978\n2434.54366\n\n\nDominica\n1979\n1967.43867\n\n\nDominica\n1980\n2236.36766\n\n\nDominica\n1981\n2504.55691\n\n\nDominica\n1982\n2615.32287\n\n\nDominica\n1983\n2700.77461\n\n\nDominica\n1984\n2867.85606\n\n\nDominica\n1985\n2927.37680\n\n\nDominica\n1986\n3160.96840\n\n\nDominica\n1987\n3429.48791\n\n\nDominica\n1988\n3755.45373\n\n\nDominica\n1989\n3772.61538\n\n\nDominica\n1990\n3988.44216\n\n\nDominica\n1991\n4017.44667\n\n\nDominica\n1992\n4092.76559\n\n\nDominica\n1993\n4148.75917\n\n\nDominica\n1994\n4198.17366\n\n\nDominica\n1995\n4280.23592\n\n\nDominica\n1996\n4404.41973\n\n\nDominica\n1997\n4491.40814\n\n\nDominica\n1998\n4743.58451\n\n\nDominica\n1999\n4679.63835\n\n\nDominica\n2000\n4657.01908\n\n\nDominica\n2001\n4669.03216\n\n\nDominica\n2002\n4579.13804\n\n\nDominica\n2003\n4924.82000\n\n\nDominica\n2004\n5082.32232\n\n\nDominica\n2005\n5052.62409\n\n\nDominica\n2006\n5290.61360\n\n\nDominica\n2007\n5596.62404\n\n\nDominica\n2008\n6071.02325\n\n\nDominica\n2009\n6451.44155\n\n\nDominica\n2010\n6529.52963\n\n\nDominica\n2011\n6518.65988\n\n\nDominican Republic\n1960\n912.46954\n\n\nDominican Republic\n1961\n862.06720\n\n\nDominican Republic\n1962\n976.18870\n\n\nDominican Republic\n1963\n1006.28234\n\n\nDominican Republic\n1964\n1040.43390\n\n\nDominican Republic\n1965\n882.37635\n\n\nDominican Republic\n1966\n970.82119\n\n\nDominican Republic\n1967\n973.36131\n\n\nDominican Republic\n1968\n947.36422\n\n\nDominican Republic\n1969\n1020.71437\n\n\nDominican Republic\n1970\n1173.23560\n\n\nDominican Republic\n1971\n1265.42842\n\n\nDominican Republic\n1972\n1359.81141\n\n\nDominican Republic\n1973\n1495.25444\n\n\nDominican Republic\n1974\n1544.73310\n\n\nDominican Republic\n1975\n1584.62429\n\n\nDominican Republic\n1976\n1650.24638\n\n\nDominican Republic\n1977\n1691.38331\n\n\nDominican Republic\n1978\n1687.35000\n\n\nDominican Republic\n1979\n1723.21894\n\n\nDominican Republic\n1980\n1818.07186\n\n\nDominican Republic\n1981\n1852.91685\n\n\nDominican Republic\n1982\n1842.04440\n\n\nDominican Republic\n1983\n1884.42152\n\n\nDominican Republic\n1984\n1866.13618\n\n\nDominican Republic\n1985\n1787.02097\n\n\nDominican Republic\n1986\n1810.59187\n\n\nDominican Republic\n1987\n1952.02580\n\n\nDominican Republic\n1988\n1952.99360\n\n\nDominican Republic\n1989\n1997.49216\n\n\nDominican Republic\n1990\n1850.69501\n\n\nDominican Republic\n1991\n1831.22132\n\n\nDominican Republic\n1992\n1984.32573\n\n\nDominican Republic\n1993\n2087.09071\n\n\nDominican Republic\n1994\n2095.65584\n\n\nDominican Republic\n1995\n2171.30113\n\n\nDominican Republic\n1996\n2286.15887\n\n\nDominican Republic\n1997\n2428.19528\n\n\nDominican Republic\n1998\n2556.58142\n\n\nDominican Republic\n1999\n2685.20833\n\n\nDominican Republic\n2000\n2792.91770\n\n\nDominican Republic\n2001\n2799.68995\n\n\nDominican Republic\n2002\n2916.78335\n\n\nDominican Republic\n2003\n2865.84728\n\n\nDominican Republic\n2004\n2860.65197\n\n\nDominican Republic\n2005\n3080.31550\n\n\nDominican Republic\n2006\n3360.40866\n\n\nDominican Republic\n2007\n3594.07325\n\n\nDominican Republic\n2008\n3730.90985\n\n\nDominican Republic\n2009\n3807.80979\n\n\nDominican Republic\n2010\n4049.03911\n\n\nDominican Republic\n2011\n4176.34438\n\n\nEcuador\n1960\n820.31111\n\n\nEcuador\n1961\n809.10239\n\n\nEcuador\n1962\n821.46868\n\n\nEcuador\n1963\n828.36767\n\n\nEcuador\n1964\n866.85674\n\n\nEcuador\n1965\n868.04891\n\n\nEcuador\n1966\n841.74306\n\n\nEcuador\n1967\n874.10498\n\n\nEcuador\n1968\n868.15102\n\n\nEcuador\n1969\n888.62555\n\n\nEcuador\n1970\n928.38972\n\n\nEcuador\n1971\n959.72216\n\n\nEcuador\n1972\n974.89988\n\n\nEcuador\n1973\n1099.97189\n\n\nEcuador\n1974\n1157.88392\n\n\nEcuador\n1975\n1218.66367\n\n\nEcuador\n1976\n1274.63529\n\n\nEcuador\n1977\n1267.45608\n\n\nEcuador\n1978\n1315.91146\n\n\nEcuador\n1979\n1346.16997\n\n\nEcuador\n1980\n1367.51729\n\n\nEcuador\n1981\n1375.31471\n\n\nEcuador\n1982\n1331.01871\n\n\nEcuador\n1983\n1263.22899\n\n\nEcuador\n1984\n1277.74053\n\n\nEcuador\n1985\n1281.52585\n\n\nEcuador\n1986\n1300.34287\n\n\nEcuador\n1987\n1241.26048\n\n\nEcuador\n1988\n1312.86439\n\n\nEcuador\n1989\n1294.73961\n\n\nEcuador\n1990\n1299.21120\n\n\nEcuador\n1991\n1336.35283\n\n\nEcuador\n1992\n1327.24929\n\n\nEcuador\n1993\n1303.46989\n\n\nEcuador\n1994\n1337.83342\n\n\nEcuador\n1995\n1336.07995\n\n\nEcuador\n1996\n1344.58676\n\n\nEcuador\n1997\n1376.51619\n\n\nEcuador\n1998\n1383.78763\n\n\nEcuador\n1999\n1276.48647\n\n\nEcuador\n2000\n1291.34161\n\n\nEcuador\n2001\n1337.82290\n\n\nEcuador\n2002\n1382.48460\n\n\nEcuador\n2003\n1403.49299\n\n\nEcuador\n2004\n1501.79690\n\n\nEcuador\n2005\n1562.32686\n\n\nEcuador\n2006\n1610.96734\n\n\nEcuador\n2007\n1618.86800\n\n\nEcuador\n2008\n1710.53306\n\n\nEcuador\n2009\n1692.06720\n\n\nEcuador\n2010\n1728.05216\n\n\nEcuador\n2011\n1837.00858\n\n\nEgypt\n1960\n430.36453\n\n\nEgypt\n1961\n437.60678\n\n\nEgypt\n1962\n455.52968\n\n\nEgypt\n1963\n484.04531\n\n\nEgypt\n1964\n510.14502\n\n\nEgypt\n1965\n543.15551\n\n\nEgypt\n1966\n535.15452\n\n\nEgypt\n1967\n525.14531\n\n\nEgypt\n1968\n526.25958\n\n\nEgypt\n1969\n548.69908\n\n\nEgypt\n1970\n565.97607\n\n\nEgypt\n1971\n572.26259\n\n\nEgypt\n1972\n571.03752\n\n\nEgypt\n1973\n562.60741\n\n\nEgypt\n1974\n564.12457\n\n\nEgypt\n1975\n601.16731\n\n\nEgypt\n1976\n673.96677\n\n\nEgypt\n1977\n743.65936\n\n\nEgypt\n1978\n769.04962\n\n\nEgypt\n1979\n796.99755\n\n\nEgypt\n1980\n856.60079\n\n\nEgypt\n1981\n868.05886\n\n\nEgypt\n1982\n931.62613\n\n\nEgypt\n1983\n976.88754\n\n\nEgypt\n1984\n1011.73856\n\n\nEgypt\n1985\n1052.84637\n\n\nEgypt\n1986\n1054.88802\n\n\nEgypt\n1987\n1055.69772\n\n\nEgypt\n1988\n1085.77768\n\n\nEgypt\n1989\n1114.51320\n\n\nEgypt\n1990\n1153.68451\n\n\nEgypt\n1991\n1143.81312\n\n\nEgypt\n1992\n1173.21007\n\n\nEgypt\n1993\n1186.80573\n\n\nEgypt\n1994\n1213.50565\n\n\nEgypt\n1995\n1248.73270\n\n\nEgypt\n1996\n1289.08093\n\n\nEgypt\n1997\n1337.00894\n\n\nEgypt\n1998\n1367.34265\n\n\nEgypt\n1999\n1425.76465\n\n\nEgypt\n2000\n1475.84441\n\n\nEgypt\n2001\n1500.52274\n\n\nEgypt\n2002\n1507.92935\n\n\nEgypt\n2003\n1527.27426\n\n\nEgypt\n2004\n1560.38394\n\n\nEgypt\n2005\n1600.32184\n\n\nEgypt\n2006\n1678.95480\n\n\nEgypt\n2007\n1765.86943\n\n\nEgypt\n2008\n1858.85845\n\n\nEgypt\n2009\n1911.96450\n\n\nEgypt\n2010\n1975.55003\n\n\nEgypt\n2011\n1976.61483\n\n\nEl Salvador\n1960\n1448.82952\n\n\nEl Salvador\n1961\n1454.72942\n\n\nEl Salvador\n1962\n1577.79676\n\n\nEl Salvador\n1963\n1593.71042\n\n\nEl Salvador\n1964\n1687.87540\n\n\nEl Salvador\n1965\n1724.39112\n\n\nEl Salvador\n1966\n1793.60479\n\n\nEl Salvador\n1967\n1837.39495\n\n\nEl Salvador\n1968\n1844.49917\n\n\nEl Salvador\n1969\n1857.14550\n\n\nEl Salvador\n1970\n1861.49408\n\n\nEl Salvador\n1971\n1882.63898\n\n\nEl Salvador\n1972\n1946.63242\n\n\nEl Salvador\n1973\n1990.62900\n\n\nEl Salvador\n1974\n2047.06660\n\n\nEl Salvador\n1975\n2059.49806\n\n\nEl Salvador\n1976\n2117.43672\n\n\nEl Salvador\n1977\n2215.46804\n\n\nEl Salvador\n1978\n2289.13826\n\n\nEl Salvador\n1979\n2154.45931\n\n\nEl Salvador\n1980\n1869.27772\n\n\nEl Salvador\n1981\n1648.01129\n\n\nEl Salvador\n1982\n1521.74468\n\n\nEl Salvador\n1983\n1523.92489\n\n\nEl Salvador\n1984\n1523.85351\n\n\nEl Salvador\n1985\n1513.30242\n\n\nEl Salvador\n1986\n1496.86732\n\n\nEl Salvador\n1987\n1515.34718\n\n\nEl Salvador\n1988\n1524.36423\n\n\nEl Salvador\n1989\n1518.81152\n\n\nEl Salvador\n1990\n1570.04653\n\n\nEl Salvador\n1991\n1602.01894\n\n\nEl Salvador\n1992\n1696.18596\n\n\nEl Salvador\n1993\n1793.28802\n\n\nEl Salvador\n1994\n1875.00008\n\n\nEl Salvador\n1995\n1970.70036\n\n\nEl Salvador\n1996\n1984.25094\n\n\nEl Salvador\n1997\n2051.60425\n\n\nEl Salvador\n1998\n2114.40797\n\n\nEl Salvador\n1999\n2175.12098\n\n\nEl Salvador\n2000\n2211.02246\n\n\nEl Salvador\n2001\n2239.11865\n\n\nEl Salvador\n2002\n2283.02065\n\n\nEl Salvador\n2003\n2327.64422\n\n\nEl Salvador\n2004\n2362.74767\n\n\nEl Salvador\n2005\n2438.14365\n\n\nEl Salvador\n2006\n2523.52360\n\n\nEl Salvador\n2007\n2609.08992\n\n\nEl Salvador\n2008\n2629.93790\n\n\nEl Salvador\n2009\n2534.80597\n\n\nEl Salvador\n2010\n2555.88768\n\n\nEl Salvador\n2011\n2579.11561\n\n\nEquatorial Guinea\n1985\n621.47673\n\n\nEquatorial Guinea\n1986\n578.34691\n\n\nEquatorial Guinea\n1987\n581.48919\n\n\nEquatorial Guinea\n1988\n578.48133\n\n\nEquatorial Guinea\n1989\n554.60614\n\n\nEquatorial Guinea\n1990\n554.98286\n\n\nEquatorial Guinea\n1991\n530.71920\n\n\nEquatorial Guinea\n1992\n567.93029\n\n\nEquatorial Guinea\n1993\n583.42537\n\n\nEquatorial Guinea\n1994\n592.81714\n\n\nEquatorial Guinea\n1995\n655.13963\n\n\nEquatorial Guinea\n1996\n818.69000\n\n\nEquatorial Guinea\n1997\n1356.51614\n\n\nEquatorial Guinea\n1998\n1601.03901\n\n\nEquatorial Guinea\n1999\n2192.89131\n\n\nEquatorial Guinea\n2000\n2388.34862\n\n\nEquatorial Guinea\n2001\n3779.94009\n\n\nEquatorial Guinea\n2002\n4375.25886\n\n\nEquatorial Guinea\n2003\n4832.68804\n\n\nEquatorial Guinea\n2004\n6467.83244\n\n\nEquatorial Guinea\n2005\n6888.76703\n\n\nEquatorial Guinea\n2006\n6774.47815\n\n\nEquatorial Guinea\n2007\n7994.38639\n\n\nEquatorial Guinea\n2008\n8603.11169\n\n\nEquatorial Guinea\n2009\n8750.17737\n\n\nEquatorial Guinea\n2010\n8465.56906\n\n\nEquatorial Guinea\n2011\n8875.13821\n\n\nEritrea\n1992\n134.92036\n\n\nEritrea\n1993\n153.24096\n\n\nEritrea\n1994\n185.43890\n\n\nEritrea\n1995\n189.16959\n\n\nEritrea\n1996\n203.48493\n\n\nEritrea\n1997\n214.82834\n\n\nEritrea\n1998\n212.69848\n\n\nEritrea\n1999\n206.01936\n\n\nEritrea\n2000\n172.75716\n\n\nEritrea\n2001\n201.49933\n\n\nEritrea\n2002\n199.12032\n\n\nEritrea\n2003\n185.81250\n\n\nEritrea\n2004\n180.97370\n\n\nEritrea\n2005\n178.67382\n\n\nEritrea\n2006\n170.87774\n\n\nEritrea\n2007\n167.79922\n\n\nEritrea\n2008\n146.80840\n\n\nEritrea\n2009\n147.99800\n\n\nEritrea\n2010\n146.77663\n\n\nEritrea\n2011\n154.80966\n\n\nEstonia\n1995\n2857.30984\n\n\nEstonia\n1996\n3070.57377\n\n\nEstonia\n1997\n3470.31618\n\n\nEstonia\n1998\n3742.41023\n\n\nEstonia\n1999\n3760.74839\n\n\nEstonia\n2000\n4143.92719\n\n\nEstonia\n2001\n4421.71260\n\n\nEstonia\n2002\n4730.72459\n\n\nEstonia\n2003\n5117.24162\n\n\nEstonia\n2004\n5459.03869\n\n\nEstonia\n2005\n5956.41926\n\n\nEstonia\n2006\n6570.33014\n\n\nEstonia\n2007\n7072.43586\n\n\nEstonia\n2008\n6783.90338\n\n\nEstonia\n2009\n5831.01055\n\n\nEstonia\n2010\n6025.71339\n\n\nEstonia\n2011\n6525.54127\n\n\nEthiopia\n1981\n140.66849\n\n\nEthiopia\n1982\n138.01335\n\n\nEthiopia\n1983\n144.79477\n\n\nEthiopia\n1984\n136.18842\n\n\nEthiopia\n1985\n117.15367\n\n\nEthiopia\n1986\n124.41276\n\n\nEthiopia\n1987\n137.17809\n\n\nEthiopia\n1988\n133.48689\n\n\nEthiopia\n1989\n128.71665\n\n\nEthiopia\n1990\n127.88813\n\n\nEthiopia\n1991\n114.80418\n\n\nEthiopia\n1992\n101.33816\n\n\nEthiopia\n1993\n110.85959\n\n\nEthiopia\n1994\n110.71517\n\n\nEthiopia\n1995\n113.87153\n\n\nEthiopia\n1996\n124.24812\n\n\nEthiopia\n1997\n124.52476\n\n\nEthiopia\n1998\n116.94601\n\n\nEthiopia\n1999\n119.72011\n\n\nEthiopia\n2000\n123.68092\n\n\nEthiopia\n2001\n130.51344\n\n\nEthiopia\n2002\n129.15713\n\n\nEthiopia\n2003\n123.25367\n\n\nEthiopia\n2004\n136.61873\n\n\nEthiopia\n2005\n149.19187\n\n\nEthiopia\n2006\n161.59290\n\n\nEthiopia\n2007\n176.10740\n\n\nEthiopia\n2008\n190.86322\n\n\nEthiopia\n2009\n203.20990\n\n\nEthiopia\n2010\n218.65864\n\n\nEthiopia\n2011\n229.67695\n\n\nFaeroe Islands\n2000\n23224.09863\n\n\nFiji\n1960\n1111.12730\n\n\nFiji\n1961\n1111.30736\n\n\nFiji\n1962\n1111.98162\n\n\nFiji\n1963\n1143.00663\n\n\nFiji\n1964\n1160.83667\n\n\nFiji\n1965\n1096.77145\n\n\nFiji\n1966\n1068.10730\n\n\nFiji\n1967\n1181.96497\n\n\nFiji\n1968\n1247.45711\n\n\nFiji\n1969\n1252.78439\n\n\nFiji\n1970\n1382.42519\n\n\nFiji\n1971\n1446.87472\n\n\nFiji\n1972\n1523.04791\n\n\nFiji\n1973\n1665.25019\n\n\nFiji\n1974\n1674.48376\n\n\nFiji\n1975\n1650.64261\n\n\nFiji\n1976\n1664.25825\n\n\nFiji\n1977\n1730.89808\n\n\nFiji\n1978\n1731.06766\n\n\nFiji\n1979\n1904.58261\n\n\nFiji\n1980\n1833.57711\n\n\nFiji\n1981\n1902.59685\n\n\nFiji\n1982\n1742.66609\n\n\nFiji\n1983\n1631.65320\n\n\nFiji\n1984\n1730.79138\n\n\nFiji\n1985\n1624.80094\n\n\nFiji\n1986\n1734.07522\n\n\nFiji\n1987\n1612.40488\n\n\nFiji\n1988\n1625.30203\n\n\nFiji\n1989\n1742.22247\n\n\nFiji\n1990\n1833.18436\n\n\nFiji\n1991\n1767.01745\n\n\nFiji\n1992\n1851.80099\n\n\nFiji\n1993\n1864.72927\n\n\nFiji\n1994\n1932.33180\n\n\nFiji\n1995\n1955.29386\n\n\nFiji\n1996\n2025.48405\n\n\nFiji\n1997\n1959.81460\n\n\nFiji\n1998\n1966.64641\n\n\nFiji\n1999\n2123.15951\n\n\nFiji\n2000\n2074.74732\n\n\nFiji\n2001\n2108.28928\n\n\nFiji\n2002\n2171.60738\n\n\nFiji\n2003\n2190.63191\n\n\nFiji\n2004\n2301.77048\n\n\nFiji\n2005\n2308.15826\n\n\nFiji\n2006\n2335.32125\n\n\nFiji\n2007\n2295.43830\n\n\nFiji\n2008\n2296.09836\n\n\nFiji\n2009\n2243.81904\n\n\nFiji\n2010\n2218.14696\n\n\nFiji\n2011\n2242.68926\n\n\nFinland\n1960\n7306.04115\n\n\nFinland\n1961\n7806.35631\n\n\nFinland\n1962\n7984.65728\n\n\nFinland\n1963\n8188.86268\n\n\nFinland\n1964\n8570.04219\n\n\nFinland\n1965\n8994.46402\n\n\nFinland\n1966\n9173.44009\n\n\nFinland\n1967\n9321.77727\n\n\nFinland\n1968\n9493.76464\n\n\nFinland\n1969\n10410.56839\n\n\nFinland\n1970\n11007.46695\n\n\nFinland\n1971\n11252.69389\n\n\nFinland\n1972\n12051.20233\n\n\nFinland\n1973\n12819.82547\n\n\nFinland\n1974\n13165.63493\n\n\nFinland\n1975\n13343.90089\n\n\nFinland\n1976\n13349.55224\n\n\nFinland\n1977\n13344.14487\n\n\nFinland\n1978\n13694.37881\n\n\nFinland\n1979\n14632.23762\n\n\nFinland\n1980\n15372.87969\n\n\nFinland\n1981\n15504.38506\n\n\nFinland\n1982\n15887.87324\n\n\nFinland\n1983\n16271.03092\n\n\nFinland\n1984\n16687.27239\n\n\nFinland\n1985\n17166.60394\n\n\nFinland\n1986\n17562.96619\n\n\nFinland\n1987\n18124.43227\n\n\nFinland\n1988\n19015.40367\n\n\nFinland\n1989\n19908.95772\n\n\nFinland\n1990\n19921.02316\n\n\nFinland\n1991\n18623.78039\n\n\nFinland\n1992\n17874.02535\n\n\nFinland\n1993\n17643.54519\n\n\nFinland\n1994\n18209.53220\n\n\nFinland\n1995\n18858.96271\n\n\nFinland\n1996\n19468.15567\n\n\nFinland\n1997\n20614.91289\n\n\nFinland\n1998\n21594.65366\n\n\nFinland\n1999\n22386.62957\n\n\nFinland\n2000\n23529.53846\n\n\nFinland\n2001\n24012.15877\n\n\nFinland\n2002\n24393.37625\n\n\nFinland\n2003\n24825.00902\n\n\nFinland\n2004\n25774.06477\n\n\nFinland\n2005\n26435.02344\n\n\nFinland\n2006\n27495.24136\n\n\nFinland\n2007\n28839.22241\n\n\nFinland\n2008\n28789.54385\n\n\nFinland\n2009\n26205.68832\n\n\nFinland\n2010\n26953.22055\n\n\nFinland\n2011\n27570.48520\n\n\nFrance\n1960\n7499.89477\n\n\nFrance\n1961\n7809.49052\n\n\nFrance\n1962\n8215.26494\n\n\nFrance\n1963\n8534.02848\n\n\nFrance\n1964\n8970.91838\n\n\nFrance\n1965\n9289.06636\n\n\nFrance\n1966\n9674.39936\n\n\nFrance\n1967\n10039.63302\n\n\nFrance\n1968\n10386.01969\n\n\nFrance\n1969\n11029.23720\n\n\nFrance\n1970\n11572.96622\n\n\nFrance\n1971\n12093.53183\n\n\nFrance\n1972\n12540.90377\n\n\nFrance\n1973\n13265.17128\n\n\nFrance\n1974\n13787.34561\n\n\nFrance\n1975\n13546.39505\n\n\nFrance\n1976\n14065.37599\n\n\nFrance\n1977\n14502.01334\n\n\nFrance\n1978\n15005.48142\n\n\nFrance\n1979\n15459.34685\n\n\nFrance\n1980\n15641.97106\n\n\nFrance\n1981\n15716.90473\n\n\nFrance\n1982\n16011.14006\n\n\nFrance\n1983\n16117.64077\n\n\nFrance\n1984\n16265.14010\n\n\nFrance\n1985\n16432.99036\n\n\nFrance\n1986\n16708.21534\n\n\nFrance\n1987\n17009.83132\n\n\nFrance\n1988\n17704.04983\n\n\nFrance\n1989\n18346.29154\n\n\nFrance\n1990\n18731.66202\n\n\nFrance\n1991\n18836.73334\n\n\nFrance\n1992\n19029.93463\n\n\nFrance\n1993\n18822.69755\n\n\nFrance\n1994\n19166.19677\n\n\nFrance\n1995\n19478.17581\n\n\nFrance\n1996\n19606.05309\n\n\nFrance\n1997\n19952.90591\n\n\nFrance\n1998\n20539.07007\n\n\nFrance\n1999\n21146.39522\n\n\nFrance\n2000\n21774.99299\n\n\nFrance\n2001\n22014.02474\n\n\nFrance\n2002\n22057.63515\n\n\nFrance\n2003\n22098.99175\n\n\nFrance\n2004\n22495.24481\n\n\nFrance\n2005\n22734.23332\n\n\nFrance\n2006\n23133.35113\n\n\nFrance\n2007\n23516.22317\n\n\nFrance\n2008\n23366.40262\n\n\nFrance\n2009\n22508.76261\n\n\nFrance\n2010\n22758.15413\n\n\nFrance\n2011\n23016.84778\n\n\nFrench Polynesia\n1965\n8675.78182\n\n\nFrench Polynesia\n1966\n9178.65682\n\n\nFrench Polynesia\n1967\n8434.02201\n\n\nFrench Polynesia\n1968\n9348.35593\n\n\nFrench Polynesia\n1969\n8779.49851\n\n\nFrench Polynesia\n1970\n8621.10135\n\n\nFrench Polynesia\n1971\n9342.46512\n\n\nFrench Polynesia\n1972\n8624.45308\n\n\nFrench Polynesia\n1973\n9012.61134\n\n\nFrench Polynesia\n1974\n10312.11243\n\n\nFrench Polynesia\n1975\n9508.80002\n\n\nFrench Polynesia\n1976\n9976.66012\n\n\nFrench Polynesia\n1977\n9876.98847\n\n\nFrench Polynesia\n1978\n10528.88795\n\n\nFrench Polynesia\n1979\n10616.85167\n\n\nFrench Polynesia\n1980\n10354.35076\n\n\nFrench Polynesia\n1981\n10907.30370\n\n\nFrench Polynesia\n1982\n11649.57828\n\n\nFrench Polynesia\n1983\n11933.70736\n\n\nFrench Polynesia\n1984\n12236.91491\n\n\nFrench Polynesia\n1985\n12563.19400\n\n\nFrench Polynesia\n1986\n13280.73025\n\n\nFrench Polynesia\n1987\n13886.10086\n\n\nFrench Polynesia\n1988\n13895.81956\n\n\nFrench Polynesia\n1989\n13998.87896\n\n\nFrench Polynesia\n1990\n14003.26486\n\n\nFrench Polynesia\n1991\n14388.88115\n\n\nFrench Polynesia\n1992\n14231.76756\n\n\nFrench Polynesia\n1993\n13970.47762\n\n\nFrench Polynesia\n1994\n13810.09188\n\n\nFrench Polynesia\n1995\n13608.05196\n\n\nFrench Polynesia\n1996\n13377.72367\n\n\nFrench Polynesia\n1997\n13359.16224\n\n\nFrench Polynesia\n1998\n13908.59784\n\n\nFrench Polynesia\n1999\n14194.82261\n\n\nFrench Polynesia\n2000\n14507.54146\n\n\nGabon\n1960\n1826.70651\n\n\nGabon\n1961\n2085.02665\n\n\nGabon\n1962\n2226.70799\n\n\nGabon\n1963\n2346.71394\n\n\nGabon\n1964\n2436.36034\n\n\nGabon\n1965\n2619.83744\n\n\nGabon\n1966\n2716.90853\n\n\nGabon\n1967\n2805.37257\n\n\nGabon\n1968\n2847.88768\n\n\nGabon\n1969\n3040.43483\n\n\nGabon\n1970\n3253.23642\n\n\nGabon\n1971\n3519.17574\n\n\nGabon\n1972\n3832.34811\n\n\nGabon\n1973\n4120.78893\n\n\nGabon\n1974\n5602.70920\n\n\nGabon\n1975\n6506.09955\n\n\nGabon\n1976\n8594.75191\n\n\nGabon\n1977\n7315.26476\n\n\nGabon\n1978\n5406.89662\n\n\nGabon\n1979\n5283.28437\n\n\nGabon\n1980\n5265.34312\n\n\nGabon\n1981\n5373.96344\n\n\nGabon\n1982\n5054.61203\n\n\nGabon\n1983\n5179.04357\n\n\nGabon\n1984\n5400.01266\n\n\nGabon\n1985\n5113.41563\n\n\nGabon\n1986\n4917.13728\n\n\nGabon\n1987\n3949.07869\n\n\nGabon\n1988\n4318.82822\n\n\nGabon\n1989\n4541.66439\n\n\nGabon\n1990\n4626.78153\n\n\nGabon\n1991\n4753.10675\n\n\nGabon\n1992\n4459.12340\n\n\nGabon\n1993\n4489.09584\n\n\nGabon\n1994\n4513.86584\n\n\nGabon\n1995\n4600.58429\n\n\nGabon\n1996\n4635.67094\n\n\nGabon\n1997\n4772.77850\n\n\nGabon\n1998\n4814.99840\n\n\nGabon\n1999\n4279.79590\n\n\nGabon\n2000\n4102.62460\n\n\nGabon\n2001\n4097.56142\n\n\nGabon\n2002\n3999.95393\n\n\nGabon\n2003\n4015.10733\n\n\nGabon\n2004\n3988.36289\n\n\nGabon\n2005\n4029.26527\n\n\nGabon\n2006\n3999.64222\n\n\nGabon\n2007\n4143.33458\n\n\nGabon\n2008\n4161.43160\n\n\nGabon\n2009\n4027.56735\n\n\nGabon\n2010\n4213.88156\n\n\nGabon\n2011\n4333.81104\n\n\nGambia\n1966\n495.25177\n\n\nGambia\n1967\n485.18991\n\n\nGambia\n1968\n519.88553\n\n\nGambia\n1969\n519.61690\n\n\nGambia\n1970\n536.95153\n\n\nGambia\n1971\n520.95869\n\n\nGambia\n1972\n505.77592\n\n\nGambia\n1973\n534.50681\n\n\nGambia\n1974\n547.55789\n\n\nGambia\n1975\n596.06365\n\n\nGambia\n1976\n620.50910\n\n\nGambia\n1977\n622.79366\n\n\nGambia\n1978\n642.27721\n\n\nGambia\n1979\n613.84961\n\n\nGambia\n1980\n630.47667\n\n\nGambia\n1981\n628.43870\n\n\nGambia\n1982\n600.74921\n\n\nGambia\n1983\n640.41741\n\n\nGambia\n1984\n635.85016\n\n\nGambia\n1985\n603.27026\n\n\nGambia\n1986\n599.08158\n\n\nGambia\n1987\n584.64258\n\n\nGambia\n1988\n582.18858\n\n\nGambia\n1989\n589.46346\n\n\nGambia\n1990\n586.29705\n\n\nGambia\n1991\n583.32104\n\n\nGambia\n1992\n584.07333\n\n\nGambia\n1993\n584.27279\n\n\nGambia\n1994\n568.90047\n\n\nGambia\n1995\n558.01280\n\n\nGambia\n1996\n554.60019\n\n\nGambia\n1997\n565.73269\n\n\nGambia\n1998\n569.33543\n\n\nGambia\n1999\n588.83477\n\n\nGambia\n2000\n603.59535\n\n\nGambia\n2001\n620.15347\n\n\nGambia\n2002\n582.39970\n\n\nGambia\n2003\n604.06816\n\n\nGambia\n2004\n627.75998\n\n\nGambia\n2005\n603.98929\n\n\nGambia\n2006\n593.57518\n\n\nGambia\n2007\n598.08227\n\n\nGambia\n2008\n615.08359\n\n\nGambia\n2009\n636.99051\n\n\nGambia\n2010\n660.24383\n\n\nGambia\n2011\n614.91209\n\n\nGeorgia\n1965\n859.81664\n\n\nGeorgia\n1966\n914.09677\n\n\nGeorgia\n1967\n961.74780\n\n\nGeorgia\n1968\n995.53540\n\n\nGeorgia\n1969\n1033.38911\n\n\nGeorgia\n1970\n1190.76557\n\n\nGeorgia\n1971\n1207.52841\n\n\nGeorgia\n1972\n1183.93709\n\n\nGeorgia\n1973\n1249.63467\n\n\nGeorgia\n1974\n1347.95030\n\n\nGeorgia\n1975\n1436.79883\n\n\nGeorgia\n1976\n1513.45573\n\n\nGeorgia\n1977\n1606.84192\n\n\nGeorgia\n1978\n1716.16756\n\n\nGeorgia\n1979\n1829.13731\n\n\nGeorgia\n1980\n1896.78790\n\n\nGeorgia\n1981\n1980.38749\n\n\nGeorgia\n1982\n2002.99503\n\n\nGeorgia\n1983\n2070.88162\n\n\nGeorgia\n1984\n2164.70366\n\n\nGeorgia\n1985\n2251.84760\n\n\nGeorgia\n1986\n2049.46853\n\n\nGeorgia\n1987\n2058.67731\n\n\nGeorgia\n1988\n2151.63853\n\n\nGeorgia\n1989\n1991.58573\n\n\nGeorgia\n1990\n1697.52496\n\n\nGeorgia\n1991\n1329.95827\n\n\nGeorgia\n1992\n727.15326\n\n\nGeorgia\n1993\n510.16135\n\n\nGeorgia\n1994\n461.75876\n\n\nGeorgia\n1995\n486.53430\n\n\nGeorgia\n1996\n554.84452\n\n\nGeorgia\n1997\n624.64324\n\n\nGeorgia\n1998\n650.39596\n\n\nGeorgia\n1999\n674.28673\n\n\nGeorgia\n2000\n691.99771\n\n\nGeorgia\n2001\n730.52570\n\n\nGeorgia\n2002\n775.71274\n\n\nGeorgia\n2003\n867.08400\n\n\nGeorgia\n2004\n920.12505\n\n\nGeorgia\n2005\n998.53385\n\n\nGeorgia\n2006\n1083.08988\n\n\nGeorgia\n2007\n1219.44832\n\n\nGeorgia\n2008\n1249.00462\n\n\nGeorgia\n2009\n1194.46088\n\n\nGeorgia\n2010\n1257.17988\n\n\nGeorgia\n2011\n1334.64677\n\n\nGermany\n1970\n11895.36571\n\n\nGermany\n1971\n12245.52367\n\n\nGermany\n1972\n12711.15676\n\n\nGermany\n1973\n13276.55120\n\n\nGermany\n1974\n13389.50283\n\n\nGermany\n1975\n13323.03275\n\n\nGermany\n1976\n14042.50478\n\n\nGermany\n1977\n14545.42826\n\n\nGermany\n1978\n14996.07205\n\n\nGermany\n1979\n15611.56053\n\n\nGermany\n1980\n15798.69536\n\n\nGermany\n1981\n15858.13677\n\n\nGermany\n1982\n15810.55319\n\n\nGermany\n1983\n16101.31467\n\n\nGermany\n1984\n16613.17340\n\n\nGermany\n1985\n17037.95290\n\n\nGermany\n1986\n17419.69421\n\n\nGermany\n1987\n17636.83063\n\n\nGermany\n1988\n18219.35112\n\n\nGermany\n1989\n18783.45503\n\n\nGermany\n1990\n19600.84319\n\n\nGermany\n1991\n20452.54296\n\n\nGermany\n1992\n20685.68998\n\n\nGermany\n1993\n20344.21755\n\n\nGermany\n1994\n20774.89183\n\n\nGermany\n1995\n21061.29653\n\n\nGermany\n1996\n21166.48499\n\n\nGermany\n1997\n21502.72144\n\n\nGermany\n1998\n21899.75290\n\n\nGermany\n1999\n22295.09966\n\n\nGermany\n2000\n22945.70885\n\n\nGermany\n2001\n23254.03991\n\n\nGermany\n2002\n23217.33203\n\n\nGermany\n2003\n23117.36188\n\n\nGermany\n2004\n23390.86265\n\n\nGermany\n2005\n23564.38517\n\n\nGermany\n2006\n24463.84647\n\n\nGermany\n2007\n25297.38539\n\n\nGermany\n2008\n25620.07539\n\n\nGermany\n2009\n24368.19561\n\n\nGermany\n2010\n25420.27572\n\n\nGermany\n2011\n26206.54827\n\n\nGhana\n1960\n282.10844\n\n\nGhana\n1961\n282.71558\n\n\nGhana\n1962\n285.26400\n\n\nGhana\n1963\n288.97372\n\n\nGhana\n1964\n287.16674\n\n\nGhana\n1965\n283.74987\n\n\nGhana\n1966\n265.58514\n\n\nGhana\n1967\n268.25398\n\n\nGhana\n1968\n264.04845\n\n\nGhana\n1969\n274.18598\n\n\nGhana\n1970\n293.99635\n\n\nGhana\n1971\n301.36603\n\n\nGhana\n1972\n285.64613\n\n\nGhana\n1973\n285.54328\n\n\nGhana\n1974\n297.03484\n\n\nGhana\n1975\n254.06721\n\n\nGhana\n1976\n240.34167\n\n\nGhana\n1977\n241.70664\n\n\nGhana\n1978\n257.91616\n\n\nGhana\n1979\n246.64448\n\n\nGhana\n1980\n241.94624\n\n\nGhana\n1981\n226.75891\n\n\nGhana\n1982\n204.18288\n\n\nGhana\n1983\n188.14867\n\n\nGhana\n1984\n197.48677\n\n\nGhana\n1985\n200.93645\n\n\nGhana\n1986\n205.16777\n\n\nGhana\n1987\n209.06568\n\n\nGhana\n1988\n214.96518\n\n\nGhana\n1989\n219.90760\n\n\nGhana\n1990\n221.07167\n\n\nGhana\n1991\n226.28233\n\n\nGhana\n1992\n228.45880\n\n\nGhana\n1993\n232.85128\n\n\nGhana\n1994\n234.00645\n\n\nGhana\n1995\n237.29359\n\n\nGhana\n1996\n242.05830\n\n\nGhana\n1997\n246.19785\n\n\nGhana\n1998\n251.76529\n\n\nGhana\n1999\n256.73995\n\n\nGhana\n2000\n259.99069\n\n\nGhana\n2001\n263.96155\n\n\nGhana\n2002\n269.22856\n\n\nGhana\n2003\n276.40520\n\n\nGhana\n2004\n284.84915\n\n\nGhana\n2005\n294.40802\n\n\nGhana\n2006\n305.75111\n\n\nGhana\n2007\n317.73636\n\n\nGhana\n2008\n336.35184\n\n\nGhana\n2009\n341.55229\n\n\nGhana\n2010\n360.32406\n\n\nGhana\n2011\n402.69533\n\n\nGreece\n1960\n3385.66018\n\n\nGreece\n1961\n3733.42555\n\n\nGreece\n1962\n3768.16149\n\n\nGreece\n1963\n4134.74052\n\n\nGreece\n1964\n4459.99959\n\n\nGreece\n1965\n4856.14257\n\n\nGreece\n1966\n5114.43718\n\n\nGreece\n1967\n5351.02454\n\n\nGreece\n1968\n5670.61321\n\n\nGreece\n1969\n6209.25720\n\n\nGreece\n1970\n6687.94287\n\n\nGreece\n1971\n7181.13365\n\n\nGreece\n1972\n7859.49166\n\n\nGreece\n1973\n8457.01802\n\n\nGreece\n1974\n7883.45579\n\n\nGreece\n1975\n8307.03835\n\n\nGreece\n1976\n8739.42653\n\n\nGreece\n1977\n8880.15771\n\n\nGreece\n1978\n9401.00312\n\n\nGreece\n1979\n9589.25422\n\n\nGreece\n1980\n9559.82487\n\n\nGreece\n1981\n9327.28585\n\n\nGreece\n1982\n9164.96753\n\n\nGreece\n1983\n9013.52541\n\n\nGreece\n1984\n9149.05924\n\n\nGreece\n1985\n9342.31436\n\n\nGreece\n1986\n9359.66659\n\n\nGreece\n1987\n9117.70764\n\n\nGreece\n1988\n9474.18970\n\n\nGreece\n1989\n9783.02267\n\n\nGreece\n1990\n9718.09984\n\n\nGreece\n1991\n9922.26695\n\n\nGreece\n1992\n9882.29036\n\n\nGreece\n1993\n9635.28819\n\n\nGreece\n1994\n9746.49908\n\n\nGreece\n1995\n9875.02481\n\n\nGreece\n1996\n10037.32849\n\n\nGreece\n1997\n10337.45326\n\n\nGreece\n1998\n10627.60307\n\n\nGreece\n1999\n10942.82720\n\n\nGreece\n2000\n11396.23262\n\n\nGreece\n2001\n11839.32069\n\n\nGreece\n2002\n12204.59990\n\n\nGreece\n2003\n12887.77317\n\n\nGreece\n2004\n13404.22954\n\n\nGreece\n2005\n13657.70934\n\n\nGreece\n2006\n14352.83954\n\n\nGreece\n2007\n14801.55423\n\n\nGreece\n2008\n14711.61049\n\n\nGreece\n2009\n14192.63181\n\n\nGreece\n2010\n13452.02377\n\n\nGreece\n2011\n12509.01415\n\n\nGreenland\n1970\n9242.24634\n\n\nGreenland\n1971\n10272.25482\n\n\nGreenland\n1972\n10658.40503\n\n\nGreenland\n1973\n11221.19102\n\n\nGreenland\n1974\n11741.68746\n\n\nGreenland\n1975\n11793.74113\n\n\nGreenland\n1976\n12471.41091\n\n\nGreenland\n1977\n13654.09712\n\n\nGreenland\n1978\n14534.46952\n\n\nGreenland\n1979\n15118.02102\n\n\nGreenland\n1980\n16233.29089\n\n\nGreenland\n1981\n16084.95391\n\n\nGreenland\n1982\n15224.79077\n\n\nGreenland\n1983\n15569.74967\n\n\nGreenland\n1984\n14595.21340\n\n\nGreenland\n1985\n14986.68235\n\n\nGreenland\n1986\n15960.33365\n\n\nGreenland\n1987\n16653.91254\n\n\nGreenland\n1988\n17362.47976\n\n\nGreenland\n1989\n18351.30287\n\n\nGreenland\n1990\n16113.20256\n\n\nGreenland\n1991\n16123.91966\n\n\nGreenland\n1992\n15355.04674\n\n\nGreenland\n1993\n14609.42377\n\n\nGreenland\n1994\n15391.29173\n\n\nGreenland\n1995\n15879.34929\n\n\nGreenland\n1996\n16093.40442\n\n\nGreenland\n1997\n16300.64434\n\n\nGreenland\n1998\n17533.93458\n\n\nGreenland\n1999\n17775.53203\n\n\nGreenland\n2000\n19004.00345\n\n\nGreenland\n2001\n19193.94163\n\n\nGreenland\n2002\n18920.57019\n\n\nGreenland\n2003\n18796.94306\n\n\nGreenland\n2004\n19248.84588\n\n\nGreenland\n2005\n19621.61859\n\n\nGreenland\n2006\n20556.63474\n\n\nGreenland\n2007\n21773.92503\n\n\nGreenland\n2008\n21937.29475\n\n\nGreenland\n2009\n20751.89342\n\n\nGrenada\n1977\n2012.46449\n\n\nGrenada\n1978\n2148.19880\n\n\nGrenada\n1979\n2290.28826\n\n\nGrenada\n1980\n2269.10822\n\n\nGrenada\n1981\n2248.79984\n\n\nGrenada\n1982\n2295.86551\n\n\nGrenada\n1983\n2291.88460\n\n\nGrenada\n1984\n2341.57931\n\n\nGrenada\n1985\n2493.67152\n\n\nGrenada\n1986\n2692.96841\n\n\nGrenada\n1987\n3016.31959\n\n\nGrenada\n1988\n3161.69190\n\n\nGrenada\n1989\n3395.00971\n\n\nGrenada\n1990\n3593.24314\n\n\nGrenada\n1991\n3669.36860\n\n\nGrenada\n1992\n3630.42557\n\n\nGrenada\n1993\n3495.04211\n\n\nGrenada\n1994\n3551.46143\n\n\nGrenada\n1995\n3609.49488\n\n\nGrenada\n1996\n3735.65786\n\n\nGrenada\n1997\n3894.98827\n\n\nGrenada\n1998\n4142.41516\n\n\nGrenada\n1999\n5036.58312\n\n\nGrenada\n2000\n5154.11788\n\n\nGrenada\n2001\n5035.77310\n\n\nGrenada\n2002\n5208.03530\n\n\nGrenada\n2003\n5696.61986\n\n\nGrenada\n2004\n5623.71877\n\n\nGrenada\n2005\n6366.45500\n\n\nGrenada\n2006\n6102.63913\n\n\nGrenada\n2007\n6443.53633\n\n\nGrenada\n2008\n6487.66739\n\n\nGrenada\n2009\n6036.87577\n\n\nGrenada\n2010\n6011.84562\n\n\nGrenada\n2011\n6047.20080\n\n\nGuatemala\n1960\n959.15654\n\n\nGuatemala\n1961\n973.55303\n\n\nGuatemala\n1962\n980.96078\n\n\nGuatemala\n1963\n1045.78023\n\n\nGuatemala\n1964\n1064.99125\n\n\nGuatemala\n1965\n1081.82205\n\n\nGuatemala\n1966\n1111.15886\n\n\nGuatemala\n1967\n1126.26681\n\n\nGuatemala\n1968\n1192.63245\n\n\nGuatemala\n1969\n1216.01816\n\n\nGuatemala\n1970\n1251.19352\n\n\nGuatemala\n1971\n1285.64438\n\n\nGuatemala\n1972\n1342.82430\n\n\nGuatemala\n1973\n1395.61655\n\n\nGuatemala\n1974\n1445.68288\n\n\nGuatemala\n1975\n1436.25422\n\n\nGuatemala\n1976\n1504.15297\n\n\nGuatemala\n1977\n1582.46071\n\n\nGuatemala\n1978\n1621.99216\n\n\nGuatemala\n1979\n1658.01772\n\n\nGuatemala\n1980\n1679.02244\n\n\nGuatemala\n1981\n1648.77140\n\n\nGuatemala\n1982\n1551.58619\n\n\nGuatemala\n1983\n1474.67823\n\n\nGuatemala\n1984\n1446.19155\n\n\nGuatemala\n1985\n1403.33784\n\n\nGuatemala\n1986\n1372.78324\n\n\nGuatemala\n1987\n1389.06604\n\n\nGuatemala\n1988\n1410.61769\n\n\nGuatemala\n1989\n1433.24470\n\n\nGuatemala\n1990\n1444.30924\n\n\nGuatemala\n1991\n1463.04875\n\n\nGuatemala\n1992\n1498.70484\n\n\nGuatemala\n1993\n1521.82566\n\n\nGuatemala\n1994\n1547.02757\n\n\nGuatemala\n1995\n1586.72193\n\n\nGuatemala\n1996\n1596.86309\n\n\nGuatemala\n1997\n1629.17316\n\n\nGuatemala\n1998\n1671.98083\n\n\nGuatemala\n1999\n1696.56565\n\n\nGuatemala\n2000\n1716.68534\n\n\nGuatemala\n2001\n1714.68340\n\n\nGuatemala\n2002\n1737.56038\n\n\nGuatemala\n2003\n1737.62110\n\n\nGuatemala\n2004\n1748.14967\n\n\nGuatemala\n2005\n1760.79986\n\n\nGuatemala\n2006\n1810.29533\n\n\nGuatemala\n2007\n1877.75147\n\n\nGuatemala\n2008\n1892.33261\n\n\nGuatemala\n2009\n1855.82285\n\n\nGuatemala\n2010\n1862.66726\n\n\nGuatemala\n2011\n1886.42362\n\n\nGuinea\n1986\n339.60206\n\n\nGuinea\n1987\n342.37193\n\n\nGuinea\n1988\n354.03570\n\n\nGuinea\n1989\n355.42049\n\n\nGuinea\n1990\n354.50492\n\n\nGuinea\n1991\n344.37146\n\n\nGuinea\n1992\n334.59155\n\n\nGuinea\n1993\n330.74904\n\n\nGuinea\n1994\n325.94825\n\n\nGuinea\n1995\n326.73925\n\n\nGuinea\n1996\n330.80076\n\n\nGuinea\n1997\n340.25141\n\n\nGuinea\n1998\n346.97806\n\n\nGuinea\n1999\n355.23549\n\n\nGuinea\n2000\n358.96291\n\n\nGuinea\n2001\n366.47986\n\n\nGuinea\n2002\n379.46822\n\n\nGuinea\n2003\n378.09786\n\n\nGuinea\n2004\n380.61808\n\n\nGuinea\n2005\n385.43020\n\n\nGuinea\n2006\n388.16313\n\n\nGuinea\n2007\n387.75163\n\n\nGuinea\n2008\n398.99903\n\n\nGuinea\n2009\n389.64290\n\n\nGuinea\n2010\n388.41815\n\n\nGuinea\n2011\n394.11566\n\n\nGuinea-Bissau\n1970\n172.55893\n\n\nGuinea-Bissau\n1971\n162.85756\n\n\nGuinea-Bissau\n1972\n169.09563\n\n\nGuinea-Bissau\n1973\n166.00639\n\n\nGuinea-Bissau\n1974\n167.88480\n\n\nGuinea-Bissau\n1975\n174.67684\n\n\nGuinea-Bissau\n1976\n176.42215\n\n\nGuinea-Bissau\n1977\n157.35064\n\n\nGuinea-Bissau\n1978\n171.14949\n\n\nGuinea-Bissau\n1979\n168.41454\n\n\nGuinea-Bissau\n1980\n137.24187\n\n\nGuinea-Bissau\n1981\n158.09662\n\n\nGuinea-Bissau\n1982\n161.32117\n\n\nGuinea-Bissau\n1983\n153.05855\n\n\nGuinea-Bissau\n1984\n164.15587\n\n\nGuinea-Bissau\n1985\n167.97036\n\n\nGuinea-Bissau\n1986\n163.53576\n\n\nGuinea-Bissau\n1987\n165.05976\n\n\nGuinea-Bissau\n1988\n169.27406\n\n\nGuinea-Bissau\n1989\n176.04606\n\n\nGuinea-Bissau\n1990\n183.07837\n\n\nGuinea-Bissau\n1991\n188.56940\n\n\nGuinea-Bissau\n1992\n186.78916\n\n\nGuinea-Bissau\n1993\n186.84232\n\n\nGuinea-Bissau\n1994\n188.93409\n\n\nGuinea-Bissau\n1995\n193.32308\n\n\nGuinea-Bissau\n1996\n211.51669\n\n\nGuinea-Bissau\n1997\n220.89494\n\n\nGuinea-Bissau\n1998\n155.76755\n\n\nGuinea-Bissau\n1999\n164.69996\n\n\nGuinea-Bissau\n2000\n173.66269\n\n\nGuinea-Bissau\n2001\n170.68075\n\n\nGuinea-Bissau\n2002\n155.52883\n\n\nGuinea-Bissau\n2003\n151.57980\n\n\nGuinea-Bissau\n2004\n151.93370\n\n\nGuinea-Bissau\n2005\n154.10613\n\n\nGuinea-Bissau\n2006\n154.26317\n\n\nGuinea-Bissau\n2007\n155.99480\n\n\nGuinea-Bissau\n2008\n157.74551\n\n\nGuinea-Bissau\n2009\n159.14723\n\n\nGuinea-Bissau\n2010\n161.29329\n\n\nGuinea-Bissau\n2011\n166.34665\n\n\nGuyana\n1960\n688.85617\n\n\nGuyana\n1961\n701.52525\n\n\nGuyana\n1962\n690.46299\n\n\nGuyana\n1963\n589.85985\n\n\nGuyana\n1964\n639.73311\n\n\nGuyana\n1965\n688.66920\n\n\nGuyana\n1966\n705.49989\n\n\nGuyana\n1967\n716.50294\n\n\nGuyana\n1968\n705.83453\n\n\nGuyana\n1969\n738.88108\n\n\nGuyana\n1970\n757.00448\n\n\nGuyana\n1971\n770.88072\n\n\nGuyana\n1972\n739.20076\n\n\nGuyana\n1973\n744.20749\n\n\nGuyana\n1974\n797.28205\n\n\nGuyana\n1975\n859.26282\n\n\nGuyana\n1976\n865.11532\n\n\nGuyana\n1977\n834.21589\n\n\nGuyana\n1978\n811.60268\n\n\nGuyana\n1979\n791.37938\n\n\nGuyana\n1980\n802.91638\n\n\nGuyana\n1981\n816.26061\n\n\nGuyana\n1982\n712.33095\n\n\nGuyana\n1983\n669.22661\n\n\nGuyana\n1984\n641.38404\n\n\nGuyana\n1985\n662.77197\n\n\nGuyana\n1986\n662.64009\n\n\nGuyana\n1987\n674.41692\n\n\nGuyana\n1988\n654.63275\n\n\nGuyana\n1989\n626.24652\n\n\nGuyana\n1990\n609.91442\n\n\nGuyana\n1991\n647.74051\n\n\nGuyana\n1992\n698.30677\n\n\nGuyana\n1993\n754.31565\n\n\nGuyana\n1994\n816.75714\n\n\nGuyana\n1995\n855.80235\n\n\nGuyana\n1996\n921.98881\n\n\nGuyana\n1997\n978.38996\n\n\nGuyana\n1998\n960.73219\n\n\nGuyana\n1999\n987.86102\n\n\nGuyana\n2000\n972.12789\n\n\nGuyana\n2001\n990.99169\n\n\nGuyana\n2002\n997.76510\n\n\nGuyana\n2003\n983.85033\n\n\nGuyana\n2004\n1012.40708\n\n\nGuyana\n2005\n989.28047\n\n\nGuyana\n2006\n1037.12754\n\n\nGuyana\n2007\n1107.35197\n\n\nGuyana\n2008\n1126.97164\n\n\nGuyana\n2009\n1162.15268\n\n\nGuyana\n2010\n1210.56956\n\n\nHaiti\n1991\n513.43824\n\n\nHaiti\n1992\n476.39300\n\n\nHaiti\n1993\n441.60211\n\n\nHaiti\n1994\n381.20050\n\n\nHaiti\n1995\n410.80048\n\n\nHaiti\n1996\n419.57460\n\n\nHaiti\n1997\n422.75528\n\n\nHaiti\n1998\n424.02606\n\n\nHaiti\n1999\n427.61105\n\n\nHaiti\n2000\n423.86889\n\n\nHaiti\n2001\n412.45708\n\n\nHaiti\n2002\n404.78002\n\n\nHaiti\n2003\n399.97359\n\n\nHaiti\n2004\n380.18023\n\n\nHaiti\n2005\n381.41805\n\n\nHaiti\n2006\n384.58552\n\n\nHaiti\n2007\n392.09423\n\n\nHaiti\n2008\n390.20998\n\n\nHaiti\n2009\n396.23361\n\n\nHaiti\n2010\n369.93547\n\n\nHaiti\n2011\n385.57938\n\n\nHonduras\n1960\n751.19580\n\n\nHonduras\n1961\n740.48339\n\n\nHonduras\n1962\n757.50587\n\n\nHonduras\n1963\n759.08839\n\n\nHonduras\n1964\n775.07184\n\n\nHonduras\n1965\n819.97723\n\n\nHonduras\n1966\n839.86008\n\n\nHonduras\n1967\n866.36014\n\n\nHonduras\n1968\n899.62280\n\n\nHonduras\n1969\n882.05586\n\n\nHonduras\n1970\n889.83917\n\n\nHonduras\n1971\n900.29907\n\n\nHonduras\n1972\n925.87733\n\n\nHonduras\n1973\n970.56128\n\n\nHonduras\n1974\n930.97012\n\n\nHonduras\n1975\n922.73472\n\n\nHonduras\n1976\n988.84657\n\n\nHonduras\n1977\n1057.96072\n\n\nHonduras\n1978\n1127.67001\n\n\nHonduras\n1979\n1143.61071\n\n\nHonduras\n1980\n1115.74206\n\n\nHonduras\n1981\n1109.06402\n\n\nHonduras\n1982\n1060.54257\n\n\nHonduras\n1983\n1019.20493\n\n\nHonduras\n1984\n1031.76548\n\n\nHonduras\n1985\n1043.06673\n\n\nHonduras\n1986\n1019.63004\n\n\nHonduras\n1987\n1049.57353\n\n\nHonduras\n1988\n1066.31510\n\n\nHonduras\n1989\n1080.87805\n\n\nHonduras\n1990\n1051.78592\n\n\nHonduras\n1991\n1056.27818\n\n\nHonduras\n1992\n1085.76335\n\n\nHonduras\n1993\n1123.30526\n\n\nHonduras\n1994\n1080.77062\n\n\nHonduras\n1995\n1097.56752\n\n\nHonduras\n1996\n1110.82555\n\n\nHonduras\n1997\n1140.51488\n\n\nHonduras\n1998\n1148.53349\n\n\nHonduras\n1999\n1103.30454\n\n\nHonduras\n2000\n1142.70966\n\n\nHonduras\n2001\n1149.94924\n\n\nHonduras\n2002\n1169.13051\n\n\nHonduras\n2003\n1197.91477\n\n\nHonduras\n2004\n1247.32345\n\n\nHonduras\n2005\n1296.62418\n\n\nHonduras\n2006\n1354.49704\n\n\nHonduras\n2007\n1409.97905\n\n\nHonduras\n2008\n1440.68005\n\n\nHonduras\n2009\n1382.13161\n\n\nHonduras\n2010\n1392.31583\n\n\nHonduras\n2011\n1414.07249\n\n\nHong Kong, China\n1965\n5488.82577\n\n\nHong Kong, China\n1966\n5538.07529\n\n\nHong Kong, China\n1967\n5486.45405\n\n\nHong Kong, China\n1968\n5553.63991\n\n\nHong Kong, China\n1969\n6085.69033\n\n\nHong Kong, China\n1970\n6486.33845\n\n\nHong Kong, China\n1971\n6810.92813\n\n\nHong Kong, China\n1972\n7390.65015\n\n\nHong Kong, China\n1973\n8067.34282\n\n\nHong Kong, China\n1974\n8085.66235\n\n\nHong Kong, China\n1975\n7893.43148\n\n\nHong Kong, China\n1976\n9054.88509\n\n\nHong Kong, China\n1977\n9971.62331\n\n\nHong Kong, China\n1978\n10601.53900\n\n\nHong Kong, China\n1979\n11197.68583\n\n\nHong Kong, China\n1980\n12004.70252\n\n\nHong Kong, China\n1981\n12812.02973\n\n\nHong Kong, China\n1982\n12986.75898\n\n\nHong Kong, China\n1983\n13555.44286\n\n\nHong Kong, China\n1984\n14761.60321\n\n\nHong Kong, China\n1985\n14714.44717\n\n\nHong Kong, China\n1986\n16138.98215\n\n\nHong Kong, China\n1987\n18085.62401\n\n\nHong Kong, China\n1988\n19495.63699\n\n\nHong Kong, China\n1989\n19734.06034\n\n\nHong Kong, China\n1990\n20424.27245\n\n\nHong Kong, China\n1991\n21410.58959\n\n\nHong Kong, China\n1992\n22555.35372\n\n\nHong Kong, China\n1993\n23546.10108\n\n\nHong Kong, China\n1994\n24411.37474\n\n\nHong Kong, China\n1995\n24500.83898\n\n\nHong Kong, China\n1996\n24435.19094\n\n\nHong Kong, China\n1997\n25468.41275\n\n\nHong Kong, China\n1998\n23770.93183\n\n\nHong Kong, China\n1999\n24135.16510\n\n\nHong Kong, China\n2000\n25756.66378\n\n\nHong Kong, China\n2001\n25710.93403\n\n\nHong Kong, China\n2002\n26021.38854\n\n\nHong Kong, China\n2003\n26869.67462\n\n\nHong Kong, China\n2004\n28980.43778\n\n\nHong Kong, China\n2005\n30985.89814\n\n\nHong Kong, China\n2006\n32952.71213\n\n\nHong Kong, China\n2007\n34734.54725\n\n\nHong Kong, China\n2008\n35210.31049\n\n\nHong Kong, China\n2009\n34216.93042\n\n\nHong Kong, China\n2010\n36207.70622\n\n\nHong Kong, China\n2011\n37958.23146\n\n\nHungary\n1960\n1050.36996\n\n\nHungary\n1961\n1094.76419\n\n\nHungary\n1962\n1157.80299\n\n\nHungary\n1963\n1220.61778\n\n\nHungary\n1964\n1273.95983\n\n\nHungary\n1965\n1809.22774\n\n\nHungary\n1966\n1937.24651\n\n\nHungary\n1967\n2074.80412\n\n\nHungary\n1968\n2168.14824\n\n\nHungary\n1969\n2308.09392\n\n\nHungary\n1970\n2407.41404\n\n\nHungary\n1971\n2549.36758\n\n\nHungary\n1972\n2696.82770\n\n\nHungary\n1973\n2873.63281\n\n\nHungary\n1974\n3029.62494\n\n\nHungary\n1975\n3198.59590\n\n\nHungary\n1976\n3295.56375\n\n\nHungary\n1977\n3529.59064\n\n\nHungary\n1978\n3672.20445\n\n\nHungary\n1979\n3764.54351\n\n\nHungary\n1980\n3769.61801\n\n\nHungary\n1981\n3877.42053\n\n\nHungary\n1982\n3989.93294\n\n\nHungary\n1983\n4024.82118\n\n\nHungary\n1984\n4140.07877\n\n\nHungary\n1985\n4137.11797\n\n\nHungary\n1986\n4207.79211\n\n\nHungary\n1987\n4385.61226\n\n\nHungary\n1988\n4389.47280\n\n\nHungary\n1989\n4470.21377\n\n\nHungary\n1990\n4358.70432\n\n\nHungary\n1991\n3840.58311\n\n\nHungary\n1992\n3724.35802\n\n\nHungary\n1993\n3707.12671\n\n\nHungary\n1994\n3821.60902\n\n\nHungary\n1995\n3883.93632\n\n\nHungary\n1996\n3896.87281\n\n\nHungary\n1997\n4026.83941\n\n\nHungary\n1998\n4200.63373\n\n\nHungary\n1999\n4347.25384\n\n\nHungary\n2000\n4542.72072\n\n\nHungary\n2001\n4722.17501\n\n\nHungary\n2002\n4949.03373\n\n\nHungary\n2003\n5154.33510\n\n\nHungary\n2004\n5413.57266\n\n\nHungary\n2005\n5639.39460\n\n\nHungary\n2006\n5868.30170\n\n\nHungary\n2007\n5884.14096\n\n\nHungary\n2008\n5947.15831\n\n\nHungary\n2009\n5551.42634\n\n\nHungary\n2010\n5633.99099\n\n\nHungary\n2011\n5745.98153\n\n\nIceland\n1960\n10109.90857\n\n\nIceland\n1961\n9906.40793\n\n\nIceland\n1962\n10532.96370\n\n\nIceland\n1963\n11411.19546\n\n\nIceland\n1964\n12321.77975\n\n\nIceland\n1965\n13002.84732\n\n\nIceland\n1966\n13901.35006\n\n\nIceland\n1967\n13505.51266\n\n\nIceland\n1968\n12592.68463\n\n\nIceland\n1969\n12772.47105\n\n\nIceland\n1970\n13653.09117\n\n\nIceland\n1971\n15311.96879\n\n\nIceland\n1972\n16021.59528\n\n\nIceland\n1973\n16855.72945\n\n\nIceland\n1974\n17578.13238\n\n\nIceland\n1975\n17466.89433\n\n\nIceland\n1976\n18324.96380\n\n\nIceland\n1977\n19793.74323\n\n\nIceland\n1978\n20821.52042\n\n\nIceland\n1979\n21620.97236\n\n\nIceland\n1980\n22622.90280\n\n\nIceland\n1981\n23320.26153\n\n\nIceland\n1982\n23506.41371\n\n\nIceland\n1983\n22698.21981\n\n\nIceland\n1984\n23385.39562\n\n\nIceland\n1985\n23965.92239\n\n\nIceland\n1986\n25282.81640\n\n\nIceland\n1987\n27144.43317\n\n\nIceland\n1988\n26698.62716\n\n\nIceland\n1989\n26438.18194\n\n\nIceland\n1990\n26540.14492\n\n\nIceland\n1991\n26175.64080\n\n\nIceland\n1992\n24976.65735\n\n\nIceland\n1993\n25048.71550\n\n\nIceland\n1994\n25728.69306\n\n\nIceland\n1995\n25619.33420\n\n\nIceland\n1996\n26700.68499\n\n\nIceland\n1997\n27783.99974\n\n\nIceland\n1998\n29224.42406\n\n\nIceland\n1999\n30055.27261\n\n\nIceland\n2000\n30928.67564\n\n\nIceland\n2001\n31717.14596\n\n\nIceland\n2002\n31478.98220\n\n\nIceland\n2003\n32022.78398\n\n\nIceland\n2004\n34230.18336\n\n\nIceland\n2005\n36128.59244\n\n\nIceland\n2006\n36952.19207\n\n\nIceland\n2007\n38185.33368\n\n\nIceland\n2008\n37927.11904\n\n\nIceland\n2009\n35310.97441\n\n\nIceland\n2010\n33943.11853\n\n\nIceland\n2011\n34706.19047\n\n\nIndia\n1960\n180.96173\n\n\nIndia\n1961\n183.95821\n\n\nIndia\n1962\n185.53869\n\n\nIndia\n1963\n192.65807\n\n\nIndia\n1964\n202.75164\n\n\nIndia\n1965\n193.28706\n\n\nIndia\n1966\n189.09834\n\n\nIndia\n1967\n199.53856\n\n\nIndia\n1968\n201.83291\n\n\nIndia\n1969\n210.31243\n\n\nIndia\n1970\n216.23572\n\n\nIndia\n1971\n214.83225\n\n\nIndia\n1972\n208.77304\n\n\nIndia\n1973\n210.69156\n\n\nIndia\n1974\n208.24879\n\n\nIndia\n1975\n222.00893\n\n\nIndia\n1976\n220.42320\n\n\nIndia\n1977\n230.87382\n\n\nIndia\n1978\n238.34826\n\n\nIndia\n1979\n220.59855\n\n\nIndia\n1980\n230.00854\n\n\nIndia\n1981\n238.23057\n\n\nIndia\n1982\n240.90968\n\n\nIndia\n1983\n252.65169\n\n\nIndia\n1984\n256.45344\n\n\nIndia\n1985\n263.96052\n\n\nIndia\n1986\n270.51328\n\n\nIndia\n1987\n275.15139\n\n\nIndia\n1988\n295.19700\n\n\nIndia\n1989\n306.17173\n\n\nIndia\n1990\n316.42858\n\n\nIndia\n1991\n313.27451\n\n\nIndia\n1992\n323.85750\n\n\nIndia\n1993\n332.60568\n\n\nIndia\n1994\n347.95104\n\n\nIndia\n1995\n367.27716\n\n\nIndia\n1996\n387.74152\n\n\nIndia\n1997\n396.18444\n\n\nIndia\n1998\n413.28705\n\n\nIndia\n1999\n440.56931\n\n\nIndia\n2000\n450.41511\n\n\nIndia\n2001\n464.97426\n\n\nIndia\n2002\n475.45706\n\n\nIndia\n2003\n505.24894\n\n\nIndia\n2004\n536.60488\n\n\nIndia\n2005\n577.65673\n\n\nIndia\n2006\n621.89941\n\n\nIndia\n2007\n673.00469\n\n\nIndia\n2008\n689.27320\n\n\nIndia\n2009\n735.63185\n\n\nIndia\n2010\n794.80126\n\n\nIndia\n2011\n837.74640\n\n\nIndonesia\n1960\n200.64815\n\n\nIndonesia\n1961\n207.74792\n\n\nIndonesia\n1962\n206.54965\n\n\nIndonesia\n1963\n196.92908\n\n\nIndonesia\n1964\n198.66879\n\n\nIndonesia\n1965\n195.52844\n\n\nIndonesia\n1966\n196.03265\n\n\nIndonesia\n1967\n193.22307\n\n\nIndonesia\n1968\n210.99328\n\n\nIndonesia\n1969\n221.03481\n\n\nIndonesia\n1970\n233.02971\n\n\nIndonesia\n1971\n243.08404\n\n\nIndonesia\n1972\n255.71202\n\n\nIndonesia\n1973\n273.77445\n\n\nIndonesia\n1974\n289.12970\n\n\nIndonesia\n1975\n299.58483\n\n\nIndonesia\n1976\n309.95241\n\n\nIndonesia\n1977\n328.80885\n\n\nIndonesia\n1978\n350.75380\n\n\nIndonesia\n1979\n367.02587\n\n\nIndonesia\n1980\n390.00965\n\n\nIndonesia\n1981\n412.34137\n\n\nIndonesia\n1982\n407.68969\n\n\nIndonesia\n1983\n432.57700\n\n\nIndonesia\n1984\n453.85971\n\n\nIndonesia\n1985\n460.11058\n\n\nIndonesia\n1986\n478.01985\n\n\nIndonesia\n1987\n493.86475\n\n\nIndonesia\n1988\n515.69450\n\n\nIndonesia\n1989\n552.63690\n\n\nIndonesia\n1990\n592.09607\n\n\nIndonesia\n1991\n634.27100\n\n\nIndonesia\n1992\n669.14304\n\n\nIndonesia\n1993\n706.50880\n\n\nIndonesia\n1994\n748.32351\n\n\nIndonesia\n1995\n799.30993\n\n\nIndonesia\n1996\n848.24711\n\n\nIndonesia\n1997\n875.95922\n\n\nIndonesia\n1998\n750.81120\n\n\nIndonesia\n1999\n746.79278\n\n\nIndonesia\n2000\n773.31097\n\n\nIndonesia\n2001\n791.07645\n\n\nIndonesia\n2002\n816.01641\n\n\nIndonesia\n2003\n844.18349\n\n\nIndonesia\n2004\n875.72916\n\n\nIndonesia\n2005\n914.59990\n\n\nIndonesia\n2006\n953.93553\n\n\nIndonesia\n2007\n1003.36443\n\n\nIndonesia\n2008\n1052.43339\n\n\nIndonesia\n2009\n1089.72401\n\n\nIndonesia\n2010\n1145.38543\n\n\nIndonesia\n2011\n1206.99107\n\n\nIran\n1965\n965.05949\n\n\nIran\n1966\n1037.55296\n\n\nIran\n1967\n1117.21827\n\n\nIran\n1968\n1223.33695\n\n\nIran\n1969\n1344.65712\n\n\nIran\n1970\n1438.30640\n\n\nIran\n1971\n1583.05701\n\n\nIran\n1972\n1793.57466\n\n\nIran\n1973\n1843.46797\n\n\nIran\n1974\n1962.05068\n\n\nIran\n1975\n2016.28961\n\n\nIran\n1976\n2303.84456\n\n\nIran\n1977\n2204.42046\n\n\nIran\n1978\n1974.66660\n\n\nIran\n1979\n1772.98158\n\n\nIran\n1980\n1485.01407\n\n\nIran\n1981\n1357.30301\n\n\nIran\n1982\n1477.01185\n\n\nIran\n1983\n1601.64439\n\n\nIran\n1984\n1518.00697\n\n\nIran\n1985\n1492.49274\n\n\nIran\n1986\n1306.17612\n\n\nIran\n1987\n1241.64750\n\n\nIran\n1988\n1123.95475\n\n\nIran\n1989\n1157.05691\n\n\nIran\n1990\n1281.08281\n\n\nIran\n1991\n1411.53250\n\n\nIran\n1992\n1445.85246\n\n\nIran\n1993\n1401.63214\n\n\nIran\n1994\n1376.09847\n\n\nIran\n1995\n1390.18136\n\n\nIran\n1996\n1462.97841\n\n\nIran\n1997\n1484.66602\n\n\nIran\n1998\n1496.90982\n\n\nIran\n1999\n1498.67052\n\n\nIran\n2000\n1550.09061\n\n\nIran\n2001\n1583.43797\n\n\nIran\n2002\n1679.66440\n\n\nIran\n2003\n1776.72849\n\n\nIran\n2004\n1844.52057\n\n\nIran\n2005\n1906.59005\n\n\nIran\n2006\n1994.64719\n\n\nIran\n2007\n2125.03025\n\n\nIran\n2008\n2148.23042\n\n\nIran\n2009\n2161.54651\n\n\nIraq\n1997\n723.23844\n\n\nIraq\n1998\n945.90763\n\n\nIraq\n1999\n1145.35643\n\n\nIraq\n2000\n1063.48147\n\n\nIraq\n2001\n968.43376\n\n\nIraq\n2002\n870.55042\n\n\nIraq\n2003\n498.22457\n\n\nIraq\n2004\n711.63264\n\n\nIraq\n2005\n688.96667\n\n\nIraq\n2006\n710.20872\n\n\nIraq\n2007\n699.70556\n\n\nIraq\n2008\n743.69134\n\n\nIraq\n2009\n752.18335\n\n\nIraq\n2010\n736.27212\n\n\nIraq\n2011\n786.32719\n\n\nIreland\n1970\n7377.49545\n\n\nIreland\n1971\n7544.70255\n\n\nIreland\n1972\n7915.81568\n\n\nIreland\n1973\n8157.66161\n\n\nIreland\n1974\n8365.45395\n\n\nIreland\n1975\n8694.42071\n\n\nIreland\n1976\n8683.64843\n\n\nIreland\n1977\n9270.29079\n\n\nIreland\n1978\n9796.53680\n\n\nIreland\n1979\n9963.95108\n\n\nIreland\n1980\n10153.25351\n\n\nIreland\n1981\n10368.73585\n\n\nIreland\n1982\n10505.70907\n\n\nIreland\n1983\n10406.00913\n\n\nIreland\n1984\n10792.03880\n\n\nIreland\n1985\n11107.24557\n\n\nIreland\n1986\n11054.64570\n\n\nIreland\n1987\n11568.93441\n\n\nIreland\n1988\n12224.70535\n\n\nIreland\n1989\n12986.79835\n\n\nIreland\n1990\n14074.44359\n\n\nIreland\n1991\n14263.78695\n\n\nIreland\n1992\n14640.43757\n\n\nIreland\n1993\n14959.68558\n\n\nIreland\n1994\n15758.49856\n\n\nIreland\n1995\n17188.38855\n\n\nIreland\n1996\n18664.80744\n\n\nIreland\n1997\n20495.91046\n\n\nIreland\n1998\n21865.41711\n\n\nIreland\n1999\n23764.16285\n\n\nIreland\n2000\n25629.65010\n\n\nIreland\n2001\n26433.75372\n\n\nIreland\n2002\n27518.57409\n\n\nIreland\n2003\n28200.07667\n\n\nIreland\n2004\n28937.33143\n\n\nIreland\n2005\n29825.53296\n\n\nIreland\n2006\n30669.37259\n\n\nIreland\n2007\n31543.60253\n\n\nIreland\n2008\n30130.64042\n\n\nIreland\n2009\n27814.12448\n\n\nIreland\n2010\n27599.29658\n\n\nIreland\n2011\n27715.52837\n\n\nIsle of Man\n1984\n8217.08211\n\n\nIsle of Man\n1985\n8220.90535\n\n\nIsle of Man\n1986\n9674.76228\n\n\nIsle of Man\n1987\n10436.36643\n\n\nIsle of Man\n1988\n11421.01685\n\n\nIsle of Man\n1989\n11963.03467\n\n\nIsle of Man\n1990\n12278.15208\n\n\nIsle of Man\n1991\n12360.94567\n\n\nIsle of Man\n1992\n12398.50938\n\n\nIsle of Man\n1993\n12685.09339\n\n\nIsle of Man\n1994\n13148.81622\n\n\nIsle of Man\n1995\n13624.51345\n\n\nIsle of Man\n1996\n14529.84389\n\n\nIsle of Man\n1997\n15579.28241\n\n\nIsle of Man\n1998\n17438.75745\n\n\nIsle of Man\n1999\n19559.68807\n\n\nIsle of Man\n2000\n20359.46252\n\n\nIsle of Man\n2001\n21239.97037\n\n\nIsle of Man\n2002\n22294.27994\n\n\nIsle of Man\n2003\n23526.41327\n\n\nIsle of Man\n2004\n24572.13434\n\n\nIsle of Man\n2005\n25831.91622\n\n\nIsle of Man\n2006\n27612.48388\n\n\nIsle of Man\n2007\n29462.26492\n\n\nIsrael\n1960\n5824.52441\n\n\nIsrael\n1961\n6266.68815\n\n\nIsrael\n1962\n6578.00333\n\n\nIsrael\n1963\n7018.34162\n\n\nIsrael\n1964\n7281.56713\n\n\nIsrael\n1965\n7671.00356\n\n\nIsrael\n1966\n7472.46988\n\n\nIsrael\n1967\n7371.03778\n\n\nIsrael\n1968\n8390.94358\n\n\nIsrael\n1969\n9284.13041\n\n\nIsrael\n1970\n9637.61375\n\n\nIsrael\n1971\n10387.55200\n\n\nIsrael\n1972\n11510.28914\n\n\nIsrael\n1973\n11423.28869\n\n\nIsrael\n1974\n11846.87948\n\n\nIsrael\n1975\n11963.66968\n\n\nIsrael\n1976\n11853.48997\n\n\nIsrael\n1977\n11590.10340\n\n\nIsrael\n1978\n11895.40780\n\n\nIsrael\n1979\n12322.42677\n\n\nIsrael\n1980\n12856.71785\n\n\nIsrael\n1981\n13252.01950\n\n\nIsrael\n1982\n13240.70242\n\n\nIsrael\n1983\n13458.49244\n\n\nIsrael\n1984\n13403.80135\n\n\nIsrael\n1985\n13623.54055\n\n\nIsrael\n1986\n14057.12776\n\n\nIsrael\n1987\n14826.09890\n\n\nIsrael\n1988\n14877.61551\n\n\nIsrael\n1989\n14754.48205\n\n\nIsrael\n1990\n15282.68784\n\n\nIsrael\n1991\n15498.20512\n\n\nIsrael\n1992\n15814.39991\n\n\nIsrael\n1993\n16255.31103\n\n\nIsrael\n1994\n16937.80936\n\n\nIsrael\n1995\n17568.40398\n\n\nIsrael\n1996\n18054.29086\n\n\nIsrael\n1997\n18202.49628\n\n\nIsrael\n1998\n18523.47738\n\n\nIsrael\n1999\n18663.73882\n\n\nIsrael\n2000\n19859.30215\n\n\nIsrael\n2001\n19353.34454\n\n\nIsrael\n2002\n18858.29173\n\n\nIsrael\n2003\n18800.92652\n\n\nIsrael\n2004\n19366.33583\n\n\nIsrael\n2005\n19967.98088\n\n\nIsrael\n2006\n20715.56805\n\n\nIsrael\n2007\n21469.53451\n\n\nIsrael\n2008\n21941.10572\n\n\nIsrael\n2009\n21602.21001\n\n\nIsrael\n2010\n22239.05126\n\n\nIsrael\n2011\n22859.67589\n\n\nItaly\n1960\n5847.45818\n\n\nItaly\n1961\n6285.22339\n\n\nItaly\n1962\n6630.12362\n\n\nItaly\n1963\n6951.15769\n\n\nItaly\n1964\n7087.08985\n\n\nItaly\n1965\n7257.32502\n\n\nItaly\n1966\n7632.10514\n\n\nItaly\n1967\n8120.99318\n\n\nItaly\n1968\n8597.98740\n\n\nItaly\n1969\n9070.80616\n\n\nItaly\n1970\n9502.12387\n\n\nItaly\n1971\n9629.85906\n\n\nItaly\n1972\n9928.72074\n\n\nItaly\n1973\n10564.33818\n\n\nItaly\n1974\n11072.69559\n\n\nItaly\n1975\n10776.70208\n\n\nItaly\n1976\n11487.13673\n\n\nItaly\n1977\n11731.33344\n\n\nItaly\n1978\n12068.36719\n\n\nItaly\n1979\n12750.61902\n\n\nItaly\n1980\n13160.82813\n\n\nItaly\n1981\n13256.01150\n\n\nItaly\n1982\n13300.97920\n\n\nItaly\n1983\n13451.61161\n\n\nItaly\n1984\n13882.43755\n\n\nItaly\n1985\n14266.75637\n\n\nItaly\n1986\n14673.98195\n\n\nItaly\n1987\n15140.82445\n\n\nItaly\n1988\n15768.26659\n\n\nItaly\n1989\n16290.33214\n\n\nItaly\n1990\n16599.92009\n\n\nItaly\n1991\n16843.63607\n\n\nItaly\n1992\n16972.62591\n\n\nItaly\n1993\n16817.59766\n\n\nItaly\n1994\n17175.84873\n\n\nItaly\n1995\n17671.40672\n\n\nItaly\n1996\n17866.89937\n\n\nItaly\n1997\n18190.67114\n\n\nItaly\n1998\n18448.79289\n\n\nItaly\n1999\n18713.35397\n\n\nItaly\n2000\n19388.27875\n\n\nItaly\n2001\n19737.24069\n\n\nItaly\n2002\n19763.83911\n\n\nItaly\n2003\n19601.25524\n\n\nItaly\n2004\n19744.88756\n\n\nItaly\n2005\n19781.95853\n\n\nItaly\n2006\n20102.23023\n\n\nItaly\n2007\n20291.22664\n\n\nItaly\n2008\n19903.45694\n\n\nItaly\n2009\n18697.21979\n\n\nItaly\n2010\n18944.41381\n\n\nItaly\n2011\n18937.24998\n\n\nJamaica\n1966\n2761.25853\n\n\nJamaica\n1967\n2778.83718\n\n\nJamaica\n1968\n2906.53118\n\n\nJamaica\n1969\n3033.24969\n\n\nJamaica\n1970\n3355.42759\n\n\nJamaica\n1971\n3389.61227\n\n\nJamaica\n1972\n3938.66896\n\n\nJamaica\n1973\n3663.77398\n\n\nJamaica\n1974\n3456.21781\n\n\nJamaica\n1975\n3400.87517\n\n\nJamaica\n1976\n3134.72376\n\n\nJamaica\n1977\n3021.14993\n\n\nJamaica\n1978\n2989.17998\n\n\nJamaica\n1979\n2923.99391\n\n\nJamaica\n1980\n2719.61139\n\n\nJamaica\n1981\n2753.56965\n\n\nJamaica\n1982\n2762.25927\n\n\nJamaica\n1983\n2763.86380\n\n\nJamaica\n1984\n2674.56662\n\n\nJamaica\n1985\n2560.79316\n\n\nJamaica\n1986\n2581.41336\n\n\nJamaica\n1987\n2766.53426\n\n\nJamaica\n1988\n2869.40456\n\n\nJamaica\n1989\n3051.28021\n\n\nJamaica\n1990\n3159.36257\n\n\nJamaica\n1991\n3290.13625\n\n\nJamaica\n1992\n3330.93912\n\n\nJamaica\n1993\n3617.77163\n\n\nJamaica\n1994\n3639.52304\n\n\nJamaica\n1995\n3695.01263\n\n\nJamaica\n1996\n3646.80824\n\n\nJamaica\n1997\n3570.86642\n\n\nJamaica\n1998\n3456.52383\n\n\nJamaica\n1999\n3468.98069\n\n\nJamaica\n2000\n3479.05675\n\n\nJamaica\n2001\n3505.00205\n\n\nJapan\n1960\n7774.71022\n\n\nJapan\n1961\n8486.96647\n\n\nJapan\n1962\n9157.32331\n\n\nJapan\n1963\n9832.73038\n\n\nJapan\n1964\n10867.04914\n\n\nJapan\n1965\n11376.55711\n\n\nJapan\n1966\n12472.45608\n\n\nJapan\n1967\n13726.06266\n\n\nJapan\n1968\n15442.80396\n\n\nJapan\n1969\n17014.33887\n\n\nJapan\n1970\n16650.83844\n\n\nJapan\n1971\n17210.26629\n\n\nJapan\n1972\n18398.72118\n\n\nJapan\n1973\n19712.75463\n\n\nJapan\n1974\n19103.05411\n\n\nJapan\n1975\n19380.83543\n\n\nJapan\n1976\n20002.72790\n\n\nJapan\n1977\n20680.65741\n\n\nJapan\n1978\n21574.81726\n\n\nJapan\n1979\n22567.07906\n\n\nJapan\n1980\n23021.72563\n\n\nJapan\n1981\n23806.76747\n\n\nJapan\n1982\n24444.20174\n\n\nJapan\n1983\n25021.26962\n\n\nJapan\n1984\n25972.89455\n\n\nJapan\n1985\n27449.51885\n\n\nJapan\n1986\n28055.17380\n\n\nJapan\n1987\n29064.22236\n\n\nJapan\n1988\n31008.77531\n\n\nJapan\n1989\n32540.50169\n\n\nJapan\n1990\n34236.71426\n\n\nJapan\n1991\n35265.24153\n\n\nJapan\n1992\n35465.92544\n\n\nJapan\n1993\n35439.01601\n\n\nJapan\n1994\n35623.48851\n\n\nJapan\n1995\n36177.03484\n\n\nJapan\n1996\n37026.22945\n\n\nJapan\n1997\n37518.58086\n\n\nJapan\n1998\n36674.24535\n\n\nJapan\n1999\n36531.78124\n\n\nJapan\n2000\n37291.70616\n\n\nJapan\n2001\n37342.14473\n\n\nJapan\n2002\n37363.28744\n\n\nJapan\n2003\n37911.68993\n\n\nJapan\n2004\n38793.62160\n\n\nJapan\n2005\n39295.30620\n\n\nJapan\n2006\n39965.85551\n\n\nJapan\n2007\n40837.26664\n\n\nJapan\n2008\n40433.00131\n\n\nJapan\n2009\n38242.02429\n\n\nJapan\n2010\n39971.78745\n\n\nJapan\n2011\n39578.07441\n\n\nJordan\n1975\n1118.72464\n\n\nJordan\n1976\n1341.56023\n\n\nJordan\n1977\n1377.25071\n\n\nJordan\n1978\n1605.11933\n\n\nJordan\n1979\n1686.25907\n\n\nJordan\n1980\n1931.68134\n\n\nJordan\n1981\n1945.67496\n\n\nJordan\n1982\n2007.45480\n\n\nJordan\n1983\n1967.26114\n\n\nJordan\n1984\n2057.32384\n\n\nJordan\n1985\n2053.80971\n\n\nJordan\n1986\n2117.76995\n\n\nJordan\n1987\n2100.99395\n\n\nJordan\n1988\n1990.73395\n\n\nJordan\n1989\n1662.04898\n\n\nJordan\n1990\n1617.88033\n\n\nJordan\n1991\n1473.12345\n\n\nJordan\n1992\n1660.04344\n\n\nJordan\n1993\n1660.01853\n\n\nJordan\n1994\n1676.30520\n\n\nJordan\n1995\n1723.08955\n\n\nJordan\n1996\n1706.16772\n\n\nJordan\n1997\n1709.60361\n\n\nJordan\n1998\n1708.13311\n\n\nJordan\n1999\n1734.70048\n\n\nJordan\n2000\n1764.22989\n\n\nJordan\n2001\n1811.87199\n\n\nJordan\n2002\n1870.85907\n\n\nJordan\n2003\n1901.46936\n\n\nJordan\n2004\n2015.04863\n\n\nJordan\n2005\n2129.78042\n\n\nJordan\n2006\n2250.27421\n\n\nJordan\n2007\n2380.50934\n\n\nJordan\n2008\n2497.53932\n\n\nJordan\n2009\n2577.48041\n\n\nJordan\n2010\n2579.38245\n\n\nJordan\n2011\n2588.66896\n\n\nKazakhstan\n1990\n1611.71255\n\n\nKazakhstan\n1991\n1425.48654\n\n\nKazakhstan\n1992\n1350.87229\n\n\nKazakhstan\n1993\n1234.75480\n\n\nKazakhstan\n1994\n1094.94709\n\n\nKazakhstan\n1995\n1022.92965\n\n\nKazakhstan\n1996\n1043.73314\n\n\nKazakhstan\n1997\n1078.38076\n\n\nKazakhstan\n1998\n1076.31023\n\n\nKazakhstan\n1999\n1115.94969\n\n\nKazakhstan\n2000\n1229.00096\n\n\nKazakhstan\n2001\n1397.29043\n\n\nKazakhstan\n2002\n1534.16160\n\n\nKazakhstan\n2003\n1671.20707\n\n\nKazakhstan\n2004\n1818.95882\n\n\nKazakhstan\n2005\n1977.73937\n\n\nKazakhstan\n2006\n2166.32330\n\n\nKazakhstan\n2007\n2332.29493\n\n\nKazakhstan\n2008\n2380.08530\n\n\nKazakhstan\n2009\n2345.86415\n\n\nKazakhstan\n2010\n2481.67528\n\n\nKazakhstan\n2011\n2629.91141\n\n\nKenya\n1960\n261.11918\n\n\nKenya\n1961\n233.44524\n\n\nKenya\n1962\n247.60109\n\n\nKenya\n1963\n260.88779\n\n\nKenya\n1964\n265.15652\n\n\nKenya\n1965\n261.81747\n\n\nKenya\n1966\n290.66128\n\n\nKenya\n1967\n290.60951\n\n\nKenya\n1968\n303.41731\n\n\nKenya\n1969\n316.55161\n\n\nKenya\n1970\n291.49500\n\n\nKenya\n1971\n343.75795\n\n\nKenya\n1972\n388.30131\n\n\nKenya\n1973\n396.54018\n\n\nKenya\n1974\n397.81409\n\n\nKenya\n1975\n386.77652\n\n\nKenya\n1976\n380.71400\n\n\nKenya\n1977\n401.46291\n\n\nKenya\n1978\n413.43267\n\n\nKenya\n1979\n428.44917\n\n\nKenya\n1980\n435.55579\n\n\nKenya\n1981\n435.07806\n\n\nKenya\n1982\n425.09376\n\n\nKenya\n1983\n414.59269\n\n\nKenya\n1984\n406.27312\n\n\nKenya\n1985\n408.28258\n\n\nKenya\n1986\n421.86523\n\n\nKenya\n1987\n431.12191\n\n\nKenya\n1988\n441.97938\n\n\nKenya\n1989\n446.96137\n\n\nKenya\n1990\n450.17182\n\n\nKenya\n1991\n441.70924\n\n\nKenya\n1992\n424.14093\n\n\nKenya\n1993\n412.39697\n\n\nKenya\n1994\n410.60191\n\n\nKenya\n1995\n416.45738\n\n\nKenya\n1996\n421.94420\n\n\nKenya\n1997\n412.91631\n\n\nKenya\n1998\n415.70717\n\n\nKenya\n1999\n414.60006\n\n\nKenya\n2000\n406.52306\n\n\nKenya\n2001\n411.07133\n\n\nKenya\n2002\n402.62883\n\n\nKenya\n2003\n403.67889\n\n\nKenya\n2004\n413.31828\n\n\nKenya\n2005\n426.51749\n\n\nKenya\n2006\n442.02131\n\n\nKenya\n2007\n461.01937\n\n\nKenya\n2008\n456.25049\n\n\nKenya\n2009\n456.77154\n\n\nKenya\n2010\n470.57709\n\n\nKenya\n2011\n478.21949\n\n\nKiribati\n1970\n1217.66403\n\n\nKiribati\n1971\n1169.53517\n\n\nKiribati\n1972\n1289.63145\n\n\nKiribati\n1973\n1534.59882\n\n\nKiribati\n1974\n2194.07868\n\n\nKiribati\n1975\n2272.75618\n\n\nKiribati\n1976\n1641.06943\n\n\nKiribati\n1977\n1539.29706\n\n\nKiribati\n1978\n1526.75006\n\n\nKiribati\n1979\n1323.24884\n\n\nKiribati\n1980\n720.26996\n\n\nKiribati\n1981\n680.61068\n\n\nKiribati\n1982\n710.62612\n\n\nKiribati\n1983\n756.82170\n\n\nKiribati\n1984\n730.58503\n\n\nKiribati\n1985\n681.46624\n\n\nKiribati\n1986\n676.98424\n\n\nKiribati\n1987\n642.15260\n\n\nKiribati\n1988\n743.23786\n\n\nKiribati\n1989\n665.46726\n\n\nKiribati\n1990\n670.26385\n\n\nKiribati\n1991\n629.77095\n\n\nKiribati\n1992\n640.19124\n\n\nKiribati\n1993\n653.95427\n\n\nKiribati\n1994\n677.31916\n\n\nKiribati\n1995\n661.54344\n\n\nKiribati\n1996\n691.41758\n\n\nKiribati\n1997\n718.19455\n\n\nKiribati\n1998\n783.57625\n\n\nKiribati\n1999\n771.06436\n\n\nKiribati\n2000\n812.28208\n\n\nKiribati\n2001\n773.13886\n\n\nKiribati\n2002\n805.95392\n\n\nKiribati\n2003\n826.78676\n\n\nKiribati\n2004\n819.33797\n\n\nKiribati\n2005\n785.37368\n\n\nKiribati\n2006\n769.21944\n\n\nKiribati\n2007\n773.01880\n\n\nKiribati\n2008\n743.14371\n\n\nKiribati\n2009\n714.61506\n\n\nKiribati\n2010\n713.56250\n\n\nKiribati\n2011\n715.29061\n\n\nSouth Korea\n1960\n1153.70996\n\n\nSouth Korea\n1961\n1180.01013\n\n\nSouth Korea\n1962\n1176.47829\n\n\nSouth Korea\n1963\n1255.23713\n\n\nSouth Korea\n1964\n1316.34885\n\n\nSouth Korea\n1965\n1351.03061\n\n\nSouth Korea\n1966\n1486.77180\n\n\nSouth Korea\n1967\n1541.54643\n\n\nSouth Korea\n1968\n1683.82096\n\n\nSouth Korea\n1969\n1879.80003\n\n\nSouth Korea\n1970\n1993.64830\n\n\nSouth Korea\n1971\n2113.43658\n\n\nSouth Korea\n1972\n2163.40861\n\n\nSouth Korea\n1973\n2375.96155\n\n\nSouth Korea\n1974\n2497.22858\n\n\nSouth Korea\n1975\n2595.12526\n\n\nSouth Korea\n1976\n2824.02731\n\n\nSouth Korea\n1977\n3058.24926\n\n\nSouth Korea\n1978\n3292.15977\n\n\nSouth Korea\n1979\n3462.54924\n\n\nSouth Korea\n1980\n3358.22902\n\n\nSouth Korea\n1981\n3510.04774\n\n\nSouth Korea\n1982\n3709.39755\n\n\nSouth Korea\n1983\n4048.95323\n\n\nSouth Korea\n1984\n4323.28207\n\n\nSouth Korea\n1985\n4572.11299\n\n\nSouth Korea\n1986\n5011.19808\n\n\nSouth Korea\n1987\n5515.28572\n\n\nSouth Korea\n1988\n6044.02873\n\n\nSouth Korea\n1989\n6390.01258\n\n\nSouth Korea\n1990\n6895.46706\n\n\nSouth Korea\n1991\n7473.61103\n\n\nSouth Korea\n1992\n7841.15440\n\n\nSouth Korea\n1993\n8247.87679\n\n\nSouth Korea\n1994\n8872.01007\n\n\nSouth Korea\n1995\n9548.01484\n\n\nSouth Korea\n1996\n10119.29924\n\n\nSouth Korea\n1997\n10491.08182\n\n\nSouth Korea\n1998\n9701.67292\n\n\nSouth Korea\n1999\n10546.81217\n\n\nSouth Korea\n2000\n11346.66499\n\n\nSouth Korea\n2001\n11710.57982\n\n\nSouth Korea\n2002\n12478.06366\n\n\nSouth Korea\n2003\n12764.27199\n\n\nSouth Korea\n2004\n13303.82000\n\n\nSouth Korea\n2005\n13801.82945\n\n\nSouth Korea\n2006\n14446.35860\n\n\nSouth Korea\n2007\n15113.35278\n\n\nSouth Korea\n2008\n15349.84987\n\n\nSouth Korea\n2009\n15325.94024\n\n\nSouth Korea\n2010\n16219.38807\n\n\nSouth Korea\n2011\n16684.21278\n\n\nKosovo\n2000\n1087.76240\n\n\nKosovo\n2001\n1380.23758\n\n\nKosovo\n2002\n1369.63208\n\n\nKosovo\n2003\n1442.88692\n\n\nKosovo\n2004\n1479.57288\n\n\nKosovo\n2005\n1535.40890\n\n\nKosovo\n2006\n1614.51344\n\n\nKosovo\n2007\n1702.49720\n\n\nKosovo\n2008\n1805.40982\n\n\nKosovo\n2009\n1842.90541\n\n\nKosovo\n2010\n1899.45989\n\n\nKosovo\n2011\n1973.73274\n\n\nKuwait\n1995\n21085.45971\n\n\nKuwait\n1996\n21210.33041\n\n\nKuwait\n1997\n21078.64108\n\n\nKuwait\n1998\n20798.95413\n\n\nKuwait\n1999\n19398.22222\n\n\nKuwait\n2000\n19434.40002\n\n\nKuwait\n2001\n18905.85819\n\n\nKuwait\n2002\n18906.40295\n\n\nKuwait\n2003\n21586.83197\n\n\nKuwait\n2004\n23107.46608\n\n\nKuwait\n2005\n24715.55216\n\n\nKuwait\n2006\n25034.04790\n\n\nKuwait\n2007\n25100.02810\n\n\nKuwait\n2008\n25308.08492\n\n\nKuwait\n2009\n23116.34061\n\n\nKuwait\n2010\n23114.58667\n\n\nKuwait\n2011\n24286.11580\n\n\nKyrgyz Republic\n1986\n398.05844\n\n\nKyrgyz Republic\n1987\n403.44579\n\n\nKyrgyz Republic\n1988\n448.71087\n\n\nKyrgyz Republic\n1989\n451.68834\n\n\nKyrgyz Republic\n1990\n468.34666\n\n\nKyrgyz Republic\n1991\n424.57624\n\n\nKyrgyz Republic\n1992\n361.41388\n\n\nKyrgyz Republic\n1993\n305.45380\n\n\nKyrgyz Republic\n1994\n244.18942\n\n\nKyrgyz Republic\n1995\n228.65096\n\n\nKyrgyz Republic\n1996\n241.25244\n\n\nKyrgyz Republic\n1997\n261.33354\n\n\nKyrgyz Republic\n1998\n262.81583\n\n\nKyrgyz Republic\n1999\n268.40534\n\n\nKyrgyz Republic\n2000\n279.62027\n\n\nKyrgyz Republic\n2001\n291.71933\n\n\nKyrgyz Republic\n2002\n289.00373\n\n\nKyrgyz Republic\n2003\n306.09543\n\n\nKyrgyz Republic\n2004\n323.66386\n\n\nKyrgyz Republic\n2005\n319.47206\n\n\nKyrgyz Republic\n2006\n325.86287\n\n\nKyrgyz Republic\n2007\n350.34411\n\n\nKyrgyz Republic\n2008\n376.18703\n\n\nKyrgyz Republic\n2009\n382.40033\n\n\nKyrgyz Republic\n2010\n376.08402\n\n\nKyrgyz Republic\n2011\n393.19147\n\n\nLao\n1984\n206.45976\n\n\nLao\n1985\n211.15367\n\n\nLao\n1986\n215.51510\n\n\nLao\n1987\n206.64970\n\n\nLao\n1988\n196.91988\n\n\nLao\n1989\n218.62681\n\n\nLao\n1990\n226.79406\n\n\nLao\n1991\n229.95986\n\n\nLao\n1992\n236.05495\n\n\nLao\n1993\n243.28339\n\n\nLao\n1994\n256.33999\n\n\nLao\n1995\n267.66197\n\n\nLao\n1996\n279.62576\n\n\nLao\n1997\n292.37154\n\n\nLao\n1998\n297.78233\n\n\nLao\n1999\n313.41447\n\n\nLao\n2000\n325.59310\n\n\nLao\n2001\n338.47220\n\n\nLao\n2002\n352.77982\n\n\nLao\n2003\n368.46312\n\n\nLao\n2004\n386.00909\n\n\nLao\n2005\n407.24429\n\n\nLao\n2006\n435.66458\n\n\nLao\n2007\n461.66329\n\n\nLao\n2008\n490.29753\n\n\nLao\n2009\n519.30519\n\n\nLao\n2010\n555.51946\n\n\nLao\n2011\n591.85818\n\n\nLatvia\n1965\n1558.05442\n\n\nLatvia\n1966\n1610.39436\n\n\nLatvia\n1967\n1784.94003\n\n\nLatvia\n1968\n1889.23071\n\n\nLatvia\n1969\n1959.06276\n\n\nLatvia\n1970\n2101.86367\n\n\nLatvia\n1971\n2248.10606\n\n\nLatvia\n1972\n2344.53443\n\n\nLatvia\n1973\n2459.54537\n\n\nLatvia\n1974\n2556.61291\n\n\nLatvia\n1975\n2711.31016\n\n\nLatvia\n1976\n2846.47275\n\n\nLatvia\n1977\n2920.94926\n\n\nLatvia\n1978\n3001.37065\n\n\nLatvia\n1979\n3082.81262\n\n\nLatvia\n1980\n3201.32506\n\n\nLatvia\n1981\n3326.56721\n\n\nLatvia\n1982\n3389.06660\n\n\nLatvia\n1983\n3545.04571\n\n\nLatvia\n1984\n3725.55725\n\n\nLatvia\n1985\n3687.35301\n\n\nLatvia\n1986\n3829.75208\n\n\nLatvia\n1987\n3879.47223\n\n\nLatvia\n1988\n4035.93316\n\n\nLatvia\n1989\n4243.77151\n\n\nLatvia\n1990\n3912.24540\n\n\nLatvia\n1991\n3435.70585\n\n\nLatvia\n1992\n2364.53801\n\n\nLatvia\n1993\n2291.45693\n\n\nLatvia\n1994\n2381.16268\n\n\nLatvia\n1995\n2392.53741\n\n\nLatvia\n1996\n2511.36488\n\n\nLatvia\n1997\n2746.61723\n\n\nLatvia\n1998\n2903.58361\n\n\nLatvia\n1999\n3064.87117\n\n\nLatvia\n2000\n3300.93466\n\n\nLatvia\n2001\n3593.66525\n\n\nLatvia\n2002\n3853.07711\n\n\nLatvia\n2003\n4153.93409\n\n\nLatvia\n2004\n4538.84778\n\n\nLatvia\n2005\n5046.86247\n\n\nLatvia\n2006\n5695.36145\n\n\nLatvia\n2007\n6296.22712\n\n\nLatvia\n2008\n6055.66481\n\n\nLatvia\n2009\n4993.18119\n\n\nLatvia\n2010\n5011.20155\n\n\nLatvia\n2011\n5330.56799\n\n\nLebanon\n1988\n4304.22284\n\n\nLebanon\n1989\n2461.62753\n\n\nLebanon\n1990\n3066.72932\n\n\nLebanon\n1991\n4129.43197\n\n\nLebanon\n1992\n4170.90961\n\n\nLebanon\n1993\n4299.35241\n\n\nLebanon\n1994\n4484.61287\n\n\nLebanon\n1995\n4642.36002\n\n\nLebanon\n1996\n4775.77882\n\n\nLebanon\n1997\n4591.05170\n\n\nLebanon\n1998\n4694.88593\n\n\nLebanon\n1999\n4615.52805\n\n\nLebanon\n2000\n4612.19867\n\n\nLebanon\n2001\n4718.17350\n\n\nLebanon\n2002\n4794.64997\n\n\nLebanon\n2003\n4865.70502\n\n\nLebanon\n2004\n5147.69067\n\n\nLebanon\n2005\n5129.40177\n\n\nLebanon\n2006\n5103.49018\n\n\nLebanon\n2007\n5436.65189\n\n\nLebanon\n2008\n5895.08221\n\n\nLebanon\n2009\n6350.33024\n\n\nLebanon\n2010\n6745.65991\n\n\nLebanon\n2011\n6896.23091\n\n\nLesotho\n1960\n132.22583\n\n\nLesotho\n1961\n132.37928\n\n\nLesotho\n1962\n149.95927\n\n\nLesotho\n1963\n162.83666\n\n\nLesotho\n1964\n172.96520\n\n\nLesotho\n1965\n173.31416\n\n\nLesotho\n1966\n169.24498\n\n\nLesotho\n1967\n183.97632\n\n\nLesotho\n1968\n179.60375\n\n\nLesotho\n1969\n178.68700\n\n\nLesotho\n1970\n178.87327\n\n\nLesotho\n1971\n184.22385\n\n\nLesotho\n1972\n180.13154\n\n\nLesotho\n1973\n222.98118\n\n\nLesotho\n1974\n242.08653\n\n\nLesotho\n1975\n204.54011\n\n\nLesotho\n1976\n221.59830\n\n\nLesotho\n1977\n263.06546\n\n\nLesotho\n1978\n303.12069\n\n\nLesotho\n1979\n303.65270\n\n\nLesotho\n1980\n287.52699\n\n\nLesotho\n1981\n281.90267\n\n\nLesotho\n1982\n281.54766\n\n\nLesotho\n1983\n265.60327\n\n\nLesotho\n1984\n286.08787\n\n\nLesotho\n1985\n293.51408\n\n\nLesotho\n1986\n288.87526\n\n\nLesotho\n1987\n262.90870\n\n\nLesotho\n1988\n280.72990\n\n\nLesotho\n1989\n294.33157\n\n\nLesotho\n1990\n307.69188\n\n\nLesotho\n1991\n309.26571\n\n\nLesotho\n1992\n326.15647\n\n\nLesotho\n1993\n330.93878\n\n\nLesotho\n1994\n343.42387\n\n\nLesotho\n1995\n343.10633\n\n\nLesotho\n1996\n352.32711\n\n\nLesotho\n1997\n357.40441\n\n\nLesotho\n1998\n369.93401\n\n\nLesotho\n1999\n364.91955\n\n\nLesotho\n2000\n379.77562\n\n\nLesotho\n2001\n390.60060\n\n\nLesotho\n2002\n390.59985\n\n\nLesotho\n2003\n403.81579\n\n\nLesotho\n2004\n409.28153\n\n\nLesotho\n2005\n416.53601\n\n\nLesotho\n2006\n430.35133\n\n\nLesotho\n2007\n446.32042\n\n\nLesotho\n2008\n465.69375\n\n\nLesotho\n2009\n474.16772\n\n\nLesotho\n2010\n495.66164\n\n\nLesotho\n2011\n518.98413\n\n\nLiberia\n1960\n608.02543\n\n\nLiberia\n1961\n608.15676\n\n\nLiberia\n1962\n601.59572\n\n\nLiberia\n1963\n600.36736\n\n\nLiberia\n1964\n615.77118\n\n\nLiberia\n1965\n629.16893\n\n\nLiberia\n1966\n660.45328\n\n\nLiberia\n1967\n686.88983\n\n\nLiberia\n1968\n700.89646\n\n\nLiberia\n1969\n732.10591\n\n\nLiberia\n1970\n759.95076\n\n\nLiberia\n1971\n775.59301\n\n\nLiberia\n1972\n785.55236\n\n\nLiberia\n1973\n746.49914\n\n\nLiberia\n1974\n759.92274\n\n\nLiberia\n1975\n712.54925\n\n\nLiberia\n1976\n729.03475\n\n\nLiberia\n1977\n719.82686\n\n\nLiberia\n1978\n733.05698\n\n\nLiberia\n1979\n734.50051\n\n\nLiberia\n1980\n682.40032\n\n\nLiberia\n1981\n645.52583\n\n\nLiberia\n1982\n608.24472\n\n\nLiberia\n1983\n577.91413\n\n\nLiberia\n1984\n551.97404\n\n\nLiberia\n1985\n539.39013\n\n\nLiberia\n1986\n527.98645\n\n\nLiberia\n1987\n524.74390\n\n\nLiberia\n1988\n519.39496\n\n\nLiberia\n1989\n386.27218\n\n\nLiberia\n1990\n192.01454\n\n\nLiberia\n1991\n167.51493\n\n\nLiberia\n1992\n110.70914\n\n\nLiberia\n1993\n75.06433\n\n\nLiberia\n1994\n58.45993\n\n\nLiberia\n1995\n54.50519\n\n\nLiberia\n1996\n58.08325\n\n\nLiberia\n1997\n111.86020\n\n\nLiberia\n1998\n134.78610\n\n\nLiberia\n1999\n155.25653\n\n\nLiberia\n2000\n185.81340\n\n\nLiberia\n2001\n219.76895\n\n\nLiberia\n2002\n284.36511\n\n\nLiberia\n2003\n188.40308\n\n\nLiberia\n2004\n175.57891\n\n\nLiberia\n2005\n186.80108\n\n\nLiberia\n2006\n196.95099\n\n\nLiberia\n2007\n217.13653\n\n\nLiberia\n2008\n228.11231\n\n\nLiberia\n2009\n247.49826\n\n\nLiberia\n2010\n263.70560\n\n\nLiberia\n2011\n279.22041\n\n\nLibya\n1999\n6366.40293\n\n\nLibya\n2000\n6479.71252\n\n\nLibya\n2001\n6084.62853\n\n\nLibya\n2002\n5891.72123\n\n\nLibya\n2003\n6529.36090\n\n\nLibya\n2004\n6681.91263\n\n\nLibya\n2005\n7194.62173\n\n\nLibya\n2006\n7458.76645\n\n\nLibya\n2007\n7736.54427\n\n\nLibya\n2008\n7865.25438\n\n\nLibya\n2009\n7885.46804\n\n\nLiechtenstein\n1970\n32622.11206\n\n\nLiechtenstein\n1971\n32495.67745\n\n\nLiechtenstein\n1972\n32447.18017\n\n\nLiechtenstein\n1973\n32452.21485\n\n\nLiechtenstein\n1974\n32477.17062\n\n\nLiechtenstein\n1975\n32500.34807\n\n\nLiechtenstein\n1976\n33504.54266\n\n\nLiechtenstein\n1977\n34539.91287\n\n\nLiechtenstein\n1978\n35609.02501\n\n\nLiechtenstein\n1979\n36719.00802\n\n\nLiechtenstein\n1980\n37874.39217\n\n\nLiechtenstein\n1981\n39097.85229\n\n\nLiechtenstein\n1982\n37898.79060\n\n\nLiechtenstein\n1983\n37543.87223\n\n\nLiechtenstein\n1984\n38591.08105\n\n\nLiechtenstein\n1985\n40723.64189\n\n\nLiechtenstein\n1986\n41781.44111\n\n\nLiechtenstein\n1987\n45037.38546\n\n\nLiechtenstein\n1988\n46959.86859\n\n\nLiechtenstein\n1989\n48438.15950\n\n\nLiechtenstein\n1990\n48888.63365\n\n\nLiechtenstein\n1991\n49118.48924\n\n\nLiechtenstein\n1992\n50223.91280\n\n\nLiechtenstein\n1993\n51714.99560\n\n\nLiechtenstein\n1994\n54551.23254\n\n\nLiechtenstein\n1995\n57024.68607\n\n\nLiechtenstein\n1996\n60209.33431\n\n\nLiechtenstein\n1997\n63781.81195\n\n\nLiechtenstein\n1998\n67918.18130\n\n\nLiechtenstein\n1999\n74111.48558\n\n\nLiechtenstein\n2000\n75606.20320\n\n\nLiechtenstein\n2001\n74180.37242\n\n\nLiechtenstein\n2002\n72597.82664\n\n\nLiechtenstein\n2003\n70395.67093\n\n\nLiechtenstein\n2004\n71777.36546\n\n\nLiechtenstein\n2005\n74525.01466\n\n\nLiechtenstein\n2006\n80275.88488\n\n\nLiechtenstein\n2007\n82308.43696\n\n\nLiechtenstein\n2008\n83186.91152\n\n\nLiechtenstein\n2009\n81647.10003\n\n\nLithuania\n1990\n4290.78013\n\n\nLithuania\n1991\n4040.37071\n\n\nLithuania\n1992\n3184.88596\n\n\nLithuania\n1993\n2680.75850\n\n\nLithuania\n1994\n2435.80025\n\n\nLithuania\n1995\n2535.38065\n\n\nLithuania\n1996\n2687.13504\n\n\nLithuania\n1997\n2909.22705\n\n\nLithuania\n1998\n3153.93232\n\n\nLithuania\n1999\n3142.29863\n\n\nLithuania\n2000\n3267.34744\n\n\nLithuania\n2001\n3505.70277\n\n\nLithuania\n2002\n3759.51624\n\n\nLithuania\n2003\n4162.57865\n\n\nLithuania\n2004\n4492.77140\n\n\nLithuania\n2005\n4873.50423\n\n\nLithuania\n2006\n5287.13655\n\n\nLithuania\n2007\n5839.14560\n\n\nLithuania\n2008\n6041.40902\n\n\nLithuania\n2009\n5179.58164\n\n\nLithuania\n2010\n5332.53061\n\n\nLithuania\n2011\n5793.28978\n\n\nLuxembourg\n1960\n13702.91200\n\n\nLuxembourg\n1961\n14098.63110\n\n\nLuxembourg\n1962\n14116.20888\n\n\nLuxembourg\n1963\n14450.75305\n\n\nLuxembourg\n1964\n15413.83461\n\n\nLuxembourg\n1965\n15127.46998\n\n\nLuxembourg\n1966\n15185.05726\n\n\nLuxembourg\n1967\n15167.99777\n\n\nLuxembourg\n1968\n15762.37749\n\n\nLuxembourg\n1969\n17249.59136\n\n\nLuxembourg\n1970\n17466.69322\n\n\nLuxembourg\n1971\n17762.36885\n\n\nLuxembourg\n1972\n18706.07015\n\n\nLuxembourg\n1973\n20038.46000\n\n\nLuxembourg\n1974\n20612.02061\n\n\nLuxembourg\n1975\n19048.29480\n\n\nLuxembourg\n1976\n19434.61321\n\n\nLuxembourg\n1977\n19705.44245\n\n\nLuxembourg\n1978\n20471.66642\n\n\nLuxembourg\n1979\n20902.82908\n\n\nLuxembourg\n1980\n21003.69501\n\n\nLuxembourg\n1981\n20826.49357\n\n\nLuxembourg\n1982\n21044.81661\n\n\nLuxembourg\n1983\n21668.11224\n\n\nLuxembourg\n1984\n22985.06770\n\n\nLuxembourg\n1985\n23581.12705\n\n\nLuxembourg\n1986\n25819.34721\n\n\nLuxembourg\n1987\n26666.08424\n\n\nLuxembourg\n1988\n28713.80110\n\n\nLuxembourg\n1989\n31222.04114\n\n\nLuxembourg\n1990\n32473.98605\n\n\nLuxembourg\n1991\n34811.59628\n\n\nLuxembourg\n1992\n34977.32639\n\n\nLuxembourg\n1993\n35960.61550\n\n\nLuxembourg\n1994\n36829.65055\n\n\nLuxembourg\n1995\n36836.02214\n\n\nLuxembourg\n1996\n36888.60393\n\n\nLuxembourg\n1997\n38592.16632\n\n\nLuxembourg\n1998\n40589.27007\n\n\nLuxembourg\n1999\n43416.66048\n\n\nLuxembourg\n2000\n46453.24578\n\n\nLuxembourg\n2001\n47059.30298\n\n\nLuxembourg\n2002\n48473.59546\n\n\nLuxembourg\n2003\n48685.68121\n\n\nLuxembourg\n2004\n50096.42191\n\n\nLuxembourg\n2005\n51927.36096\n\n\nLuxembourg\n2006\n53628.23455\n\n\nLuxembourg\n2007\n56285.27685\n\n\nLuxembourg\n2008\n54881.98403\n\n\nLuxembourg\n2009\n51678.20312\n\n\nLuxembourg\n2010\n52222.57667\n\n\nLuxembourg\n2011\n52056.01781\n\n\nMacao, China\n1982\n10028.38084\n\n\nMacao, China\n1983\n10594.62361\n\n\nMacao, China\n1984\n11008.99817\n\n\nMacao, China\n1985\n10616.43523\n\n\nMacao, China\n1986\n10851.41843\n\n\nMacao, China\n1987\n11887.07245\n\n\nMacao, China\n1988\n12307.15750\n\n\nMacao, China\n1989\n12458.48966\n\n\nMacao, China\n1990\n13033.75616\n\n\nMacao, China\n1991\n13158.10771\n\n\nMacao, China\n1992\n14577.02034\n\n\nMacao, China\n1993\n15044.12439\n\n\nMacao, China\n1994\n15422.24854\n\n\nMacao, China\n1995\n15670.47860\n\n\nMacao, China\n1996\n15361.73198\n\n\nMacao, China\n1997\n15083.07103\n\n\nMacao, China\n1998\n14169.15475\n\n\nMacao, China\n1999\n13605.60248\n\n\nMacao, China\n2000\n14128.87518\n\n\nMacao, China\n2001\n14261.29034\n\n\nMacao, China\n2002\n15212.88810\n\n\nMacao, China\n2003\n16755.03051\n\n\nMacao, China\n2004\n20776.99739\n\n\nMacao, China\n2005\n22024.05015\n\n\nMacao, China\n2006\n24595.65317\n\n\nMacao, China\n2007\n27440.57214\n\n\nMacao, China\n2008\n27656.90664\n\n\nMacao, China\n2009\n27459.57241\n\n\nMacao, China\n2010\n34083.96421\n\n\nMacao, China\n2011\n40258.80862\n\n\nMacedonia, FYR\n1990\n2059.41859\n\n\nMacedonia, FYR\n1991\n1918.85110\n\n\nMacedonia, FYR\n1992\n1782.22755\n\n\nMacedonia, FYR\n1993\n1640.55537\n\n\nMacedonia, FYR\n1994\n1603.85184\n\n\nMacedonia, FYR\n1995\n1578.21368\n\n\nMacedonia, FYR\n1996\n1588.98254\n\n\nMacedonia, FYR\n1997\n1603.97280\n\n\nMacedonia, FYR\n1998\n1650.33584\n\n\nMacedonia, FYR\n1999\n1714.39767\n\n\nMacedonia, FYR\n2000\n1785.32679\n\n\nMacedonia, FYR\n2001\n1698.62995\n\n\nMacedonia, FYR\n2002\n1707.89228\n\n\nMacedonia, FYR\n2003\n1751.17665\n\n\nMacedonia, FYR\n2004\n1827.50444\n\n\nMacedonia, FYR\n2005\n1902.29652\n\n\nMacedonia, FYR\n2006\n1993.12215\n\n\nMacedonia, FYR\n2007\n2110.68574\n\n\nMacedonia, FYR\n2008\n2210.19828\n\n\nMacedonia, FYR\n2009\n2185.33885\n\n\nMacedonia, FYR\n2010\n2220.04388\n\n\nMacedonia, FYR\n2011\n2283.79802\n\n\nMadagascar\n1960\n409.11683\n\n\nMadagascar\n1961\n407.65200\n\n\nMadagascar\n1962\n406.97214\n\n\nMadagascar\n1963\n393.48474\n\n\nMadagascar\n1964\n399.14386\n\n\nMadagascar\n1965\n387.61135\n\n\nMadagascar\n1966\n385.85946\n\n\nMadagascar\n1967\n397.07401\n\n\nMadagascar\n1968\n413.53477\n\n\nMadagascar\n1969\n417.99266\n\n\nMadagascar\n1970\n428.65089\n\n\nMadagascar\n1971\n433.78699\n\n\nMadagascar\n1972\n416.87956\n\n\nMadagascar\n1973\n395.05993\n\n\nMadagascar\n1974\n392.07467\n\n\nMadagascar\n1975\n386.19361\n\n\nMadagascar\n1976\n364.05953\n\n\nMadagascar\n1977\n362.37136\n\n\nMadagascar\n1978\n343.03601\n\n\nMadagascar\n1979\n366.68587\n\n\nMadagascar\n1980\n359.94369\n\n\nMadagascar\n1981\n316.75814\n\n\nMadagascar\n1982\n303.27623\n\n\nMadagascar\n1983\n298.42518\n\n\nMadagascar\n1984\n295.85896\n\n\nMadagascar\n1985\n291.49859\n\n\nMadagascar\n1986\n289.22871\n\n\nMadagascar\n1987\n284.56443\n\n\nMadagascar\n1988\n285.95089\n\n\nMadagascar\n1989\n289.08688\n\n\nMadagascar\n1990\n289.49411\n\n\nMadagascar\n1991\n263.29058\n\n\nMadagascar\n1992\n258.53769\n\n\nMadagascar\n1993\n256.07212\n\n\nMadagascar\n1994\n248.15625\n\n\nMadagascar\n1995\n244.69400\n\n\nMadagascar\n1996\n242.23920\n\n\nMadagascar\n1997\n243.38220\n\n\nMadagascar\n1998\n245.08112\n\n\nMadagascar\n1999\n248.55211\n\n\nMadagascar\n2000\n252.38252\n\n\nMadagascar\n2001\n259.42940\n\n\nMadagascar\n2002\n219.72028\n\n\nMadagascar\n2003\n234.00829\n\n\nMadagascar\n2004\n238.99611\n\n\nMadagascar\n2005\n242.61607\n\n\nMadagascar\n2006\n247.32223\n\n\nMadagascar\n2007\n255.09415\n\n\nMadagascar\n2008\n265.36636\n\n\nMadagascar\n2009\n245.94615\n\n\nMadagascar\n2010\n242.68582\n\n\nMadagascar\n2011\n238.17275\n\n\nMalawi\n1960\n98.63485\n\n\nMalawi\n1961\n103.74616\n\n\nMalawi\n1962\n101.99653\n\n\nMalawi\n1963\n98.18028\n\n\nMalawi\n1964\n98.36037\n\n\nMalawi\n1965\n109.03000\n\n\nMalawi\n1966\n120.44609\n\n\nMalawi\n1967\n126.00861\n\n\nMalawi\n1968\n120.43640\n\n\nMalawi\n1969\n124.13126\n\n\nMalawi\n1970\n121.24227\n\n\nMalawi\n1971\n136.78232\n\n\nMalawi\n1972\n140.89335\n\n\nMalawi\n1973\n139.63598\n\n\nMalawi\n1974\n144.90554\n\n\nMalawi\n1975\n148.80315\n\n\nMalawi\n1976\n151.13140\n\n\nMalawi\n1977\n153.27531\n\n\nMalawi\n1978\n162.65466\n\n\nMalawi\n1979\n164.44572\n\n\nMalawi\n1980\n160.22321\n\n\nMalawi\n1981\n147.74079\n\n\nMalawi\n1982\n147.79103\n\n\nMalawi\n1983\n149.33219\n\n\nMalawi\n1984\n152.23020\n\n\nMalawi\n1985\n152.59902\n\n\nMalawi\n1986\n144.46486\n\n\nMalawi\n1987\n138.37188\n\n\nMalawi\n1988\n134.67835\n\n\nMalawi\n1989\n129.93539\n\n\nMalawi\n1990\n132.50554\n\n\nMalawi\n1991\n141.02478\n\n\nMalawi\n1992\n129.36024\n\n\nMalawi\n1993\n141.31536\n\n\nMalawi\n1994\n126.18834\n\n\nMalawi\n1995\n145.64107\n\n\nMalawi\n1996\n153.39094\n\n\nMalawi\n1997\n155.37389\n\n\nMalawi\n1998\n156.96576\n\n\nMalawi\n1999\n157.15180\n\n\nMalawi\n2000\n155.27154\n\n\nMalawi\n2001\n143.70015\n\n\nMalawi\n2002\n142.39145\n\n\nMalawi\n2003\n146.36574\n\n\nMalawi\n2004\n149.43297\n\n\nMalawi\n2005\n149.48433\n\n\nMalawi\n2006\n148.25700\n\n\nMalawi\n2007\n157.62137\n\n\nMalawi\n2008\n165.69651\n\n\nMalawi\n2009\n175.19962\n\n\nMalawi\n2010\n180.90230\n\n\nMalawi\n2011\n182.87548\n\n\nMalaysia\n1960\n812.61583\n\n\nMalaysia\n1961\n846.51271\n\n\nMalaysia\n1962\n871.76348\n\n\nMalaysia\n1963\n905.71982\n\n\nMalaysia\n1964\n924.62791\n\n\nMalaysia\n1965\n966.28844\n\n\nMalaysia\n1966\n1012.76615\n\n\nMalaysia\n1967\n1023.95197\n\n\nMalaysia\n1968\n1077.49423\n\n\nMalaysia\n1969\n1102.05699\n\n\nMalaysia\n1970\n1139.28777\n\n\nMalaysia\n1971\n1175.35719\n\n\nMalaysia\n1972\n1254.42727\n\n\nMalaysia\n1973\n1367.73717\n\n\nMalaysia\n1974\n1446.40236\n\n\nMalaysia\n1975\n1424.16739\n\n\nMalaysia\n1976\n1552.59590\n\n\nMalaysia\n1977\n1635.18009\n\n\nMalaysia\n1978\n1704.36180\n\n\nMalaysia\n1979\n1820.60731\n\n\nMalaysia\n1980\n1909.61807\n\n\nMalaysia\n1981\n1992.32596\n\n\nMalaysia\n1982\n2057.94124\n\n\nMalaysia\n1983\n2130.40189\n\n\nMalaysia\n1984\n2234.91007\n\n\nMalaysia\n1985\n2149.41736\n\n\nMalaysia\n1986\n2112.89028\n\n\nMalaysia\n1987\n2162.54071\n\n\nMalaysia\n1988\n2308.56839\n\n\nMalaysia\n1989\n2445.90929\n\n\nMalaysia\n1990\n2592.51705\n\n\nMalaysia\n1991\n2764.20061\n\n\nMalaysia\n1992\n2932.01729\n\n\nMalaysia\n1993\n3140.82577\n\n\nMalaysia\n1994\n3344.56780\n\n\nMalaysia\n1995\n3581.94630\n\n\nMalaysia\n1996\n3842.63776\n\n\nMalaysia\n1997\n4022.84360\n\n\nMalaysia\n1998\n3636.47310\n\n\nMalaysia\n1999\n3767.63701\n\n\nMalaysia\n2000\n4005.55632\n\n\nMalaysia\n2001\n3933.93508\n\n\nMalaysia\n2002\n4052.87875\n\n\nMalaysia\n2003\n4194.26080\n\n\nMalaysia\n2004\n4385.96954\n\n\nMalaysia\n2005\n4529.60125\n\n\nMalaysia\n2006\n4695.22973\n\n\nMalaysia\n2007\n4905.12137\n\n\nMalaysia\n2008\n5057.82666\n\n\nMalaysia\n2009\n4901.54710\n\n\nMalaysia\n2010\n5168.68602\n\n\nMalaysia\n2011\n5345.21341\n\n\nMaldives\n1995\n1689.96559\n\n\nMaldives\n1996\n1805.37114\n\n\nMaldives\n1997\n1954.40206\n\n\nMaldives\n1998\n2106.19630\n\n\nMaldives\n1999\n2218.61732\n\n\nMaldives\n2000\n2284.97396\n\n\nMaldives\n2001\n2325.14865\n\n\nMaldives\n2002\n2427.82451\n\n\nMaldives\n2003\n2728.91492\n\n\nMaldives\n2004\n3023.91117\n\n\nMaldives\n2005\n2721.81492\n\n\nMaldives\n2006\n3209.46932\n\n\nMaldives\n2007\n3500.11103\n\n\nMaldives\n2008\n3874.82554\n\n\nMaldives\n2009\n3642.54375\n\n\nMaldives\n2010\n3800.48829\n\n\nMaldives\n2011\n4030.63587\n\n\nMali\n1967\n163.49993\n\n\nMali\n1968\n167.05343\n\n\nMali\n1969\n164.84780\n\n\nMali\n1970\n172.12686\n\n\nMali\n1971\n173.54595\n\n\nMali\n1972\n180.43484\n\n\nMali\n1973\n174.57820\n\n\nMali\n1974\n168.75900\n\n\nMali\n1975\n184.93483\n\n\nMali\n1976\n206.33283\n\n\nMali\n1977\n215.49885\n\n\nMali\n1978\n208.51169\n\n\nMali\n1979\n225.91843\n\n\nMali\n1980\n211.98857\n\n\nMali\n1981\n198.54995\n\n\nMali\n1982\n185.39056\n\n\nMali\n1983\n190.25356\n\n\nMali\n1984\n194.67512\n\n\nMali\n1985\n169.48341\n\n\nMali\n1986\n180.86000\n\n\nMali\n1987\n177.31713\n\n\nMali\n1988\n177.36564\n\n\nMali\n1989\n195.09480\n\n\nMali\n1990\n187.95819\n\n\nMali\n1991\n186.93295\n\n\nMali\n1992\n197.71571\n\n\nMali\n1993\n188.56646\n\n\nMali\n1994\n185.28893\n\n\nMali\n1995\n191.57991\n\n\nMali\n1996\n192.49009\n\n\nMali\n1997\n199.98446\n\n\nMali\n1998\n206.25896\n\n\nMali\n1999\n213.98479\n\n\nMali\n2000\n214.46659\n\n\nMali\n2001\n233.30203\n\n\nMali\n2002\n235.66090\n\n\nMali\n2003\n245.46208\n\n\nMali\n2004\n243.12532\n\n\nMali\n2005\n249.99193\n\n\nMali\n2006\n255.18216\n\n\nMali\n2007\n258.03051\n\n\nMali\n2008\n262.70281\n\n\nMali\n2009\n266.24215\n\n\nMali\n2010\n273.25380\n\n\nMali\n2011\n272.30938\n\n\nMalta\n1970\n2074.14353\n\n\nMalta\n1971\n2124.69174\n\n\nMalta\n1972\n2250.59689\n\n\nMalta\n1973\n2345.84917\n\n\nMalta\n1974\n2583.03144\n\n\nMalta\n1975\n3065.67784\n\n\nMalta\n1976\n3569.15857\n\n\nMalta\n1977\n3988.43050\n\n\nMalta\n1978\n4387.67494\n\n\nMalta\n1979\n4799.08483\n\n\nMalta\n1980\n5083.81709\n\n\nMalta\n1981\n5213.70129\n\n\nMalta\n1982\n5219.63633\n\n\nMalta\n1983\n5115.06527\n\n\nMalta\n1984\n5162.19047\n\n\nMalta\n1985\n5203.42866\n\n\nMalta\n1986\n5316.02045\n\n\nMalta\n1987\n5496.55581\n\n\nMalta\n1988\n5910.32335\n\n\nMalta\n1989\n6331.80686\n\n\nMalta\n1990\n6664.64446\n\n\nMalta\n1991\n7011.20238\n\n\nMalta\n1992\n7268.30976\n\n\nMalta\n1993\n7522.27224\n\n\nMalta\n1994\n7877.44601\n\n\nMalta\n1995\n8320.71784\n\n\nMalta\n1996\n8582.79497\n\n\nMalta\n1997\n8972.62225\n\n\nMalta\n1998\n9375.55574\n\n\nMalta\n1999\n9770.35550\n\n\nMalta\n2000\n10377.03732\n\n\nMalta\n2001\n9912.98969\n\n\nMalta\n2002\n10116.00482\n\n\nMalta\n2003\n10062.96130\n\n\nMalta\n2004\n9945.30172\n\n\nMalta\n2005\n10244.27105\n\n\nMalta\n2006\n10405.84596\n\n\nMalta\n2007\n10781.04969\n\n\nMalta\n2008\n11172.28154\n\n\nMalta\n2009\n10822.30802\n\n\nMalta\n2010\n11062.23272\n\n\nMalta\n2011\n11213.53700\n\n\nMarshall Islands\n1981\n1814.21051\n\n\nMarshall Islands\n1982\n1819.74774\n\n\nMarshall Islands\n1983\n2007.97010\n\n\nMarshall Islands\n1984\n1990.22451\n\n\nMarshall Islands\n1985\n1779.77158\n\n\nMarshall Islands\n1986\n2113.50800\n\n\nMarshall Islands\n1987\n2204.78313\n\n\nMarshall Islands\n1988\n2273.26177\n\n\nMarshall Islands\n1989\n2149.51777\n\n\nMarshall Islands\n1990\n2137.68973\n\n\nMarshall Islands\n1991\n2087.43527\n\n\nMarshall Islands\n1992\n2195.72249\n\n\nMarshall Islands\n1993\n2296.39194\n\n\nMarshall Islands\n1994\n2406.12400\n\n\nMarshall Islands\n1995\n2581.13041\n\n\nMarshall Islands\n1996\n2298.03340\n\n\nMarshall Islands\n1997\n2137.10206\n\n\nMarshall Islands\n1998\n2067.00117\n\n\nMarshall Islands\n1999\n2011.64145\n\n\nMarshall Islands\n2000\n2127.48546\n\n\nMarshall Islands\n2001\n2242.19258\n\n\nMarshall Islands\n2002\n2303.71857\n\n\nMarshall Islands\n2003\n2310.92084\n\n\nMarshall Islands\n2004\n2310.70694\n\n\nMarshall Islands\n2005\n2368.14883\n\n\nMarshall Islands\n2006\n2404.73643\n\n\nMarshall Islands\n2007\n2464.99065\n\n\nMarshall Islands\n2008\n2399.43828\n\n\nMarshall Islands\n2009\n2344.61500\n\n\nMarshall Islands\n2010\n2437.28245\n\n\nMarshall Islands\n2011\n2522.82476\n\n\nMauritania\n1960\n373.87685\n\n\nMauritania\n1961\n419.93304\n\n\nMauritania\n1962\n411.19768\n\n\nMauritania\n1963\n391.79900\n\n\nMauritania\n1964\n486.34274\n\n\nMauritania\n1965\n549.09641\n\n\nMauritania\n1966\n535.06656\n\n\nMauritania\n1967\n538.77001\n\n\nMauritania\n1968\n577.18333\n\n\nMauritania\n1969\n568.01018\n\n\nMauritania\n1970\n618.08851\n\n\nMauritania\n1971\n611.49164\n\n\nMauritania\n1972\n589.53975\n\n\nMauritania\n1973\n546.24345\n\n\nMauritania\n1974\n594.93353\n\n\nMauritania\n1975\n548.05022\n\n\nMauritania\n1976\n577.70097\n\n\nMauritania\n1977\n550.51262\n\n\nMauritania\n1978\n532.00077\n\n\nMauritania\n1979\n541.53316\n\n\nMauritania\n1980\n543.84932\n\n\nMauritania\n1981\n546.64910\n\n\nMauritania\n1982\n518.77790\n\n\nMauritania\n1983\n523.10129\n\n\nMauritania\n1984\n492.28482\n\n\nMauritania\n1985\n493.33511\n\n\nMauritania\n1986\n507.72295\n\n\nMauritania\n1987\n503.89700\n\n\nMauritania\n1988\n499.30014\n\n\nMauritania\n1989\n509.53737\n\n\nMauritania\n1990\n487.30704\n\n\nMauritania\n1991\n482.73786\n\n\nMauritania\n1992\n478.45333\n\n\nMauritania\n1993\n492.68014\n\n\nMauritania\n1994\n464.41881\n\n\nMauritania\n1995\n495.87165\n\n\nMauritania\n1996\n510.12004\n\n\nMauritania\n1997\n475.82487\n\n\nMauritania\n1998\n483.39066\n\n\nMauritania\n1999\n505.98776\n\n\nMauritania\n2000\n489.51164\n\n\nMauritania\n2001\n485.09644\n\n\nMauritania\n2002\n474.37678\n\n\nMauritania\n2003\n488.49191\n\n\nMauritania\n2004\n502.18703\n\n\nMauritania\n2005\n532.37466\n\n\nMauritania\n2006\n616.10635\n\n\nMauritania\n2007\n609.93440\n\n\nMauritania\n2008\n615.56273\n\n\nMauritania\n2009\n593.22210\n\n\nMauritania\n2010\n609.17117\n\n\nMauritania\n2011\n623.37438\n\n\nMauritius\n1976\n1627.27019\n\n\nMauritius\n1977\n1705.83205\n\n\nMauritius\n1978\n1742.70216\n\n\nMauritius\n1979\n1775.57359\n\n\nMauritius\n1980\n1572.82451\n\n\nMauritius\n1981\n1643.00645\n\n\nMauritius\n1982\n1712.99361\n\n\nMauritius\n1983\n1702.29976\n\n\nMauritius\n1984\n1767.39385\n\n\nMauritius\n1985\n1877.71749\n\n\nMauritius\n1986\n2043.18976\n\n\nMauritius\n1987\n2207.44402\n\n\nMauritius\n1988\n2339.05764\n\n\nMauritius\n1989\n2424.67662\n\n\nMauritius\n1990\n2574.74349\n\n\nMauritius\n1991\n2660.07477\n\n\nMauritius\n1992\n2796.28242\n\n\nMauritius\n1993\n2903.76111\n\n\nMauritius\n1994\n2981.82375\n\n\nMauritius\n1995\n3083.05000\n\n\nMauritius\n1996\n3222.20138\n\n\nMauritius\n1997\n3363.08947\n\n\nMauritius\n1998\n3529.93977\n\n\nMauritius\n1999\n3576.34429\n\n\nMauritius\n2000\n3861.03854\n\n\nMauritius\n2001\n3917.47004\n\n\nMauritius\n2002\n3966.16260\n\n\nMauritius\n2003\n4068.78671\n\n\nMauritius\n2004\n4265.67969\n\n\nMauritius\n2005\n4284.35874\n\n\nMauritius\n2006\n4419.91226\n\n\nMauritius\n2007\n4650.98538\n\n\nMauritius\n2008\n4875.99274\n\n\nMauritius\n2009\n4998.39006\n\n\nMauritius\n2010\n5180.96787\n\n\nMauritius\n2011\n5370.83161\n\n\nMexico\n1960\n2455.95246\n\n\nMexico\n1961\n2496.59806\n\n\nMexico\n1962\n2531.23803\n\n\nMexico\n1963\n2652.43898\n\n\nMexico\n1964\n2878.95550\n\n\nMexico\n1965\n2977.54133\n\n\nMexico\n1966\n3068.06785\n\n\nMexico\n1967\n3156.06777\n\n\nMexico\n1968\n3356.69012\n\n\nMexico\n1969\n3373.13602\n\n\nMexico\n1970\n3488.71502\n\n\nMexico\n1971\n3513.38590\n\n\nMexico\n1972\n3689.33052\n\n\nMexico\n1973\n3860.86448\n\n\nMexico\n1974\n3963.77578\n\n\nMexico\n1975\n4070.89802\n\n\nMexico\n1976\n4131.04749\n\n\nMexico\n1977\n4153.55317\n\n\nMexico\n1978\n4405.42267\n\n\nMexico\n1979\n4710.96832\n\n\nMexico\n1980\n5024.44480\n\n\nMexico\n1981\n5345.37535\n\n\nMexico\n1982\n5203.01489\n\n\nMexico\n1983\n4887.02255\n\n\nMexico\n1984\n4965.13390\n\n\nMexico\n1985\n4993.46835\n\n\nMexico\n1986\n4709.20889\n\n\nMexico\n1987\n4698.82476\n\n\nMexico\n1988\n4660.37178\n\n\nMexico\n1989\n4758.72902\n\n\nMexico\n1990\n4902.64499\n\n\nMexico\n1991\n5013.47679\n\n\nMexico\n1992\n5100.45046\n\n\nMexico\n1993\n5107.36417\n\n\nMexico\n1994\n5242.02183\n\n\nMexico\n1995\n4831.81940\n\n\nMexico\n1996\n4994.34330\n\n\nMexico\n1997\n5244.28972\n\n\nMexico\n1998\n5413.09119\n\n\nMexico\n1999\n5536.46920\n\n\nMexico\n2000\n5816.61448\n\n\nMexico\n2001\n5728.96766\n\n\nMexico\n2002\n5702.90371\n\n\nMexico\n2003\n5709.41956\n\n\nMexico\n2004\n5868.91974\n\n\nMexico\n2005\n5982.65384\n\n\nMexico\n2006\n6211.92723\n\n\nMexico\n2007\n6333.08239\n\n\nMexico\n2008\n6327.01318\n\n\nMexico\n2009\n5875.62000\n\n\nMexico\n2010\n6124.70957\n\n\nMexico\n2011\n6288.25324\n\n\nMicronesia, Fed. Sts.\n1986\n1861.10197\n\n\nMicronesia, Fed. Sts.\n1987\n1839.77401\n\n\nMicronesia, Fed. Sts.\n1988\n1845.60988\n\n\nMicronesia, Fed. Sts.\n1989\n1868.75901\n\n\nMicronesia, Fed. Sts.\n1990\n1894.10546\n\n\nMicronesia, Fed. Sts.\n1991\n1984.71542\n\n\nMicronesia, Fed. Sts.\n1992\n2012.00150\n\n\nMicronesia, Fed. Sts.\n1993\n2124.09087\n\n\nMicronesia, Fed. Sts.\n1994\n2071.90987\n\n\nMicronesia, Fed. Sts.\n1995\n2189.55200\n\n\nMicronesia, Fed. Sts.\n1996\n2108.23109\n\n\nMicronesia, Fed. Sts.\n1997\n1979.56213\n\n\nMicronesia, Fed. Sts.\n1998\n2044.55055\n\n\nMicronesia, Fed. Sts.\n1999\n2079.95493\n\n\nMicronesia, Fed. Sts.\n2000\n2177.58908\n\n\nMicronesia, Fed. Sts.\n2001\n2211.77391\n\n\nMicronesia, Fed. Sts.\n2002\n2215.99611\n\n\nMicronesia, Fed. Sts.\n2003\n2244.02122\n\n\nMicronesia, Fed. Sts.\n2004\n2159.52961\n\n\nMicronesia, Fed. Sts.\n2005\n2196.24720\n\n\nMicronesia, Fed. Sts.\n2006\n2185.26907\n\n\nMicronesia, Fed. Sts.\n2007\n2134.36883\n\n\nMicronesia, Fed. Sts.\n2008\n2074.55499\n\n\nMicronesia, Fed. Sts.\n2009\n2088.66359\n\n\nMicronesia, Fed. Sts.\n2010\n2134.03716\n\n\nMicronesia, Fed. Sts.\n2011\n2168.46476\n\n\nMoldova\n1980\n825.60420\n\n\nMoldova\n1981\n812.08274\n\n\nMoldova\n1982\n898.17968\n\n\nMoldova\n1983\n927.67394\n\n\nMoldova\n1984\n949.05658\n\n\nMoldova\n1985\n890.28276\n\n\nMoldova\n1986\n952.15682\n\n\nMoldova\n1987\n955.64446\n\n\nMoldova\n1988\n964.64729\n\n\nMoldova\n1989\n1007.13559\n\n\nMoldova\n1990\n978.97504\n\n\nMoldova\n1991\n820.12009\n\n\nMoldova\n1992\n580.99483\n\n\nMoldova\n1993\n574.64262\n\n\nMoldova\n1994\n398.26047\n\n\nMoldova\n1995\n394.70440\n\n\nMoldova\n1996\n374.92971\n\n\nMoldova\n1997\n381.77098\n\n\nMoldova\n1998\n357.62858\n\n\nMoldova\n1999\n346.01597\n\n\nMoldova\n2000\n354.00167\n\n\nMoldova\n2001\n376.43644\n\n\nMoldova\n2002\n406.73943\n\n\nMoldova\n2003\n434.80714\n\n\nMoldova\n2004\n468.18449\n\n\nMoldova\n2005\n504.53007\n\n\nMoldova\n2006\n530.09471\n\n\nMoldova\n2007\n547.67377\n\n\nMoldova\n2008\n591.32346\n\n\nMoldova\n2009\n556.60788\n\n\nMoldova\n2010\n596.68661\n\n\nMoldova\n2011\n635.50647\n\n\nMonaco\n1970\n50458.24756\n\n\nMonaco\n1971\n52478.16721\n\n\nMonaco\n1972\n54207.35513\n\n\nMonaco\n1973\n57001.73469\n\n\nMonaco\n1974\n58842.07457\n\n\nMonaco\n1975\n57688.28475\n\n\nMonaco\n1976\n59786.41863\n\n\nMonaco\n1977\n61568.19927\n\n\nMonaco\n1978\n63665.04130\n\n\nMonaco\n1979\n65442.48397\n\n\nMonaco\n1980\n65841.19610\n\n\nMonaco\n1981\n65491.66675\n\n\nMonaco\n1982\n65911.38231\n\n\nMonaco\n1983\n65414.04368\n\n\nMonaco\n1984\n65093.17090\n\n\nMonaco\n1985\n64977.97348\n\n\nMonaco\n1986\n65418.23129\n\n\nMonaco\n1987\n65942.13769\n\n\nMonaco\n1988\n67895.89206\n\n\nMonaco\n1989\n69661.31777\n\n\nMonaco\n1990\n70463.65961\n\n\nMonaco\n1991\n70192.94813\n\n\nMonaco\n1992\n70222.06249\n\n\nMonaco\n1993\n68695.22837\n\n\nMonaco\n1994\n69311.89485\n\n\nMonaco\n1995\n69836.00825\n\n\nMonaco\n1996\n69618.47390\n\n\nMonaco\n1997\n70151.54957\n\n\nMonaco\n1998\n71618.37019\n\n\nMonaco\n1999\n73141.26468\n\n\nMonaco\n2000\n75382.44663\n\n\nMonaco\n2001\n76677.97416\n\n\nMonaco\n2002\n77348.89874\n\n\nMonaco\n2003\n78229.93981\n\n\nMonaco\n2004\n80255.75389\n\n\nMonaco\n2005\n81827.95612\n\n\nMonaco\n2006\n85942.67113\n\n\nMonaco\n2007\n98397.08986\n\n\nMonaco\n2008\n108111.21279\n\n\nMonaco\n2009\n105147.43770\n\n\nMongolia\n1981\n425.98445\n\n\nMongolia\n1982\n450.06330\n\n\nMongolia\n1983\n464.45491\n\n\nMongolia\n1984\n479.40096\n\n\nMongolia\n1985\n493.30891\n\n\nMongolia\n1986\n524.53201\n\n\nMongolia\n1987\n527.22969\n\n\nMongolia\n1988\n538.97626\n\n\nMongolia\n1989\n547.85663\n\n\nMongolia\n1990\n519.83797\n\n\nMongolia\n1991\n467.41530\n\n\nMongolia\n1992\n419.36646\n\n\nMongolia\n1993\n402.61352\n\n\nMongolia\n1994\n408.12796\n\n\nMongolia\n1995\n430.80825\n\n\nMongolia\n1996\n436.79344\n\n\nMongolia\n1997\n449.89640\n\n\nMongolia\n1998\n460.74327\n\n\nMongolia\n1999\n470.52289\n\n\nMongolia\n2000\n471.47333\n\n\nMongolia\n2001\n480.77971\n\n\nMongolia\n2002\n498.55087\n\n\nMongolia\n2003\n527.82177\n\n\nMongolia\n2004\n577.10446\n\n\nMongolia\n2005\n610.97706\n\n\nMongolia\n2006\n653.80747\n\n\nMongolia\n2007\n709.72342\n\n\nMongolia\n2008\n760.44246\n\n\nMongolia\n2009\n738.56169\n\n\nMongolia\n2010\n772.93306\n\n\nMongolia\n2011\n893.99245\n\n\nMontenegro\n1997\n1563.36611\n\n\nMontenegro\n1998\n1648.24133\n\n\nMontenegro\n1999\n1501.81045\n\n\nMontenegro\n2000\n1555.91252\n\n\nMontenegro\n2001\n1578.78510\n\n\nMontenegro\n2002\n1613.14569\n\n\nMontenegro\n2003\n1656.35704\n\n\nMontenegro\n2004\n1730.85865\n\n\nMontenegro\n2005\n1804.05255\n\n\nMontenegro\n2006\n1958.15441\n\n\nMontenegro\n2007\n2164.61163\n\n\nMontenegro\n2008\n2309.47197\n\n\nMontenegro\n2009\n2173.51396\n\n\nMontenegro\n2010\n2224.12984\n\n\nMontenegro\n2011\n2292.50303\n\n\nMorocco\n1960\n646.07105\n\n\nMorocco\n1961\n613.32397\n\n\nMorocco\n1962\n671.57839\n\n\nMorocco\n1963\n685.35613\n\n\nMorocco\n1964\n675.36048\n\n\nMorocco\n1965\n669.29133\n\n\nMorocco\n1966\n640.82868\n\n\nMorocco\n1967\n685.10393\n\n\nMorocco\n1968\n731.66285\n\n\nMorocco\n1969\n771.12553\n\n\nMorocco\n1970\n786.25758\n\n\nMorocco\n1971\n809.44516\n\n\nMorocco\n1972\n809.16248\n\n\nMorocco\n1973\n818.18921\n\n\nMorocco\n1974\n843.59570\n\n\nMorocco\n1975\n885.63547\n\n\nMorocco\n1976\n957.58492\n\n\nMorocco\n1977\n990.74526\n\n\nMorocco\n1978\n987.72749\n\n\nMorocco\n1979\n1008.90780\n\n\nMorocco\n1980\n1018.71660\n\n\nMorocco\n1981\n964.54737\n\n\nMorocco\n1982\n1029.26439\n\n\nMorocco\n1983\n996.55203\n\n\nMorocco\n1984\n1013.15360\n\n\nMorocco\n1985\n1050.89703\n\n\nMorocco\n1986\n1111.68876\n\n\nMorocco\n1987\n1059.47755\n\n\nMorocco\n1988\n1145.25761\n\n\nMorocco\n1989\n1148.89678\n\n\nMorocco\n1990\n1172.39561\n\n\nMorocco\n1991\n1230.42382\n\n\nMorocco\n1992\n1160.35428\n\n\nMorocco\n1993\n1129.62298\n\n\nMorocco\n1994\n1226.90646\n\n\nMorocco\n1995\n1128.76708\n\n\nMorocco\n1996\n1248.15535\n\n\nMorocco\n1997\n1203.19265\n\n\nMorocco\n1998\n1277.77879\n\n\nMorocco\n1999\n1267.80105\n\n\nMorocco\n2000\n1271.81109\n\n\nMorocco\n2001\n1351.26722\n\n\nMorocco\n2002\n1379.68584\n\n\nMorocco\n2003\n1450.12272\n\n\nMorocco\n2004\n1502.88317\n\n\nMorocco\n2005\n1530.85072\n\n\nMorocco\n2006\n1632.13420\n\n\nMorocco\n2007\n1658.85540\n\n\nMorocco\n2008\n1733.53386\n\n\nMorocco\n2009\n1797.40725\n\n\nMorocco\n2010\n1844.35103\n\n\nMorocco\n2011\n1908.30442\n\n\nMozambique\n1980\n202.72136\n\n\nMozambique\n1981\n207.79089\n\n\nMozambique\n1982\n189.05298\n\n\nMozambique\n1983\n156.16127\n\n\nMozambique\n1984\n143.72872\n\n\nMozambique\n1985\n143.68861\n\n\nMozambique\n1986\n139.86526\n\n\nMozambique\n1987\n160.65601\n\n\nMozambique\n1988\n174.20758\n\n\nMozambique\n1989\n184.95024\n\n\nMozambique\n1990\n184.46973\n\n\nMozambique\n1991\n189.03857\n\n\nMozambique\n1992\n173.74141\n\n\nMozambique\n1993\n181.96110\n\n\nMozambique\n1994\n187.27721\n\n\nMozambique\n1995\n186.00901\n\n\nMozambique\n1996\n193.93804\n\n\nMozambique\n1997\n208.09550\n\n\nMozambique\n1998\n224.75936\n\n\nMozambique\n1999\n236.96983\n\n\nMozambique\n2000\n233.43927\n\n\nMozambique\n2001\n254.35695\n\n\nMozambique\n2002\n269.45221\n\n\nMozambique\n2003\n278.13612\n\n\nMozambique\n2004\n292.27871\n\n\nMozambique\n2005\n312.16193\n\n\nMozambique\n2006\n323.77370\n\n\nMozambique\n2007\n339.06381\n\n\nMozambique\n2008\n353.76110\n\n\nMozambique\n2009\n367.52176\n\n\nMozambique\n2010\n383.58326\n\n\nMozambique\n2011\n401.56527\n\n\nNamibia\n1980\n2263.39622\n\n\nNamibia\n1981\n2235.44420\n\n\nNamibia\n1982\n2179.84856\n\n\nNamibia\n1983\n2091.40519\n\n\nNamibia\n1984\n2029.25935\n\n\nNamibia\n1985\n1974.08163\n\n\nNamibia\n1986\n1988.73810\n\n\nNamibia\n1987\n1972.39001\n\n\nNamibia\n1988\n1903.36817\n\n\nNamibia\n1989\n1857.54930\n\n\nNamibia\n1990\n1831.05893\n\n\nNamibia\n1991\n1912.61801\n\n\nNamibia\n1992\n1986.00354\n\n\nNamibia\n1993\n1889.24115\n\n\nNamibia\n1994\n1969.55321\n\n\nNamibia\n1995\n1991.60186\n\n\nNamibia\n1996\n1995.28225\n\n\nNamibia\n1997\n2019.01987\n\n\nNamibia\n1998\n2026.84204\n\n\nNamibia\n1999\n2040.34680\n\n\nNamibia\n2000\n2061.62097\n\n\nNamibia\n2001\n2042.26309\n\n\nNamibia\n2002\n2099.89412\n\n\nNamibia\n2003\n2150.84065\n\n\nNamibia\n2004\n2373.42847\n\n\nNamibia\n2005\n2390.59879\n\n\nNamibia\n2006\n2512.92720\n\n\nNamibia\n2007\n2598.51265\n\n\nNamibia\n2008\n2635.61212\n\n\nNamibia\n2009\n2575.44391\n\n\nNamibia\n2010\n2695.87833\n\n\nNamibia\n2011\n2749.27448\n\n\nNepal\n1960\n139.08101\n\n\nNepal\n1961\n139.20229\n\n\nNepal\n1962\n139.27243\n\n\nNepal\n1963\n139.25920\n\n\nNepal\n1964\n146.87409\n\n\nNepal\n1965\n142.24279\n\n\nNepal\n1966\n149.16985\n\n\nNepal\n1967\n143.77333\n\n\nNepal\n1968\n141.66850\n\n\nNepal\n1969\n144.78732\n\n\nNepal\n1970\n145.24973\n\n\nNepal\n1971\n140.31003\n\n\nNepal\n1972\n141.41284\n\n\nNepal\n1973\n137.52417\n\n\nNepal\n1974\n142.87073\n\n\nNepal\n1975\n141.60206\n\n\nNepal\n1976\n144.40238\n\n\nNepal\n1977\n145.29906\n\n\nNepal\n1978\n148.16497\n\n\nNepal\n1979\n148.13518\n\n\nNepal\n1980\n141.31974\n\n\nNepal\n1981\n149.52944\n\n\nNepal\n1982\n151.54996\n\n\nNepal\n1983\n143.59615\n\n\nNepal\n1984\n153.81190\n\n\nNepal\n1985\n159.44293\n\n\nNepal\n1986\n162.82495\n\n\nNepal\n1987\n161.71486\n\n\nNepal\n1988\n170.07429\n\n\nNepal\n1989\n173.23705\n\n\nNepal\n1990\n176.92641\n\n\nNepal\n1991\n183.64008\n\n\nNepal\n1992\n186.52016\n\n\nNepal\n1993\n188.95291\n\n\nNepal\n1994\n199.45169\n\n\nNepal\n1995\n201.29778\n\n\nNepal\n1996\n206.82379\n\n\nNepal\n1997\n211.96113\n\n\nNepal\n1998\n213.06596\n\n\nNepal\n1999\n217.14228\n\n\nNepal\n2000\n225.16868\n\n\nNepal\n2001\n230.50176\n\n\nNepal\n2002\n225.52014\n\n\nNepal\n2003\n229.20834\n\n\nNepal\n2004\n234.78333\n\n\nNepal\n2005\n237.10985\n\n\nNepal\n2006\n241.04698\n\n\nNepal\n2007\n244.53726\n\n\nNepal\n2008\n254.69425\n\n\nNepal\n2009\n261.46918\n\n\nNepal\n2010\n269.24519\n\n\nNepal\n2011\n274.87286\n\n\nNetherlands\n1960\n8562.93611\n\n\nNetherlands\n1961\n8476.02252\n\n\nNetherlands\n1962\n8927.99259\n\n\nNetherlands\n1963\n9127.67887\n\n\nNetherlands\n1964\n9751.65322\n\n\nNetherlands\n1965\n10450.06487\n\n\nNetherlands\n1966\n10597.29274\n\n\nNetherlands\n1967\n11031.12197\n\n\nNetherlands\n1968\n11617.61050\n\n\nNetherlands\n1969\n12222.20686\n\n\nNetherlands\n1970\n12759.17567\n\n\nNetherlands\n1971\n13154.39029\n\n\nNetherlands\n1972\n13348.44830\n\n\nNetherlands\n1973\n14004.21649\n\n\nNetherlands\n1974\n14486.25445\n\n\nNetherlands\n1975\n14375.36205\n\n\nNetherlands\n1976\n14945.81912\n\n\nNetherlands\n1977\n15142.65945\n\n\nNetherlands\n1978\n15400.55054\n\n\nNetherlands\n1979\n15603.85386\n\n\nNetherlands\n1980\n15984.14637\n\n\nNetherlands\n1981\n15750.46568\n\n\nNetherlands\n1982\n15483.87483\n\n\nNetherlands\n1983\n15744.56424\n\n\nNetherlands\n1984\n16162.33112\n\n\nNetherlands\n1985\n16502.21441\n\n\nNetherlands\n1986\n16868.25522\n\n\nNetherlands\n1987\n17085.26786\n\n\nNetherlands\n1988\n17559.44573\n\n\nNetherlands\n1989\n18225.89395\n\n\nNetherlands\n1990\n18858.00124\n\n\nNetherlands\n1991\n19166.32186\n\n\nNetherlands\n1992\n19346.48928\n\n\nNetherlands\n1993\n19453.72947\n\n\nNetherlands\n1994\n19909.36695\n\n\nNetherlands\n1995\n20428.58654\n\n\nNetherlands\n1996\n21027.24752\n\n\nNetherlands\n1997\n21814.30431\n\n\nNetherlands\n1998\n22530.81727\n\n\nNetherlands\n1999\n23429.80294\n\n\nNetherlands\n2000\n24179.73141\n\n\nNetherlands\n2001\n24460.06539\n\n\nNetherlands\n2002\n24322.98355\n\n\nNetherlands\n2003\n24289.73919\n\n\nNetherlands\n2004\n24746.84398\n\n\nNetherlands\n2005\n25194.34122\n\n\nNetherlands\n2006\n26007.67914\n\n\nNetherlands\n2007\n26968.61770\n\n\nNetherlands\n2008\n27348.47436\n\n\nNetherlands\n2009\n26210.30536\n\n\nNetherlands\n2010\n26501.04582\n\n\nNetherlands\n2011\n26634.86005\n\n\nNew Caledonia\n1965\n7553.99485\n\n\nNew Caledonia\n1966\n7083.41631\n\n\nNew Caledonia\n1967\n7258.53731\n\n\nNew Caledonia\n1968\n8032.85003\n\n\nNew Caledonia\n1969\n8968.04824\n\n\nNew Caledonia\n1970\n11295.56088\n\n\nNew Caledonia\n1971\n11489.35347\n\n\nNew Caledonia\n1972\n11328.59581\n\n\nNew Caledonia\n1973\n9639.77285\n\n\nNew Caledonia\n1974\n10471.32014\n\n\nNew Caledonia\n1975\n10816.00204\n\n\nNew Caledonia\n1976\n10804.56668\n\n\nNew Caledonia\n1977\n10831.77420\n\n\nNew Caledonia\n1978\n11760.26152\n\n\nNew Caledonia\n1979\n10059.84158\n\n\nNew Caledonia\n1980\n9908.47626\n\n\nNew Caledonia\n1981\n9150.89074\n\n\nNew Caledonia\n1982\n9338.08751\n\n\nNew Caledonia\n1983\n9094.68092\n\n\nNew Caledonia\n1984\n8937.75691\n\n\nNew Caledonia\n1985\n9194.42363\n\n\nNew Caledonia\n1986\n9043.37206\n\n\nNew Caledonia\n1987\n9391.08558\n\n\nNew Caledonia\n1988\n12406.20836\n\n\nNew Caledonia\n1989\n13394.33030\n\n\nNew Caledonia\n1990\n13562.65255\n\n\nNew Caledonia\n1991\n13882.88130\n\n\nNew Caledonia\n1992\n13595.22649\n\n\nNew Caledonia\n1993\n13293.25724\n\n\nNew Caledonia\n1994\n13242.90540\n\n\nNew Caledonia\n1995\n13601.45546\n\n\nNew Caledonia\n1996\n13385.23144\n\n\nNew Caledonia\n1997\n13339.56718\n\n\nNew Caledonia\n1998\n12701.14853\n\n\nNew Caledonia\n1999\n12557.35066\n\n\nNew Caledonia\n2000\n12579.59511\n\n\nNew Zealand\n1977\n10108.80510\n\n\nNew Zealand\n1978\n10128.74119\n\n\nNew Zealand\n1979\n10365.82802\n\n\nNew Zealand\n1980\n10426.73034\n\n\nNew Zealand\n1981\n10855.63354\n\n\nNew Zealand\n1982\n10811.46864\n\n\nNew Zealand\n1983\n10966.71981\n\n\nNew Zealand\n1984\n11418.25346\n\n\nNew Zealand\n1985\n11436.54888\n\n\nNew Zealand\n1986\n11697.77172\n\n\nNew Zealand\n1987\n11773.48133\n\n\nNew Zealand\n1988\n11723.58094\n\n\nNew Zealand\n1989\n11730.75238\n\n\nNew Zealand\n1990\n11627.10652\n\n\nNew Zealand\n1991\n10933.83710\n\n\nNew Zealand\n1992\n10941.83261\n\n\nNew Zealand\n1993\n11507.24613\n\n\nNew Zealand\n1994\n11955.70046\n\n\nNew Zealand\n1995\n12291.83756\n\n\nNew Zealand\n1996\n12534.37977\n\n\nNew Zealand\n1997\n12589.61470\n\n\nNew Zealand\n1998\n12531.64223\n\n\nNew Zealand\n1999\n13111.00320\n\n\nNew Zealand\n2000\n13375.78052\n\n\nNew Zealand\n2001\n13774.32360\n\n\nNew Zealand\n2002\n14202.16315\n\n\nNew Zealand\n2003\n14529.66965\n\n\nNew Zealand\n2004\n14853.26600\n\n\nNew Zealand\n2005\n15171.59429\n\n\nNew Zealand\n2006\n15103.23038\n\n\nNew Zealand\n2007\n15392.50271\n\n\nNew Zealand\n2008\n15011.18385\n\n\nNew Zealand\n2009\n14778.16393\n\n\nNew Zealand\n2010\n14629.21810\n\n\nNew Zealand\n2011\n14646.42094\n\n\nNicaragua\n1960\n1186.47894\n\n\nNicaragua\n1961\n1235.36090\n\n\nNicaragua\n1962\n1338.59829\n\n\nNicaragua\n1963\n1428.32408\n\n\nNicaragua\n1964\n1540.42045\n\n\nNicaragua\n1965\n1629.62647\n\n\nNicaragua\n1966\n1633.60660\n\n\nNicaragua\n1967\n1695.64800\n\n\nNicaragua\n1968\n1667.31120\n\n\nNicaragua\n1969\n1718.42260\n\n\nNicaragua\n1970\n1689.46972\n\n\nNicaragua\n1971\n1692.84346\n\n\nNicaragua\n1972\n1678.36525\n\n\nNicaragua\n1973\n1732.27905\n\n\nNicaragua\n1974\n1918.53458\n\n\nNicaragua\n1975\n1857.93639\n\n\nNicaragua\n1976\n1896.03491\n\n\nNicaragua\n1977\n1993.38383\n\n\nNicaragua\n1978\n1782.94776\n\n\nNicaragua\n1979\n1272.90488\n\n\nNicaragua\n1980\n1293.98905\n\n\nNicaragua\n1981\n1325.73099\n\n\nNicaragua\n1982\n1279.41649\n\n\nNicaragua\n1983\n1303.46725\n\n\nNicaragua\n1984\n1250.98904\n\n\nNicaragua\n1985\n1171.44022\n\n\nNicaragua\n1986\n1133.63958\n\n\nNicaragua\n1987\n1101.83738\n\n\nNicaragua\n1988\n944.70852\n\n\nNicaragua\n1989\n909.03405\n\n\nNicaragua\n1990\n888.06897\n\n\nNicaragua\n1991\n865.70760\n\n\nNicaragua\n1992\n848.12147\n\n\nNicaragua\n1993\n824.41545\n\n\nNicaragua\n1994\n832.09330\n\n\nNicaragua\n1995\n862.04525\n\n\nNicaragua\n1996\n898.11808\n\n\nNicaragua\n1997\n916.00917\n\n\nNicaragua\n1998\n933.16500\n\n\nNicaragua\n1999\n982.25547\n\n\nNicaragua\n2000\n1006.62731\n\n\nNicaragua\n2001\n1021.34819\n\n\nNicaragua\n2002\n1015.03361\n\n\nNicaragua\n2003\n1027.13129\n\n\nNicaragua\n2004\n1068.01336\n\n\nNicaragua\n2005\n1099.72135\n\n\nNicaragua\n2006\n1130.95644\n\n\nNicaragua\n2007\n1172.86014\n\n\nNicaragua\n2008\n1191.47858\n\n\nNicaragua\n2009\n1158.87831\n\n\nNicaragua\n2010\n1179.18334\n\n\nNicaragua\n2011\n1221.49197\n\n\nNiger\n1960\n313.91018\n\n\nNiger\n1961\n318.89543\n\n\nNiger\n1962\n341.53923\n\n\nNiger\n1963\n362.82856\n\n\nNiger\n1964\n352.62946\n\n\nNiger\n1965\n365.93423\n\n\nNiger\n1966\n353.79762\n\n\nNiger\n1967\n343.78561\n\n\nNiger\n1968\n334.92598\n\n\nNiger\n1969\n307.22564\n\n\nNiger\n1970\n307.30221\n\n\nNiger\n1971\n315.23496\n\n\nNiger\n1972\n290.21733\n\n\nNiger\n1973\n233.72587\n\n\nNiger\n1974\n246.82733\n\n\nNiger\n1975\n232.93696\n\n\nNiger\n1976\n227.66381\n\n\nNiger\n1977\n238.16976\n\n\nNiger\n1978\n262.40468\n\n\nNiger\n1979\n273.09974\n\n\nNiger\n1980\n259.48515\n\n\nNiger\n1981\n253.83628\n\n\nNiger\n1982\n250.89676\n\n\nNiger\n1983\n232.48240\n\n\nNiger\n1984\n188.11707\n\n\nNiger\n1985\n197.11902\n\n\nNiger\n1986\n203.90978\n\n\nNiger\n1987\n198.42291\n\n\nNiger\n1988\n206.14660\n\n\nNiger\n1989\n202.05472\n\n\nNiger\n1990\n193.49796\n\n\nNiger\n1991\n192.21917\n\n\nNiger\n1992\n173.98791\n\n\nNiger\n1993\n170.77584\n\n\nNiger\n1994\n171.74687\n\n\nNiger\n1995\n170.32906\n\n\nNiger\n1996\n170.19472\n\n\nNiger\n1997\n168.90684\n\n\nNiger\n1998\n180.10440\n\n\nNiger\n1999\n172.92736\n\n\nNiger\n2000\n164.64895\n\n\nNiger\n2001\n170.33112\n\n\nNiger\n2002\n169.47404\n\n\nNiger\n2003\n172.38694\n\n\nNiger\n2004\n166.66443\n\n\nNiger\n2005\n168.17375\n\n\nNiger\n2006\n171.76448\n\n\nNiger\n2007\n171.42110\n\n\nNiger\n2008\n179.83114\n\n\nNiger\n2009\n171.99639\n\n\nNiger\n2010\n179.29323\n\n\nNiger\n2011\n177.05872\n\n\nNigeria\n1960\n279.50050\n\n\nNigeria\n1961\n274.14743\n\n\nNigeria\n1962\n279.30473\n\n\nNigeria\n1963\n296.72265\n\n\nNigeria\n1964\n304.65191\n\n\nNigeria\n1965\n312.57016\n\n\nNigeria\n1966\n292.73008\n\n\nNigeria\n1967\n241.19666\n\n\nNigeria\n1968\n232.85887\n\n\nNigeria\n1969\n282.62251\n\n\nNigeria\n1970\n345.08309\n\n\nNigeria\n1971\n384.89924\n\n\nNigeria\n1972\n388.28998\n\n\nNigeria\n1973\n399.09302\n\n\nNigeria\n1974\n432.12804\n\n\nNigeria\n1975\n398.36370\n\n\nNigeria\n1976\n421.90791\n\n\nNigeria\n1977\n433.99602\n\n\nNigeria\n1978\n396.68531\n\n\nNigeria\n1979\n411.06796\n\n\nNigeria\n1980\n416.34006\n\n\nNigeria\n1981\n352.07893\n\n\nNigeria\n1982\n342.34386\n\n\nNigeria\n1983\n316.22817\n\n\nNigeria\n1984\n293.59686\n\n\nNigeria\n1985\n314.06970\n\n\nNigeria\n1986\n313.81501\n\n\nNigeria\n1987\n303.66352\n\n\nNigeria\n1988\n325.20482\n\n\nNigeria\n1989\n339.81767\n\n\nNigeria\n1990\n358.55374\n\n\nNigeria\n1991\n366.46131\n\n\nNigeria\n1992\n368.10390\n\n\nNigeria\n1993\n367.28467\n\n\nNigeria\n1994\n359.02605\n\n\nNigeria\n1995\n359.43155\n\n\nNigeria\n1996\n366.22011\n\n\nNigeria\n1997\n367.46008\n\n\nNigeria\n1998\n365.75256\n\n\nNigeria\n1999\n361.20193\n\n\nNigeria\n2000\n371.76808\n\n\nNigeria\n2001\n374.16866\n\n\nNigeria\n2002\n370.81073\n\n\nNigeria\n2003\n399.06199\n\n\nNigeria\n2004\n430.57974\n\n\nNigeria\n2005\n442.71793\n\n\nNigeria\n2006\n458.63492\n\n\nNigeria\n2007\n476.21417\n\n\nNigeria\n2008\n492.26699\n\n\nNigeria\n2009\n513.50034\n\n\nNigeria\n2010\n540.68521\n\n\nNigeria\n2011\n565.99480\n\n\nNorway\n1960\n10695.36321\n\n\nNorway\n1961\n11276.38808\n\n\nNorway\n1962\n11500.92865\n\n\nNorway\n1963\n11846.33136\n\n\nNorway\n1964\n12346.17472\n\n\nNorway\n1965\n12898.09416\n\n\nNorway\n1966\n13280.03272\n\n\nNorway\n1967\n13993.29207\n\n\nNorway\n1968\n14189.74105\n\n\nNorway\n1969\n14708.60907\n\n\nNorway\n1970\n14893.97936\n\n\nNorway\n1971\n15620.75384\n\n\nNorway\n1972\n16318.38020\n\n\nNorway\n1973\n16930.39991\n\n\nNorway\n1974\n17468.19256\n\n\nNorway\n1975\n18245.06453\n\n\nNorway\n1976\n19211.61650\n\n\nNorway\n1977\n19922.43342\n\n\nNorway\n1978\n20611.39113\n\n\nNorway\n1979\n21436.45188\n\n\nNorway\n1980\n22330.13757\n\n\nNorway\n1981\n22597.81785\n\n\nNorway\n1982\n22543.11642\n\n\nNorway\n1983\n23337.44563\n\n\nNorway\n1984\n24643.33056\n\n\nNorway\n1985\n25885.10626\n\n\nNorway\n1986\n26834.34480\n\n\nNorway\n1987\n27184.47301\n\n\nNorway\n1988\n26991.89658\n\n\nNorway\n1989\n27148.84541\n\n\nNorway\n1990\n27576.87467\n\n\nNorway\n1991\n28298.09714\n\n\nNorway\n1992\n29126.48798\n\n\nNorway\n1993\n29760.45012\n\n\nNorway\n1994\n31086.28675\n\n\nNorway\n1995\n32219.95618\n\n\nNorway\n1996\n33691.88676\n\n\nNorway\n1997\n35316.75083\n\n\nNorway\n1998\n36048.93156\n\n\nNorway\n1999\n36528.21443\n\n\nNorway\n2000\n37472.67167\n\n\nNorway\n2001\n38025.49900\n\n\nNorway\n2002\n38389.08411\n\n\nNorway\n2003\n38539.90181\n\n\nNorway\n2004\n39830.41204\n\n\nNorway\n2005\n40584.24403\n\n\nNorway\n2006\n41245.80863\n\n\nNorway\n2007\n41904.21021\n\n\nNorway\n2008\n41399.70903\n\n\nNorway\n2009\n40199.34622\n\n\nNorway\n2010\n39970.29253\n\n\nNorway\n2011\n40034.85063\n\n\nOman\n1960\n966.52432\n\n\nOman\n1961\n955.11437\n\n\nOman\n1962\n1120.73458\n\n\nOman\n1963\n1142.95120\n\n\nOman\n1964\n1115.21728\n\n\nOman\n1965\n1091.50003\n\n\nOman\n1966\n1117.94479\n\n\nOman\n1967\n1807.05952\n\n\nOman\n1968\n3191.59813\n\n\nOman\n1969\n3887.36959\n\n\nOman\n1970\n4282.05764\n\n\nOman\n1971\n4170.29997\n\n\nOman\n1972\n4411.61028\n\n\nOman\n1973\n3633.40638\n\n\nOman\n1974\n3876.82731\n\n\nOman\n1975\n4598.21829\n\n\nOman\n1976\n5264.92393\n\n\nOman\n1977\n5038.65022\n\n\nOman\n1978\n4589.88649\n\n\nOman\n1979\n4525.90811\n\n\nOman\n1980\n4535.62801\n\n\nOman\n1981\n5017.77450\n\n\nOman\n1982\n5294.22211\n\n\nOman\n1983\n5851.68917\n\n\nOman\n1984\n6490.81047\n\n\nOman\n1985\n7059.81007\n\n\nOman\n1986\n6901.13437\n\n\nOman\n1987\n6411.02800\n\n\nOman\n1988\n6548.38233\n\n\nOman\n1989\n7050.86476\n\n\nOman\n1990\n6773.15452\n\n\nOman\n1991\n6893.10015\n\n\nOman\n1992\n7162.82398\n\n\nOman\n1993\n7300.88253\n\n\nOman\n1994\n7343.32919\n\n\nOman\n1995\n7539.61864\n\n\nOman\n1996\n7677.39060\n\n\nOman\n1997\n8112.81030\n\n\nOman\n1998\n8340.05733\n\n\nOman\n1999\n8342.81346\n\n\nOman\n2000\n8774.93385\n\n\nOman\n2001\n9369.33441\n\n\nOman\n2002\n9511.05587\n\n\nOman\n2003\n9404.44431\n\n\nOman\n2004\n9550.96319\n\n\nOman\n2005\n9723.21689\n\n\nOman\n2006\n10006.30307\n\n\nOman\n2007\n10392.28594\n\n\nOman\n2008\n11385.63980\n\n\nOman\n2009\n11191.81101\n\n\nOman\n2010\n11345.42955\n\n\nOman\n2011\n11701.49655\n\n\nPakistan\n1960\n187.46512\n\n\nPakistan\n1961\n193.98647\n\n\nPakistan\n1962\n197.78402\n\n\nPakistan\n1963\n209.68072\n\n\nPakistan\n1964\n219.92298\n\n\nPakistan\n1965\n236.70004\n\n\nPakistan\n1966\n243.99391\n\n\nPakistan\n1967\n250.49859\n\n\nPakistan\n1968\n261.56482\n\n\nPakistan\n1969\n268.64978\n\n\nPakistan\n1970\n291.13186\n\n\nPakistan\n1971\n284.58277\n\n\nPakistan\n1972\n279.04511\n\n\nPakistan\n1973\n290.42396\n\n\nPakistan\n1974\n292.08560\n\n\nPakistan\n1975\n295.38334\n\n\nPakistan\n1976\n301.16069\n\n\nPakistan\n1977\n303.29289\n\n\nPakistan\n1978\n317.26300\n\n\nPakistan\n1979\n318.48898\n\n\nPakistan\n1980\n339.42588\n\n\nPakistan\n1981\n354.05019\n\n\nPakistan\n1982\n364.47333\n\n\nPakistan\n1983\n376.03405\n\n\nPakistan\n1984\n381.81057\n\n\nPakistan\n1985\n397.15748\n\n\nPakistan\n1986\n405.25215\n\n\nPakistan\n1987\n417.44098\n\n\nPakistan\n1988\n435.10886\n\n\nPakistan\n1989\n442.86104\n\n\nPakistan\n1990\n449.27459\n\n\nPakistan\n1991\n459.18336\n\n\nPakistan\n1992\n481.82643\n\n\nPakistan\n1993\n478.06319\n\n\nPakistan\n1994\n483.57666\n\n\nPakistan\n1995\n494.72099\n\n\nPakistan\n1996\n505.24592\n\n\nPakistan\n1997\n496.99506\n\n\nPakistan\n1998\n496.53189\n\n\nPakistan\n1999\n502.12466\n\n\nPakistan\n2000\n511.70256\n\n\nPakistan\n2001\n511.11100\n\n\nPakistan\n2002\n517.59665\n\n\nPakistan\n2003\n532.99736\n\n\nPakistan\n2004\n562.28399\n\n\nPakistan\n2005\n594.76686\n\n\nPakistan\n2006\n620.29564\n\n\nPakistan\n2007\n643.85852\n\n\nPakistan\n2008\n642.42754\n\n\nPakistan\n2009\n653.61118\n\n\nPakistan\n2010\n664.71127\n\n\nPakistan\n2011\n672.15475\n\n\nPalau\n1991\n7256.43148\n\n\nPalau\n1992\n6611.25829\n\n\nPalau\n1993\n5638.08997\n\n\nPalau\n1994\n5884.42424\n\n\nPalau\n1995\n6355.62700\n\n\nPalau\n1996\n6842.12880\n\n\nPalau\n1997\n6834.18559\n\n\nPalau\n1998\n6820.32695\n\n\nPalau\n1999\n6331.02811\n\n\nPalau\n2000\n6251.98206\n\n\nPalau\n2001\n6258.18055\n\n\nPalau\n2002\n5986.38310\n\n\nPalau\n2003\n5871.06545\n\n\nPalau\n2004\n6126.09257\n\n\nPalau\n2005\n6429.58590\n\n\nPalau\n2006\n6587.72460\n\n\nPalau\n2007\n6519.92356\n\n\nPalau\n2008\n6088.91561\n\n\nPalau\n2009\n5775.13625\n\n\nPalau\n2010\n5756.81052\n\n\nPalau\n2011\n6050.21707\n\n\nPanama\n1960\n1710.51135\n\n\nPanama\n1961\n1840.06282\n\n\nPanama\n1962\n1936.78273\n\n\nPanama\n1963\n2039.60817\n\n\nPanama\n1964\n2070.57724\n\n\nPanama\n1965\n2194.36096\n\n\nPanama\n1966\n2290.93200\n\n\nPanama\n1967\n2415.08787\n\n\nPanama\n1968\n2508.04470\n\n\nPanama\n1969\n2644.52555\n\n\nPanama\n1970\n2734.76995\n\n\nPanama\n1971\n2916.33737\n\n\nPanama\n1972\n2967.85380\n\n\nPanama\n1973\n3045.61050\n\n\nPanama\n1974\n3038.79136\n\n\nPanama\n1975\n3007.97544\n\n\nPanama\n1976\n2980.11813\n\n\nPanama\n1977\n2939.52293\n\n\nPanama\n1978\n3147.06312\n\n\nPanama\n1979\n3210.47824\n\n\nPanama\n1980\n3170.32151\n\n\nPanama\n1981\n3383.83755\n\n\nPanama\n1982\n3486.05106\n\n\nPanama\n1983\n3257.46191\n\n\nPanama\n1984\n3274.60871\n\n\nPanama\n1985\n3364.43207\n\n\nPanama\n1986\n3412.43430\n\n\nPanama\n1987\n3282.27991\n\n\nPanama\n1988\n2785.48705\n\n\nPanama\n1989\n2771.75463\n\n\nPanama\n1990\n2935.47757\n\n\nPanama\n1991\n3146.64300\n\n\nPanama\n1992\n3335.37392\n\n\nPanama\n1993\n3445.73370\n\n\nPanama\n1994\n3472.01900\n\n\nPanama\n1995\n3461.54148\n\n\nPanama\n1996\n3487.45030\n\n\nPanama\n1997\n3638.82977\n\n\nPanama\n1998\n3828.97810\n\n\nPanama\n1999\n3901.62820\n\n\nPanama\n2000\n3930.98941\n\n\nPanama\n2001\n3879.40570\n\n\nPanama\n2002\n3892.88036\n\n\nPanama\n2003\n3983.35080\n\n\nPanama\n2004\n4207.06095\n\n\nPanama\n2005\n4431.12809\n\n\nPanama\n2006\n4726.88015\n\n\nPanama\n2007\n5210.71908\n\n\nPanama\n2008\n5643.89579\n\n\nPanama\n2009\n5767.71064\n\n\nPanama\n2010\n6109.58737\n\n\nPanama\n2011\n6654.39491\n\n\nPapua New Guinea\n1960\n425.55779\n\n\nPapua New Guinea\n1961\n444.16450\n\n\nPapua New Guinea\n1962\n464.10036\n\n\nPapua New Guinea\n1963\n474.05054\n\n\nPapua New Guinea\n1964\n504.66150\n\n\nPapua New Guinea\n1965\n545.08445\n\n\nPapua New Guinea\n1966\n564.41798\n\n\nPapua New Guinea\n1967\n574.27361\n\n\nPapua New Guinea\n1968\n585.28384\n\n\nPapua New Guinea\n1969\n618.07754\n\n\nPapua New Guinea\n1970\n667.30204\n\n\nPapua New Guinea\n1971\n689.95182\n\n\nPapua New Guinea\n1972\n708.23102\n\n\nPapua New Guinea\n1973\n732.71807\n\n\nPapua New Guinea\n1974\n730.29769\n\n\nPapua New Guinea\n1975\n703.56322\n\n\nPapua New Guinea\n1976\n661.17758\n\n\nPapua New Guinea\n1977\n648.92545\n\n\nPapua New Guinea\n1978\n685.88522\n\n\nPapua New Guinea\n1979\n680.07773\n\n\nPapua New Guinea\n1980\n646.77629\n\n\nPapua New Guinea\n1981\n627.68431\n\n\nPapua New Guinea\n1982\n612.90763\n\n\nPapua New Guinea\n1983\n615.69228\n\n\nPapua New Guinea\n1984\n597.36488\n\n\nPapua New Guinea\n1985\n605.35821\n\n\nPapua New Guinea\n1986\n618.01752\n\n\nPapua New Guinea\n1987\n619.71892\n\n\nPapua New Guinea\n1988\n622.47190\n\n\nPapua New Guinea\n1989\n598.94332\n\n\nPapua New Guinea\n1990\n566.87074\n\n\nPapua New Guinea\n1991\n605.85153\n\n\nPapua New Guinea\n1992\n672.81917\n\n\nPapua New Guinea\n1993\n775.55722\n\n\nPapua New Guinea\n1994\n800.99025\n\n\nPapua New Guinea\n1995\n754.72466\n\n\nPapua New Guinea\n1996\n792.08372\n\n\nPapua New Guinea\n1997\n741.28296\n\n\nPapua New Guinea\n1998\n694.66109\n\n\nPapua New Guinea\n1999\n689.13400\n\n\nPapua New Guinea\n2000\n654.66878\n\n\nPapua New Guinea\n2001\n637.31491\n\n\nPapua New Guinea\n2002\n620.41025\n\n\nPapua New Guinea\n2003\n618.20830\n\n\nPapua New Guinea\n2004\n619.53912\n\n\nPapua New Guinea\n2005\n626.30825\n\n\nPapua New Guinea\n2006\n627.11635\n\n\nPapua New Guinea\n2007\n656.35714\n\n\nPapua New Guinea\n2008\n683.97648\n\n\nPapua New Guinea\n2009\n705.00757\n\n\nPapua New Guinea\n2010\n744.21055\n\n\nPapua New Guinea\n2011\n793.19774\n\n\nParaguay\n1960\n662.85616\n\n\nParaguay\n1961\n691.17137\n\n\nParaguay\n1962\n682.18583\n\n\nParaguay\n1963\n690.03906\n\n\nParaguay\n1964\n698.01941\n\n\nParaguay\n1965\n716.09395\n\n\nParaguay\n1966\n705.26489\n\n\nParaguay\n1967\n745.05185\n\n\nParaguay\n1968\n748.32098\n\n\nParaguay\n1969\n759.11656\n\n\nParaguay\n1970\n776.23019\n\n\nParaguay\n1971\n798.57481\n\n\nParaguay\n1972\n829.79400\n\n\nParaguay\n1973\n868.52503\n\n\nParaguay\n1974\n917.74078\n\n\nParaguay\n1975\n952.10433\n\n\nParaguay\n1976\n993.77032\n\n\nParaguay\n1977\n1074.74443\n\n\nParaguay\n1978\n1165.95173\n\n\nParaguay\n1979\n1263.93680\n\n\nParaguay\n1980\n1411.48672\n\n\nParaguay\n1981\n1488.68149\n\n\nParaguay\n1982\n1391.88576\n\n\nParaguay\n1983\n1310.30571\n\n\nParaguay\n1984\n1311.28245\n\n\nParaguay\n1985\n1324.27410\n\n\nParaguay\n1986\n1286.92119\n\n\nParaguay\n1987\n1305.47053\n\n\nParaguay\n1988\n1350.70504\n\n\nParaguay\n1989\n1391.02563\n\n\nParaguay\n1990\n1396.74287\n\n\nParaguay\n1991\n1394.92492\n\n\nParaguay\n1992\n1406.98297\n\n\nParaguay\n1993\n1426.76089\n\n\nParaguay\n1994\n1445.12895\n\n\nParaguay\n1995\n1488.94991\n\n\nParaguay\n1996\n1461.48459\n\n\nParaguay\n1997\n1472.34382\n\n\nParaguay\n1998\n1449.25722\n\n\nParaguay\n1999\n1397.89236\n\n\nParaguay\n2000\n1323.48193\n\n\nParaguay\n2001\n1323.46342\n\n\nParaguay\n2002\n1243.33828\n\n\nParaguay\n2003\n1244.50462\n\n\nParaguay\n2004\n1263.91988\n\n\nParaguay\n2005\n1331.10708\n\n\nParaguay\n2006\n1352.97565\n\n\nParaguay\n2007\n1450.18457\n\n\nParaguay\n2008\n1483.73907\n\n\nParaguay\n2009\n1406.36170\n\n\nParaguay\n2010\n1578.63634\n\n\nParaguay\n2011\n1657.58323\n\n\nPeru\n1960\n1647.25127\n\n\nPeru\n1961\n1718.65103\n\n\nPeru\n1962\n1808.99949\n\n\nPeru\n1963\n1822.61804\n\n\nPeru\n1964\n1887.52524\n\n\nPeru\n1965\n1924.81995\n\n\nPeru\n1966\n2028.18568\n\n\nPeru\n1967\n2046.60050\n\n\nPeru\n1968\n1997.48508\n\n\nPeru\n1969\n2016.45426\n\n\nPeru\n1970\n2075.55762\n\n\nPeru\n1971\n2102.92786\n\n\nPeru\n1972\n2103.96671\n\n\nPeru\n1973\n2156.47744\n\n\nPeru\n1974\n2291.86295\n\n\nPeru\n1975\n2305.76197\n\n\nPeru\n1976\n2287.83479\n\n\nPeru\n1977\n2235.88411\n\n\nPeru\n1978\n2183.31242\n\n\nPeru\n1979\n2250.40492\n\n\nPeru\n1980\n2261.39665\n\n\nPeru\n1981\n2364.52631\n\n\nPeru\n1982\n2294.36208\n\n\nPeru\n1983\n1976.50188\n\n\nPeru\n1984\n2031.67584\n\n\nPeru\n1985\n2041.39382\n\n\nPeru\n1986\n2195.47287\n\n\nPeru\n1987\n2319.07281\n\n\nPeru\n1988\n2071.75363\n\n\nPeru\n1989\n1790.97643\n\n\nPeru\n1990\n1664.24831\n\n\nPeru\n1991\n1666.74286\n\n\nPeru\n1992\n1627.86557\n\n\nPeru\n1993\n1673.75113\n\n\nPeru\n1994\n1854.11625\n\n\nPeru\n1995\n1978.01637\n\n\nPeru\n1996\n1992.57802\n\n\nPeru\n1997\n2093.20782\n\n\nPeru\n1998\n2045.29282\n\n\nPeru\n1999\n2031.63123\n\n\nPeru\n2000\n2060.57626\n\n\nPeru\n2001\n2036.15795\n\n\nPeru\n2002\n2110.13962\n\n\nPeru\n2003\n2167.73416\n\n\nPeru\n2004\n2248.41043\n\n\nPeru\n2005\n2374.29708\n\n\nPeru\n2006\n2529.84073\n\n\nPeru\n2007\n2725.81524\n\n\nPeru\n2008\n2961.78798\n\n\nPeru\n2009\n2955.18622\n\n\nPeru\n2010\n3180.37461\n\n\nPeru\n2011\n3359.51740\n\n\nPhilippines\n1960\n691.68121\n\n\nPhilippines\n1961\n706.55140\n\n\nPhilippines\n1962\n716.10745\n\n\nPhilippines\n1963\n741.94218\n\n\nPhilippines\n1964\n743.27244\n\n\nPhilippines\n1965\n758.33088\n\n\nPhilippines\n1966\n768.17800\n\n\nPhilippines\n1967\n785.40971\n\n\nPhilippines\n1968\n800.55644\n\n\nPhilippines\n1969\n813.96799\n\n\nPhilippines\n1970\n820.63350\n\n\nPhilippines\n1971\n840.67014\n\n\nPhilippines\n1972\n861.42014\n\n\nPhilippines\n1973\n911.83953\n\n\nPhilippines\n1974\n917.78066\n\n\nPhilippines\n1975\n941.76081\n\n\nPhilippines\n1976\n996.15703\n\n\nPhilippines\n1977\n1022.76316\n\n\nPhilippines\n1978\n1045.87629\n\n\nPhilippines\n1979\n1074.30200\n\n\nPhilippines\n1980\n1098.39830\n\n\nPhilippines\n1981\n1104.66050\n\n\nPhilippines\n1982\n1113.17459\n\n\nPhilippines\n1983\n1103.01991\n\n\nPhilippines\n1984\n994.45845\n\n\nPhilippines\n1985\n896.95766\n\n\nPhilippines\n1986\n902.81399\n\n\nPhilippines\n1987\n916.82212\n\n\nPhilippines\n1988\n953.23935\n\n\nPhilippines\n1989\n986.61758\n\n\nPhilippines\n1990\n991.40033\n\n\nPhilippines\n1991\n961.96884\n\n\nPhilippines\n1992\n942.64052\n\n\nPhilippines\n1993\n940.55704\n\n\nPhilippines\n1994\n959.64909\n\n\nPhilippines\n1995\n982.03156\n\n\nPhilippines\n1996\n1016.31184\n\n\nPhilippines\n1997\n1045.45889\n\n\nPhilippines\n1998\n1016.77530\n\n\nPhilippines\n1999\n1025.55151\n\n\nPhilippines\n2000\n1048.07051\n\n\nPhilippines\n2001\n1055.80744\n\n\nPhilippines\n2002\n1071.69009\n\n\nPhilippines\n2003\n1102.21597\n\n\nPhilippines\n2004\n1153.02238\n\n\nPhilippines\n2005\n1185.37688\n\n\nPhilippines\n2006\n1225.04504\n\n\nPhilippines\n2007\n1283.46737\n\n\nPhilippines\n2008\n1314.22597\n\n\nPhilippines\n2009\n1307.13963\n\n\nPhilippines\n2010\n1383.40487\n\n\nPhilippines\n2011\n1413.36630\n\n\nPoland\n1990\n3100.70685\n\n\nPoland\n1991\n2872.96641\n\n\nPoland\n1992\n2936.20230\n\n\nPoland\n1993\n3038.22601\n\n\nPoland\n1994\n3192.29006\n\n\nPoland\n1995\n3409.58283\n\n\nPoland\n1996\n3619.54927\n\n\nPoland\n1997\n3873.50444\n\n\nPoland\n1998\n4065.01462\n\n\nPoland\n1999\n4249.27674\n\n\nPoland\n2000\n4454.08022\n\n\nPoland\n2001\n4532.00606\n\n\nPoland\n2002\n4599.55550\n\n\nPoland\n2003\n4780.65315\n\n\nPoland\n2004\n5039.11715\n\n\nPoland\n2005\n5223.67978\n\n\nPoland\n2006\n5552.50127\n\n\nPoland\n2007\n5932.47441\n\n\nPoland\n2008\n6235.75517\n\n\nPoland\n2009\n6332.96048\n\n\nPoland\n2010\n6574.29612\n\n\nPoland\n2011\n6854.46254\n\n\nPortugal\n1960\n2368.67214\n\n\nPortugal\n1961\n2479.73132\n\n\nPortugal\n1962\n2624.74262\n\n\nPortugal\n1963\n2767.72004\n\n\nPortugal\n1964\n2940.75234\n\n\nPortugal\n1965\n3173.31079\n\n\nPortugal\n1966\n3327.71612\n\n\nPortugal\n1967\n3601.54741\n\n\nPortugal\n1968\n3938.00764\n\n\nPortugal\n1969\n4057.77399\n\n\nPortugal\n1970\n4610.25400\n\n\nPortugal\n1971\n4936.84830\n\n\nPortugal\n1972\n5340.80493\n\n\nPortugal\n1973\n5937.17414\n\n\nPortugal\n1974\n5921.84643\n\n\nPortugal\n1975\n5453.15550\n\n\nPortugal\n1976\n5665.97653\n\n\nPortugal\n1977\n5920.22520\n\n\nPortugal\n1978\n6021.61437\n\n\nPortugal\n1979\n6293.34230\n\n\nPortugal\n1980\n6511.36705\n\n\nPortugal\n1981\n6559.60335\n\n\nPortugal\n1982\n6658.84317\n\n\nPortugal\n1983\n6616.54606\n\n\nPortugal\n1984\n6467.23850\n\n\nPortugal\n1985\n6630.64011\n\n\nPortugal\n1986\n6898.93428\n\n\nPortugal\n1987\n7341.16029\n\n\nPortugal\n1988\n7899.15478\n\n\nPortugal\n1989\n8420.18864\n\n\nPortugal\n1990\n8771.92762\n\n\nPortugal\n1991\n9169.19272\n\n\nPortugal\n1992\n9267.15978\n\n\nPortugal\n1993\n9066.31349\n\n\nPortugal\n1994\n9134.12529\n\n\nPortugal\n1995\n9500.34884\n\n\nPortugal\n1996\n9823.83426\n\n\nPortugal\n1997\n10222.96148\n\n\nPortugal\n1998\n10707.74758\n\n\nPortugal\n1999\n11097.15537\n\n\nPortugal\n2000\n11470.89792\n\n\nPortugal\n2001\n11621.11519\n\n\nPortugal\n2002\n11624.76812\n\n\nPortugal\n2003\n11438.67936\n\n\nPortugal\n2004\n11549.79944\n\n\nPortugal\n2005\n11586.96254\n\n\nPortugal\n2006\n11716.00896\n\n\nPortugal\n2007\n11965.99661\n\n\nPortugal\n2008\n11949.11464\n\n\nPortugal\n2009\n11590.61176\n\n\nPortugal\n2010\n11747.58549\n\n\nPortugal\n2011\n11551.91534\n\n\nPuerto Rico\n1960\n3767.41475\n\n\nPuerto Rico\n1961\n4055.06881\n\n\nPuerto Rico\n1962\n4270.35157\n\n\nPuerto Rico\n1963\n4612.41220\n\n\nPuerto Rico\n1964\n4844.56505\n\n\nPuerto Rico\n1965\n5203.11826\n\n\nPuerto Rico\n1966\n5504.70693\n\n\nPuerto Rico\n1967\n5804.75222\n\n\nPuerto Rico\n1968\n6043.08340\n\n\nPuerto Rico\n1969\n6524.04661\n\n\nPuerto Rico\n1970\n7002.48479\n\n\nPuerto Rico\n1971\n7327.09048\n\n\nPuerto Rico\n1972\n7714.15582\n\n\nPuerto Rico\n1973\n7999.26027\n\n\nPuerto Rico\n1974\n7839.00583\n\n\nPuerto Rico\n1975\n7499.96700\n\n\nPuerto Rico\n1976\n7766.22305\n\n\nPuerto Rico\n1977\n8154.24092\n\n\nPuerto Rico\n1978\n8580.01097\n\n\nPuerto Rico\n1979\n8993.06210\n\n\nPuerto Rico\n1980\n9022.36903\n\n\nPuerto Rico\n1981\n9016.13818\n\n\nPuerto Rico\n1982\n8648.30028\n\n\nPuerto Rico\n1983\n8600.22955\n\n\nPuerto Rico\n1984\n9138.37866\n\n\nPuerto Rico\n1985\n9235.88044\n\n\nPuerto Rico\n1986\n9894.64637\n\n\nPuerto Rico\n1987\n10283.97871\n\n\nPuerto Rico\n1988\n10852.03190\n\n\nPuerto Rico\n1989\n11284.83591\n\n\nPuerto Rico\n1990\n11607.88682\n\n\nPuerto Rico\n1991\n11791.66561\n\n\nPuerto Rico\n1992\n12250.47182\n\n\nPuerto Rico\n1993\n12712.00828\n\n\nPuerto Rico\n1994\n13121.58962\n\n\nPuerto Rico\n1995\n13592.41549\n\n\nPuerto Rico\n1996\n13751.69946\n\n\nPuerto Rico\n1997\n14289.41974\n\n\nPuerto Rico\n1998\n14993.24588\n\n\nPuerto Rico\n1999\n15722.53514\n\n\nPuerto Rico\n2000\n16192.12697\n\n\nPuerto Rico\n2001\n17177.49890\n\n\nPuerto Rico\n2002\n17312.68028\n\n\nPuerto Rico\n2003\n17311.04343\n\n\nPuerto Rico\n2004\n17831.02487\n\n\nPuerto Rico\n2005\n18004.27601\n\n\nPuerto Rico\n2006\n18053.78721\n\n\nPuerto Rico\n2007\n17717.88366\n\n\nPuerto Rico\n2008\n17487.72122\n\n\nPuerto Rico\n2009\n17183.31975\n\n\nPuerto Rico\n2010\n16910.46054\n\n\nQatar\n2000\n30052.76120\n\n\nQatar\n2001\n30179.55458\n\n\nQatar\n2002\n31497.58565\n\n\nQatar\n2003\n31134.03018\n\n\nQatar\n2004\n34380.19284\n\n\nQatar\n2005\n32224.00693\n\n\nQatar\n2006\n32070.95910\n\n\nQatar\n2007\n31424.32229\n\n\nQatar\n2008\n31214.35526\n\n\nQatar\n2009\n30546.64881\n\n\nQatar\n2010\n32356.40757\n\n\nQatar\n2011\n36152.66676\n\n\nRomania\n1980\n1840.84260\n\n\nRomania\n1981\n1840.66215\n\n\nRomania\n1982\n1905.77768\n\n\nRomania\n1983\n2015.45961\n\n\nRomania\n1984\n2128.04562\n\n\nRomania\n1985\n2116.63889\n\n\nRomania\n1986\n2157.60871\n\n\nRomania\n1987\n2166.34192\n\n\nRomania\n1988\n2145.41074\n\n\nRomania\n1989\n2011.92649\n\n\nRomania\n1990\n1895.95336\n\n\nRomania\n1991\n1665.78319\n\n\nRomania\n1992\n1532.30255\n\n\nRomania\n1993\n1557.57934\n\n\nRomania\n1994\n1621.77474\n\n\nRomania\n1995\n1741.41191\n\n\nRomania\n1996\n1816.44960\n\n\nRomania\n1997\n1710.51323\n\n\nRomania\n1998\n1631.97007\n\n\nRomania\n1999\n1614.91945\n\n\nRomania\n2000\n1650.96842\n\n\nRomania\n2001\n1769.59564\n\n\nRomania\n2002\n1887.89573\n\n\nRomania\n2003\n1991.64904\n\n\nRomania\n2004\n2164.63456\n\n\nRomania\n2005\n2260.21514\n\n\nRomania\n2006\n2444.04843\n\n\nRomania\n2007\n2595.59609\n\n\nRomania\n2008\n2844.64167\n\n\nRomania\n2009\n2606.87262\n\n\nRomania\n2010\n2636.78768\n\n\nRomania\n2011\n2633.02281\n\n\nRussia\n1989\n2693.09790\n\n\nRussia\n1990\n2602.24637\n\n\nRussia\n1991\n2465.39298\n\n\nRussia\n1992\n2106.22376\n\n\nRussia\n1993\n1925.83381\n\n\nRussia\n1994\n1685.84978\n\n\nRussia\n1995\n1618.12327\n\n\nRussia\n1996\n1564.11527\n\n\nRussia\n1997\n1590.69650\n\n\nRussia\n1998\n1510.54270\n\n\nRussia\n1999\n1613.69863\n\n\nRussia\n2000\n1775.14129\n\n\nRussia\n2001\n1870.04862\n\n\nRussia\n2002\n1967.51860\n\n\nRussia\n2003\n2121.28903\n\n\nRussia\n2004\n2285.36323\n\n\nRussia\n2005\n2442.96297\n\n\nRussia\n2006\n2654.20019\n\n\nRussia\n2007\n2888.84735\n\n\nRussia\n2008\n3043.66560\n\n\nRussia\n2009\n2806.41483\n\n\nRussia\n2010\n2928.00503\n\n\nRussia\n2011\n3054.72774\n\n\nRwanda\n1960\n224.96366\n\n\nRwanda\n1961\n208.91206\n\n\nRwanda\n1962\n225.69670\n\n\nRwanda\n1963\n197.50318\n\n\nRwanda\n1964\n167.76369\n\n\nRwanda\n1965\n174.20255\n\n\nRwanda\n1966\n180.88266\n\n\nRwanda\n1967\n187.64536\n\n\nRwanda\n1968\n194.81550\n\n\nRwanda\n1969\n209.76688\n\n\nRwanda\n1970\n215.62679\n\n\nRwanda\n1971\n211.57826\n\n\nRwanda\n1972\n205.62578\n\n\nRwanda\n1973\n206.10486\n\n\nRwanda\n1974\n202.44915\n\n\nRwanda\n1975\n191.86034\n\n\nRwanda\n1976\n221.87995\n\n\nRwanda\n1977\n218.92316\n\n\nRwanda\n1978\n231.13132\n\n\nRwanda\n1979\n250.12766\n\n\nRwanda\n1980\n263.69743\n\n\nRwanda\n1981\n269.48821\n\n\nRwanda\n1982\n266.42010\n\n\nRwanda\n1983\n274.06056\n\n\nRwanda\n1984\n253.91710\n\n\nRwanda\n1985\n255.43419\n\n\nRwanda\n1986\n257.74220\n\n\nRwanda\n1987\n245.48029\n\n\nRwanda\n1988\n245.92797\n\n\nRwanda\n1989\n240.13558\n\n\nRwanda\n1990\n234.87946\n\n\nRwanda\n1991\n236.91628\n\n\nRwanda\n1992\n267.09786\n\n\nRwanda\n1993\n264.64357\n\n\nRwanda\n1994\n139.50098\n\n\nRwanda\n1995\n191.28382\n\n\nRwanda\n1996\n206.98305\n\n\nRwanda\n1997\n217.16874\n\n\nRwanda\n1998\n214.40140\n\n\nRwanda\n1999\n211.22604\n\n\nRwanda\n2000\n214.23370\n\n\nRwanda\n2001\n222.93323\n\n\nRwanda\n2002\n246.08619\n\n\nRwanda\n2003\n245.10640\n\n\nRwanda\n2004\n257.71600\n\n\nRwanda\n2005\n275.11176\n\n\nRwanda\n2006\n291.05803\n\n\nRwanda\n2007\n304.59300\n\n\nRwanda\n2008\n328.65378\n\n\nRwanda\n2009\n338.77269\n\n\nRwanda\n2010\n352.53562\n\n\nRwanda\n2011\n370.59286\n\n\nSt. Kitts and Nevis\n1977\n2712.81147\n\n\nSt. Kitts and Nevis\n1978\n2908.73579\n\n\nSt. Kitts and Nevis\n1979\n3184.41849\n\n\nSt. Kitts and Nevis\n1980\n3390.80659\n\n\nSt. Kitts and Nevis\n1981\n3401.64673\n\n\nSt. Kitts and Nevis\n1982\n3322.58145\n\n\nSt. Kitts and Nevis\n1983\n3319.44612\n\n\nSt. Kitts and Nevis\n1984\n3749.87664\n\n\nSt. Kitts and Nevis\n1985\n4075.74323\n\n\nSt. Kitts and Nevis\n1986\n4567.66914\n\n\nSt. Kitts and Nevis\n1987\n4982.34479\n\n\nSt. Kitts and Nevis\n1988\n5452.71702\n\n\nSt. Kitts and Nevis\n1989\n5888.13955\n\n\nSt. Kitts and Nevis\n1990\n6042.37131\n\n\nSt. Kitts and Nevis\n1991\n6098.78100\n\n\nSt. Kitts and Nevis\n1992\n6333.15738\n\n\nSt. Kitts and Nevis\n1993\n6788.24086\n\n\nSt. Kitts and Nevis\n1994\n7168.51578\n\n\nSt. Kitts and Nevis\n1995\n7465.02664\n\n\nSt. Kitts and Nevis\n1996\n7978.79159\n\n\nSt. Kitts and Nevis\n1997\n8546.15306\n\n\nSt. Kitts and Nevis\n1998\n8775.28149\n\n\nSt. Kitts and Nevis\n1999\n8767.18812\n\n\nSt. Kitts and Nevis\n2000\n9406.28990\n\n\nSt. Kitts and Nevis\n2001\n9507.07285\n\n\nSt. Kitts and Nevis\n2002\n9564.65589\n\n\nSt. Kitts and Nevis\n2003\n9426.08823\n\n\nSt. Kitts and Nevis\n2004\n9465.43609\n\n\nSt. Kitts and Nevis\n2005\n10265.82187\n\n\nSt. Kitts and Nevis\n2006\n10607.87740\n\n\nSt. Kitts and Nevis\n2007\n10761.45073\n\n\nSt. Kitts and Nevis\n2008\n11123.62489\n\n\nSt. Kitts and Nevis\n2009\n10226.39010\n\n\nSt. Kitts and Nevis\n2010\n9856.21286\n\n\nSt. Kitts and Nevis\n2011\n9944.17262\n\n\nSt. Lucia\n1980\n2316.17563\n\n\nSt. Lucia\n1981\n2358.67786\n\n\nSt. Lucia\n1982\n2068.19742\n\n\nSt. Lucia\n1983\n2125.84673\n\n\nSt. Lucia\n1984\n2587.01236\n\n\nSt. Lucia\n1985\n2399.66771\n\n\nSt. Lucia\n1986\n2715.33241\n\n\nSt. Lucia\n1987\n2729.10342\n\n\nSt. Lucia\n1988\n3016.57107\n\n\nSt. Lucia\n1989\n3245.18934\n\n\nSt. Lucia\n1990\n3952.46030\n\n\nSt. Lucia\n1991\n4001.60799\n\n\nSt. Lucia\n1992\n4246.64921\n\n\nSt. Lucia\n1993\n4270.07701\n\n\nSt. Lucia\n1994\n4246.35633\n\n\nSt. Lucia\n1995\n4303.09797\n\n\nSt. Lucia\n1996\n4486.08289\n\n\nSt. Lucia\n1997\n4425.82381\n\n\nSt. Lucia\n1998\n4636.18982\n\n\nSt. Lucia\n1999\n4691.47672\n\n\nSt. Lucia\n2000\n4900.49568\n\n\nSt. Lucia\n2001\n4609.27963\n\n\nSt. Lucia\n2002\n4578.56082\n\n\nSt. Lucia\n2003\n4737.98857\n\n\nSt. Lucia\n2004\n5078.46414\n\n\nSt. Lucia\n2005\n4924.82690\n\n\nSt. Lucia\n2006\n5315.87433\n\n\nSt. Lucia\n2007\n5332.84188\n\n\nSt. Lucia\n2008\n5551.03919\n\n\nSt. Lucia\n2009\n5492.63496\n\n\nSt. Lucia\n2010\n5463.08385\n\n\nSt. Lucia\n2011\n5469.97135\n\n\nSt. Vincent and the Grenadines\n1960\n1324.50009\n\n\nSt. Vincent and the Grenadines\n1961\n1364.30661\n\n\nSt. Vincent and the Grenadines\n1962\n1396.63439\n\n\nSt. Vincent and the Grenadines\n1963\n1294.19844\n\n\nSt. Vincent and the Grenadines\n1964\n1327.35660\n\n\nSt. Vincent and the Grenadines\n1965\n1325.13156\n\n\nSt. Vincent and the Grenadines\n1966\n1311.55423\n\n\nSt. Vincent and the Grenadines\n1967\n1174.76980\n\n\nSt. Vincent and the Grenadines\n1968\n1238.79105\n\n\nSt. Vincent and the Grenadines\n1969\n1261.36452\n\n\nSt. Vincent and the Grenadines\n1970\n1382.42534\n\n\nSt. Vincent and the Grenadines\n1971\n1408.20128\n\n\nSt. Vincent and the Grenadines\n1972\n1752.45163\n\n\nSt. Vincent and the Grenadines\n1973\n1540.51241\n\n\nSt. Vincent and the Grenadines\n1974\n1389.04692\n\n\nSt. Vincent and the Grenadines\n1975\n1269.46313\n\n\nSt. Vincent and the Grenadines\n1976\n1386.42814\n\n\nSt. Vincent and the Grenadines\n1977\n1411.11342\n\n\nSt. Vincent and the Grenadines\n1978\n1563.40800\n\n\nSt. Vincent and the Grenadines\n1979\n1600.41029\n\n\nSt. Vincent and the Grenadines\n1980\n1618.03020\n\n\nSt. Vincent and the Grenadines\n1981\n1702.52861\n\n\nSt. Vincent and the Grenadines\n1982\n1769.89230\n\n\nSt. Vincent and the Grenadines\n1983\n1833.74898\n\n\nSt. Vincent and the Grenadines\n1984\n1927.67775\n\n\nSt. Vincent and the Grenadines\n1985\n2031.22419\n\n\nSt. Vincent and the Grenadines\n1986\n2151.70266\n\n\nSt. Vincent and the Grenadines\n1987\n2234.58502\n\n\nSt. Vincent and the Grenadines\n1988\n2545.50519\n\n\nSt. Vincent and the Grenadines\n1989\n2595.53152\n\n\nSt. Vincent and the Grenadines\n1990\n2715.50489\n\n\nSt. Vincent and the Grenadines\n1991\n2724.46952\n\n\nSt. Vincent and the Grenadines\n1992\n2924.15546\n\n\nSt. Vincent and the Grenadines\n1993\n2926.02207\n\n\nSt. Vincent and the Grenadines\n1994\n2837.14839\n\n\nSt. Vincent and the Grenadines\n1995\n2865.62286\n\n\nSt. Vincent and the Grenadines\n1996\n2905.04787\n\n\nSt. Vincent and the Grenadines\n1997\n3292.81885\n\n\nSt. Vincent and the Grenadines\n1998\n3465.53961\n\n\nSt. Vincent and the Grenadines\n1999\n3619.47030\n\n\nSt. Vincent and the Grenadines\n2000\n3683.78277\n\n\nSt. Vincent and the Grenadines\n2001\n3741.20941\n\n\nSt. Vincent and the Grenadines\n2002\n3969.42884\n\n\nSt. Vincent and the Grenadines\n2003\n4262.46750\n\n\nSt. Vincent and the Grenadines\n2004\n4431.15991\n\n\nSt. Vincent and the Grenadines\n2005\n4532.37817\n\n\nSt. Vincent and the Grenadines\n2006\n4872.78451\n\n\nSt. Vincent and the Grenadines\n2007\n5031.53354\n\n\nSt. Vincent and the Grenadines\n2008\n5095.98721\n\n\nSt. Vincent and the Grenadines\n2009\n4980.80325\n\n\nSt. Vincent and the Grenadines\n2010\n4839.22230\n\n\nSt. Vincent and the Grenadines\n2011\n4844.76687\n\n\nSamoa\n1982\n1126.81762\n\n\nSamoa\n1983\n1129.56523\n\n\nSamoa\n1984\n1141.64467\n\n\nSamoa\n1985\n1182.91352\n\n\nSamoa\n1986\n1243.17946\n\n\nSamoa\n1987\n1243.19534\n\n\nSamoa\n1988\n1218.36043\n\n\nSamoa\n1989\n1255.55483\n\n\nSamoa\n1990\n1191.78335\n\n\nSamoa\n1991\n1155.80280\n\n\nSamoa\n1992\n1144.43451\n\n\nSamoa\n1993\n1181.38820\n\n\nSamoa\n1994\n1141.06268\n\n\nSamoa\n1995\n1204.35277\n\n\nSamoa\n1996\n1278.94814\n\n\nSamoa\n1997\n1275.73638\n\n\nSamoa\n1998\n1292.90944\n\n\nSamoa\n1999\n1310.13276\n\n\nSamoa\n2000\n1391.21435\n\n\nSamoa\n2001\n1480.68111\n\n\nSamoa\n2002\n1538.65148\n\n\nSamoa\n2003\n1606.07484\n\n\nSamoa\n2004\n1677.81276\n\n\nSamoa\n2005\n1742.15449\n\n\nSamoa\n2006\n1771.58110\n\n\nSamoa\n2007\n1798.38578\n\n\nSamoa\n2008\n1870.22774\n\n\nSamoa\n2009\n1769.08569\n\n\nSamoa\n2010\n1769.56501\n\n\nSamoa\n2011\n1797.17201\n\n\nSan Marino\n1970\n13112.42249\n\n\nSan Marino\n1971\n13238.04809\n\n\nSan Marino\n1972\n13658.66844\n\n\nSan Marino\n1973\n14579.34626\n\n\nSan Marino\n1974\n15302.60562\n\n\nSan Marino\n1975\n14854.44577\n\n\nSan Marino\n1976\n15710.68293\n\n\nSan Marino\n1977\n15855.13469\n\n\nSan Marino\n1978\n16076.03814\n\n\nSan Marino\n1979\n16733.88979\n\n\nSan Marino\n1980\n17029.60534\n\n\nSan Marino\n1981\n16928.91485\n\n\nSan Marino\n1982\n16780.16322\n\n\nSan Marino\n1983\n16774.20846\n\n\nSan Marino\n1984\n17115.36308\n\n\nSan Marino\n1985\n17392.66012\n\n\nSan Marino\n1986\n17684.32293\n\n\nSan Marino\n1987\n18042.85699\n\n\nSan Marino\n1988\n18586.67199\n\n\nSan Marino\n1989\n18994.06207\n\n\nSan Marino\n1990\n19153.48780\n\n\nSan Marino\n1991\n19202.03629\n\n\nSan Marino\n1992\n19095.05522\n\n\nSan Marino\n1993\n20493.96387\n\n\nSan Marino\n1994\n21659.10511\n\n\nSan Marino\n1995\n23420.92926\n\n\nSan Marino\n1996\n24351.10489\n\n\nSan Marino\n1997\n24764.50822\n\n\nSan Marino\n1998\n26430.17181\n\n\nSan Marino\n1999\n28525.31242\n\n\nSan Marino\n2000\n28698.32174\n\n\nSan Marino\n2001\n29673.75858\n\n\nSan Marino\n2002\n29003.25092\n\n\nSan Marino\n2003\n29345.52553\n\n\nSan Marino\n2004\n29966.53671\n\n\nSan Marino\n2005\n30075.92142\n\n\nSan Marino\n2006\n30808.27931\n\n\nSan Marino\n2007\n31590.45679\n\n\nSan Marino\n2008\n31993.20069\n\n\nSao Tome and Principe\n2000\n543.99904\n\n\nSaudi Arabia\n1968\n6961.58388\n\n\nSaudi Arabia\n1969\n7101.89787\n\n\nSaudi Arabia\n1970\n7636.04849\n\n\nSaudi Arabia\n1971\n8768.68702\n\n\nSaudi Arabia\n1972\n10344.03380\n\n\nSaudi Arabia\n1973\n12383.01899\n\n\nSaudi Arabia\n1974\n15008.80958\n\n\nSaudi Arabia\n1975\n14979.49479\n\n\nSaudi Arabia\n1976\n15989.03212\n\n\nSaudi Arabia\n1977\n16181.58410\n\n\nSaudi Arabia\n1978\n15130.62097\n\n\nSaudi Arabia\n1979\n15657.48821\n\n\nSaudi Arabia\n1980\n15683.72114\n\n\nSaudi Arabia\n1981\n15413.93962\n\n\nSaudi Arabia\n1982\n12858.75783\n\n\nSaudi Arabia\n1983\n11094.09123\n\n\nSaudi Arabia\n1984\n10146.83402\n\n\nSaudi Arabia\n1985\n9209.91883\n\n\nSaudi Arabia\n1986\n9230.66640\n\n\nSaudi Arabia\n1987\n8491.07608\n\n\nSaudi Arabia\n1988\n8837.33156\n\n\nSaudi Arabia\n1989\n8528.48082\n\n\nSaudi Arabia\n1990\n8930.37552\n\n\nSaudi Arabia\n1991\n9433.18040\n\n\nSaudi Arabia\n1992\n9571.61672\n\n\nSaudi Arabia\n1993\n9308.41233\n\n\nSaudi Arabia\n1994\n9143.70877\n\n\nSaudi Arabia\n1995\n8976.83687\n\n\nSaudi Arabia\n1996\n9135.05229\n\n\nSaudi Arabia\n1997\n9256.51155\n\n\nSaudi Arabia\n1998\n9402.22960\n\n\nSaudi Arabia\n1999\n9178.24827\n\n\nSaudi Arabia\n2000\n9400.81169\n\n\nSaudi Arabia\n2001\n9161.46181\n\n\nSaudi Arabia\n2002\n8839.18632\n\n\nSaudi Arabia\n2003\n9144.94519\n\n\nSaudi Arabia\n2004\n9261.92193\n\n\nSaudi Arabia\n2005\n9439.85854\n\n\nSaudi Arabia\n2006\n9440.18003\n\n\nSaudi Arabia\n2007\n9364.48867\n\n\nSaudi Arabia\n2008\n9513.37717\n\n\nSaudi Arabia\n2009\n9294.35600\n\n\nSaudi Arabia\n2010\n9499.37889\n\n\nSaudi Arabia\n2011\n9913.75628\n\n\nSenegal\n1960\n613.62798\n\n\nSenegal\n1961\n615.25389\n\n\nSenegal\n1962\n597.93346\n\n\nSenegal\n1963\n592.42524\n\n\nSenegal\n1964\n598.13381\n\n\nSenegal\n1965\n588.52818\n\n\nSenegal\n1966\n587.44639\n\n\nSenegal\n1967\n562.69312\n\n\nSenegal\n1968\n579.67190\n\n\nSenegal\n1969\n524.77642\n\n\nSenegal\n1970\n551.77650\n\n\nSenegal\n1971\n533.44866\n\n\nSenegal\n1972\n549.32822\n\n\nSenegal\n1973\n502.36263\n\n\nSenegal\n1974\n507.80788\n\n\nSenegal\n1975\n530.82796\n\n\nSenegal\n1976\n563.27176\n\n\nSenegal\n1977\n534.93446\n\n\nSenegal\n1978\n501.78050\n\n\nSenegal\n1979\n524.16763\n\n\nSenegal\n1980\n494.20616\n\n\nSenegal\n1981\n505.68588\n\n\nSenegal\n1982\n530.54488\n\n\nSenegal\n1983\n488.22857\n\n\nSenegal\n1984\n492.04416\n\n\nSenegal\n1985\n493.48747\n\n\nSenegal\n1986\n493.95692\n\n\nSenegal\n1987\n508.56871\n\n\nSenegal\n1988\n490.53413\n\n\nSenegal\n1989\n494.89024\n\n\nSenegal\n1990\n477.00342\n\n\nSenegal\n1991\n474.77156\n\n\nSenegal\n1992\n466.58301\n\n\nSenegal\n1993\n459.02434\n\n\nSenegal\n1994\n446.09140\n\n\nSenegal\n1995\n457.32588\n\n\nSenegal\n1996\n454.43355\n\n\nSenegal\n1997\n456.88698\n\n\nSenegal\n1998\n471.91332\n\n\nSenegal\n1999\n489.42032\n\n\nSenegal\n2000\n492.28623\n\n\nSenegal\n2001\n501.49128\n\n\nSenegal\n2002\n491.46207\n\n\nSenegal\n2003\n510.21336\n\n\nSenegal\n2004\n525.84931\n\n\nSenegal\n2005\n540.59314\n\n\nSenegal\n2006\n539.48964\n\n\nSenegal\n2007\n550.64764\n\n\nSenegal\n2008\n555.90699\n\n\nSenegal\n2009\n552.54290\n\n\nSenegal\n2010\n560.25744\n\n\nSenegal\n2011\n559.96830\n\n\nSerbia\n1990\n1444.18397\n\n\nSerbia\n1991\n1301.25221\n\n\nSerbia\n1992\n941.53012\n\n\nSerbia\n1993\n649.78972\n\n\nSerbia\n1994\n662.99196\n\n\nSerbia\n1995\n703.03932\n\n\nSerbia\n1996\n760.83641\n\n\nSerbia\n1997\n844.16884\n\n\nSerbia\n1998\n859.27618\n\n\nSerbia\n1999\n765.80427\n\n\nSerbia\n2000\n809.27508\n\n\nSerbia\n2001\n853.63319\n\n\nSerbia\n2002\n889.22915\n\n\nSerbia\n2003\n915.38452\n\n\nSerbia\n2004\n1002.85250\n\n\nSerbia\n2005\n1060.18688\n\n\nSerbia\n2006\n1102.68089\n\n\nSerbia\n2007\n1166.94757\n\n\nSerbia\n2008\n1216.45927\n\n\nSerbia\n2009\n1178.59969\n\n\nSerbia\n2010\n1194.63999\n\n\nSerbia\n2011\n1223.64053\n\n\nSeychelles\n1960\n1174.61391\n\n\nSeychelles\n1961\n1086.29337\n\n\nSeychelles\n1962\n1146.79791\n\n\nSeychelles\n1963\n1231.34821\n\n\nSeychelles\n1964\n1271.96557\n\n\nSeychelles\n1965\n2485.94137\n\n\nSeychelles\n1966\n2475.73410\n\n\nSeychelles\n1967\n2427.80764\n\n\nSeychelles\n1968\n2548.72217\n\n\nSeychelles\n1969\n2488.79703\n\n\nSeychelles\n1970\n2647.17396\n\n\nSeychelles\n1971\n2997.72508\n\n\nSeychelles\n1972\n3116.77767\n\n\nSeychelles\n1973\n3326.79603\n\n\nSeychelles\n1974\n3302.00092\n\n\nSeychelles\n1975\n3342.10052\n\n\nSeychelles\n1976\n3815.44063\n\n\nSeychelles\n1977\n3519.05936\n\n\nSeychelles\n1978\n4197.80415\n\n\nSeychelles\n1979\n4793.06706\n\n\nSeychelles\n1980\n4531.96485\n\n\nSeychelles\n1981\n4113.18914\n\n\nSeychelles\n1982\n4026.87231\n\n\nSeychelles\n1983\n3923.04087\n\n\nSeychelles\n1984\n4067.23529\n\n\nSeychelles\n1985\n4486.33733\n\n\nSeychelles\n1986\n4446.92000\n\n\nSeychelles\n1987\n4610.49405\n\n\nSeychelles\n1988\n4824.36130\n\n\nSeychelles\n1989\n5322.88101\n\n\nSeychelles\n1990\n5645.41581\n\n\nSeychelles\n1991\n5739.35147\n\n\nSeychelles\n1992\n6072.95358\n\n\nSeychelles\n1993\n6355.74961\n\n\nSeychelles\n1994\n6201.51297\n\n\nSeychelles\n1995\n6037.65184\n\n\nSeychelles\n1996\n6242.29317\n\n\nSeychelles\n1997\n6907.43565\n\n\nSeychelles\n1998\n7342.87792\n\n\nSeychelles\n1999\n7334.84205\n\n\nSeychelles\n2000\n7578.85105\n\n\nSeychelles\n2001\n7400.24682\n\n\nSeychelles\n2002\n7266.46276\n\n\nSeychelles\n2003\n6913.01025\n\n\nSeychelles\n2004\n6740.37974\n\n\nSeychelles\n2005\n7208.96827\n\n\nSeychelles\n2006\n7721.54165\n\n\nSeychelles\n2007\n8419.71583\n\n\nSeychelles\n2008\n8151.71295\n\n\nSeychelles\n2009\n8162.19658\n\n\nSeychelles\n2010\n8787.76643\n\n\nSeychelles\n2011\n9279.11267\n\n\nSierra Leone\n1960\n223.35279\n\n\nSierra Leone\n1961\n223.83317\n\n\nSierra Leone\n1962\n230.27518\n\n\nSierra Leone\n1963\n230.40107\n\n\nSierra Leone\n1964\n241.75583\n\n\nSierra Leone\n1965\n254.76809\n\n\nSierra Leone\n1966\n254.66620\n\n\nSierra Leone\n1967\n250.31870\n\n\nSierra Leone\n1968\n250.86570\n\n\nSierra Leone\n1969\n267.41414\n\n\nSierra Leone\n1970\n285.28758\n\n\nSierra Leone\n1971\n289.90515\n\n\nSierra Leone\n1972\n287.26391\n\n\nSierra Leone\n1973\n288.39672\n\n\nSierra Leone\n1974\n292.91432\n\n\nSierra Leone\n1975\n292.06122\n\n\nSierra Leone\n1976\n284.96010\n\n\nSierra Leone\n1977\n279.25625\n\n\nSierra Leone\n1978\n279.98211\n\n\nSierra Leone\n1979\n286.36867\n\n\nSierra Leone\n1980\n293.74285\n\n\nSierra Leone\n1981\n295.73065\n\n\nSierra Leone\n1982\n303.31917\n\n\nSierra Leone\n1983\n290.52696\n\n\nSierra Leone\n1984\n295.45988\n\n\nSierra Leone\n1985\n272.84434\n\n\nSierra Leone\n1986\n268.70348\n\n\nSierra Leone\n1987\n279.88972\n\n\nSierra Leone\n1988\n253.11752\n\n\nSierra Leone\n1989\n249.65420\n\n\nSierra Leone\n1990\n254.79367\n\n\nSierra Leone\n1991\n259.88559\n\n\nSierra Leone\n1992\n211.31368\n\n\nSierra Leone\n1993\n216.00570\n\n\nSierra Leone\n1994\n213.51220\n\n\nSierra Leone\n1995\n197.27715\n\n\nSierra Leone\n1996\n207.15089\n\n\nSierra Leone\n1997\n171.79061\n\n\nSierra Leone\n1998\n168.62748\n\n\nSierra Leone\n1999\n152.06445\n\n\nSierra Leone\n2000\n153.47797\n\n\nSierra Leone\n2001\n174.59142\n\n\nSierra Leone\n2002\n212.57655\n\n\nSierra Leone\n2003\n221.29393\n\n\nSierra Leone\n2004\n227.25052\n\n\nSierra Leone\n2005\n234.04926\n\n\nSierra Leone\n2006\n242.89252\n\n\nSierra Leone\n2007\n251.41702\n\n\nSierra Leone\n2008\n259.00291\n\n\nSierra Leone\n2009\n261.36870\n\n\nSierra Leone\n2010\n268.30728\n\n\nSierra Leone\n2011\n278.24338\n\n\nSingapore\n1960\n2251.39451\n\n\nSingapore\n1961\n2478.23182\n\n\nSingapore\n1962\n2409.27769\n\n\nSingapore\n1963\n2558.07049\n\n\nSingapore\n1964\n2506.76203\n\n\nSingapore\n1965\n2782.51467\n\n\nSingapore\n1966\n3009.79697\n\n\nSingapore\n1967\n3303.97738\n\n\nSingapore\n1968\n3689.69754\n\n\nSingapore\n1969\n4131.20068\n\n\nSingapore\n1970\n4628.31653\n\n\nSingapore\n1971\n5092.77407\n\n\nSingapore\n1972\n5675.69383\n\n\nSingapore\n1973\n6187.81301\n\n\nSingapore\n1974\n6479.60485\n\n\nSingapore\n1975\n6681.03048\n\n\nSingapore\n1976\n7081.62277\n\n\nSingapore\n1977\n7505.31100\n\n\nSingapore\n1978\n8056.02242\n\n\nSingapore\n1979\n8702.14177\n\n\nSingapore\n1980\n9457.47095\n\n\nSingapore\n1981\n9979.84318\n\n\nSingapore\n1982\n10236.32233\n\n\nSingapore\n1983\n10972.39757\n\n\nSingapore\n1984\n11717.81261\n\n\nSingapore\n1985\n11624.62962\n\n\nSingapore\n1986\n11787.19813\n\n\nSingapore\n1987\n12859.31989\n\n\nSingapore\n1988\n13926.95420\n\n\nSingapore\n1989\n14906.23339\n\n\nSingapore\n1990\n15787.90256\n\n\nSingapore\n1991\n16339.42791\n\n\nSingapore\n1992\n16970.76377\n\n\nSingapore\n1993\n18446.17393\n\n\nSingapore\n1994\n19767.48282\n\n\nSingapore\n1995\n20571.45946\n\n\nSingapore\n1996\n21258.52785\n\n\nSingapore\n1997\n22305.68363\n\n\nSingapore\n1998\n21092.56352\n\n\nSingapore\n1999\n22221.38452\n\n\nSingapore\n2000\n23814.55661\n\n\nSingapore\n2001\n22913.32124\n\n\nSingapore\n2002\n23658.86570\n\n\nSingapore\n2003\n25110.50033\n\n\nSingapore\n2004\n27068.97410\n\n\nSingapore\n2005\n28388.86966\n\n\nSingapore\n2006\n29925.50494\n\n\nSingapore\n2007\n31246.99685\n\n\nSingapore\n2008\n30131.61718\n\n\nSingapore\n2009\n28949.85732\n\n\nSingapore\n2010\n32640.68442\n\n\nSingapore\n2011\n33529.83052\n\n\nSlovak Republic\n1984\n4953.52536\n\n\nSlovak Republic\n1985\n5092.38210\n\n\nSlovak Republic\n1986\n5271.81110\n\n\nSlovak Republic\n1987\n5371.49792\n\n\nSlovak Republic\n1988\n5446.84136\n\n\nSlovak Republic\n1989\n5486.17104\n\n\nSlovak Republic\n1990\n5316.21390\n\n\nSlovak Republic\n1991\n4537.92235\n\n\nSlovak Republic\n1992\n4231.53247\n\n\nSlovak Republic\n1993\n4059.44046\n\n\nSlovak Republic\n1994\n4294.39463\n\n\nSlovak Republic\n1995\n4532.05571\n\n\nSlovak Republic\n1996\n4836.39427\n\n\nSlovak Republic\n1997\n5041.88827\n\n\nSlovak Republic\n1998\n5254.71020\n\n\nSlovak Republic\n1999\n5251.33160\n\n\nSlovak Republic\n2000\n5330.40162\n\n\nSlovak Republic\n2001\n5526.10988\n\n\nSlovak Republic\n2002\n5779.16249\n\n\nSlovak Republic\n2003\n6054.49887\n\n\nSlovak Republic\n2004\n6357.37802\n\n\nSlovak Republic\n2005\n6774.73201\n\n\nSlovak Republic\n2006\n7334.10976\n\n\nSlovak Republic\n2007\n8094.87451\n\n\nSlovak Republic\n2008\n8545.63100\n\n\nSlovak Republic\n2009\n8106.25816\n\n\nSlovak Republic\n2010\n8427.43510\n\n\nSlovak Republic\n2011\n8693.83528\n\n\nSlovenia\n1990\n8362.38874\n\n\nSlovenia\n1991\n7613.29590\n\n\nSlovenia\n1992\n7207.89453\n\n\nSlovenia\n1993\n7430.53101\n\n\nSlovenia\n1994\n7835.45153\n\n\nSlovenia\n1995\n8119.11139\n\n\nSlovenia\n1996\n8420.53841\n\n\nSlovenia\n1997\n8849.86365\n\n\nSlovenia\n1998\n9180.93265\n\n\nSlovenia\n1999\n9662.96902\n\n\nSlovenia\n2000\n10045.36008\n\n\nSlovenia\n2001\n10324.38327\n\n\nSlovenia\n2002\n10706.20714\n\n\nSlovenia\n2003\n11013.26166\n\n\nSlovenia\n2004\n11490.68017\n\n\nSlovenia\n2005\n11930.45861\n\n\nSlovenia\n2006\n12588.10838\n\n\nSlovenia\n2007\n13377.91533\n\n\nSlovenia\n2008\n13836.18922\n\n\nSlovenia\n2009\n12613.67797\n\n\nSlovenia\n2010\n12732.04555\n\n\nSlovenia\n2011\n12688.65168\n\n\nSolomon Islands\n1990\n1101.24799\n\n\nSolomon Islands\n1991\n1134.94067\n\n\nSolomon Islands\n1992\n1243.20858\n\n\nSolomon Islands\n1993\n1256.46511\n\n\nSolomon Islands\n1994\n1333.82710\n\n\nSolomon Islands\n1995\n1403.80317\n\n\nSolomon Islands\n1996\n1387.56399\n\n\nSolomon Islands\n1997\n1330.72737\n\n\nSolomon Islands\n1998\n1318.07537\n\n\nSolomon Islands\n1999\n1276.34729\n\n\nSolomon Islands\n2000\n1064.51469\n\n\nSolomon Islands\n2001\n952.77462\n\n\nSolomon Islands\n2002\n900.64629\n\n\nSolomon Islands\n2003\n932.77275\n\n\nSolomon Islands\n2004\n951.53485\n\n\nSolomon Islands\n2005\n975.60543\n\n\nSolomon Islands\n2006\n1014.87347\n\n\nSolomon Islands\n2007\n1092.93956\n\n\nSolomon Islands\n2008\n1141.16395\n\n\nSolomon Islands\n2009\n1097.56043\n\n\nSolomon Islands\n2010\n1143.78755\n\n\nSolomon Islands\n2011\n1214.85515\n\n\nSouth Africa\n1960\n2203.72908\n\n\nSouth Africa\n1961\n2217.84584\n\n\nSouth Africa\n1962\n2289.85445\n\n\nSouth Africa\n1963\n2396.80336\n\n\nSouth Africa\n1964\n2526.47714\n\n\nSouth Africa\n1965\n2689.99279\n\n\nSouth Africa\n1966\n2748.87133\n\n\nSouth Africa\n1967\n2884.27081\n\n\nSouth Africa\n1968\n2940.66221\n\n\nSouth Africa\n1969\n3013.97347\n\n\nSouth Africa\n1970\n3104.01798\n\n\nSouth Africa\n1971\n3163.03351\n\n\nSouth Africa\n1972\n3142.53383\n\n\nSouth Africa\n1973\n3212.63632\n\n\nSouth Africa\n1974\n3333.71864\n\n\nSouth Africa\n1975\n3316.45476\n\n\nSouth Africa\n1976\n3318.59184\n\n\nSouth Africa\n1977\n3246.41428\n\n\nSouth Africa\n1978\n3274.51961\n\n\nSouth Africa\n1979\n3324.78299\n\n\nSouth Africa\n1980\n3463.24711\n\n\nSouth Africa\n1981\n3561.25903\n\n\nSouth Africa\n1982\n3459.78749\n\n\nSouth Africa\n1983\n3309.96764\n\n\nSouth Africa\n1984\n3389.64163\n\n\nSouth Africa\n1985\n3262.74358\n\n\nSouth Africa\n1986\n3180.68646\n\n\nSouth Africa\n1987\n3167.45563\n\n\nSouth Africa\n1988\n3222.65484\n\n\nSouth Africa\n1989\n3226.92477\n\n\nSouth Africa\n1990\n3151.83861\n\n\nSouth Africa\n1991\n3056.09414\n\n\nSouth Africa\n1992\n2929.02712\n\n\nSouth Africa\n1993\n2903.19959\n\n\nSouth Africa\n1994\n2933.72411\n\n\nSouth Africa\n1995\n2960.42246\n\n\nSouth Africa\n1996\n3019.96600\n\n\nSouth Africa\n1997\n3029.77251\n\n\nSouth Africa\n1998\n2974.68119\n\n\nSouth Africa\n1999\n2972.20341\n\n\nSouth Africa\n2000\n3019.94637\n\n\nSouth Africa\n2001\n3039.70613\n\n\nSouth Africa\n2002\n3108.04365\n\n\nSouth Africa\n2003\n3159.23785\n\n\nSouth Africa\n2004\n3264.31738\n\n\nSouth Africa\n2005\n3397.72002\n\n\nSouth Africa\n2006\n3548.09031\n\n\nSouth Africa\n2007\n3704.08427\n\n\nSouth Africa\n2008\n3795.97691\n\n\nSouth Africa\n2009\n3697.67368\n\n\nSouth Africa\n2010\n3753.44537\n\n\nSouth Africa\n2011\n3825.09378\n\n\nSpain\n1960\n3711.09930\n\n\nSpain\n1961\n4112.06453\n\n\nSpain\n1962\n4479.94917\n\n\nSpain\n1963\n4866.99406\n\n\nSpain\n1964\n5074.68064\n\n\nSpain\n1965\n5333.77517\n\n\nSpain\n1966\n5661.98554\n\n\nSpain\n1967\n5835.47595\n\n\nSpain\n1968\n6139.63101\n\n\nSpain\n1969\n6620.92178\n\n\nSpain\n1970\n6830.71898\n\n\nSpain\n1971\n7069.46290\n\n\nSpain\n1972\n7576.68432\n\n\nSpain\n1973\n8093.05316\n\n\nSpain\n1974\n8465.77794\n\n\nSpain\n1975\n8421.51304\n\n\nSpain\n1976\n8600.80669\n\n\nSpain\n1977\n8740.22485\n\n\nSpain\n1978\n8747.25047\n\n\nSpain\n1979\n8673.58350\n\n\nSpain\n1980\n8808.82438\n\n\nSpain\n1981\n8726.87225\n\n\nSpain\n1982\n8788.55214\n\n\nSpain\n1983\n8901.97708\n\n\nSpain\n1984\n9023.88853\n\n\nSpain\n1985\n9199.66730\n\n\nSpain\n1986\n9470.17108\n\n\nSpain\n1987\n9970.85988\n\n\nSpain\n1988\n10455.79391\n\n\nSpain\n1989\n10939.13075\n\n\nSpain\n1990\n11335.55259\n\n\nSpain\n1991\n11597.70261\n\n\nSpain\n1992\n11666.91038\n\n\nSpain\n1993\n11510.72335\n\n\nSpain\n1994\n11753.38552\n\n\nSpain\n1995\n12049.25856\n\n\nSpain\n1996\n12311.99210\n\n\nSpain\n1997\n12754.63169\n\n\nSpain\n1998\n13278.00360\n\n\nSpain\n1999\n13836.70260\n\n\nSpain\n2000\n14413.78887\n\n\nSpain\n2001\n14774.89486\n\n\nSpain\n2002\n14957.32291\n\n\nSpain\n2003\n15165.92735\n\n\nSpain\n2004\n15408.16294\n\n\nSpain\n2005\n15700.52761\n\n\nSpain\n2006\n16074.46178\n\n\nSpain\n2007\n16351.11108\n\n\nSpain\n2008\n16251.83693\n\n\nSpain\n2009\n15523.00304\n\n\nSpain\n2010\n15418.82018\n\n\nSpain\n2011\n15428.32098\n\n\nSri Lanka\n1960\n273.70669\n\n\nSri Lanka\n1961\n277.64273\n\n\nSri Lanka\n1962\n280.65275\n\n\nSri Lanka\n1963\n283.93678\n\n\nSri Lanka\n1964\n286.34267\n\n\nSri Lanka\n1965\n286.74292\n\n\nSri Lanka\n1966\n293.90853\n\n\nSri Lanka\n1967\n305.77635\n\n\nSri Lanka\n1968\n315.71825\n\n\nSri Lanka\n1969\n332.86475\n\n\nSri Lanka\n1970\n338.43172\n\n\nSri Lanka\n1971\n338.09958\n\n\nSri Lanka\n1972\n332.23482\n\n\nSri Lanka\n1973\n349.43283\n\n\nSri Lanka\n1974\n357.59940\n\n\nSri Lanka\n1975\n373.54530\n\n\nSri Lanka\n1976\n379.78438\n\n\nSri Lanka\n1977\n392.71399\n\n\nSri Lanka\n1978\n407.66585\n\n\nSri Lanka\n1979\n425.31848\n\n\nSri Lanka\n1980\n441.78780\n\n\nSri Lanka\n1981\n463.82239\n\n\nSri Lanka\n1982\n471.93805\n\n\nSri Lanka\n1983\n487.56622\n\n\nSri Lanka\n1984\n506.31944\n\n\nSri Lanka\n1985\n523.61189\n\n\nSri Lanka\n1986\n536.76165\n\n\nSri Lanka\n1987\n537.82019\n\n\nSri Lanka\n1988\n543.61520\n\n\nSri Lanka\n1989\n548.64457\n\n\nSri Lanka\n1990\n577.23923\n\n\nSri Lanka\n1991\n594.98030\n\n\nSri Lanka\n1992\n615.49179\n\n\nSri Lanka\n1993\n649.75765\n\n\nSri Lanka\n1994\n676.74800\n\n\nSri Lanka\n1995\n704.32410\n\n\nSri Lanka\n1996\n723.11407\n\n\nSri Lanka\n1997\n759.81877\n\n\nSri Lanka\n1998\n786.37029\n\n\nSri Lanka\n1999\n808.48157\n\n\nSri Lanka\n2000\n854.92673\n\n\nSri Lanka\n2001\n855.37258\n\n\nSri Lanka\n2002\n883.45718\n\n\nSri Lanka\n2003\n923.63544\n\n\nSri Lanka\n2004\n960.79859\n\n\nSri Lanka\n2005\n1009.90887\n\n\nSri Lanka\n2006\n1075.62554\n\n\nSri Lanka\n2007\n1138.36684\n\n\nSri Lanka\n2008\n1195.48108\n\n\nSri Lanka\n2009\n1223.68571\n\n\nSri Lanka\n2010\n1308.78402\n\n\nSri Lanka\n2011\n1402.12167\n\n\nSudan\n1960\n284.75715\n\n\nSudan\n1961\n278.16388\n\n\nSudan\n1962\n290.43734\n\n\nSudan\n1963\n275.54635\n\n\nSudan\n1964\n266.04579\n\n\nSudan\n1965\n277.35522\n\n\nSudan\n1966\n261.08553\n\n\nSudan\n1967\n258.45661\n\n\nSudan\n1968\n257.07501\n\n\nSudan\n1969\n254.02522\n\n\nSudan\n1970\n261.93591\n\n\nSudan\n1971\n260.40328\n\n\nSudan\n1972\n240.10002\n\n\nSudan\n1973\n234.48317\n\n\nSudan\n1974\n253.45870\n\n\nSudan\n1975\n284.35642\n\n\nSudan\n1976\n321.59720\n\n\nSudan\n1977\n331.12611\n\n\nSudan\n1978\n301.83735\n\n\nSudan\n1979\n277.65898\n\n\nSudan\n1980\n272.85401\n\n\nSudan\n1981\n283.54555\n\n\nSudan\n1982\n290.50226\n\n\nSudan\n1983\n286.87924\n\n\nSudan\n1984\n264.16766\n\n\nSudan\n1985\n240.60681\n\n\nSudan\n1986\n247.17101\n\n\nSudan\n1987\n275.73097\n\n\nSudan\n1988\n268.71665\n\n\nSudan\n1989\n286.17458\n\n\nSudan\n1990\n264.20469\n\n\nSudan\n1991\n277.08647\n\n\nSudan\n1992\n287.83001\n\n\nSudan\n1993\n293.19749\n\n\nSudan\n1994\n288.46939\n\n\nSudan\n1995\n297.91654\n\n\nSudan\n1996\n307.51152\n\n\nSudan\n1997\n331.38426\n\n\nSudan\n1998\n337.00084\n\n\nSudan\n1999\n338.92989\n\n\nSudan\n2000\n358.52920\n\n\nSudan\n2001\n371.77672\n\n\nSudan\n2002\n382.80494\n\n\nSudan\n2003\n400.89533\n\n\nSudan\n2004\n411.73054\n\n\nSudan\n2005\n427.45344\n\n\nSudan\n2006\n464.12887\n\n\nSudan\n2007\n498.57016\n\n\nSudan\n2008\n519.28266\n\n\nSudan\n2009\n536.56902\n\n\nSudan\n2010\n549.85700\n\n\nSudan\n2011\n561.84272\n\n\nSuriname\n1975\n2489.74780\n\n\nSuriname\n1976\n2416.74414\n\n\nSuriname\n1977\n2665.99854\n\n\nSuriname\n1978\n2859.73206\n\n\nSuriname\n1979\n2684.42452\n\n\nSuriname\n1980\n2536.23370\n\n\nSuriname\n1981\n2532.36337\n\n\nSuriname\n1982\n2477.32599\n\n\nSuriname\n1983\n2391.11579\n\n\nSuriname\n1984\n2283.22445\n\n\nSuriname\n1985\n2223.25966\n\n\nSuriname\n1986\n2121.69056\n\n\nSuriname\n1987\n1808.21326\n\n\nSuriname\n1988\n1927.81618\n\n\nSuriname\n1989\n2093.26764\n\n\nSuriname\n1990\n2049.59823\n\n\nSuriname\n1991\n2075.38403\n\n\nSuriname\n1992\n2042.45718\n\n\nSuriname\n1993\n1869.14761\n\n\nSuriname\n1994\n1904.52900\n\n\nSuriname\n1995\n1899.80310\n\n\nSuriname\n1996\n1897.92624\n\n\nSuriname\n1997\n1979.64318\n\n\nSuriname\n1998\n1983.02765\n\n\nSuriname\n1999\n1938.93548\n\n\nSuriname\n2000\n1911.04632\n\n\nSuriname\n2001\n1970.20538\n\n\nSuriname\n2002\n2036.51092\n\n\nSuriname\n2003\n2129.19340\n\n\nSuriname\n2004\n2284.29338\n\n\nSuriname\n2005\n2359.38409\n\n\nSuriname\n2006\n2422.81852\n\n\nSuriname\n2007\n2520.58674\n\n\nSuriname\n2008\n2599.89924\n\n\nSuriname\n2009\n2653.54919\n\n\nSuriname\n2010\n2737.33444\n\n\nSwaziland\n1970\n576.75207\n\n\nSwaziland\n1971\n637.60035\n\n\nSwaziland\n1972\n652.79171\n\n\nSwaziland\n1973\n690.71392\n\n\nSwaziland\n1974\n708.61362\n\n\nSwaziland\n1975\n782.94895\n\n\nSwaziland\n1976\n743.10270\n\n\nSwaziland\n1977\n727.56242\n\n\nSwaziland\n1978\n714.55732\n\n\nSwaziland\n1979\n714.36195\n\n\nSwaziland\n1980\n779.25244\n\n\nSwaziland\n1981\n867.52262\n\n\nSwaziland\n1982\n852.93515\n\n\nSwaziland\n1983\n838.04958\n\n\nSwaziland\n1984\n861.21019\n\n\nSwaziland\n1985\n861.86971\n\n\nSwaziland\n1986\n928.96801\n\n\nSwaziland\n1987\n1019.36633\n\n\nSwaziland\n1988\n1040.30912\n\n\nSwaziland\n1989\n1128.91525\n\n\nSwaziland\n1990\n1320.35317\n\n\nSwaziland\n1991\n1306.47386\n\n\nSwaziland\n1992\n1317.89708\n\n\nSwaziland\n1993\n1332.04656\n\n\nSwaziland\n1994\n1338.05017\n\n\nSwaziland\n1995\n1374.69088\n\n\nSwaziland\n1996\n1397.00226\n\n\nSwaziland\n1997\n1408.60095\n\n\nSwaziland\n1998\n1443.39055\n\n\nSwaziland\n1999\n1484.03862\n\n\nSwaziland\n2000\n1508.18366\n\n\nSwaziland\n2001\n1523.65080\n\n\nSwaziland\n2002\n1548.70019\n\n\nSwaziland\n2003\n1581.32038\n\n\nSwaziland\n2004\n1625.15597\n\n\nSwaziland\n2005\n1663.01050\n\n\nSwaziland\n2006\n1715.68461\n\n\nSwaziland\n2007\n1773.45659\n\n\nSwaziland\n2008\n1794.77906\n\n\nSwaziland\n2009\n1795.97974\n\n\nSwaziland\n2010\n1811.07776\n\n\nSwaziland\n2011\n1813.54491\n\n\nSweden\n1960\n11360.40555\n\n\nSweden\n1961\n11949.42691\n\n\nSweden\n1962\n12389.80300\n\n\nSweden\n1963\n12976.57219\n\n\nSweden\n1964\n13758.58574\n\n\nSweden\n1965\n14150.45858\n\n\nSweden\n1966\n14309.50716\n\n\nSweden\n1967\n14678.04613\n\n\nSweden\n1968\n15126.81892\n\n\nSweden\n1969\n15773.38235\n\n\nSweden\n1970\n16570.99947\n\n\nSweden\n1971\n16612.83045\n\n\nSweden\n1972\n16942.91432\n\n\nSweden\n1973\n17584.86983\n\n\nSweden\n1974\n18094.68770\n\n\nSweden\n1975\n18483.04552\n\n\nSweden\n1976\n18610.80738\n\n\nSweden\n1977\n18248.80351\n\n\nSweden\n1978\n18514.45750\n\n\nSweden\n1979\n19183.50474\n\n\nSweden\n1980\n19470.05511\n\n\nSweden\n1981\n19407.38509\n\n\nSweden\n1982\n19627.70865\n\n\nSweden\n1983\n19973.87646\n\n\nSweden\n1984\n20808.10527\n\n\nSweden\n1985\n21228.64280\n\n\nSweden\n1986\n21785.28900\n\n\nSweden\n1987\n22463.34910\n\n\nSweden\n1988\n22956.56184\n\n\nSweden\n1989\n23437.66378\n\n\nSweden\n1990\n23492.24960\n\n\nSweden\n1991\n23071.03438\n\n\nSweden\n1992\n22660.07708\n\n\nSweden\n1993\n22065.24441\n\n\nSweden\n1994\n22788.10617\n\n\nSweden\n1995\n23561.66995\n\n\nSweden\n1996\n23903.46322\n\n\nSweden\n1997\n24536.81457\n\n\nSweden\n1998\n25554.38629\n\n\nSweden\n1999\n26724.34561\n\n\nSweden\n2000\n27869.37760\n\n\nSweden\n2001\n28145.51174\n\n\nSweden\n2002\n28750.76384\n\n\nSweden\n2003\n29313.02109\n\n\nSweden\n2004\n30434.45290\n\n\nSweden\n2005\n31271.10358\n\n\nSweden\n2006\n32431.94040\n\n\nSweden\n2007\n33259.26285\n\n\nSweden\n2008\n32798.73425\n\n\nSweden\n2009\n30885.45914\n\n\nSweden\n2010\n32631.19271\n\n\nSweden\n2011\n33630.24604\n\n\nSwitzerland\n1980\n29182.93218\n\n\nSwitzerland\n1981\n29488.48571\n\n\nSwitzerland\n1982\n28932.81148\n\n\nSwitzerland\n1983\n28993.12919\n\n\nSwitzerland\n1984\n29758.31714\n\n\nSwitzerland\n1985\n30715.62587\n\n\nSwitzerland\n1986\n31124.12705\n\n\nSwitzerland\n1987\n31419.62061\n\n\nSwitzerland\n1988\n32211.81831\n\n\nSwitzerland\n1989\n33336.21789\n\n\nSwitzerland\n1990\n34208.11542\n\n\nSwitzerland\n1991\n33473.84170\n\n\nSwitzerland\n1992\n33092.33395\n\n\nSwitzerland\n1993\n32751.01216\n\n\nSwitzerland\n1994\n32903.52918\n\n\nSwitzerland\n1995\n32841.55514\n\n\nSwitzerland\n1996\n32855.30719\n\n\nSwitzerland\n1997\n33445.61911\n\n\nSwitzerland\n1998\n34258.14203\n\n\nSwitzerland\n1999\n34571.14850\n\n\nSwitzerland\n2000\n35639.47886\n\n\nSwitzerland\n2001\n35854.93258\n\n\nSwitzerland\n2002\n35650.68774\n\n\nSwitzerland\n2003\n35394.62871\n\n\nSwitzerland\n2004\n36003.23264\n\n\nSwitzerland\n2005\n36737.40672\n\n\nSwitzerland\n2006\n37877.18249\n\n\nSwitzerland\n2007\n38983.87532\n\n\nSwitzerland\n2008\n39324.73112\n\n\nSwitzerland\n2009\n38084.23568\n\n\nSwitzerland\n2010\n38826.84298\n\n\nSwitzerland\n2011\n39170.41371\n\n\nSyria\n1960\n482.49688\n\n\nSyria\n1961\n517.75412\n\n\nSyria\n1962\n624.12156\n\n\nSyria\n1963\n551.80754\n\n\nSyria\n1964\n583.44845\n\n\nSyria\n1965\n577.36763\n\n\nSyria\n1966\n515.59512\n\n\nSyria\n1967\n539.69089\n\n\nSyria\n1968\n541.19725\n\n\nSyria\n1969\n621.31993\n\n\nSyria\n1970\n577.67638\n\n\nSyria\n1971\n613.66940\n\n\nSyria\n1972\n741.48522\n\n\nSyria\n1973\n655.39724\n\n\nSyria\n1974\n786.44778\n\n\nSyria\n1975\n908.99581\n\n\nSyria\n1976\n975.79096\n\n\nSyria\n1977\n932.30450\n\n\nSyria\n1978\n980.97264\n\n\nSyria\n1979\n983.38762\n\n\nSyria\n1980\n1064.55368\n\n\nSyria\n1981\n1126.17302\n\n\nSyria\n1982\n1110.56235\n\n\nSyria\n1983\n1087.81751\n\n\nSyria\n1984\n1008.40395\n\n\nSyria\n1985\n1035.09963\n\n\nSyria\n1986\n952.81159\n\n\nSyria\n1987\n941.21418\n\n\nSyria\n1988\n1034.20013\n\n\nSyria\n1989\n913.87859\n\n\nSyria\n1990\n955.14317\n\n\nSyria\n1991\n1000.88211\n\n\nSyria\n1992\n1103.25563\n\n\nSyria\n1993\n1127.98070\n\n\nSyria\n1994\n1181.72060\n\n\nSyria\n1995\n1217.76635\n\n\nSyria\n1996\n1240.90044\n\n\nSyria\n1997\n1234.52893\n\n\nSyria\n1998\n1283.06708\n\n\nSyria\n1999\n1207.87042\n\n\nSyria\n2000\n1208.73464\n\n\nSyria\n2001\n1235.55850\n\n\nSyria\n2002\n1269.27183\n\n\nSyria\n2003\n1238.39958\n\n\nSyria\n2004\n1286.00502\n\n\nSyria\n2005\n1330.32141\n\n\nSyria\n2006\n1368.93049\n\n\nSyria\n2007\n1418.05115\n\n\nSyria\n2008\n1452.25769\n\n\nSyria\n2009\n1508.63803\n\n\nSyria\n2010\n1525.80929\n\n\nTajikistan\n1985\n457.07332\n\n\nTajikistan\n1986\n458.35039\n\n\nTajikistan\n1987\n438.49556\n\n\nTajikistan\n1988\n484.00792\n\n\nTajikistan\n1989\n439.65769\n\n\nTajikistan\n1990\n426.07051\n\n\nTajikistan\n1991\n387.37299\n\n\nTajikistan\n1992\n270.03967\n\n\nTajikistan\n1993\n222.17435\n\n\nTajikistan\n1994\n172.27313\n\n\nTajikistan\n1995\n148.72787\n\n\nTajikistan\n1996\n122.09485\n\n\nTajikistan\n1997\n122.39836\n\n\nTajikistan\n1998\n127.12154\n\n\nTajikistan\n1999\n130.17099\n\n\nTajikistan\n2000\n139.40988\n\n\nTajikistan\n2001\n152.15615\n\n\nTajikistan\n2002\n164.59682\n\n\nTajikistan\n2003\n179.92827\n\n\nTajikistan\n2004\n197.30694\n\n\nTajikistan\n2005\n215.89707\n\n\nTajikistan\n2006\n180.08927\n\n\nTajikistan\n2007\n216.54458\n\n\nTajikistan\n2008\n259.13765\n\n\nTajikistan\n2009\n265.59342\n\n\nTajikistan\n2010\n278.94033\n\n\nTajikistan\n2011\n295.36013\n\n\nTanzania\n1988\n291.99732\n\n\nTanzania\n1989\n293.77993\n\n\nTanzania\n1990\n304.64055\n\n\nTanzania\n1991\n300.90491\n\n\nTanzania\n1992\n292.69043\n\n\nTanzania\n1993\n286.53949\n\n\nTanzania\n1994\n281.91887\n\n\nTanzania\n1995\n283.42592\n\n\nTanzania\n1996\n288.24521\n\n\nTanzania\n1997\n290.78198\n\n\nTanzania\n1998\n294.17197\n\n\nTanzania\n1999\n300.91892\n\n\nTanzania\n2000\n307.98615\n\n\nTanzania\n2001\n318.26279\n\n\nTanzania\n2002\n332.37112\n\n\nTanzania\n2003\n346.07243\n\n\nTanzania\n2004\n363.34747\n\n\nTanzania\n2005\n379.68413\n\n\nTanzania\n2006\n394.22416\n\n\nTanzania\n2007\n410.68362\n\n\nTanzania\n2008\n428.75916\n\n\nTanzania\n2009\n441.50661\n\n\nTanzania\n2010\n458.78646\n\n\nTanzania\n2011\n473.88124\n\n\nThailand\n1960\n320.90651\n\n\nThailand\n1961\n328.05744\n\n\nThailand\n1962\n342.29366\n\n\nThailand\n1963\n358.59400\n\n\nThailand\n1964\n371.59169\n\n\nThailand\n1965\n389.93892\n\n\nThailand\n1966\n420.36684\n\n\nThailand\n1967\n443.03455\n\n\nThailand\n1968\n464.90661\n\n\nThailand\n1969\n480.88334\n\n\nThailand\n1970\n520.23595\n\n\nThailand\n1971\n530.06563\n\n\nThailand\n1972\n537.12576\n\n\nThailand\n1973\n575.76973\n\n\nThailand\n1974\n585.47241\n\n\nThailand\n1975\n598.92447\n\n\nThailand\n1976\n638.89863\n\n\nThailand\n1977\n685.53051\n\n\nThailand\n1978\n739.31344\n\n\nThailand\n1979\n762.30741\n\n\nThailand\n1980\n785.02342\n\n\nThailand\n1981\n814.62106\n\n\nThailand\n1982\n841.51329\n\n\nThailand\n1983\n871.62256\n\n\nThailand\n1984\n904.41301\n\n\nThailand\n1985\n928.67397\n\n\nThailand\n1986\n961.48725\n\n\nThailand\n1987\n1033.08454\n\n\nThailand\n1988\n1149.18400\n\n\nThailand\n1989\n1268.32882\n\n\nThailand\n1990\n1390.52021\n\n\nThailand\n1991\n1492.79858\n\n\nThailand\n1992\n1599.21165\n\n\nThailand\n1993\n1718.02693\n\n\nThailand\n1994\n1858.00396\n\n\nThailand\n1995\n2011.82540\n\n\nThailand\n1996\n2109.05461\n\n\nThailand\n1997\n2057.06691\n\n\nThailand\n1998\n1819.17618\n\n\nThailand\n1999\n1877.30520\n\n\nThailand\n2000\n1943.23793\n\n\nThailand\n2001\n1962.24144\n\n\nThailand\n2002\n2042.79830\n\n\nThailand\n2003\n2164.30142\n\n\nThailand\n2004\n2277.56234\n\n\nThailand\n2005\n2359.64461\n\n\nThailand\n2006\n2458.51743\n\n\nThailand\n2007\n2562.72216\n\n\nThailand\n2008\n2608.24726\n\n\nThailand\n2009\n2531.23373\n\n\nThailand\n2010\n2712.50802\n\n\nThailand\n2011\n2699.12324\n\n\nTimor-Leste\n1999\n337.87312\n\n\nTimor-Leste\n2000\n380.92301\n\n\nTimor-Leste\n2001\n324.80100\n\n\nTimor-Leste\n2002\n319.33377\n\n\nTimor-Leste\n2003\n304.83484\n\n\nTimor-Leste\n2004\n303.58595\n\n\nTimor-Leste\n2005\n319.49142\n\n\nTimor-Leste\n2006\n299.88568\n\n\nTimor-Leste\n2007\n324.63643\n\n\nTimor-Leste\n2008\n361.13866\n\n\nTimor-Leste\n2009\n395.44428\n\n\nTimor-Leste\n2010\n420.60325\n\n\nTimor-Leste\n2011\n451.98260\n\n\nTogo\n1960\n176.56990\n\n\nTogo\n1961\n196.07513\n\n\nTogo\n1962\n201.69262\n\n\nTogo\n1963\n209.46304\n\n\nTogo\n1964\n235.19695\n\n\nTogo\n1965\n264.35310\n\n\nTogo\n1966\n278.76221\n\n\nTogo\n1967\n281.38161\n\n\nTogo\n1968\n281.98048\n\n\nTogo\n1969\n299.02320\n\n\nTogo\n1970\n295.08141\n\n\nTogo\n1971\n285.80625\n\n\nTogo\n1972\n299.34393\n\n\nTogo\n1973\n303.55080\n\n\nTogo\n1974\n311.31360\n\n\nTogo\n1975\n312.11966\n\n\nTogo\n1976\n299.36705\n\n\nTogo\n1977\n313.72329\n\n\nTogo\n1978\n341.02901\n\n\nTogo\n1979\n315.77899\n\n\nTogo\n1980\n352.04107\n\n\nTogo\n1981\n329.94938\n\n\nTogo\n1982\n307.49398\n\n\nTogo\n1983\n280.69134\n\n\nTogo\n1984\n285.98725\n\n\nTogo\n1985\n291.76798\n\n\nTogo\n1986\n286.82232\n\n\nTogo\n1987\n279.24995\n\n\nTogo\n1988\n288.93993\n\n\nTogo\n1989\n292.41240\n\n\nTogo\n1990\n284.42841\n\n\nTogo\n1991\n276.23967\n\n\nTogo\n1992\n260.05033\n\n\nTogo\n1993\n216.54943\n\n\nTogo\n1994\n243.66142\n\n\nTogo\n1995\n256.17380\n\n\nTogo\n1996\n270.64537\n\n\nTogo\n1997\n299.54934\n\n\nTogo\n1998\n282.85153\n\n\nTogo\n1999\n280.48582\n\n\nTogo\n2000\n270.00088\n\n\nTogo\n2001\n258.45689\n\n\nTogo\n2002\n249.74753\n\n\nTogo\n2003\n256.07108\n\n\nTogo\n2004\n255.66143\n\n\nTogo\n2005\n252.95035\n\n\nTogo\n2006\n257.40072\n\n\nTogo\n2007\n257.57179\n\n\nTogo\n2008\n258.03860\n\n\nTogo\n2009\n261.05404\n\n\nTogo\n2010\n265.92205\n\n\nTogo\n2011\n273.10751\n\n\nTonga\n1981\n1294.40562\n\n\nTonga\n1982\n1352.44782\n\n\nTonga\n1983\n1377.89093\n\n\nTonga\n1984\n1400.90288\n\n\nTonga\n1985\n1490.95308\n\n\nTonga\n1986\n1519.38742\n\n\nTonga\n1987\n1560.55703\n\n\nTonga\n1988\n1526.62852\n\n\nTonga\n1989\n1528.31915\n\n\nTonga\n1990\n1493.74332\n\n\nTonga\n1991\n1586.98089\n\n\nTonga\n1992\n1588.96247\n\n\nTonga\n1993\n1646.37439\n\n\nTonga\n1994\n1725.20291\n\n\nTonga\n1995\n1785.21065\n\n\nTonga\n1996\n1780.02921\n\n\nTonga\n1997\n1771.15074\n\n\nTonga\n1998\n1811.51858\n\n\nTonga\n1999\n1872.85520\n\n\nTonga\n2000\n1926.00458\n\n\nTonga\n2001\n1984.41292\n\n\nTonga\n2002\n2040.24819\n\n\nTonga\n2003\n2071.57331\n\n\nTonga\n2004\n2078.98027\n\n\nTonga\n2005\n2115.02707\n\n\nTonga\n2006\n2067.53571\n\n\nTonga\n2007\n1969.00405\n\n\nTonga\n2008\n1980.44925\n\n\nTonga\n2009\n2025.50905\n\n\nTonga\n2010\n2069.22616\n\n\nTonga\n2011\n2162.15189\n\n\nTrinidad and Tobago\n1960\n3342.31241\n\n\nTrinidad and Tobago\n1961\n3744.35620\n\n\nTrinidad and Tobago\n1962\n3799.69674\n\n\nTrinidad and Tobago\n1963\n3975.40219\n\n\nTrinidad and Tobago\n1964\n4238.36114\n\n\nTrinidad and Tobago\n1965\n4217.63507\n\n\nTrinidad and Tobago\n1966\n4323.83511\n\n\nTrinidad and Tobago\n1967\n4337.56426\n\n\nTrinidad and Tobago\n1968\n4483.75670\n\n\nTrinidad and Tobago\n1969\n4532.10072\n\n\nTrinidad and Tobago\n1970\n4629.75863\n\n\nTrinidad and Tobago\n1971\n4629.97580\n\n\nTrinidad and Tobago\n1972\n4858.50009\n\n\nTrinidad and Tobago\n1973\n4905.13354\n\n\nTrinidad and Tobago\n1974\n5054.70744\n\n\nTrinidad and Tobago\n1975\n5083.81166\n\n\nTrinidad and Tobago\n1976\n5352.20171\n\n\nTrinidad and Tobago\n1977\n5770.83906\n\n\nTrinidad and Tobago\n1978\n6264.43666\n\n\nTrinidad and Tobago\n1979\n6394.87453\n\n\nTrinidad and Tobago\n1980\n6947.65572\n\n\nTrinidad and Tobago\n1981\n7140.71218\n\n\nTrinidad and Tobago\n1982\n7293.32448\n\n\nTrinidad and Tobago\n1983\n6502.53881\n\n\nTrinidad and Tobago\n1984\n6028.60687\n\n\nTrinidad and Tobago\n1985\n5702.01109\n\n\nTrinidad and Tobago\n1986\n5457.89117\n\n\nTrinidad and Tobago\n1987\n5168.99244\n\n\nTrinidad and Tobago\n1988\n4937.16123\n\n\nTrinidad and Tobago\n1989\n4869.14458\n\n\nTrinidad and Tobago\n1990\n4911.86387\n\n\nTrinidad and Tobago\n1991\n5007.58834\n\n\nTrinidad and Tobago\n1992\n4887.09890\n\n\nTrinidad and Tobago\n1993\n4778.18869\n\n\nTrinidad and Tobago\n1994\n4911.22671\n\n\nTrinidad and Tobago\n1995\n5071.28556\n\n\nTrinidad and Tobago\n1996\n5240.65586\n\n\nTrinidad and Tobago\n1997\n5354.49782\n\n\nTrinidad and Tobago\n1998\n5743.76619\n\n\nTrinidad and Tobago\n1999\n5970.32724\n\n\nTrinidad and Tobago\n2000\n6311.10655\n\n\nTrinidad and Tobago\n2001\n6544.68383\n\n\nTrinidad and Tobago\n2002\n7044.08974\n\n\nTrinidad and Tobago\n2003\n8033.09612\n\n\nTrinidad and Tobago\n2004\n8637.57330\n\n\nTrinidad and Tobago\n2005\n9102.42202\n\n\nTrinidad and Tobago\n2006\n10264.67428\n\n\nTrinidad and Tobago\n2007\n10714.74422\n\n\nTrinidad and Tobago\n2008\n10959.66371\n\n\nTrinidad and Tobago\n2009\n10555.89147\n\n\nTrinidad and Tobago\n2010\n10515.63403\n\n\nTrinidad and Tobago\n2011\n10047.90319\n\n\nTunisia\n1961\n691.45176\n\n\nTunisia\n1962\n712.48394\n\n\nTunisia\n1963\n782.71691\n\n\nTunisia\n1964\n804.04150\n\n\nTunisia\n1965\n807.29933\n\n\nTunisia\n1966\n817.29208\n\n\nTunisia\n1967\n801.41857\n\n\nTunisia\n1968\n866.86999\n\n\nTunisia\n1969\n890.32602\n\n\nTunisia\n1970\n914.49007\n\n\nTunisia\n1971\n995.30755\n\n\nTunisia\n1972\n1152.82819\n\n\nTunisia\n1973\n1125.22150\n\n\nTunisia\n1974\n1192.83517\n\n\nTunisia\n1975\n1251.47952\n\n\nTunisia\n1976\n1319.17826\n\n\nTunisia\n1977\n1330.04621\n\n\nTunisia\n1978\n1378.30055\n\n\nTunisia\n1979\n1429.55789\n\n\nTunisia\n1980\n1495.12759\n\n\nTunisia\n1981\n1536.37276\n\n\nTunisia\n1982\n1489.25785\n\n\nTunisia\n1983\n1519.25742\n\n\nTunisia\n1984\n1575.24925\n\n\nTunisia\n1985\n1614.30151\n\n\nTunisia\n1986\n1541.62353\n\n\nTunisia\n1987\n1603.81011\n\n\nTunisia\n1988\n1569.65811\n\n\nTunisia\n1989\n1576.79246\n\n\nTunisia\n1990\n1661.29315\n\n\nTunisia\n1991\n1692.16798\n\n\nTunisia\n1992\n1787.36026\n\n\nTunisia\n1993\n1791.16198\n\n\nTunisia\n1994\n1814.96877\n\n\nTunisia\n1995\n1828.18145\n\n\nTunisia\n1996\n1930.42070\n\n\nTunisia\n1997\n2007.68857\n\n\nTunisia\n1998\n2080.66449\n\n\nTunisia\n1999\n2177.26883\n\n\nTunisia\n2000\n2245.33506\n\n\nTunisia\n2001\n2327.43762\n\n\nTunisia\n2002\n2340.80591\n\n\nTunisia\n2003\n2454.33508\n\n\nTunisia\n2004\n2576.34391\n\n\nTunisia\n2005\n2653.59347\n\n\nTunisia\n2006\n2776.25706\n\n\nTunisia\n2007\n2921.99358\n\n\nTunisia\n2008\n3023.39805\n\n\nTunisia\n2009\n3083.98651\n\n\nTunisia\n2010\n3143.53387\n\n\nTunisia\n2011\n3050.88600\n\n\nTurkey\n1960\n1582.56869\n\n\nTurkey\n1961\n1560.20947\n\n\nTurkey\n1962\n1606.04685\n\n\nTurkey\n1963\n1708.96032\n\n\nTurkey\n1964\n1759.62240\n\n\nTurkey\n1965\n1767.92453\n\n\nTurkey\n1966\n1922.77894\n\n\nTurkey\n1967\n1970.69387\n\n\nTurkey\n1968\n2060.04573\n\n\nTurkey\n1969\n2099.08704\n\n\nTurkey\n1970\n2120.94904\n\n\nTurkey\n1971\n2190.73634\n\n\nTurkey\n1972\n2302.07124\n\n\nTurkey\n1973\n2325.04821\n\n\nTurkey\n1974\n2401.52629\n\n\nTurkey\n1975\n2518.19407\n\n\nTurkey\n1976\n2722.41998\n\n\nTurkey\n1977\n2755.91419\n\n\nTurkey\n1978\n2738.35266\n\n\nTurkey\n1979\n2662.81461\n\n\nTurkey\n1980\n2540.36316\n\n\nTurkey\n1981\n2603.25266\n\n\nTurkey\n1982\n2633.68531\n\n\nTurkey\n1983\n2701.01417\n\n\nTurkey\n1984\n2818.23960\n\n\nTurkey\n1985\n2875.98471\n\n\nTurkey\n1986\n3016.94940\n\n\nTurkey\n1987\n3241.65165\n\n\nTurkey\n1988\n3257.91828\n\n\nTurkey\n1989\n3210.73014\n\n\nTurkey\n1990\n3448.00141\n\n\nTurkey\n1991\n3413.64447\n\n\nTurkey\n1992\n3525.16356\n\n\nTurkey\n1993\n3731.73200\n\n\nTurkey\n1994\n3499.09116\n\n\nTurkey\n1995\n3713.62264\n\n\nTurkey\n1996\n3923.86090\n\n\nTurkey\n1997\n4154.44294\n\n\nTurkey\n1998\n4184.28783\n\n\nTurkey\n1999\n3982.20391\n\n\nTurkey\n2000\n4189.47806\n\n\nTurkey\n2001\n3894.65092\n\n\nTurkey\n2002\n4077.77237\n\n\nTurkey\n2003\n4234.67918\n\n\nTurkey\n2004\n4569.41421\n\n\nTurkey\n2005\n4887.37038\n\n\nTurkey\n2006\n5154.66110\n\n\nTurkey\n2007\n5323.68299\n\n\nTurkey\n2008\n5288.41609\n\n\nTurkey\n2009\n4968.57902\n\n\nTurkey\n2010\n5356.00044\n\n\nTurkey\n2011\n5741.41040\n\n\nTurkmenistan\n1987\n756.76242\n\n\nTurkmenistan\n1988\n819.35241\n\n\nTurkmenistan\n1989\n764.38950\n\n\nTurkmenistan\n1990\n1007.37370\n\n\nTurkmenistan\n1991\n934.39901\n\n\nTurkmenistan\n1992\n772.11949\n\n\nTurkmenistan\n1993\n762.11686\n\n\nTurkmenistan\n1994\n614.32913\n\n\nTurkmenistan\n1995\n557.50580\n\n\nTurkmenistan\n1996\n583.75232\n\n\nTurkmenistan\n1997\n509.05749\n\n\nTurkmenistan\n1998\n537.84464\n\n\nTurkmenistan\n1999\n618.96560\n\n\nTurkmenistan\n2000\n645.27710\n\n\nTurkmenistan\n2001\n665.86375\n\n\nTurkmenistan\n2002\n660.55868\n\n\nTurkmenistan\n2003\n675.13306\n\n\nTurkmenistan\n2004\n701.51808\n\n\nTurkmenistan\n2005\n784.46905\n\n\nTurkmenistan\n2006\n860.71168\n\n\nTurkmenistan\n2007\n944.66924\n\n\nTurkmenistan\n2008\n1070.41593\n\n\nTurkmenistan\n2009\n1121.73612\n\n\nTurkmenistan\n2010\n1209.79468\n\n\nTurkmenistan\n2011\n1370.42776\n\n\nTuvalu\n1990\n1128.07758\n\n\nTuvalu\n1991\n1162.08202\n\n\nTuvalu\n1992\n1188.32207\n\n\nTuvalu\n1993\n1231.08483\n\n\nTuvalu\n1994\n1351.77163\n\n\nTuvalu\n1995\n1278.69626\n\n\nTuvalu\n1996\n1197.66638\n\n\nTuvalu\n1997\n1312.65270\n\n\nTuvalu\n1998\n1510.28124\n\n\nTuvalu\n1999\n1480.32236\n\n\nTuvalu\n2000\n1458.94963\n\n\nTuvalu\n2001\n1474.64829\n\n\nTuvalu\n2002\n1581.09093\n\n\nTuvalu\n2003\n1518.82500\n\n\nTuvalu\n2004\n1489.58840\n\n\nTuvalu\n2005\n1426.19134\n\n\nTuvalu\n2006\n1457.39472\n\n\nTuvalu\n2007\n1540.39023\n\n\nTuvalu\n2008\n1643.08891\n\n\nTuvalu\n2009\n1611.69497\n\n\nTuvalu\n2010\n1559.98370\n\n\nTuvalu\n2011\n1576.21187\n\n\nUganda\n1982\n187.80275\n\n\nUganda\n1983\n192.59717\n\n\nUganda\n1984\n185.91594\n\n\nUganda\n1985\n173.86579\n\n\nUganda\n1986\n168.54732\n\n\nUganda\n1987\n169.01235\n\n\nUganda\n1988\n176.42107\n\n\nUganda\n1989\n180.98983\n\n\nUganda\n1990\n186.05187\n\n\nUganda\n1991\n189.79100\n\n\nUganda\n1992\n189.84149\n\n\nUganda\n1993\n199.06479\n\n\nUganda\n1994\n205.18864\n\n\nUganda\n1995\n221.82840\n\n\nUganda\n1996\n234.71339\n\n\nUganda\n1997\n239.44051\n\n\nUganda\n1998\n243.84862\n\n\nUganda\n1999\n255.70444\n\n\nUganda\n2000\n255.78061\n\n\nUganda\n2001\n260.73633\n\n\nUganda\n2002\n274.60054\n\n\nUganda\n2003\n283.07830\n\n\nUganda\n2004\n292.68051\n\n\nUganda\n2005\n301.25830\n\n\nUganda\n2006\n323.07740\n\n\nUganda\n2007\n339.06208\n\n\nUganda\n2008\n356.83518\n\n\nUganda\n2009\n370.53613\n\n\nUganda\n2010\n379.99149\n\n\nUganda\n2011\n392.70880\n\n\nUkraine\n1987\n1405.89926\n\n\nUkraine\n1988\n1435.59984\n\n\nUkraine\n1989\n1483.94382\n\n\nUkraine\n1990\n1386.59701\n\n\nUkraine\n1991\n1267.32618\n\n\nUkraine\n1992\n1141.12104\n\n\nUkraine\n1993\n978.24101\n\n\nUkraine\n1994\n757.63936\n\n\nUkraine\n1995\n670.48569\n\n\nUkraine\n1996\n608.81599\n\n\nUkraine\n1997\n595.95678\n\n\nUkraine\n1998\n589.88214\n\n\nUkraine\n1999\n594.27955\n\n\nUkraine\n2000\n635.70897\n\n\nUkraine\n2001\n701.20949\n\n\nUkraine\n2002\n745.03900\n\n\nUkraine\n2003\n821.71337\n\n\nUkraine\n2004\n928.15529\n\n\nUkraine\n2005\n960.22621\n\n\nUkraine\n2006\n1037.31226\n\n\nUkraine\n2007\n1125.95971\n\n\nUkraine\n2008\n1158.11056\n\n\nUkraine\n2009\n991.10026\n\n\nUkraine\n2010\n1036.83751\n\n\nUkraine\n2011\n1094.68115\n\n\nUnited Arab Emirates\n1975\n56037.96028\n\n\nUnited Arab Emirates\n1976\n55799.56212\n\n\nUnited Arab Emirates\n1977\n58384.48049\n\n\nUnited Arab Emirates\n1978\n50264.17041\n\n\nUnited Arab Emirates\n1979\n54290.68681\n\n\nUnited Arab Emirates\n1980\n61374.75455\n\n\nUnited Arab Emirates\n1981\n59768.83021\n\n\nUnited Arab Emirates\n1982\n52612.68886\n\n\nUnited Arab Emirates\n1983\n47658.01257\n\n\nUnited Arab Emirates\n1984\n47169.81578\n\n\nUnited Arab Emirates\n1985\n43114.96994\n\n\nUnited Arab Emirates\n1986\n34618.24214\n\n\nUnited Arab Emirates\n1987\n33712.77422\n\n\nUnited Arab Emirates\n1988\n30904.90995\n\n\nUnited Arab Emirates\n1989\n32727.85574\n\n\nUnited Arab Emirates\n1990\n36597.66911\n\n\nUnited Arab Emirates\n1991\n34957.04687\n\n\nUnited Arab Emirates\n1992\n34255.84156\n\n\nUnited Arab Emirates\n1993\n32928.56677\n\n\nUnited Arab Emirates\n1994\n33445.28092\n\n\nUnited Arab Emirates\n1995\n33926.34050\n\n\nUnited Arab Emirates\n1996\n34073.53549\n\n\nUnited Arab Emirates\n1997\n34921.61401\n\n\nUnited Arab Emirates\n1998\n33194.71587\n\n\nUnited Arab Emirates\n1999\n32489.23039\n\n\nUnited Arab Emirates\n2000\n34395.14913\n\n\nUnited Arab Emirates\n2001\n33592.36688\n\n\nUnited Arab Emirates\n2002\n33297.06929\n\n\nUnited Arab Emirates\n2003\n34669.32855\n\n\nUnited Arab Emirates\n2004\n35316.33901\n\n\nUnited Arab Emirates\n2005\n33288.11139\n\n\nUnited Arab Emirates\n2006\n31929.79817\n\n\nUnited Arab Emirates\n2007\n28427.09848\n\n\nUnited Arab Emirates\n2008\n25573.73175\n\n\nUnited Arab Emirates\n2009\n22507.00157\n\n\nUnited Arab Emirates\n2010\n21088.26438\n\n\nUnited Arab Emirates\n2011\n21058.43643\n\n\nUnited Kingdom\n1960\n10025.34940\n\n\nUnited Kingdom\n1961\n10205.45454\n\n\nUnited Kingdom\n1962\n10253.59370\n\n\nUnited Kingdom\n1963\n10579.77809\n\n\nUnited Kingdom\n1964\n11040.78967\n\n\nUnited Kingdom\n1965\n11276.03650\n\n\nUnited Kingdom\n1966\n11443.85302\n\n\nUnited Kingdom\n1967\n11645.43154\n\n\nUnited Kingdom\n1968\n12050.66964\n\n\nUnited Kingdom\n1969\n12246.97375\n\n\nUnited Kingdom\n1970\n13042.15454\n\n\nUnited Kingdom\n1971\n13248.14066\n\n\nUnited Kingdom\n1972\n13682.09848\n\n\nUnited Kingdom\n1973\n14654.40265\n\n\nUnited Kingdom\n1974\n14399.17009\n\n\nUnited Kingdom\n1975\n14302.76811\n\n\nUnited Kingdom\n1976\n14707.52972\n\n\nUnited Kingdom\n1977\n15060.07028\n\n\nUnited Kingdom\n1978\n15571.78611\n\n\nUnited Kingdom\n1979\n15985.15790\n\n\nUnited Kingdom\n1980\n15618.14742\n\n\nUnited Kingdom\n1981\n15406.08218\n\n\nUnited Kingdom\n1982\n15734.18065\n\n\nUnited Kingdom\n1983\n16298.88277\n\n\nUnited Kingdom\n1984\n16707.75076\n\n\nUnited Kingdom\n1985\n17269.88771\n\n\nUnited Kingdom\n1986\n17921.25699\n\n\nUnited Kingdom\n1987\n18699.03581\n\n\nUnited Kingdom\n1988\n19596.42538\n\n\nUnited Kingdom\n1989\n19991.39969\n\n\nUnited Kingdom\n1990\n20087.04974\n\n\nUnited Kingdom\n1991\n19746.19063\n\n\nUnited Kingdom\n1992\n19721.73864\n\n\nUnited Kingdom\n1993\n20111.73115\n\n\nUnited Kingdom\n1994\n20919.22294\n\n\nUnited Kingdom\n1995\n21498.79017\n\n\nUnited Kingdom\n1996\n22061.54938\n\n\nUnited Kingdom\n1997\n22732.53847\n\n\nUnited Kingdom\n1998\n23463.03804\n\n\nUnited Kingdom\n1999\n24125.47891\n\n\nUnited Kingdom\n2000\n25057.61353\n\n\nUnited Kingdom\n2001\n25686.65028\n\n\nUnited Kingdom\n2002\n26214.96735\n\n\nUnited Kingdom\n2003\n27105.18271\n\n\nUnited Kingdom\n2004\n27752.91158\n\n\nUnited Kingdom\n2005\n28354.03958\n\n\nUnited Kingdom\n2006\n28913.09629\n\n\nUnited Kingdom\n2007\n29771.30335\n\n\nUnited Kingdom\n2008\n29287.76042\n\n\nUnited Kingdom\n2009\n27933.77767\n\n\nUnited Kingdom\n2010\n28244.33694\n\n\nUnited Kingdom\n2011\n28272.40661\n\n\nUnited States\n1960\n13723.23778\n\n\nUnited States\n1961\n13808.06402\n\n\nUnited States\n1962\n14426.75771\n\n\nUnited States\n1963\n14846.32706\n\n\nUnited States\n1964\n15490.73916\n\n\nUnited States\n1965\n16277.37401\n\n\nUnited States\n1966\n17136.34957\n\n\nUnited States\n1967\n17374.53648\n\n\nUnited States\n1968\n18027.61393\n\n\nUnited States\n1969\n18405.71964\n\n\nUnited States\n1970\n18228.92179\n\n\nUnited States\n1971\n18622.33742\n\n\nUnited States\n1972\n19441.37991\n\n\nUnited States\n1973\n20394.98709\n\n\nUnited States\n1974\n20104.54175\n\n\nUnited States\n1975\n19868.26519\n\n\nUnited States\n1976\n20746.79894\n\n\nUnited States\n1977\n21491.82018\n\n\nUnited States\n1978\n22461.78537\n\n\nUnited States\n1979\n22914.55504\n\n\nUnited States\n1980\n22630.52015\n\n\nUnited States\n1981\n22978.98471\n\n\nUnited States\n1982\n22310.23937\n\n\nUnited States\n1983\n23105.52073\n\n\nUnited States\n1984\n24554.40288\n\n\nUnited States\n1985\n25338.55564\n\n\nUnited States\n1986\n25965.88342\n\n\nUnited States\n1987\n26549.87602\n\n\nUnited States\n1988\n27388.61802\n\n\nUnited States\n1989\n28098.40072\n\n\nUnited States\n1990\n28298.44695\n\n\nUnited States\n1991\n27849.88084\n\n\nUnited States\n1992\n28401.46518\n\n\nUnited States\n1993\n28834.55935\n\n\nUnited States\n1994\n29655.06941\n\n\nUnited States\n1995\n30050.98673\n\n\nUnited States\n1996\n30827.98820\n\n\nUnited States\n1997\n31831.46159\n\n\nUnited States\n1998\n32847.35197\n\n\nUnited States\n1999\n34053.35541\n\n\nUnited States\n2000\n35081.92308\n\n\nUnited States\n2001\n35116.21508\n\n\nUnited States\n2002\n35427.90996\n\n\nUnited States\n2003\n36021.31408\n\n\nUnited States\n2004\n36931.39383\n\n\nUnited States\n2005\n37718.00537\n\n\nUnited States\n2006\n38349.39879\n\n\nUnited States\n2007\n38710.88544\n\n\nUnited States\n2008\n38208.76118\n\n\nUnited States\n2009\n36539.22823\n\n\nUnited States\n2010\n37329.61591\n\n\nUnited States\n2011\n37691.02733\n\n\nUruguay\n1960\n4182.11844\n\n\nUruguay\n1961\n4231.30037\n\n\nUruguay\n1962\n4113.19148\n\n\nUruguay\n1963\n4071.37568\n\n\nUruguay\n1964\n4123.41339\n\n\nUruguay\n1965\n4121.47253\n\n\nUruguay\n1966\n4203.50806\n\n\nUruguay\n1967\n4009.71521\n\n\nUruguay\n1968\n4049.12641\n\n\nUruguay\n1969\n4255.51046\n\n\nUruguay\n1970\n4331.94544\n\n\nUruguay\n1971\n4308.06716\n\n\nUruguay\n1972\n4246.46119\n\n\nUruguay\n1973\n4257.19208\n\n\nUruguay\n1974\n4377.41303\n\n\nUruguay\n1975\n4634.34476\n\n\nUruguay\n1976\n4797.71954\n\n\nUruguay\n1977\n4840.95443\n\n\nUruguay\n1978\n5067.76398\n\n\nUruguay\n1979\n5344.76745\n\n\nUruguay\n1980\n5618.84808\n\n\nUruguay\n1981\n5669.09231\n\n\nUruguay\n1982\n5082.62370\n\n\nUruguay\n1983\n4531.00801\n\n\nUruguay\n1984\n4450.49613\n\n\nUruguay\n1985\n4486.83472\n\n\nUruguay\n1986\n4851.20855\n\n\nUruguay\n1987\n5206.31287\n\n\nUruguay\n1988\n5250.33356\n\n\nUruguay\n1989\n5274.00940\n\n\nUruguay\n1990\n5253.94290\n\n\nUruguay\n1991\n5401.61702\n\n\nUruguay\n1992\n5788.05762\n\n\nUruguay\n1993\n5898.52906\n\n\nUruguay\n1994\n6281.93635\n\n\nUruguay\n1995\n6146.71103\n\n\nUruguay\n1996\n6465.20661\n\n\nUruguay\n1997\n6973.36359\n\n\nUruguay\n1998\n7249.30977\n\n\nUruguay\n1999\n7076.21688\n\n\nUruguay\n2000\n6914.36258\n\n\nUruguay\n2001\n6633.47517\n\n\nUruguay\n2002\n6120.25944\n\n\nUruguay\n2003\n6178.85860\n\n\nUruguay\n2004\n6491.61055\n\n\nUruguay\n2005\n6967.47128\n\n\nUruguay\n2006\n7233.90619\n\n\nUruguay\n2007\n7685.22450\n\n\nUruguay\n2008\n8211.66178\n\n\nUruguay\n2009\n8382.82902\n\n\nUruguay\n2010\n9096.79446\n\n\nUruguay\n2011\n9581.05659\n\n\nUzbekistan\n1987\n643.35572\n\n\nUzbekistan\n1988\n685.43977\n\n\nUzbekistan\n1989\n689.95474\n\n\nUzbekistan\n1990\n684.72220\n\n\nUzbekistan\n1991\n666.97965\n\n\nUzbekistan\n1992\n578.55411\n\n\nUzbekistan\n1993\n552.54721\n\n\nUzbekistan\n1994\n513.63200\n\n\nUzbekistan\n1995\n499.89473\n\n\nUzbekistan\n1996\n498.76138\n\n\nUzbekistan\n1997\n514.89784\n\n\nUzbekistan\n1998\n528.46406\n\n\nUzbekistan\n1999\n545.27749\n\n\nUzbekistan\n2000\n558.22114\n\n\nUzbekistan\n2001\n574.35028\n\n\nUzbekistan\n2002\n590.05859\n\n\nUzbekistan\n2003\n607.72537\n\n\nUzbekistan\n2004\n647.01199\n\n\nUzbekistan\n2005\n684.29691\n\n\nUzbekistan\n2006\n725.34695\n\n\nUzbekistan\n2007\n783.02750\n\n\nUzbekistan\n2008\n839.91097\n\n\nUzbekistan\n2009\n892.74891\n\n\nUzbekistan\n2010\n941.67185\n\n\nUzbekistan\n2011\n992.76137\n\n\nVanuatu\n1979\n1242.08925\n\n\nVanuatu\n1980\n1071.43019\n\n\nVanuatu\n1981\n1088.71924\n\n\nVanuatu\n1982\n1176.88890\n\n\nVanuatu\n1983\n1309.34842\n\n\nVanuatu\n1984\n1402.74438\n\n\nVanuatu\n1985\n1384.59512\n\n\nVanuatu\n1986\n1351.47084\n\n\nVanuatu\n1987\n1282.58928\n\n\nVanuatu\n1988\n1231.33959\n\n\nVanuatu\n1989\n1219.72943\n\n\nVanuatu\n1990\n1327.35658\n\n\nVanuatu\n1991\n1331.30346\n\n\nVanuatu\n1992\n1326.41217\n\n\nVanuatu\n1993\n1298.02374\n\n\nVanuatu\n1994\n1377.68347\n\n\nVanuatu\n1995\n1358.46581\n\n\nVanuatu\n1996\n1361.61264\n\n\nVanuatu\n1997\n1402.88511\n\n\nVanuatu\n1998\n1438.35551\n\n\nVanuatu\n1999\n1416.94943\n\n\nVanuatu\n2000\n1469.76179\n\n\nVanuatu\n2001\n1385.03693\n\n\nVanuatu\n2002\n1290.01903\n\n\nVanuatu\n2003\n1301.98158\n\n\nVanuatu\n2004\n1323.37231\n\n\nVanuatu\n2005\n1355.82172\n\n\nVanuatu\n2006\n1418.07528\n\n\nVanuatu\n2007\n1472.19553\n\n\nVanuatu\n2008\n1524.25360\n\n\nVanuatu\n2009\n1538.08444\n\n\nVanuatu\n2010\n1522.38404\n\n\nVanuatu\n2011\n1522.52830\n\n\nVenezuela\n1960\n5437.46923\n\n\nVenezuela\n1961\n5403.43589\n\n\nVenezuela\n1962\n5650.18873\n\n\nVenezuela\n1963\n5660.02014\n\n\nVenezuela\n1964\n6070.14508\n\n\nVenezuela\n1965\n6108.34843\n\n\nVenezuela\n1966\n5996.79696\n\n\nVenezuela\n1967\n5969.10302\n\n\nVenezuela\n1968\n6203.92466\n\n\nVenezuela\n1969\n6048.18308\n\n\nVenezuela\n1970\n6302.71318\n\n\nVenezuela\n1971\n6184.43977\n\n\nVenezuela\n1972\n6054.36283\n\n\nVenezuela\n1973\n6265.70231\n\n\nVenezuela\n1974\n6177.16063\n\n\nVenezuela\n1975\n6137.76327\n\n\nVenezuela\n1976\n6383.12896\n\n\nVenezuela\n1977\n6548.06058\n\n\nVenezuela\n1978\n6472.93669\n\n\nVenezuela\n1979\n6308.07522\n\n\nVenezuela\n1980\n5841.28064\n\n\nVenezuela\n1981\n5620.49966\n\n\nVenezuela\n1982\n5340.34692\n\n\nVenezuela\n1983\n4991.68875\n\n\nVenezuela\n1984\n4923.35732\n\n\nVenezuela\n1985\n4800.95749\n\n\nVenezuela\n1986\n4981.42296\n\n\nVenezuela\n1987\n5030.86486\n\n\nVenezuela\n1988\n5194.64442\n\n\nVenezuela\n1989\n4637.39197\n\n\nVenezuela\n1990\n4823.48713\n\n\nVenezuela\n1991\n5175.66661\n\n\nVenezuela\n1992\n5366.57773\n\n\nVenezuela\n1993\n5263.64505\n\n\nVenezuela\n1994\n5029.95034\n\n\nVenezuela\n1995\n5119.60256\n\n\nVenezuela\n1996\n5005.25007\n\n\nVenezuela\n1997\n5218.15403\n\n\nVenezuela\n1998\n5132.01585\n\n\nVenezuela\n1999\n4733.81783\n\n\nVenezuela\n2000\n4818.70818\n\n\nVenezuela\n2001\n4890.92999\n\n\nVenezuela\n2002\n4377.38213\n\n\nVenezuela\n2003\n3966.49973\n\n\nVenezuela\n2004\n4610.48904\n\n\nVenezuela\n2005\n5000.07620\n\n\nVenezuela\n2006\n5401.42172\n\n\nVenezuela\n2007\n5777.62857\n\n\nVenezuela\n2008\n5984.14495\n\n\nVenezuela\n2009\n5700.88406\n\n\nVenezuela\n2010\n5528.36311\n\n\nVenezuela\n2011\n5671.91220\n\n\nWest Bank and Gaza\n1994\n1228.83437\n\n\nWest Bank and Gaza\n1995\n1245.62616\n\n\nWest Bank and Gaza\n1996\n1225.61808\n\n\nWest Bank and Gaza\n1997\n1320.21038\n\n\nWest Bank and Gaza\n1998\n1428.82284\n\n\nWest Bank and Gaza\n1999\n1501.02077\n\n\nWest Bank and Gaza\n2000\n1369.19303\n\n\nWest Bank and Gaza\n2001\n1126.81876\n\n\nWest Bank and Gaza\n2002\n978.56145\n\n\nWest Bank and Gaza\n2003\n1002.89506\n\n\nWest Bank and Gaza\n2004\n1029.05197\n\n\nWest Bank and Gaza\n2005\n1056.29649\n\n\nVietnam\n1984\n198.52911\n\n\nVietnam\n1985\n201.96672\n\n\nVietnam\n1986\n202.84164\n\n\nVietnam\n1987\n205.00311\n\n\nVietnam\n1988\n210.37542\n\n\nVietnam\n1989\n220.59965\n\n\nVietnam\n1990\n227.48787\n\n\nVietnam\n1991\n236.65422\n\n\nVietnam\n1992\n252.57904\n\n\nVietnam\n1993\n268.28765\n\n\nVietnam\n1994\n287.13654\n\n\nVietnam\n1995\n309.41493\n\n\nVietnam\n1996\n332.94435\n\n\nVietnam\n1997\n354.51246\n\n\nVietnam\n1998\n369.23672\n\n\nVietnam\n1999\n381.10280\n\n\nVietnam\n2000\n401.54780\n\n\nVietnam\n2001\n423.82862\n\n\nVietnam\n2002\n448.60020\n\n\nVietnam\n2003\n475.96927\n\n\nVietnam\n2004\n506.93895\n\n\nVietnam\n2005\n543.35652\n\n\nVietnam\n2006\n581.57828\n\n\nVietnam\n2007\n623.95748\n\n\nVietnam\n2008\n656.31073\n\n\nVietnam\n2009\n683.99645\n\n\nVietnam\n2010\n722.81005\n\n\nVietnam\n2011\n757.40093\n\n\nYemen\n1990\n464.83704\n\n\nYemen\n1991\n470.76545\n\n\nYemen\n1992\n484.30267\n\n\nYemen\n1993\n479.07827\n\n\nYemen\n1994\n487.96587\n\n\nYemen\n1995\n494.59779\n\n\nYemen\n1996\n499.00768\n\n\nYemen\n1997\n508.38980\n\n\nYemen\n1998\n523.13316\n\n\nYemen\n1999\n527.37410\n\n\nYemen\n2000\n543.71388\n\n\nYemen\n2001\n547.62237\n\n\nYemen\n2002\n552.07152\n\n\nYemen\n2003\n555.42073\n\n\nYemen\n2004\n559.99917\n\n\nYemen\n2005\n573.48571\n\n\nYemen\n2006\n573.89571\n\n\nYemen\n2007\n575.24937\n\n\nYemen\n2008\n578.32327\n\n\nYemen\n2009\n582.61750\n\n\nYemen\n2010\n608.59606\n\n\nYemen\n2011\n528.39867\n\n\nZambia\n1960\n547.44288\n\n\nZambia\n1961\n538.94744\n\n\nZambia\n1962\n510.14505\n\n\nZambia\n1963\n511.20921\n\n\nZambia\n1964\n556.47895\n\n\nZambia\n1965\n629.57157\n\n\nZambia\n1966\n576.54013\n\n\nZambia\n1967\n603.30513\n\n\nZambia\n1968\n592.07379\n\n\nZambia\n1969\n571.03193\n\n\nZambia\n1970\n579.26754\n\n\nZambia\n1971\n559.82889\n\n\nZambia\n1972\n591.04755\n\n\nZambia\n1973\n565.74338\n\n\nZambia\n1974\n581.98265\n\n\nZambia\n1975\n549.93578\n\n\nZambia\n1976\n565.03419\n\n\nZambia\n1977\n521.78592\n\n\nZambia\n1978\n507.79808\n\n\nZambia\n1979\n476.61481\n\n\nZambia\n1980\n475.26738\n\n\nZambia\n1981\n488.31789\n\n\nZambia\n1982\n459.33812\n\n\nZambia\n1983\n435.95199\n\n\nZambia\n1984\n420.81478\n\n\nZambia\n1985\n414.38989\n\n\nZambia\n1986\n404.68026\n\n\nZambia\n1987\n403.05689\n\n\nZambia\n1988\n415.84925\n\n\nZambia\n1989\n399.98395\n\n\nZambia\n1990\n387.29281\n\n\nZambia\n1991\n377.17558\n\n\nZambia\n1992\n361.48323\n\n\nZambia\n1993\n376.67557\n\n\nZambia\n1994\n335.70719\n\n\nZambia\n1995\n317.93842\n\n\nZambia\n1996\n331.02251\n\n\nZambia\n1997\n332.64093\n\n\nZambia\n1998\n317.55869\n\n\nZambia\n1999\n316.03589\n\n\nZambia\n2000\n318.92682\n\n\nZambia\n2001\n326.58879\n\n\nZambia\n2002\n329.73518\n\n\nZambia\n2003\n338.88476\n\n\nZambia\n2004\n349.08547\n\n\nZambia\n2005\n359.07124\n\n\nZambia\n2006\n372.08368\n\n\nZambia\n2007\n385.12282\n\n\nZambia\n2008\n396.34438\n\n\nZambia\n2009\n410.31627\n\n\nZambia\n2010\n434.65980\n\n\nZambia\n2011\n443.92063\n\n\nZimbabwe\n1960\n389.01577\n\n\nZimbabwe\n1961\n400.33145\n\n\nZimbabwe\n1962\n392.93573\n\n\nZimbabwe\n1963\n403.90800\n\n\nZimbabwe\n1964\n386.48941\n\n\nZimbabwe\n1965\n392.39642\n\n\nZimbabwe\n1966\n385.62566\n\n\nZimbabwe\n1967\n404.58133\n\n\nZimbabwe\n1968\n399.39078\n\n\nZimbabwe\n1969\n434.56628\n\n\nZimbabwe\n1970\n515.23639\n\n\nZimbabwe\n1971\n542.52943\n\n\nZimbabwe\n1972\n567.90357\n\n\nZimbabwe\n1973\n562.99353\n\n\nZimbabwe\n1974\n580.22346\n\n\nZimbabwe\n1975\n550.33854\n\n\nZimbabwe\n1976\n535.20726\n\n\nZimbabwe\n1977\n482.79952\n\n\nZimbabwe\n1978\n454.77182\n\n\nZimbabwe\n1979\n454.12071\n\n\nZimbabwe\n1980\n501.25560\n\n\nZimbabwe\n1981\n543.03341\n\n\nZimbabwe\n1982\n535.87948\n\n\nZimbabwe\n1983\n523.14505\n\n\nZimbabwe\n1984\n493.36483\n\n\nZimbabwe\n1985\n507.83311\n\n\nZimbabwe\n1986\n499.65315\n\n\nZimbabwe\n1987\n487.66658\n\n\nZimbabwe\n1988\n506.98927\n\n\nZimbabwe\n1989\n516.72851\n\n\nZimbabwe\n1990\n536.99771\n\n\nZimbabwe\n1991\n551.99220\n\n\nZimbabwe\n1992\n490.47750\n\n\nZimbabwe\n1993\n485.10617\n\n\nZimbabwe\n1994\n519.49693\n\n\nZimbabwe\n1995\n510.75192\n\n\nZimbabwe\n1996\n553.87629\n\n\nZimbabwe\n1997\n559.53709\n\n\nZimbabwe\n1998\n567.45431\n\n\nZimbabwe\n1999\n556.30337\n\n\nZimbabwe\n2000\n534.79115\n\n\nZimbabwe\n2001\n539.66276\n\n\nZimbabwe\n2002\n490.38686\n\n\nZimbabwe\n2003\n406.87856\n\n\nZimbabwe\n2004\n383.70767\n\n\nZimbabwe\n2005\n362.57638\n\n\nZimbabwe\n2006\n351.17205\n\n\nZimbabwe\n2007\n339.65488\n\n\nZimbabwe\n2008\n280.30850\n\n\nZimbabwe\n2009\n296.54861\n\n\nZimbabwe\n2010\n322.55693\n\n\nZimbabwe\n2011\n347.74566"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#pivot_wider",
    "href": "slides/2025-02-10-pivotjoin.html#pivot_wider",
    "title": "Pivoting and Joining",
    "section": "pivot_wider()",
    "text": "pivot_wider()\npivot_wider() will be demonstrated using the paralympic_1500 dataset in the openintro R package.\n\nlibrary(openintro)\n\nparalympic_1500 |&gt; \n  gt::gt()\n\n\n\n\n\n\n\nyear\ncity\ncountry_of_games\ndivision\ntype\nname\ncountry_of_athlete\ntime\ntime_min\n\n\n\n\n1896\nAthens\nGreece\nMen\nOlympic\nEdwin Flack\nAustralia\n4:33.2\n4.553333\n\n\n1900\nParis\nFrance\nMen\nOlympic\nCharles Bennett\nGreat Britain\n4:6.2\n4.103333\n\n\n1904\nSt Louis\nUSA\nMen\nOlympic\nJim Lightbody\nUSA\n4:5.4\n4.090000\n\n\n1908\nLondon\nUnited Kingdom\nMen\nOlympic\nMel Sheppard\nUSA\n4:3.4\n4.056667\n\n\n1912\nStockholm\nSweden\nMen\nOlympic\nArnold Jackson\nGreat Britain\n3:56.8\n3.946667\n\n\n1920\nAntwerp\nBelgium\nMen\nOlympic\nAlbert Hill\nGreat Britain\n4:1.8\n4.030000\n\n\n1924\nParis\nFrance\nMen\nOlympic\nPaavo Nurmi\nFinland\n3:53.6\n3.893333\n\n\n1928\nAmsterdam\nNetherlands\nMen\nOlympic\nHarri Larva\nFinland\n3:53.2\n3.886667\n\n\n1932\nLos Angeles\nUSA\nMen\nOlympic\nLuigi Beccali\nItaly\n3:51.2\n3.853333\n\n\n1936\nBerlin\nGermany\nMen\nOlympic\nJack Lovelock\nNew Zealand\n3:47.8\n3.796667\n\n\n1948\nLondon\nUnited Kingdom\nMen\nOlympic\nHenry Eriksson\nSweden\n3:49.8\n3.830000\n\n\n1952\nHelsinki\nFinland\nMen\nOlympic\nJosy Barthel\nLuxembourg\n3:45.2\n3.753333\n\n\n1956\nMelbourne\nAustralia\nMen\nOlympic\nRon Delany\nIreland\n3:41.2\n3.686667\n\n\n1960\nRome\nItaly\nMen\nOlympic\nHerb Elliott\nAustralia\n3:35.6\n3.593333\n\n\n1964\nTokyo\nJapan\nMen\nOlympic\nPeter Snell\nNew Zealand\n3:38.1\n3.635000\n\n\n1968\nMexico City\nMexico\nMen\nOlympic\nKipchoge Keino\nKenya\n3:34.91\n3.581833\n\n\n1972\nMunich\nGermany\nMen\nOlympic\nPekka Vasala\nFinland\n3:36.3\n3.605000\n\n\n1972\nMunich\nGermany\nWomen\nOlympic\nLyudmila Bragina\nSoviet Union\n4:1.38\n4.023000\n\n\n1976\nMontreal\nCanada\nMen\nOlympic\nJohn Walker\nNew Zealand\n3:39.17\n3.652833\n\n\n1976\nMontreal\nCanada\nWomen\nOlympic\nTatyana Kazankina\nSoviet Union\n4:5.48\n4.091333\n\n\n1980\nMoscow\nSoviet Union\nMen\nOlympic\nSebastian Coe\nGreat Britain\n3:38.4\n3.640000\n\n\n1980\nMoscow\nSoviet Union\nWomen\nOlympic\nTatyana Kazankina\nSoviet Union\n3:56.6\n3.943333\n\n\n1984\nLos Angeles\nUSA\nMen\nOlympic\nSebastian Coe\nGreat Britain\n3:32.53\n3.542167\n\n\n1984\nNew York\nUSA\nMen\nT11\nRobert Matthews\nGreat Britain\n4:18.73\n4.312167\n\n\n1984\nNew York\nUSA\nMen\nT12\nSixten Berner\nSweden\n4:15.28\n4.254667\n\n\n1984\nNew York\nUSA\nMen\nT13\nJames Brown\nGreat Britain\n4:14.51\n4.241833\n\n\n1984\nLos Angeles\nUSA\nWomen\nOlympic\nGabriella Dorio\nItaly\n4:3.25\n4.054167\n\n\n1984\nNew York\nUSA\nWomen\nT11\nMargaret Heger\nAustria\n5:37.6\n5.626667\n\n\n1984\nNew York\nUSA\nWomen\nT12\nChristine Nicholas\nCanada\n5:34.12\n5.568667\n\n\n1984\nNew York\nUSA\nWomen\nT13\nHalina Wozniak\nPoland\n5:14.35\n5.239167\n\n\n1988\nSeoul\nS.Korea\nMen\nOlympic\nPeter Rono\nKenya\n3:35.96\n3.599333\n\n\n1988\nSeoul\nS.Korea\nMen\nT11\nRobert Matthews\nGreat Britain\n4:9.75\n4.162500\n\n\n1988\nSeoul\nS.Korea\nMen\nT12\nMariano Ruiz\nSpain\n4:5.53\n4.092167\n\n\n1988\nSeoul\nS.Korea\nMen\nT13\nAnthony Hamilton\nGreat Britain\n4:11.13\n4.185500\n\n\n1988\nSeoul\nS.Korea\nWomen\nOlympic\nPaula Ivan\nRomania\n3:53.96\n3.899333\n\n\n1988\nSeoul\nS.Korea\nWomen\nT11\nTamara Pankova\nUnified Team\n5:14.49\n5.241500\n\n\n1992\nBarcelona\nSpain\nMen\nOlympic\nFermín Cacho\nSpain\n3:40.12\n3.668667\n\n\n1992\nBarcelona\nSpain\nMen\nT11\nPaulo de Almeida Coelho\nPortugal\n4:17.82\n4.297000\n\n\n1992\nBarcelona\nSpain\nMen\nT12\nNeol Thatcher\nGreat Britain\n3:56.33\n3.938833\n\n\n1992\nBarcelona\nSpain\nMen\nT13\nChristophe Carayon\nFrance\n4:2.24\n4.037333\n\n\n1992\nBarcelona\nSpain\nWomen\nOlympic\nHassiba Boulmerka\nAlgeria\n3:55.3\n3.921667\n\n\n1992\nBarcelona\nSpain\nWomen\nT11\nPavla Valnickova\nCzechoslovakia\n5:8.03\n5.133833\n\n\n1992\nBarcelona\nSpain\nWomen\nT12\nRimma Batalova\nUnified Team\n4:47.86\n4.797667\n\n\n1996\nAtlanta\nUSA\nMen\nOlympic\nNoureddine Morceli\nAlgeria\n3:35.78\n3.596333\n\n\n1996\nAtlanta\nUSA\nMen\nT11\nPaulo de Almeida Coelho\nPortugal\n4:8.52\n4.142000\n\n\n1996\nAtlanta\nUSA\nMen\nT12\nJose Antonio Sanchez\nSpain\n4:1.19\n4.019833\n\n\n1996\nAtlanta\nUSA\nMen\nT13\nSaid Gomez\nPanama\n3:57.53\n3.958833\n\n\n1996\nAtlanta\nUSA\nWomen\nOlympic\nSvetlana Masterkova\nRussian Federation\n4:0.83\n4.013833\n\n\n1996\nAtlanta\nUSA\nWomen\nT12\nRima Batalova\nRussian Federation\n4:51.17\n4.852833\n\n\n2000\nSydney\nAustralia\nMen\nOlympic\nNoah Ngeny\nKenya\n3:32.07\n3.534500\n\n\n2000\nSydney\nAustralia\nMen\nT11\nPaulo de Almeida Coelho\nPortugal\n4:10.13\n4.168833\n\n\n2000\nSydney\nAustralia\nMen\nT12\nCesar Carlavilla\nSpain\n4:13.6\n4.226667\n\n\n2000\nSydney\nAustralia\nMen\nT13\nMaher Bouallegue\nTunisia\n3:56.97\n3.949500\n\n\n2000\nSydney\nAustralia\nWomen\nOlympic\nNouria Mérah-Benida\nAlgeria\n4:5.1\n4.085000\n\n\n2000\nSydney\nAustralia\nWomen\nT12\nRima Batalova\nRussian Federation\n4:49.64\n4.827333\n\n\n2004\nAthens\nGreece\nMen\nOlympic\nHicham El Guerrouj\nMorocco\n3:34.19\n3.569833\n\n\n2004\nAthens\nGreece\nMen\nT11\nMustapha El Aouzari\nMorocco\n4:8.58\n4.143000\n\n\n2004\nAthens\nGreece\nMen\nT13\nMaher Bouallegue\nTunisia\n3:51.09\n3.851500\n\n\n2004\nAthens\nGreece\nWomen\nOlympic\nKelly Holmes\nGreat Britain\n3:57.9\n3.965000\n\n\n2004\nAthens\nGreece\nWomen\nT12\nElena Pautova\nRussian Federation\n4:36.29\n4.604833\n\n\n2008\nBeijing\nChina\nMen\nOlympic\nAsbel Kiprop\nKenya\n3:33.11\n3.551833\n\n\n2008\nBeijing\nChina\nMen\nT11\nZhen Zhang\nChina\n4:10.05\n4.167500\n\n\n2008\nBeijing\nChina\nMen\nT13\nHenry Kirwa\nKenya\n4:6.11\n4.101833\n\n\n2008\nBeijing\nChina\nWomen\nOlympic\nNancy Langat\nKenya\n4:0.03\n4.000500\n\n\n2008\nBeijing\nChina\nWomen\nT13\nSomaya Bousaid\nTunisia\n4:14\n4.233333\n\n\n2012\nLondon\nUnited Kingdom\nMen\nOlympic\nTaoufik Makhloufi\nAlgeria\n3:34.08\n3.568000\n\n\n2012\nLondon\nUnited Kingdom\nMen\nT11\nSamwel Mushai Kimani\nKenya\n3:58.37\n3.972833\n\n\n2012\nLondon\nUnited Kingdom\nMen\nT13\nAbderrahim Zhiou\nTunisia\n3:48.31\n3.805167\n\n\n2012\nLondon\nUnited Kingdom\nWomen\nOlympic\nMaryam Yusuf Jamal\nBahrain\n4:10.74\n4.179000\n\n\n2012\nLondon\nUnited Kingdom\nWomen\nT12\nElena Pautova\nRussian Federation\n4:37.65\n4.627500\n\n\n2016\nRio de Janeiro\nBrazil\nMen\nOlympic\nMatthew Centrowitz, Jr.\nUSA\n3:50\n3.833333\n\n\n2016\nRio de Janeiro\nBrazil\nMen\nT11\nSamwel Mushai Kimani\nKenya\n4:3.25\n4.054167\n\n\n2016\nRio de Janeiro\nBrazil\nMen\nT13\nAbdellatif Baka\nAlgeria\n3:48.29\n3.804833\n\n\n2016\nRio de Janeiro\nBrazil\nWomen\nOlympic\nFaith Chepngetich Kipyegon\nKenya\n4:8.92\n4.148667\n\n\n2016\nRio de Janeiro\nBrazil\nWomen\nT11\nJin Zheng\nChina\n4:38.92\n4.648667\n\n\n2016\nRio de Janeiro\nBrazil\nWomen\nT13\nSomaya Bousaid\nTunisia\n4:21.45\n4.357500\n\n\n2020\nTokyo\nJapan\nMen\nOlympic\nJakob Ingebrigtsen\nNorway\n3:28.32\n3.472000\n\n\n2020\nTokyo\nJapan\nMen\nT11\nYeltsin Jacques\nBrazil\n3:57.6\n3.960000\n\n\n2020\nTokyo\nJapan\nMen\nT13\nAnton Kuliatin\nRussian Paralympic Committee\n3:54.04\n3.900667\n\n\n2020\nTokyo\nJapan\nWomen\nOlympic\nFaith Chepngetich Kipyegon\nKenya\n3:53.11\n3.885167\n\n\n2020\nTokyo\nJapan\nWomen\nT11\nMonica Olivia Rodriguez Saavedra\nMexico\n4:37.4\n4.623333\n\n\n2020\nTokyo\nJapan\nWomen\nT13\nTigist Gezahagn Menigstu\nEthiopia\n4:23.24\n4.387333"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#pivot_wider-babynames",
    "href": "slides/2025-02-10-pivotjoin.html#pivot_wider-babynames",
    "title": "Pivoting and Joining",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  select(-prop) |&gt; \n  pivot_wider(names_from = sex, values_from = n) \n\n# A tibble: 1,756,284 × 4\n    year name          F     M\n   &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt; &lt;int&gt;\n 1  1880 Mary       7065    27\n 2  1880 Anna       2604    12\n 3  1880 Emma       2003    10\n 4  1880 Elizabeth  1939     9\n 5  1880 Minnie     1746     9\n 6  1880 Margaret   1578    NA\n 7  1880 Ida        1472     8\n 8  1880 Alice      1414    NA\n 9  1880 Bertha     1320    NA\n10  1880 Sarah      1288    NA\n# ℹ 1,756,274 more rows"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#pivot_wider-babynames-1",
    "href": "slides/2025-02-10-pivotjoin.html#pivot_wider-babynames-1",
    "title": "Pivoting and Joining",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  select(-prop) |&gt;  \n  pivot_wider(names_from = sex, values_from = n) |&gt; \n  filter(!is.na(F), !is.na(M)) |&gt; \n  arrange(desc(year), desc(F))\n\n# A tibble: 168,381 × 4\n    year name          F     M\n   &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt; &lt;int&gt;\n 1  2017 Emma      19738    14\n 2  2017 Olivia    18632    10\n 3  2017 Ava       15902    12\n 4  2017 Isabella  15100    12\n 5  2017 Sophia    14831    17\n 6  2017 Mia       13437    16\n 7  2017 Charlotte 12893     7\n 8  2017 Amelia    11800    11\n 9  2017 Evelyn    10675    11\n10  2017 Abigail   10551     6\n# ℹ 168,371 more rows"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#pivot_wider-babynames-2",
    "href": "slides/2025-02-10-pivotjoin.html#pivot_wider-babynames-2",
    "title": "Pivoting and Joining",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  pivot_wider(names_from = sex, values_from = n) |&gt; \n  mutate(maxcount = pmax(F, M, na.rm = TRUE)) |&gt; \n  arrange(desc(maxcount))\n\n# A tibble: 1,924,653 × 6\n    year name      prop     F     M maxcount\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;\n 1  1947 Linda   0.0548 99686    NA    99686\n 2  1948 Linda   0.0552 96209    NA    96209\n 3  1947 James   0.0510    NA 94756    94756\n 4  1957 Michael 0.0424    NA 92695    92695\n 5  1947 Robert  0.0493    NA 91642    91642\n 6  1949 Linda   0.0518 91016    NA    91016\n 7  1956 Michael 0.0423    NA 90620    90620\n 8  1958 Michael 0.0420    NA 90520    90520\n 9  1948 James   0.0497    NA 88588    88588\n10  1954 Michael 0.0428    NA 88514    88514\n# ℹ 1,924,643 more rows"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#relational-data-multiple-data-frames",
    "href": "slides/2025-02-10-pivotjoin.html#relational-data-multiple-data-frames",
    "title": "Pivoting and Joining",
    "section": "Relational data (multiple data frames)",
    "text": "Relational data (multiple data frames)\n\nSee the Posit cheatsheets on wrangling & joining and pivoting."
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#joining-two-or-more-data-frames",
    "href": "slides/2025-02-10-pivotjoin.html#joining-two-or-more-data-frames",
    "title": "Pivoting and Joining",
    "section": "Joining two (or more) data frames:",
    "text": "Joining two (or more) data frames:\n\nleft_join returns all rows from the left table, and any rows with matching keys from the right table.\ninner_join returns only the rows in which the left table have matching keys in the right table (i.e., matching rows in both sets).\nfull_join returns all rows from both tables, join records from the left which have matching keys in the right table.\n\nGood practice: always specify the by argument when joining data frames."
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#women-in-science",
    "href": "slides/2025-02-10-pivotjoin.html#women-in-science",
    "title": "Pivoting and Joining",
    "section": "Women in Science",
    "text": "Women in Science\n10 women in science who changed the world (source: Discover Magazine)1\n\n\n\n\n\nname\nprofession\n\n\n\n\nAda Lovelace\nMathematician\n\n\nMarie Curie\nPhysicist and Chemist\n\n\nJanaki Ammal\nBotanist\n\n\nChien-Shiung Wu\nPhysicist\n\n\nKatherine Johnson\nMathematician\n\n\nRosalind Franklin\nChemist\n\n\nVera Rubin\nAstronomer\n\n\nGladys West\nMathematician\n\n\nFlossie Wong-Staal\nVirologist and Molecular Biologist\n\n\nJennifer Doudna\nBiochemist\n\n\n\n\n\nExample from DataScience in a Box"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#inputs",
    "href": "slides/2025-02-10-pivotjoin.html#inputs",
    "title": "Pivoting and Joining",
    "section": "Inputs",
    "text": "Inputs\n\nProfessionsDatesWorks\n\n\n\nprofessions\n\n# A tibble: 10 × 2\n   name               profession                        \n   &lt;chr&gt;              &lt;chr&gt;                             \n 1 Ada Lovelace       Mathematician                     \n 2 Marie Curie        Physicist and Chemist             \n 3 Janaki Ammal       Botanist                          \n 4 Chien-Shiung Wu    Physicist                         \n 5 Katherine Johnson  Mathematician                     \n 6 Rosalind Franklin  Chemist                           \n 7 Vera Rubin         Astronomer                        \n 8 Gladys West        Mathematician                     \n 9 Flossie Wong-Staal Virologist and Molecular Biologist\n10 Jennifer Doudna    Biochemist                        \n\n\n\n\n\ndates\n\n# A tibble: 8 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Rosalind Franklin        1920       1958\n5 Vera Rubin               1928       2016\n6 Gladys West              1930         NA\n7 Flossie Wong-Staal       1947       2020\n8 Jennifer Doudna          1964         NA\n\n\n\n\n\nworks\n\n# A tibble: 9 × 2\n  name               known_for                                        \n  &lt;chr&gt;              &lt;chr&gt;                                            \n1 Ada Lovelace       first computer algorithm                         \n2 Marie Curie        theory of radioactivity,  discovery of elements …\n3 Janaki Ammal       hybrid species, biodiversity protection          \n4 Chien-Shiung Wu    confim and refine theory of radioactive beta dec…\n5 Katherine Johnson  calculations of orbital mechanics critical to se…\n6 Vera Rubin         existence of dark matter                         \n7 Gladys West        mathematical modeling of the shape of the Earth …\n8 Flossie Wong-Staal first scientist to clone HIV and create a map of…\n9 Jennifer Doudna    one of the primary developers of CRISPR, a groun…"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#desired-output",
    "href": "slides/2025-02-10-pivotjoin.html#desired-output",
    "title": "Pivoting and Joining",
    "section": "Desired output",
    "text": "Desired output\nWe’d like to put together the data to look like:\n\n\n# A tibble: 10 × 5\n   name               profession       birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                 &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician            NA         NA first co…\n 2 Marie Curie        Physicist and C…         NA         NA theory o…\n 3 Janaki Ammal       Botanist               1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist              1912       1997 confim a…\n 5 Katherine Johnson  Mathematician          1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer             1928       2016 existenc…\n 8 Gladys West        Mathematician          1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist             1964         NA one of t…"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#inputs-reminder",
    "href": "slides/2025-02-10-pivotjoin.html#inputs-reminder",
    "title": "Pivoting and Joining",
    "section": "Inputs, reminder",
    "text": "Inputs, reminder\n\n\n\nnrow(professions)\n\n[1] 10\n\nnrow(dates)\n\n[1] 8\n\nnrow(works)\n\n[1] 9\n\n\n\n\nnames(professions)\n\n[1] \"name\"       \"profession\"\n\nnames(dates)\n\n[1] \"name\"       \"birth_year\" \"death_year\"\n\nnames(works)\n\n[1] \"name\"      \"known_for\""
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#setup",
    "href": "slides/2025-02-10-pivotjoin.html#setup",
    "title": "Pivoting and Joining",
    "section": "Setup",
    "text": "Setup\nFor the next few slides…\n\n\n\nx\n\n# A tibble: 3 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n\n\n\n\ny\n\n# A tibble: 3 × 2\n     id value_y\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 y1     \n2     2 y2     \n3     4 y4"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#left_join",
    "href": "slides/2025-02-10-pivotjoin.html#left_join",
    "title": "Pivoting and Joining",
    "section": "left_join()",
    "text": "left_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nleft_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#left_join-1",
    "href": "slides/2025-02-10-pivotjoin.html#left_join-1",
    "title": "Pivoting and Joining",
    "section": "left_join()",
    "text": "left_join()\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") \n\n# A tibble: 10 × 4\n   name               profession                 birth_year death_year\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt;\n 1 Ada Lovelace       Mathematician                      NA         NA\n 2 Marie Curie        Physicist and Chemist              NA         NA\n 3 Janaki Ammal       Botanist                         1897       1984\n 4 Chien-Shiung Wu    Physicist                        1912       1997\n 5 Katherine Johnson  Mathematician                    1918       2020\n 6 Rosalind Franklin  Chemist                          1920       1958\n 7 Vera Rubin         Astronomer                       1928       2016\n 8 Gladys West        Mathematician                    1930         NA\n 9 Flossie Wong-Staal Virologist and Molecular …       1947       2020\n10 Jennifer Doudna    Biochemist                       1964         NA"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#right_join",
    "href": "slides/2025-02-10-pivotjoin.html#right_join",
    "title": "Pivoting and Joining",
    "section": "right_join()",
    "text": "right_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nright_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#right_join-1",
    "href": "slides/2025-02-10-pivotjoin.html#right_join-1",
    "title": "Pivoting and Joining",
    "section": "right_join()",
    "text": "right_join()\n\nprofessions |&gt; \n  right_join(dates, by = \"name\") \n\n# A tibble: 8 × 4\n  name               profession                  birth_year death_year\n  &lt;chr&gt;              &lt;chr&gt;                            &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal       Botanist                          1897       1984\n2 Chien-Shiung Wu    Physicist                         1912       1997\n3 Katherine Johnson  Mathematician                     1918       2020\n4 Rosalind Franklin  Chemist                           1920       1958\n5 Vera Rubin         Astronomer                        1928       2016\n6 Gladys West        Mathematician                     1930         NA\n7 Flossie Wong-Staal Virologist and Molecular B…       1947       2020\n8 Jennifer Doudna    Biochemist                        1964         NA"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#full_join",
    "href": "slides/2025-02-10-pivotjoin.html#full_join",
    "title": "Pivoting and Joining",
    "section": "full_join()",
    "text": "full_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nfull_join(x, y, by = \"id\")\n\n# A tibble: 4 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;   \n4     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#full_join-1",
    "href": "slides/2025-02-10-pivotjoin.html#full_join-1",
    "title": "Pivoting and Joining",
    "section": "full_join()",
    "text": "full_join()\n\ndates |&gt; \n  full_join(works, by = \"name\") \n\n# A tibble: 10 × 4\n   name               birth_year death_year known_for                 \n   &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                     \n 1 Janaki Ammal             1897       1984 hybrid species, biodivers…\n 2 Chien-Shiung Wu          1912       1997 confim and refine theory …\n 3 Katherine Johnson        1918       2020 calculations of orbital m…\n 4 Rosalind Franklin        1920       1958 &lt;NA&gt;                      \n 5 Vera Rubin               1928       2016 existence of dark matter  \n 6 Gladys West              1930         NA mathematical modeling of …\n 7 Flossie Wong-Staal       1947       2020 first scientist to clone …\n 8 Jennifer Doudna          1964         NA one of the primary develo…\n 9 Ada Lovelace               NA         NA first computer algorithm  \n10 Marie Curie                NA         NA theory of radioactivity, …"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#inner_join",
    "href": "slides/2025-02-10-pivotjoin.html#inner_join",
    "title": "Pivoting and Joining",
    "section": "inner_join()",
    "text": "inner_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\ninner_join(x, y, by = \"id\")\n\n# A tibble: 2 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#inner_join-1",
    "href": "slides/2025-02-10-pivotjoin.html#inner_join-1",
    "title": "Pivoting and Joining",
    "section": "inner_join()",
    "text": "inner_join()\n\ndates |&gt; \n  inner_join(works, by = \"name\") \n\n# A tibble: 7 × 4\n  name               birth_year death_year known_for                  \n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                      \n1 Janaki Ammal             1897       1984 hybrid species, biodiversi…\n2 Chien-Shiung Wu          1912       1997 confim and refine theory o…\n3 Katherine Johnson        1918       2020 calculations of orbital me…\n4 Vera Rubin               1928       2016 existence of dark matter   \n5 Gladys West              1930         NA mathematical modeling of t…\n6 Flossie Wong-Staal       1947       2020 first scientist to clone H…\n7 Jennifer Doudna          1964         NA one of the primary develop…"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#semi_join",
    "href": "slides/2025-02-10-pivotjoin.html#semi_join",
    "title": "Pivoting and Joining",
    "section": "semi_join()",
    "text": "semi_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nsemi_join(x, y, by = \"id\")\n\n# A tibble: 2 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#semi_join-1",
    "href": "slides/2025-02-10-pivotjoin.html#semi_join-1",
    "title": "Pivoting and Joining",
    "section": "semi_join()",
    "text": "semi_join()\n\ndates |&gt; \n  semi_join(works, by = \"name\") \n\n# A tibble: 7 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Vera Rubin               1928       2016\n5 Gladys West              1930         NA\n6 Flossie Wong-Staal       1947       2020\n7 Jennifer Doudna          1964         NA"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#anti_join",
    "href": "slides/2025-02-10-pivotjoin.html#anti_join",
    "title": "Pivoting and Joining",
    "section": "anti_join()",
    "text": "anti_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nanti_join(x, y, by = \"id\")\n\n# A tibble: 1 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     3 x3"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#anti_join-1",
    "href": "slides/2025-02-10-pivotjoin.html#anti_join-1",
    "title": "Pivoting and Joining",
    "section": "anti_join()",
    "text": "anti_join()\n\ndates |&gt; \n  anti_join(works, by = \"name\") \n\n# A tibble: 1 × 3\n  name              birth_year death_year\n  &lt;chr&gt;                  &lt;dbl&gt;      &lt;dbl&gt;\n1 Rosalind Franklin       1920       1958"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#putting-it-all-together",
    "href": "slides/2025-02-10-pivotjoin.html#putting-it-all-together",
    "title": "Pivoting and Joining",
    "section": "Putting it all together",
    "text": "Putting it all together\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") |&gt; \n  left_join(works, by = \"name\")\n\n# A tibble: 10 × 5\n   name               profession       birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                 &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician            NA         NA first co…\n 2 Marie Curie        Physicist and C…         NA         NA theory o…\n 3 Janaki Ammal       Botanist               1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist              1912       1997 confim a…\n 5 Katherine Johnson  Mathematician          1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer             1928       2016 existenc…\n 8 Gladys West        Mathematician          1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist             1964         NA one of t…"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#practice-litf-and-gdp-from-gapminder.",
    "href": "slides/2025-02-10-pivotjoin.html#practice-litf-and-gdp-from-gapminder.",
    "title": "Pivoting and Joining",
    "section": "Practice litF and GDP from Gapminder.",
    "text": "Practice litF and GDP from Gapminder."
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#left",
    "href": "slides/2025-02-10-pivotjoin.html#left",
    "title": "Pivoting and Joining",
    "section": "left",
    "text": "left\n\nlitGDPleft &lt;- left_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPleft)\n\n[1] 571   4\n\nlitGDPleft\n\n# A tibble: 571 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 561 more rows"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#right",
    "href": "slides/2025-02-10-pivotjoin.html#right",
    "title": "Pivoting and Joining",
    "section": "right",
    "text": "right\n\nlitGDPright &lt;- right_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPright)\n\n[1] 7988    4\n\nlitGDPright\n\n# A tibble: 7,988 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 7,978 more rows"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#inner",
    "href": "slides/2025-02-10-pivotjoin.html#inner",
    "title": "Pivoting and Joining",
    "section": "inner",
    "text": "inner\n\nlitGDPinner &lt;- inner_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPinner)\n\n[1] 505   4\n\nlitGDPinner\n\n# A tibble: 505 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 495 more rows"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#full",
    "href": "slides/2025-02-10-pivotjoin.html#full",
    "title": "Pivoting and Joining",
    "section": "full",
    "text": "full\n\nlitGDPfull &lt;- full_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPfull)\n\n[1] 8054    4\n\nlitGDPfull\n\n# A tibble: 8,054 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 8,044 more rows"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#join-to-merge-two-datasets",
    "href": "slides/2025-02-10-pivotjoin.html#join-to-merge-two-datasets",
    "title": "Pivoting and Joining",
    "section": "join to merge two datasets",
    "text": "join to merge two datasets\n\nIf you ever need to understand which join is the right join for you, try to find an image that will lay out what the function is doing. I found this one that is quite good and is taken from the Statistics Globe blog."
  },
  {
    "objectID": "slides/2025-02-17-types.html#creating-strings",
    "href": "slides/2025-02-17-types.html#creating-strings",
    "title": "Variable Types",
    "section": "Creating strings",
    "text": "Creating strings\nCreating strings by hand is useful for testing out regular expressions.\nTo create a string, type any text in either double quotes \" or single quotes '. Using double or single quotes doesn’t matter unless your string itself has single or double quotes.\n\nstring1 &lt;- \"This is a string\"\nstring2 &lt;- 'If I want to include a \"quote\" inside a string, I use single quotes'\n\nstring1\n\n[1] \"This is a string\"\n\nstring2\n\n[1] \"If I want to include a \\\"quote\\\" inside a string, I use single quotes\""
  },
  {
    "objectID": "slides/2025-02-17-types.html#str_view",
    "href": "slides/2025-02-17-types.html#str_view",
    "title": "Variable Types",
    "section": "str_view()",
    "text": "str_view()\nWe can view these strings “naturally” (without the opening and closing quotes) with str_view():\n\nstr_view(string1)\n\n[1] │ This is a string\n\nstr_view(string2)\n\n[1] │ If I want to include a \"quote\" inside a string, I use single quotes"
  },
  {
    "objectID": "slides/2025-02-17-types.html#str_c",
    "href": "slides/2025-02-17-types.html#str_c",
    "title": "Variable Types",
    "section": "str_c",
    "text": "str_c\nSimilar to paste() (gluing strings together), but works well in a tidy pipeline.\n\ndf &lt;- tibble(name = c(\"Flora\", \"David\", \"Terra\", NA))\ndf |&gt; mutate(greeting = str_c(\"Hi \", name, \"!\"))\n\n# A tibble: 4 × 2\n  name  greeting \n  &lt;chr&gt; &lt;chr&gt;    \n1 Flora Hi Flora!\n2 David Hi David!\n3 Terra Hi Terra!\n4 &lt;NA&gt;  &lt;NA&gt;"
  },
  {
    "objectID": "slides/2025-02-17-types.html#str_sub",
    "href": "slides/2025-02-17-types.html#str_sub",
    "title": "Variable Types",
    "section": "str_sub()",
    "text": "str_sub()\nstr_sub(string, start, end) will extract parts of a string where start and end are the positions where the substring starts and ends.\n\nfruits &lt;- c(\"Apple\", \"Banana\", \"Pear\")\nstr_sub(fruits, 1, 3)\n\n[1] \"App\" \"Ban\" \"Pea\"\n\nstr_sub(fruits, -3, -1)\n\n[1] \"ple\" \"ana\" \"ear\"\n\n\nWon’t fail if the string is too short.\n\nstr_sub(fruits, 1, 5)\n\n[1] \"Apple\" \"Banan\" \"Pear\""
  },
  {
    "objectID": "slides/2025-02-17-types.html#str_sub-in-a-pipeline",
    "href": "slides/2025-02-17-types.html#str_sub-in-a-pipeline",
    "title": "Variable Types",
    "section": "str_sub() in a pipeline",
    "text": "str_sub() in a pipeline\nWe can use the str_*() functions inside the mutate() function.\n\ntitanic |&gt; \n  mutate(class1 = str_sub(Class, 1, 1))\n\n   Class    Sex   Age Survived Freq class1\n1    1st   Male Child       No    0      1\n2    2nd   Male Child       No    0      2\n3    3rd   Male Child       No   35      3\n4   Crew   Male Child       No    0      C\n5    1st Female Child       No    0      1\n6    2nd Female Child       No    0      2\n7    3rd Female Child       No   17      3\n8   Crew Female Child       No    0      C\n9    1st   Male Adult       No  118      1\n10   2nd   Male Adult       No  154      2\n11   3rd   Male Adult       No  387      3\n12  Crew   Male Adult       No  670      C\n13   1st Female Adult       No    4      1\n14   2nd Female Adult       No   13      2\n15   3rd Female Adult       No   89      3\n16  Crew Female Adult       No    3      C\n17   1st   Male Child      Yes    5      1\n18   2nd   Male Child      Yes   11      2\n19   3rd   Male Child      Yes   13      3\n20  Crew   Male Child      Yes    0      C\n21   1st Female Child      Yes    1      1\n22   2nd Female Child      Yes   13      2\n23   3rd Female Child      Yes   14      3\n24  Crew Female Child      Yes    0      C\n25   1st   Male Adult      Yes   57      1\n26   2nd   Male Adult      Yes   14      2\n27   3rd   Male Adult      Yes   75      3\n28  Crew   Male Adult      Yes  192      C\n29   1st Female Adult      Yes  140      1\n30   2nd Female Adult      Yes   80      2\n31   3rd Female Adult      Yes   76      3\n32  Crew Female Adult      Yes   20      C"
  },
  {
    "objectID": "slides/2025-02-17-types.html#str_replace",
    "href": "slides/2025-02-17-types.html#str_replace",
    "title": "Variable Types",
    "section": "str_replace*()",
    "text": "str_replace*()\nstr_replace() replaces the first match of a pattern. str_replace_all() replaces all the matches of a pattern.\n\nfruits\n\n[1] \"Apple\"  \"Banana\" \"Pear\"  \n\nstr_replace(fruits, \"a\", \"x\")\n\n[1] \"Apple\"  \"Bxnana\" \"Pexr\"  \n\nstr_replace_all(fruits, \"a\", \"x\")\n\n[1] \"Apple\"  \"Bxnxnx\" \"Pexr\""
  },
  {
    "objectID": "slides/2025-02-17-types.html#str_detect",
    "href": "slides/2025-02-17-types.html#str_detect",
    "title": "Variable Types",
    "section": "str_detect()",
    "text": "str_detect()\n\nfruits\n\n[1] \"Apple\"  \"Banana\" \"Pear\"  \n\nstr_detect(fruits, \"a\")\n\n[1] FALSE  TRUE  TRUE"
  },
  {
    "objectID": "slides/2025-02-17-types.html#str_detect-in-pipeline",
    "href": "slides/2025-02-17-types.html#str_detect-in-pipeline",
    "title": "Variable Types",
    "section": "str_detect() in pipeline",
    "text": "str_detect() in pipeline\nstr_detect() used in a filter() pipeline.\n\noriginal dataunnested datafiltered unnested data\n\n\n\nstarwars |&gt; \n  select(name, films) \n\n# A tibble: 87 × 2\n   name               films    \n   &lt;chr&gt;              &lt;list&gt;   \n 1 Luke Skywalker     &lt;chr [5]&gt;\n 2 C-3PO              &lt;chr [6]&gt;\n 3 R2-D2              &lt;chr [7]&gt;\n 4 Darth Vader        &lt;chr [4]&gt;\n 5 Leia Organa        &lt;chr [5]&gt;\n 6 Owen Lars          &lt;chr [3]&gt;\n 7 Beru Whitesun Lars &lt;chr [3]&gt;\n 8 R5-D4              &lt;chr [1]&gt;\n 9 Biggs Darklighter  &lt;chr [1]&gt;\n10 Obi-Wan Kenobi     &lt;chr [6]&gt;\n# ℹ 77 more rows\n\n\n\n\n\nstarwars |&gt; \n  select(name, films) |&gt; \n  unnest_wider(films, names_sep = \"\")\n\n# A tibble: 87 × 8\n   name               films1 films2 films3 films4 films5 films6 films7\n   &lt;chr&gt;              &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; \n 1 Luke Skywalker     A New… The E… Retur… Reven… The F… &lt;NA&gt;   &lt;NA&gt;  \n 2 C-3PO              A New… The E… Retur… The P… Attac… Reven… &lt;NA&gt;  \n 3 R2-D2              A New… The E… Retur… The P… Attac… Reven… The F…\n 4 Darth Vader        A New… The E… Retur… Reven… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n 5 Leia Organa        A New… The E… Retur… Reven… The F… &lt;NA&gt;   &lt;NA&gt;  \n 6 Owen Lars          A New… Attac… Reven… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n 7 Beru Whitesun Lars A New… Attac… Reven… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n 8 R5-D4              A New… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n 9 Biggs Darklighter  A New… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n10 Obi-Wan Kenobi     A New… The E… Retur… The P… Attac… Reven… &lt;NA&gt;  \n# ℹ 77 more rows\n\n\n\n\n\nstarwars |&gt; \n  filter(str_detect(films, \"Empire\")) |&gt; \n  select(name, films) |&gt; \n  unnest_wider(films, names_sep = \"\")\n\n# A tibble: 16 × 8\n   name             films1   films2 films3 films4 films5 films6 films7\n   &lt;chr&gt;            &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; \n 1 Luke Skywalker   A New H… The E… Retur… Reven… The F… &lt;NA&gt;   &lt;NA&gt;  \n 2 C-3PO            A New H… The E… Retur… The P… Attac… Reven… &lt;NA&gt;  \n 3 R2-D2            A New H… The E… Retur… The P… Attac… Reven… The F…\n 4 Darth Vader      A New H… The E… Retur… Reven… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n 5 Leia Organa      A New H… The E… Retur… Reven… The F… &lt;NA&gt;   &lt;NA&gt;  \n 6 Obi-Wan Kenobi   A New H… The E… Retur… The P… Attac… Reven… &lt;NA&gt;  \n 7 Chewbacca        A New H… The E… Retur… Reven… The F… &lt;NA&gt;   &lt;NA&gt;  \n 8 Han Solo         A New H… The E… Retur… The F… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n 9 Wedge Antilles   A New H… The E… Retur… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n10 Yoda             The Emp… Retur… The P… Attac… Reven… &lt;NA&gt;   &lt;NA&gt;  \n11 Palpatine        The Emp… Retur… The P… Attac… Reven… &lt;NA&gt;   &lt;NA&gt;  \n12 Boba Fett        The Emp… Retur… Attac… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n13 IG-88            The Emp… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n14 Bossk            The Emp… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n15 Lando Calrissian The Emp… Retur… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n16 Lobot            The Emp… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;"
  },
  {
    "objectID": "slides/2025-02-17-types.html#stringr-functions",
    "href": "slides/2025-02-17-types.html#stringr-functions",
    "title": "Variable Types",
    "section": "stringr functions",
    "text": "stringr functions\nThe stringr package within tidyverse contains lots of functions to help process strings. Letting x be a string variable…\n\n\n\n\n\n\n\n\n\n\nstr function\narguments\nreturns\n\n\n\n\nstr_view()\nx\nthe string\n\n\nstr_c()\n…, sep, collapse\na new concatenated string\n\n\nstr_sub()\nx, start, end\na modified string\n\n\nstr_replace()\nx, pattern, replacement\na modified string\n\n\nstr_replace_all()\nx, pattern, replacement\na modified string\n\n\nstr_detect()\nx, pattern\nTRUE/FALSE\n\n\nstr_to_lower()\nx\na modified string\n\n\nstr_to_upper()\nx\na modified string\n\n\nstr_length()\nx\na number\n\n\n\n\n\nUse the stringr cheatsheet."
  },
  {
    "objectID": "slides/2025-02-17-types.html#where-do-we-order",
    "href": "slides/2025-02-17-types.html#where-do-we-order",
    "title": "Variable Types",
    "section": "Where do we order?",
    "text": "Where do we order?\nThe ordering of the factor variable is important in:\n\nplots (e.g., barplots)\ntables (e.g., group_by())\nmodeling (e.g., the baseline level in a linear regression)"
  },
  {
    "objectID": "slides/2025-02-17-types.html#order-matters",
    "href": "slides/2025-02-17-types.html#order-matters",
    "title": "Variable Types",
    "section": "Order matters",
    "text": "Order matters\nSurveyUSA poll from 2012 on views of the DREAM Act.\nWhat is off about the data viz part of the report?\n\nDataPlotLevels\n\n\n\nopenintro::dream\n\n# A tibble: 910 × 2\n   ideology     stance\n   &lt;fct&gt;        &lt;fct&gt; \n 1 Conservative Yes   \n 2 Conservative Yes   \n 3 Conservative Yes   \n 4 Conservative Yes   \n 5 Conservative Yes   \n 6 Conservative Yes   \n 7 Conservative Yes   \n 8 Conservative Yes   \n 9 Conservative Yes   \n10 Conservative Yes   \n# ℹ 900 more rows\n\n\n\n\n\ndream |&gt; \n  ggplot(aes(x = ideology, fill = stance)) + \n  geom_bar()\n\n\n\n\n\n\n\n\n\n\nThe levels() function reports the levels and their order.\n\ndream |&gt; \n  select(ideology) |&gt; \n  pull() |&gt;  # because levels() works only on vectors, not data frames\n  levels()\n\n[1] \"Conservative\" \"Liberal\"      \"Moderate\""
  },
  {
    "objectID": "slides/2025-02-17-types.html#change-the-order",
    "href": "slides/2025-02-17-types.html#change-the-order",
    "title": "Variable Types",
    "section": "Change the order",
    "text": "Change the order\nWe can fix the order of the ideology variable.\n\nCodePlot\n\n\n\ndream |&gt; \n  mutate(ideology = fct_relevel(ideology, \n                                c(\"Liberal\", \"Moderate\", \"Conservative\"))) |&gt; \n  ggplot(aes(x = ideology, fill = stance)) + \n  geom_bar()"
  },
  {
    "objectID": "slides/2025-02-17-types.html#factor-and-character-variables",
    "href": "slides/2025-02-17-types.html#factor-and-character-variables",
    "title": "Variable Types",
    "section": "Factor and character variables",
    "text": "Factor and character variables\n\nDataPlot\n\n\n\nstarbucks |&gt; \n  select(item, type, calories)\n\n# A tibble: 77 × 3\n   item                          type   calories\n   &lt;chr&gt;                         &lt;fct&gt;     &lt;int&gt;\n 1 \"8-Grain Roll\"                bakery      350\n 2 \"Apple Bran Muffin\"           bakery      350\n 3 \"Apple Fritter\"               bakery      420\n 4 \"Banana Nut Loaf\"             bakery      490\n 5 \"Birthday Cake Mini Doughnut\" bakery      130\n 6 \"Blueberry Oat Bar\"           bakery      370\n 7 \"Blueberry Scone\"             bakery      460\n 8 \"Bountiful Blueberry Muffin\"  bakery      370\n 9 \"Butter Croissant \"           bakery      310\n10 \"Cheese Danish\"               bakery      420\n# ℹ 67 more rows"
  },
  {
    "objectID": "slides/2025-02-17-types.html#reorder-according-to-another-variable",
    "href": "slides/2025-02-17-types.html#reorder-according-to-another-variable",
    "title": "Variable Types",
    "section": "Reorder according to another variable",
    "text": "Reorder according to another variable\nLets say that we wanted to order the type of food item based on the average number of calories in that food.\n\nCodePlotFor funzies\n\n\n\nstarbucks |&gt; \n  mutate(type = fct_reorder(type, calories, .fun = \"mean\", .desc = TRUE)) |&gt; \n  ggplot(aes(x = type, y = calories)) + \n  geom_point() + \n  labs(x = \"type of food\",\n       y = \"\",\n       title = \"Calories for food items at Starbucks\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstarbucks |&gt; \n  mutate(type = fct_reorder(fiber, calories, .fun = \"mean\", .desc = TRUE)) \n\nError in `mutate()`:\nℹ In argument: `type = fct_reorder(fiber, calories, .fun = \"mean\", .desc\n  = TRUE)`.\nCaused by error in `fct_reorder()`:\n! `.f` must be a factor or character vector, not an integer vector."
  },
  {
    "objectID": "slides/2025-02-17-types.html#change-character-to-factor",
    "href": "slides/2025-02-17-types.html#change-character-to-factor",
    "title": "Variable Types",
    "section": "Change character to factor",
    "text": "Change character to factor\n\nOG dataNew factor\n\n\n\nstarbucks\n\n# A tibble: 77 × 7\n   item                       calories   fat  carb fiber protein type \n   &lt;chr&gt;                         &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt; &lt;fct&gt;\n 1 \"8-Grain Roll\"                  350     8    67     5      10 bake…\n 2 \"Apple Bran Muffin\"             350     9    64     7       6 bake…\n 3 \"Apple Fritter\"                 420    20    59     0       5 bake…\n 4 \"Banana Nut Loaf\"               490    19    75     4       7 bake…\n 5 \"Birthday Cake Mini Dough…      130     6    17     0       0 bake…\n 6 \"Blueberry Oat Bar\"             370    14    47     5       6 bake…\n 7 \"Blueberry Scone\"               460    22    61     2       7 bake…\n 8 \"Bountiful Blueberry Muff…      370    14    55     0       6 bake…\n 9 \"Butter Croissant \"             310    18    32     0       5 bake…\n10 \"Cheese Danish\"                 420    25    39     0       7 bake…\n# ℹ 67 more rows\n\n\n\n\n\nstarbucks |&gt; \n  mutate(item = as.factor(item))\n\n# A tibble: 77 × 7\n   item                       calories   fat  carb fiber protein type \n   &lt;fct&gt;                         &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt; &lt;fct&gt;\n 1 \"8-Grain Roll\"                  350     8    67     5      10 bake…\n 2 \"Apple Bran Muffin\"             350     9    64     7       6 bake…\n 3 \"Apple Fritter\"                 420    20    59     0       5 bake…\n 4 \"Banana Nut Loaf\"               490    19    75     4       7 bake…\n 5 \"Birthday Cake Mini Dough…      130     6    17     0       0 bake…\n 6 \"Blueberry Oat Bar\"             370    14    47     5       6 bake…\n 7 \"Blueberry Scone\"               460    22    61     2       7 bake…\n 8 \"Bountiful Blueberry Muff…      370    14    55     0       6 bake…\n 9 \"Butter Croissant \"             310    18    32     0       5 bake…\n10 \"Cheese Danish\"                 420    25    39     0       7 bake…\n# ℹ 67 more rows"
  },
  {
    "objectID": "slides/2025-02-17-types.html#forcats-functions",
    "href": "slides/2025-02-17-types.html#forcats-functions",
    "title": "Variable Types",
    "section": "forcats functions",
    "text": "forcats functions\nThe forcats package within tidyverse contains lots of functions to help process factor variables Use the forcats cheatsheet. We’ll focus on the most common functions.\n\nfunctions for changing the order of factor levels\n\nfct_relevel() = manually reorder levels\nfct_reorder() = reorder levels according to values of another variable\nfct_infreq() = order levels from highest to lowest frequency\nfct_rev() = reverse the current order\n\nfunctions for changing the labels or values of factor levels\n\nfct_recode() = manually change levels\nfct_lump() = group together least common levels\nfct_other() = manually replace some levels with “other”"
  },
  {
    "objectID": "slides/2025-02-17-types.html#formatting-time-variablse",
    "href": "slides/2025-02-17-types.html#formatting-time-variablse",
    "title": "Variable Types",
    "section": "Formatting time variablse",
    "text": "Formatting time variablse\n\nimage credit: https://xkcd.com/1179/"
  },
  {
    "objectID": "slides/2025-02-17-types.html#what-time-is-it",
    "href": "slides/2025-02-17-types.html#what-time-is-it",
    "title": "Variable Types",
    "section": "What time is it?",
    "text": "What time is it?\n\ntoday()\n\n[1] \"2025-02-19\"\n\nnow()\n\n[1] \"2025-02-19 10:27:20 PST\""
  },
  {
    "objectID": "slides/2025-02-17-types.html#creating-dates",
    "href": "slides/2025-02-17-types.html#creating-dates",
    "title": "Variable Types",
    "section": "Creating dates",
    "text": "Creating dates\nymd() and friends create dates\n\nymd(\"2025-02-19\")\n\n[1] \"2025-02-19\"\n\nmdy(\"February 19th, 2025\")\n\n[1] \"2025-02-19\"\n\ndmy(\"19-Feb-2025\")\n\n[1] \"2025-02-19\""
  },
  {
    "objectID": "slides/2025-02-17-types.html#with-times",
    "href": "slides/2025-02-17-types.html#with-times",
    "title": "Variable Types",
    "section": "… with times",
    "text": "… with times\nTo create a date-time, add an underscore and one or more of “h”, “m”, and “s” to the name of the parsing function:\n\nymd_hms(\"2025-02-19 11:45:59\", tz = \"America/Los_Angeles\")\n\n[1] \"2025-02-19 11:45:59 PST\"\n\nmdy_hm(\"02/19/2025 15:01\")  # default is UTC = GMT\n\n[1] \"2025-02-19 15:01:00 UTC\"\n\n\nMore information about time zones in R."
  },
  {
    "objectID": "slides/2025-02-17-types.html#lubridate",
    "href": "slides/2025-02-17-types.html#lubridate",
    "title": "Variable Types",
    "section": "lubridate",
    "text": "lubridate\nlubridate is a another R package meant for data wrangling!\nIn particular, lubridate makes it very easy to work with days, times, and dates. The base idea is to start with dates in a ymd (year month day) format and transform the information into whatever you want.\nExamples from the lubridate vignette."
  },
  {
    "objectID": "slides/2025-02-17-types.html#if-anyone-drove-a-time-machine-they-would-crash",
    "href": "slides/2025-02-17-types.html#if-anyone-drove-a-time-machine-they-would-crash",
    "title": "Variable Types",
    "section": "If anyone drove a time machine, they would crash",
    "text": "If anyone drove a time machine, they would crash\nThe length of months and years change so often that doing arithmetic with them can be unintuitive.\nConsider a simple operation: January 31st + one month."
  },
  {
    "objectID": "slides/2025-02-17-types.html#if-anyone-drove-a-time-machine-they-would-crash-1",
    "href": "slides/2025-02-17-types.html#if-anyone-drove-a-time-machine-they-would-crash-1",
    "title": "Variable Types",
    "section": "If anyone drove a time machine, they would crash",
    "text": "If anyone drove a time machine, they would crash\nThe length of months and years change so often that doing arithmetic with them can be unintuitive.\nConsider a simple operation: January 31st + one month.\nShould the answer be:\n\nFebruary 31st (which doesn’t exist)?\nMarch 3rd (31 days after January 31)?\nFebruary 28th (assuming its not a leap year)?"
  },
  {
    "objectID": "slides/2025-02-17-types.html#if-anyone-drove-a-time-machine-they-would-crash-2",
    "href": "slides/2025-02-17-types.html#if-anyone-drove-a-time-machine-they-would-crash-2",
    "title": "Variable Types",
    "section": "If anyone drove a time machine, they would crash",
    "text": "If anyone drove a time machine, they would crash\nA basic property of arithmetic is that a + b - b = a. Only solution 1 obeys the mathematical property, but it is an invalid date. Wickham wants to make lubridate as consistent as possible by invoking the following rule: if adding or subtracting a month or a year creates an invalid date, lubridate will return an NA. \nIf you thought solution 2 or 3 was more useful, no problem. You can still get those results with clever arithmetic, or by using the special %m+% and %m-% operators. %m+% and %m-% automatically roll dates back to the last day of the month, should that be necessary."
  },
  {
    "objectID": "slides/2025-02-17-types.html#basics-in-lubridate",
    "href": "slides/2025-02-17-types.html#basics-in-lubridate",
    "title": "Variable Types",
    "section": "basics in lubridate",
    "text": "basics in lubridate\n\nlibrary(lubridate)\nrightnow &lt;- now()\nrightnow\n\n[1] \"2025-02-19 10:27:20 PST\"\n\nday(rightnow)\n\n[1] 19\n\nweek(rightnow)\n\n[1] 8\n\nmonth(rightnow, label=FALSE)\n\n[1] 2\n\nmonth(rightnow, label=TRUE)\n\n[1] Feb\n12 Levels: Jan &lt; Feb &lt; Mar &lt; Apr &lt; May &lt; Jun &lt; Jul &lt; Aug &lt; Sep &lt; ... &lt; Dec\n\nyear(rightnow)\n\n[1] 2025"
  },
  {
    "objectID": "slides/2025-02-17-types.html#basics-in-lubridate-1",
    "href": "slides/2025-02-17-types.html#basics-in-lubridate-1",
    "title": "Variable Types",
    "section": "basics in lubridate",
    "text": "basics in lubridate\n\nminute(rightnow)\n\n[1] 27\n\nhour(rightnow)\n\n[1] 10\n\nyday(rightnow)\n\n[1] 50\n\nmday(rightnow)\n\n[1] 19\n\nwday(rightnow, label=FALSE)\n\n[1] 4\n\nwday(rightnow, label=TRUE)\n\n[1] Wed\nLevels: Sun &lt; Mon &lt; Tue &lt; Wed &lt; Thu &lt; Fri &lt; Sat"
  },
  {
    "objectID": "slides/2025-02-17-types.html#working-with-a-date-object",
    "href": "slides/2025-02-17-types.html#working-with-a-date-object",
    "title": "Variable Types",
    "section": "Working with a date object",
    "text": "Working with a date object\n\njan31 &lt;- ymd(\"2025-01-31\")\njan31 + months(0:11)\n\n [1] \"2025-01-31\" NA           \"2025-03-31\" NA           \"2025-05-31\"\n [6] NA           \"2025-07-31\" \"2025-08-31\" NA           \"2025-10-31\"\n[11] NA           \"2025-12-31\"\n\n\n\n\nfloor_date(jan31, \"month\")\n\n[1] \"2025-01-01\"\n\nfloor_date(jan31, \"month\") + months(0:11) + days(31)\n\n [1] \"2025-02-01\" \"2025-03-04\" \"2025-04-01\" \"2025-05-02\" \"2025-06-01\"\n [6] \"2025-07-02\" \"2025-08-01\" \"2025-09-01\" \"2025-10-02\" \"2025-11-01\"\n[11] \"2025-12-02\" \"2026-01-01\"\n\n\n\n\n\njan31 + months(0:11) + days(31)\n\n [1] \"2025-03-03\" NA           \"2025-05-01\" NA           \"2025-07-01\"\n [6] NA           \"2025-08-31\" \"2025-10-01\" NA           \"2025-12-01\"\n[11] NA           \"2026-01-31\"\n\n\n\n\n\njan31 %m+% months(0:11)\n\n [1] \"2025-01-31\" \"2025-02-28\" \"2025-03-31\" \"2025-04-30\" \"2025-05-31\"\n [6] \"2025-06-30\" \"2025-07-31\" \"2025-08-31\" \"2025-09-30\" \"2025-10-31\"\n[11] \"2025-11-30\" \"2025-12-31\""
  },
  {
    "objectID": "slides/2025-02-17-types.html#nyc-flights",
    "href": "slides/2025-02-17-types.html#nyc-flights",
    "title": "Variable Types",
    "section": "NYC flights",
    "text": "NYC flights\n\nlibrary(nycflights13)\nnames(flights)\n\n [1] \"year\"           \"month\"          \"day\"            \"dep_time\"      \n [5] \"sched_dep_time\" \"dep_delay\"      \"arr_time\"       \"sched_arr_time\"\n [9] \"arr_delay\"      \"carrier\"        \"flight\"         \"tailnum\"       \n[13] \"origin\"         \"dest\"           \"air_time\"       \"distance\"      \n[17] \"hour\"           \"minute\"         \"time_hour\""
  },
  {
    "objectID": "slides/2025-02-17-types.html#nyc-flights-1",
    "href": "slides/2025-02-17-types.html#nyc-flights-1",
    "title": "Variable Types",
    "section": "NYC flights",
    "text": "NYC flights\nCreating a date object from variables.\n\nflightsWK &lt;- flights |&gt;  \n   mutate(ymdday = ymd(str_c(year, month, day, sep=\"-\"))) |&gt; \n   mutate(weekdy = wday(ymdday, label=TRUE), \n          whichweek = week(ymdday)) \n\nflightsWK |&gt;  select(year, month, day, ymdday, weekdy, whichweek, \n                     dep_time, arr_time) \n\n# A tibble: 336,776 × 8\n    year month   day ymdday     weekdy whichweek dep_time arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;date&gt;     &lt;ord&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;\n 1  2013     1     1 2013-01-01 Tue            1      517      830\n 2  2013     1     1 2013-01-01 Tue            1      533      850\n 3  2013     1     1 2013-01-01 Tue            1      542      923\n 4  2013     1     1 2013-01-01 Tue            1      544     1004\n 5  2013     1     1 2013-01-01 Tue            1      554      812\n 6  2013     1     1 2013-01-01 Tue            1      554      740\n 7  2013     1     1 2013-01-01 Tue            1      555      913\n 8  2013     1     1 2013-01-01 Tue            1      557      709\n 9  2013     1     1 2013-01-01 Tue            1      557      838\n10  2013     1     1 2013-01-01 Tue            1      558      753\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "slides/2025-02-17-types.html#starbucks-data",
    "href": "slides/2025-02-17-types.html#starbucks-data",
    "title": "Variable Types",
    "section": "Starbucks data",
    "text": "Starbucks data\n\ndataon factoron numericon integers\n\n\n\nset.seed(47)\nstarbucks |&gt; \n  sample_n(10) |&gt; \n  select(item, calories, fat, type)\n\n# A tibble: 10 × 4\n   item                          calories   fat type    \n   &lt;chr&gt;                            &lt;int&gt; &lt;dbl&gt; &lt;fct&gt;   \n 1 \"Morning Bun\"                      350    16 bakery  \n 2 \"Red Velvet Whoopie Pie\"           190    11 petite  \n 3 \"Chonga Bagel\"                     310     5 bakery  \n 4 \"8-Grain Roll\"                     350     8 bakery  \n 5 \"Marshmallow Dream Bar\"            210     4 bakery  \n 6 \"Chocolate Croissant\"              300    17 bakery  \n 7 \"Mallorca Sweet Bread\"             420    25 bakery  \n 8 \"Ham & Swiss Panini\"               360     9 sandwich\n 9 \"Butter Croissant \"                310    18 bakery  \n10 \"Chocolate Creme Whoopie Pie\"      190    11 petite  \n\n\n\n\n\nset.seed(47)\nstarbucks |&gt; \n  sample_n(10) |&gt; \n  select(item, calories, fat, type) |&gt; \n  mutate(TYPE = str_to_upper(type))\n\n# A tibble: 10 × 5\n   item                          calories   fat type     TYPE    \n   &lt;chr&gt;                            &lt;int&gt; &lt;dbl&gt; &lt;fct&gt;    &lt;chr&gt;   \n 1 \"Morning Bun\"                      350    16 bakery   BAKERY  \n 2 \"Red Velvet Whoopie Pie\"           190    11 petite   PETITE  \n 3 \"Chonga Bagel\"                     310     5 bakery   BAKERY  \n 4 \"8-Grain Roll\"                     350     8 bakery   BAKERY  \n 5 \"Marshmallow Dream Bar\"            210     4 bakery   BAKERY  \n 6 \"Chocolate Croissant\"              300    17 bakery   BAKERY  \n 7 \"Mallorca Sweet Bread\"             420    25 bakery   BAKERY  \n 8 \"Ham & Swiss Panini\"               360     9 sandwich SANDWICH\n 9 \"Butter Croissant \"                310    18 bakery   BAKERY  \n10 \"Chocolate Creme Whoopie Pie\"      190    11 petite   PETITE  \n\n\n\n\n\nset.seed(47)\nstarbucks |&gt; \n  sample_n(10) |&gt; \n  select(item, calories, fat, type) |&gt; \n  filter(str_detect(fat, \"1\"))\n\n# A tibble: 5 × 4\n  item                          calories   fat type  \n  &lt;chr&gt;                            &lt;int&gt; &lt;dbl&gt; &lt;fct&gt; \n1 \"Morning Bun\"                      350    16 bakery\n2 \"Red Velvet Whoopie Pie\"           190    11 petite\n3 \"Chocolate Croissant\"              300    17 bakery\n4 \"Butter Croissant \"                310    18 bakery\n5 \"Chocolate Creme Whoopie Pie\"      190    11 petite\n\n\n\n\n\nset.seed(47)\nstarbucks |&gt; \n  sample_n(10) |&gt; \n  select(item, calories, fat, type) |&gt; \n  mutate(newcal = str_replace(calories, \"0\", \"&\"))\n\n# A tibble: 10 × 5\n   item                          calories   fat type     newcal\n   &lt;chr&gt;                            &lt;int&gt; &lt;dbl&gt; &lt;fct&gt;    &lt;chr&gt; \n 1 \"Morning Bun\"                      350    16 bakery   35&   \n 2 \"Red Velvet Whoopie Pie\"           190    11 petite   19&   \n 3 \"Chonga Bagel\"                     310     5 bakery   31&   \n 4 \"8-Grain Roll\"                     350     8 bakery   35&   \n 5 \"Marshmallow Dream Bar\"            210     4 bakery   21&   \n 6 \"Chocolate Croissant\"              300    17 bakery   3&0   \n 7 \"Mallorca Sweet Bread\"             420    25 bakery   42&   \n 8 \"Ham & Swiss Panini\"               360     9 sandwich 36&   \n 9 \"Butter Croissant \"                310    18 bakery   31&   \n10 \"Chocolate Creme Whoopie Pie\"      190    11 petite   19&"
  },
  {
    "objectID": "slides/2025-02-17-types.html#what-can-you-even-do-with-strings",
    "href": "slides/2025-02-17-types.html#what-can-you-even-do-with-strings",
    "title": "Variable Types",
    "section": "What can you even do with strings???",
    "text": "What can you even do with strings???\n\nyes, lots of code to learn\nno, the code doesn’t really matter\nlearning goal for today:\n\n\nwhat can you even do with string variables???"
  },
  {
    "objectID": "slides/2025-02-17-types.html#working-with-strings",
    "href": "slides/2025-02-17-types.html#working-with-strings",
    "title": "Variable Types",
    "section": "Working with strings",
    "text": "Working with strings\n\nyes, lots of code to learn\nno, the code doesn’t really matter\nlearning goal for today:\n\n\nwhat can you even do with string variables???"
  },
  {
    "objectID": "slides/2025-02-17-types.html#what-really-are-levels",
    "href": "slides/2025-02-17-types.html#what-really-are-levels",
    "title": "Variable Types",
    "section": "What really are levels?",
    "text": "What really are levels?\n\nrecoderewritemistakeNULLspecial variables\n\n\n\nx &lt;- factor(c(\"apple\", \"bear\", \"dear\", \"banana\"))\nx\n\n[1] apple  bear   dear   banana\nLevels: apple banana bear dear\n\nfct_recode(x, fruit = \"apple\", fruit = \"banana\")\n\n[1] fruit bear  dear  fruit\nLevels: fruit bear dear\n\n\n\n\n\ndata.frame(words = x) |&gt; \n  mutate(x_recode = fct_recode(words, fruit = \"apple\", fruit = \"banana\"),\n         x_rewrite = ifelse(words == \"apple\", \"fruit\",\n                            ifelse(words == \"banana\", \"fruit\", words))) |&gt; \n  str()\n\n'data.frame':   4 obs. of  3 variables:\n $ words    : Factor w/ 4 levels \"apple\",\"banana\",..: 1 3 4 2\n $ x_recode : Factor w/ 3 levels \"fruit\",\"bear\",..: 1 2 3 1\n $ x_rewrite: chr  \"fruit\" \"3\" \"4\" \"fruit\"\n\n\n\n\n\n# If you make a mistake you'll get a warning\nfct_recode(x, fruit = \"apple\", fruit = \"bananana\")\n\n[1] fruit  bear   dear   banana\nLevels: fruit banana bear dear\n\n\n\n\n\n# If you name the level NULL it will be removed\nfct_recode(x, NULL = \"apple\", fruit = \"banana\")\n\n[1] &lt;NA&gt;  bear  dear  fruit\nLevels: fruit bear dear\n\n\n\n\n\n# Wrap the left hand side in quotes if it contains special variables\nfct_recode(x, \"an apple\" = \"apple\", \"a bear\" = \"bear\")\n\n[1] an apple a bear   dear     banana  \nLevels: an apple banana a bear dear"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#regular-expressions",
    "href": "slides/2025-02-24-regex.html#regular-expressions",
    "title": "Regular Expressions",
    "section": "Regular Expressions",
    "text": "Regular Expressions\n\nA regular expression … is a sequence of characters that define a search pattern. Usually such patterns are used by string searching algorithms for “find” or “find and replace” operations on strings, or for input validation. It is a technique developed in theoretical computer science and formal language theory."
  },
  {
    "objectID": "slides/2025-02-24-regex.html#escape-sequences",
    "href": "slides/2025-02-24-regex.html#escape-sequences",
    "title": "Regular Expressions",
    "section": "Escape sequences",
    "text": "Escape sequences\nJust to scratch the surface, here are a few special characters that cannot be directly coded. Therefore, they are escaped with a backslash, \\.\n\n\\': single quote.\n\n\\\": double quote.\n\n\\n: new line.\n\n\\r: carriage return.\n\n\\t: tab character."
  },
  {
    "objectID": "slides/2025-02-24-regex.html#quantifiers",
    "href": "slides/2025-02-24-regex.html#quantifiers",
    "title": "Regular Expressions",
    "section": "Quantifiers",
    "text": "Quantifiers\nQuantifiers specify how many repetitions of the pattern.\n\n*: matches at least 0 times.\n\n+: matches at least 1 times.\n\n?: matches at most 1 times.\n\n{n}: matches exactly n times.\n\n{n,}: matches at least n times.\n\n{n,m}: matches between n and m times."
  },
  {
    "objectID": "slides/2025-02-24-regex.html#examples-of-quantifiers",
    "href": "slides/2025-02-24-regex.html#examples-of-quantifiers",
    "title": "Regular Expressions",
    "section": "Examples of quantifiers",
    "text": "Examples of quantifiers\n\nstrings &lt;- c(\"a\", \"ab\", \"acb\", \"accb\", \"acccb\", \"accccb\")\nstr_subset(strings, \"ac*b\") \nstr_subset(strings, \"ac+b\") \nstr_subset(strings, \"ac*b\", negate = TRUE)\nstr_subset(strings, \"ac?b\") \nstr_subset(strings, \"ac{2}b\") \nstr_subset(strings, \"ac{2,}b\") \nstr_subset(strings, \"ac{2,3}b\")"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#examples-of-quantifiers---solution",
    "href": "slides/2025-02-24-regex.html#examples-of-quantifiers---solution",
    "title": "Regular Expressions",
    "section": "Examples of quantifiers - solution",
    "text": "Examples of quantifiers - solution\n\nstrings &lt;- c(\"a\", \"ab\", \"acb\", \"accb\", \"acccb\", \"accccb\")\nstr_subset(strings, \"ac*b\") \n\n[1] \"ab\"     \"acb\"    \"accb\"   \"acccb\"  \"accccb\"\n\nstr_subset(strings, \"ac+b\") \n\n[1] \"acb\"    \"accb\"   \"acccb\"  \"accccb\"\n\nstr_subset(strings, \"ac*b\", negate = TRUE)\n\n[1] \"a\"\n\nstr_subset(strings, \"ac?b\") \n\n[1] \"ab\"  \"acb\"\n\nstr_subset(strings, \"ac{2}b\") \n\n[1] \"accb\"\n\nstr_subset(strings, \"ac{2,}b\") \n\n[1] \"accb\"   \"acccb\"  \"accccb\"\n\nstr_subset(strings, \"ac{2,3}b\")\n\n[1] \"accb\"  \"acccb\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#position-of-pattern-within-the-string",
    "href": "slides/2025-02-24-regex.html#position-of-pattern-within-the-string",
    "title": "Regular Expressions",
    "section": "Position of pattern within the string",
    "text": "Position of pattern within the string\n\n^: matches the start of the string.\n\n$: matches the end of the string.\n\n\\b: matches the boundary of a word. Don’t confuse it with ^ $ which marks the edge of a string.1\n\nA word boundary is a position between a word character (typically [A-Za-z0-9_]) and a non-word character (anything that is not a word character, such as whitespace, punctuation, etc.)."
  },
  {
    "objectID": "slides/2025-02-24-regex.html#examples-of-positions",
    "href": "slides/2025-02-24-regex.html#examples-of-positions",
    "title": "Regular Expressions",
    "section": "Examples of positions",
    "text": "Examples of positions\n\nstrings &lt;- c(\"abcd\", \"cdab\", \"cabd\", \"c abd\")\nstr_subset(strings, \"ab\")\nstr_subset(strings, \"^ab\")\nstr_subset(strings, \"ab$\")\nstr_subset(strings, \"\\\\bab\")"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#examples-of-positions---solution",
    "href": "slides/2025-02-24-regex.html#examples-of-positions---solution",
    "title": "Regular Expressions",
    "section": "Examples of positions - solution",
    "text": "Examples of positions - solution\n\nstrings &lt;- c(\"abcd\", \"cdab\", \"cabd\", \"c abd\")\nstr_subset(strings, \"ab\")\n\n[1] \"abcd\"  \"cdab\"  \"cabd\"  \"c abd\"\n\nstr_subset(strings, \"^ab\")\n\n[1] \"abcd\"\n\nstr_subset(strings, \"ab$\")\n\n[1] \"cdab\"\n\nstr_subset(strings, \"\\\\bab\")\n\n[1] \"abcd\"  \"c abd\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#bounding-words-vs.-phrases",
    "href": "slides/2025-02-24-regex.html#bounding-words-vs.-phrases",
    "title": "Regular Expressions",
    "section": "Bounding words vs. phrases",
    "text": "Bounding words vs. phrases\n\nstrings &lt;- c(\"apple\", \"applet\", \"pineapple\", \"apple pie\",\n             \"I love apple pie\")\n\nstr_subset(strings, \"\\\\bapple\\\\b\")\nstr_subset(strings, \"^apple$\")\nstr_subset(strings, \"\\\\bapple pie\\\\b\")\nstr_subset(strings, \"^apple pie$\")"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#bounding-words-vs.-phrases---solutions",
    "href": "slides/2025-02-24-regex.html#bounding-words-vs.-phrases---solutions",
    "title": "Regular Expressions",
    "section": "Bounding words vs. phrases - solutions",
    "text": "Bounding words vs. phrases - solutions\n\nstrings &lt;- c(\"apple\", \"applet\", \"pineapple\", \"apple pie\",\n             \"I love apple pie\")\n\nstr_subset(strings, \"\\\\bapple\\\\b\")\n\n[1] \"apple\"            \"apple pie\"        \"I love apple pie\"\n\nstr_subset(strings, \"^apple$\")\n\n[1] \"apple\"\n\nstr_subset(strings, \"\\\\bapple pie\\\\b\")\n\n[1] \"apple pie\"        \"I love apple pie\"\n\nstr_subset(strings, \"^apple pie$\")\n\n[1] \"apple pie\"\n\nstr_extract(strings, \"\\\\bapple\\\\b\")\n\n[1] \"apple\" NA      NA      \"apple\" \"apple\"\n\nstr_extract(strings, \"^apple$\")\n\n[1] \"apple\" NA      NA      NA      NA     \n\nstr_extract(strings, \"\\\\bapple pie\\\\b\")\n\n[1] NA          NA          NA          \"apple pie\" \"apple pie\"\n\nstr_extract(strings, \"^apple pie$\")\n\n[1] NA          NA          NA          \"apple pie\" NA"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#operators",
    "href": "slides/2025-02-24-regex.html#operators",
    "title": "Regular Expressions",
    "section": "Operators",
    "text": "Operators\n\n.: matches any single character,\n[...]: a character list, matches any one of the characters inside the square brackets. A - inside the brackets specifies a range of characters.\n\n[^...]: an inverted character list, similar to [...], but matches any characters except those inside the square brackets.\n\n\\: suppress the special meaning of metacharacters in regular expression, i.e. $ * + . ? [ ] ^ { } | ( ) \\. Since \\ itself needs to be escaped in R, we need to escape metacharacters with double backslash like \\\\$.\n\n|: an “or” operator, matches patterns on either side of the |.\n\n(...): grouping in regular expressions. This allows you to retrieve the bits that matched various parts of your regular expression so you can alter them or use them for building up a new string.\nnote: both (ab|cde) or ab|cde match either the string ab or the string cde. However, ab | cde matches ab cde (and does not match either of ab or cde) because the “or” is now whitespace on either side of |."
  },
  {
    "objectID": "slides/2025-02-24-regex.html#examples-of-operators",
    "href": "slides/2025-02-24-regex.html#examples-of-operators",
    "title": "Regular Expressions",
    "section": "Examples of operators",
    "text": "Examples of operators\n\nstrings &lt;- c(\"^ab\", \"ab\", \"abc\", \"abd\", \"abe\", \"ab 12\", \"a|b\")\nstr_subset(strings, \"ab.\")\nstr_subset(strings, \"ab[c-e]\")\nstr_subset(strings, \"ab[^c]\")\nstr_subset(strings, \"^ab\")\nstr_subset(strings, \"\\\\^ab\")\nstr_subset(strings, \"abc|abd\")\nstr_subset(strings, \"ab|c\")\nstr_subset(strings, \"ab | c\")\nstr_subset(strings, \"(ab)|c\")\nstr_subset(strings, \"(ab|c)\")\nstr_subset(strings, \"a(b|c)\")\nstr_subset(strings, \"a[b|c]\")\nstr_extract(strings, \"a[b|c]\")"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#examples-of-operators---solution",
    "href": "slides/2025-02-24-regex.html#examples-of-operators---solution",
    "title": "Regular Expressions",
    "section": "Examples of operators - solution1",
    "text": "Examples of operators - solution1\n\nstrings &lt;- c(\"^ab\", \"ab\", \"abc\", \"abd\", \"abe\", \"ab 12\", \"a|b\")\nstr_subset(strings, \"ab.\")\n\n[1] \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"ab[c-e]\")\n\n[1] \"abc\" \"abd\" \"abe\"\n\nstr_subset(strings, \"ab[^c]\")\n\n[1] \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"^ab\")\n\n[1] \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"\\\\^ab\")\n\n[1] \"^ab\"\n\nstr_subset(strings, \"abc|abd\")\n\n[1] \"abc\" \"abd\"\n\nstr_subset(strings, \"ab|c\")\n\n[1] \"^ab\"   \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"ab | c\")\n\n[1] \"ab 12\"\n\nstr_subset(strings, \"(ab)|c\")\n\n[1] \"^ab\"   \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"(ab|c)\")\n\n[1] \"^ab\"   \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"a(b|c)\")\n\n[1] \"^ab\"   \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"a[b|c]\")\n\n[1] \"^ab\"   \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\" \"a|b\"  \n\nstr_extract(strings, \"a[b|c]\")\n\n[1] \"ab\" \"ab\" \"ab\" \"ab\" \"ab\" \"ab\" \"a|\"\n\n\nit turns out that “ab|c” and “(ab)|c” and “(ab|c)” are all equivalent! Additionally, different regular expression parsers will treat spaces differently."
  },
  {
    "objectID": "slides/2025-02-24-regex.html#character-classes",
    "href": "slides/2025-02-24-regex.html#character-classes",
    "title": "Regular Expressions",
    "section": "Character classes",
    "text": "Character classes\nCharacter classes allow specifying entire classes of characters, such as numbers, letters, etc. There are two flavors of character classes, one uses [: and :] around a predefined name inside square brackets and the other uses \\ and a special character. They are sometimes interchangeable.\n\n(?i) before the string indicates that the match should be case insensitive (will make the entire string case insensitive).\n[:digit:] or \\d: digits, 0 1 2 3 4 5 6 7 8 9, equivalent to [0-9].\n\n\\D: non-digits, equivalent to [^0-9].\n\n[:lower:]: lower-case letters, equivalent to [a-z].\n\n[:upper:]: upper-case letters, equivalent to [A-Z].\n\n[:alpha:]: alphabetic characters, equivalent to [[:lower:][:upper:]] or [A-z].\n\n[:alnum:]: alphanumeric characters, equivalent to [[:alpha:][:digit:]] or [A-z0-9].\n\n\\w: word characters, equivalent to [[:alnum:]_] or [A-z0-9_] (letter, number, or underscore).\n\n\\W: not word, equivalent to [^A-z0-9_].\n\n[:blank:]: blank characters, i.e. space and tab.\n\n[:space:]: space characters: tab, new line, vertical tab, form feed, carriage return, space.\n\\s: whitespace.\n\n\\S: not whitespace.\n\n[:punct:]: punctuation characters, ! ” # $ % & ’ ( ) * + , - . / : ; &lt; = &gt; ? @ [  ] ^ _ ` { | } ~.\n[:graph:]: graphical (human readable) characters: equivalent to [[:alnum:][:punct:]].\n[:print:]: printable characters, equivalent to [[:alnum:][:punct:]\\\\s]."
  },
  {
    "objectID": "slides/2025-02-24-regex.html#thoughts-on-characters-and-spaces",
    "href": "slides/2025-02-24-regex.html#thoughts-on-characters-and-spaces",
    "title": "Regular Expressions",
    "section": "Thoughts on characters and spaces",
    "text": "Thoughts on characters and spaces\n\n. matches any single character except a newline \\n.\n. does match whitespace (e.g., a space or tab)\n\\s matches any whitespace including: spaces, tabs, new lines, and carriage returns\n[ \\t] matches spaces and tabs only (not new lines or carriage returns)\n[^\\s] matches any character except whitespace (including spaces, tabs, and new lines)\n[^\\s] and [\\S] are functionally equivalent\nThe pattern [\\s\\S] matches any character including newlines and tabs.\n\\w matches any single word character (including letters, digits, and the underscore character _)\n\\B: matches the empty string provided it is not at an edge of a word."
  },
  {
    "objectID": "slides/2025-02-24-regex.html#case-insenstive",
    "href": "slides/2025-02-24-regex.html#case-insenstive",
    "title": "Regular Expressions",
    "section": "Case insenstive",
    "text": "Case insenstive\n\nMatch only the word meter in “The cemetery is 1 meter from the stop sign.”\nAlso match Meter in “The cemetery is 1 Meter from the stop sign.”"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#case-insenstive-1",
    "href": "slides/2025-02-24-regex.html#case-insenstive-1",
    "title": "Regular Expressions",
    "section": "Case insenstive",
    "text": "Case insenstive\n\nMatch only the word meter in “The cemetery is 1 meter from the stop sign.”\nAlso match Meter and meTer …\n\n\nstring &lt;- c(\"The cemetery is 1 meter from the stop sign.\", \n            \"The cemetery is 1 Meter from the stop sign.\",\n            \"The cemetery is 1 meTer from the stop sign.\")\n\nstr_extract(string, \"(?i)\\\\bmeter\\\\b\")\n\n[1] \"meter\" \"Meter\" \"meTer\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#proper-times-and-dates",
    "href": "slides/2025-02-24-regex.html#proper-times-and-dates",
    "title": "Regular Expressions",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch dates like 01/15/24 and also like 01.15.24 and like 01-15-24.\n\n\nstring &lt;- c(\"01/15/24\", \"01.15.24\", \"01-15-24\", \"011524\", \n            \"January 15, 2024\")"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#proper-times-and-dates-1",
    "href": "slides/2025-02-24-regex.html#proper-times-and-dates-1",
    "title": "Regular Expressions",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch dates like 01/15/24 and also like 01.15.24 and like 01-15-24.\n\n\nstring &lt;- c(\"01/15/24\", \"01.15.24\", \"01-15-24\", \"01 15 24\", \n            \"011524\", \"January 15, 2024\")\n\nstr_extract(string, \"\\\\d\\\\d.\\\\d\\\\d.\\\\d\\\\d\")\n\n[1] \"01/15/24\" \"01.15.24\" \"01-15-24\" \"01 15 24\" NA         NA        \n\nstr_extract(string, \"\\\\d\\\\d[/.\\\\-]\\\\d\\\\d[/.\\\\-]\\\\d\\\\d\")\n\n[1] \"01/15/24\" \"01.15.24\" \"01-15-24\" NA         NA         NA        \n\nstr_extract(string, \"\\\\d{2}[/.\\\\-]\\\\d{2}[/.\\\\-]\\\\d{2}\")\n\n[1] \"01/15/24\" \"01.15.24\" \"01-15-24\" NA         NA         NA"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#proper-times-and-dates-2",
    "href": "slides/2025-02-24-regex.html#proper-times-and-dates-2",
    "title": "Regular Expressions",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch a time of day such as “9:17 am” or “12:30 pm”. Require that the time be a valid time (not “99:99 pm”). Assume no leading zeros (i.e., “09:17 am”).\n\n\nstring &lt;- c(\"9:17 am\", \"12:30 pm\", \"99:99 pm\", \"09:17 am\")"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#proper-times-and-dates-3",
    "href": "slides/2025-02-24-regex.html#proper-times-and-dates-3",
    "title": "Regular Expressions",
    "section": "Proper times and dates",
    "text": "Proper times and dates\n\nMatch a time of day such as “9:17 am” or “12:30 pm”. Require that the time be a valid time (not “99:99 pm”). Assume no leading zeros (i.e., “09:17 am”).\n\n^(1[012]|[1-9]):[0-5][0-9] (am|pm)$\n\nstring &lt;- c(\"9:17 am\", \"12:30 pm\", \"99:99 pm\", \"09:17 am\")\n\nstr_extract(string, \"(1[012]|[1-9]):[0-5][0-9] (am|pm)\")\n\n[1] \"9:17 am\"  \"12:30 pm\" NA         \"9:17 am\" \n\nstr_extract(string, \"^(1[012]|[1-9]):[0-5][0-9] (am|pm)$\")\n\n[1] \"9:17 am\"  \"12:30 pm\" NA         NA"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#alternation-operator",
    "href": "slides/2025-02-24-regex.html#alternation-operator",
    "title": "Regular Expressions",
    "section": "Alternation operator",
    "text": "Alternation operator\nThe “or” operator, | has the lowest precedence and parentheses have the highest precedence, which means that parentheses get evaluated before “or”.\n\nWhat is the difference between \\bMary|Jane|Sue\\b and \\b(Mary|Jane|Sue)\\b?\n\n\nstring &lt;- c(\"Mary\", \"Mar\", \"Janet\", \"jane\", \"Susan\", \"Sue\")\n\nstr_extract(string, \"\\\\bMary|Jane|Sue\\\\b\")\nstr_extract(string, \"\\\\b(Mary|Jane|Sue)\\\\b\")"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#alternation-operator-1",
    "href": "slides/2025-02-24-regex.html#alternation-operator-1",
    "title": "Regular Expressions",
    "section": "Alternation operator",
    "text": "Alternation operator\nThe “or” operator, | has the lowest precedence and parentheses have the highest precedence, which means that parentheses get evaluated before “or”.\n\nWhat is the difference between \\bMary|Jane|Sue\\b and \\b(Mary|Jane|Sue)\\b?\n\n\nstring &lt;- c(\"Mary\", \"Mar\", \"Janet\", \"jane\", \"Susan\", \"Sue\")\n\nstr_extract(string, \"\\\\bMary|Jane|Sue\\\\b\")\n\n[1] \"Mary\" NA     \"Jane\" NA     NA     \"Sue\" \n\nstr_extract(string, \"\\\\b(Mary|Jane|Sue)\\\\b\")\n\n[1] \"Mary\" NA     NA     NA     NA     \"Sue\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#lookaround",
    "href": "slides/2025-02-24-regex.html#lookaround",
    "title": "Regular Expressions",
    "section": "Lookaround",
    "text": "Lookaround\nA lookaround specifies a place in the regular expression that will anchor the string you’d like to match.\n\n“x(?=y)” – positive lookahead (matches ‘x’ when it is followed by ‘y’)\n“x(?!y)” – negative lookahead (matches ‘x’ when it is not followed by ‘y’)\n“(?&lt;=y)x” – positive lookbehind (matches ‘x’ when it is preceded by ‘y’)\n“(?&lt;!y)x” – negative lookbehind (matches ‘x’ when it is not preceded by ‘y’)"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#lookaround-1",
    "href": "slides/2025-02-24-regex.html#lookaround-1",
    "title": "Regular Expressions",
    "section": "Lookaround",
    "text": "Lookaround\n\n\nFigure 1: Image credit: Stefan Judis https://www.stefanjudis.com/blog/a-regular-expression-lookahead-lookbehind-cheat-sheet/"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#example---taskmaster",
    "href": "slides/2025-02-24-regex.html#example---taskmaster",
    "title": "Regular Expressions",
    "section": "Example - Taskmaster",
    "text": "Example - Taskmaster\nData scraped from the wiki site for the TV series, Taskmaster.\n\n\nFigure 2: Taskmaster Wiki https://taskmaster.fandom.com/wiki/Series_11"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#scraping-and-wrangling-taskmaster",
    "href": "slides/2025-02-24-regex.html#scraping-and-wrangling-taskmaster",
    "title": "Regular Expressions",
    "section": "Scraping and wrangling Taskmaster",
    "text": "Scraping and wrangling Taskmaster\nGoal: to scrape the Taskmaster wiki into a data frame including task, description, episode, episode name, air date, contestant, score, and series.1\n\nresults &lt;- read_html(\"https://taskmaster.fandom.com/wiki/Series_11\") |&gt;\n  html_element(\".tmtable\") |&gt; \n  html_table() |&gt;\n  mutate(episode = ifelse(startsWith(Task, \"Episode\"), Task, NA)) |&gt;\n  fill(episode, .direction = \"down\") |&gt;\n  filter(!startsWith(Task, \"Episode\"), \n         !(Task %in% c(\"Total\", \"Grand Total\"))) |&gt;\n  pivot_longer(cols = -c(Task, Description, episode),\n               names_to = \"contestant\",\n               values_to = \"score\") |&gt;\n  mutate(series = 11)\n\nThanks to Ciaran Evans at Wake Forest University for example and code, https://sta279-f23.github.io/"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#scraping-and-wrangling-taskmaster-data---results",
    "href": "slides/2025-02-24-regex.html#scraping-and-wrangling-taskmaster-data---results",
    "title": "Regular Expressions",
    "section": "Scraping and wrangling Taskmaster data - results",
    "text": "Scraping and wrangling Taskmaster data - results\n\nresults |&gt; \n  select(Task, Description, episode, contestant, score, series) |&gt;\n  head(10)\n\n# A tibble: 10 × 6\n   Task  Description                   episode contestant score series\n   &lt;chr&gt; &lt;chr&gt;                         &lt;chr&gt;   &lt;chr&gt;      &lt;chr&gt;  &lt;dbl&gt;\n 1 1     Prize: Best thing you can ca… Episod… Charlotte… 1         11\n 2 1     Prize: Best thing you can ca… Episod… Jamali Ma… 2         11\n 3 1     Prize: Best thing you can ca… Episod… Lee Mack   4         11\n 4 1     Prize: Best thing you can ca… Episod… Mike Wozn… 5         11\n 5 1     Prize: Best thing you can ca… Episod… Sarah Ken… 3         11\n 6 2     Do the most impressive thing… Episod… Charlotte… 2         11\n 7 2     Do the most impressive thing… Episod… Jamali Ma… 3[1]      11\n 8 2     Do the most impressive thing… Episod… Lee Mack   3         11\n 9 2     Do the most impressive thing… Episod… Mike Wozn… 5         11\n10 2     Do the most impressive thing… Episod… Sarah Ken… 4         11"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#more-succinct-results",
    "href": "slides/2025-02-24-regex.html#more-succinct-results",
    "title": "Regular Expressions",
    "section": "more succinct results",
    "text": "more succinct results\n\n   Task  Description         episode   contestant score series\n  1     Prize: Best thing…  Episode 1… Charlotte… 1         11\n  1     Prize: Best thing…  Episode 1… Jamali Ma… 2         11\n  1     Prize: Best thing…  Episode 1… Lee Mack   4         11\n  1     Prize: Best thing…  Episode 1… Mike Wozn… 5         11\n  1     Prize: Best thing…  Episode 1… Sarah Ken… 3         11\n  2     Do the most…        Episode 1… Charlotte… 2         11\n  2     Do the most…        Episode 1… Jamali Ma… 3[1]      11\n  2     Do the most…        Episode 1… Lee Mack   3         11\n  2     Do the most…        Episode 1… Mike Wozn… 5         11\n  2     Do the most…        Episode 1… Sarah Ken… 4         11\n\nCurrently, the episode column contains entries like\n\n\"Episode 1: It's not your fault. (18 March 2021)\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#cleaning-the-score-column",
    "href": "slides/2025-02-24-regex.html#cleaning-the-score-column",
    "title": "Regular Expressions",
    "section": "Cleaning the score column",
    "text": "Cleaning the score column\n\nresults |&gt; select(score) |&gt; table()\n\nscore\n   –    ✔    ✘    0    1    2    3 3[1] 3[2] 3[3]    4 4[2] 4[3]    5   DQ \n   7    1    1   11   37   42   47    1    3    1   49    1    1   55   13 \n\n\nHow should the scores be stored? What is the cleaning task?\n\n\nFigure 3: Taskmaster Wiki https://taskmaster.fandom.com/wiki/Series_11"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-numeric-information",
    "href": "slides/2025-02-24-regex.html#extracting-numeric-information",
    "title": "Regular Expressions",
    "section": "Extracting numeric information",
    "text": "Extracting numeric information\nSuppose we have the following string:\n\n\"3[1]\"\n\nAnd we want to extract just the number “3”:\n\nstr_extract(\"3[1]\", \"3\")\n\n[1] \"3\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-numeric-information-1",
    "href": "slides/2025-02-24-regex.html#extracting-numeric-information-1",
    "title": "Regular Expressions",
    "section": "Extracting numeric information",
    "text": "Extracting numeric information\nWhat if we don’t know which number to extract?\n\nstr_extract(\"3[1]\", \"\\\\d\")\n\n[1] \"3\"\n\n\n\nstr_extract(\"4[1]\", \"\\\\d\")\n\n[1] \"4\"\n\n\n\nstr_extract(\"10[1]\", \"\\\\d\")\n\n[1] \"1\"\n\n\n\nstr_extract(\"10[1]\", \"\\\\d+\")\n\n[1] \"10\"\n\n\n\nstr_extract(\"DQ\", \"\\\\d\")\n\n[1] NA"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#str_extract",
    "href": "slides/2025-02-24-regex.html#str_extract",
    "title": "Regular Expressions",
    "section": "str_extract()",
    "text": "str_extract()\nstr_extract() is an R function in the stringr package which can find regular expressions in strings of text.\n\nstr_extract(\"My cat is 3 years old\", \"cat\")\n\n[1] \"cat\"\n\n\n\nstr_extract(\"My cat is 3 years old\", \"3\")\n\n[1] \"3\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#matching-multiple-options",
    "href": "slides/2025-02-24-regex.html#matching-multiple-options",
    "title": "Regular Expressions",
    "section": "Matching multiple options",
    "text": "Matching multiple options\nstr_extract() returns the first match; str_extract_all() allows more than one match.\n\nstr_extract(\"My cat is 3 years old\", \"cat|dog\")\n\n[1] \"cat\"\n\nstr_extract(\"My dog is 10 years old\", \"cat|dog\")\n\n[1] \"dog\"\n\nstr_extract(\"My dog is 10 years old, my cat is 3 years old\", \n            \"cat|dog\")\n\n[1] \"dog\"\n\nstr_extract_all(\"My dog is 10 years old, my cat is 3 years old\", \n                \"cat|dog\")\n\n[[1]]\n[1] \"dog\" \"cat\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#matching-groups-of-characters",
    "href": "slides/2025-02-24-regex.html#matching-groups-of-characters",
    "title": "Regular Expressions",
    "section": "Matching groups of characters",
    "text": "Matching groups of characters\nWhat if I want to extract a number?\n\nstr_extract(\"My cat is 3 years old\", \"\\\\d\")\n\n[1] \"3\"\n\n\nWhat will the result be for the following code?\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#matching-groups-of-characters-1",
    "href": "slides/2025-02-24-regex.html#matching-groups-of-characters-1",
    "title": "Regular Expressions",
    "section": "Matching groups of characters",
    "text": "Matching groups of characters\nWhat if I want to extract a number?\n\nstr_extract(\"My cat is 3 years old\", \"\\\\d\")\n\n[1] \"3\"\n\n\nWhat will the result be for the following code?\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")\n\n[1] \"1\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#matching-groups-of-characters-2",
    "href": "slides/2025-02-24-regex.html#matching-groups-of-characters-2",
    "title": "Regular Expressions",
    "section": "Matching groups of characters",
    "text": "Matching groups of characters\nWhat if I want to extract a number?\n\nstr_extract(\"My cat is 3 years old\", \"\\\\d\")\n\n[1] \"3\"\n\n\nWhat will the result be for the following code?\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")\n\n[1] \"1\"\n\n\nThe + symbol in a regular expression means “repeated one or more times”\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d+\")\n\n[1] \"10\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-from-multiple-strings",
    "href": "slides/2025-02-24-regex.html#extracting-from-multiple-strings",
    "title": "Regular Expressions",
    "section": "Extracting from multiple strings",
    "text": "Extracting from multiple strings\n\nstrings &lt;- c(\"My cat is 3 years old\", \"My dog is 10 years old\")\nstr_extract(strings, \"\\\\d+\")\n\n[1] \"3\"  \"10\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-from-multiple-strings-1",
    "href": "slides/2025-02-24-regex.html#extracting-from-multiple-strings-1",
    "title": "Regular Expressions",
    "section": "Extracting from multiple strings",
    "text": "Extracting from multiple strings\nWhat if we have multiple instances across multiple strings? We need to be careful working with lists (instead of vectors).\n\nstrings &lt;- c(\"My cat is 3 years old\", \"My dog is 10 years old\")\nstr_extract(strings, \"\\\\w\")\nstr_extract_all(strings, \"\\\\w\")\nstr_extract(strings, \"\\\\w+\")\nstr_extract_all(strings, \"\\\\w+\")"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-from-multiple-strings-2",
    "href": "slides/2025-02-24-regex.html#extracting-from-multiple-strings-2",
    "title": "Regular Expressions",
    "section": "Extracting from multiple strings",
    "text": "Extracting from multiple strings\nWhat if we have multiple instances across multiple strings? We need to be careful working with lists (instead of vectors).\n\nstrings &lt;- c(\"My cat is 3 years old\", \"My dog is 10 years old\")\nstr_extract(strings, \"\\\\w\")\n\n[1] \"M\" \"M\"\n\nstr_extract_all(strings, \"\\\\w\")\n\n[[1]]\n [1] \"M\" \"y\" \"c\" \"a\" \"t\" \"i\" \"s\" \"3\" \"y\" \"e\" \"a\" \"r\" \"s\" \"o\" \"l\" \"d\"\n\n[[2]]\n [1] \"M\" \"y\" \"d\" \"o\" \"g\" \"i\" \"s\" \"1\" \"0\" \"y\" \"e\" \"a\" \"r\" \"s\" \"o\" \"l\" \"d\"\n\nstr_extract(strings, \"\\\\w+\")\n\n[1] \"My\" \"My\"\n\nstr_extract_all(strings, \"\\\\w+\")\n\n[[1]]\n[1] \"My\"    \"cat\"   \"is\"    \"3\"     \"years\" \"old\"  \n\n[[2]]\n[1] \"My\"    \"dog\"   \"is\"    \"10\"    \"years\" \"old\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-episode-information",
    "href": "slides/2025-02-24-regex.html#extracting-episode-information",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nCurrently, the episode column contains entries like:\n\n\"Episode 2: The pie whisperer. (4 August 2015)\"\n\nHow would I extract just the episode number?"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-episode-information-1",
    "href": "slides/2025-02-24-regex.html#extracting-episode-information-1",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nCurrently, the episode column contains entries like:\n\n\"Episode 2: The pie whisperer. (4 August 2015)\"\n\nHow would I extract just the episode number?\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\d+\")\n\n[1] \"2\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-episode-information-2",
    "href": "slides/2025-02-24-regex.html#extracting-episode-information-2",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nCurrently, the episode column contains entries like:\n\n\"Episode 2: The pie whisperer. (4 August 2015)\"\n\nHow would I extract the episode name?\nGoal: find a pattern to match: anything that starts with a :, ends with a .\nLet’s break down that task into pieces."
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-episode-information-3",
    "href": "slides/2025-02-24-regex.html#extracting-episode-information-3",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nHow can we find the period at the end of the sentence? What does each of these lines of code return?\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".\")\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".+\")\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\.\")"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-episode-information---solution",
    "href": "slides/2025-02-24-regex.html#extracting-episode-information---solution",
    "title": "Regular Expressions",
    "section": "Extracting episode information - solution",
    "text": "Extracting episode information - solution\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".\")\n\n[1] \"E\"\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".+\")\n\n[1] \"Episode 2: The pie whisperer. (4 August 2015)\"\n\n\nWe use an escape character when we actually want to choose a period:\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\.\")\n\n[1] \".\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-episode-information-4",
    "href": "slides/2025-02-24-regex.html#extracting-episode-information-4",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nGoal: find a pattern to match: anything that starts with a :, ends with a .\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\",\n            \":.+\\\\.\")\n\n[1] \": The pie whisperer.\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#lookaround-again",
    "href": "slides/2025-02-24-regex.html#lookaround-again",
    "title": "Regular Expressions",
    "section": "Lookaround (again)",
    "text": "Lookaround (again)\n\n\nFigure 4: Image credit: Stefan Judis https://www.stefanjudis.com/blog/a-regular-expression-lookahead-lookbehind-cheat-sheet/"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#lookbehinds",
    "href": "slides/2025-02-24-regex.html#lookbehinds",
    "title": "Regular Expressions",
    "section": "Lookbehinds",
    "text": "Lookbehinds\n(?&lt;=y)x – positive lookbehind (matches ‘x’ when it is preceded by ‘y’)\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=: ).+\")\n\n[1] \"The pie whisperer. (4 August 2015)\"\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=\\\\. ).+\")\n\n[1] \"(4 August 2015)\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#lookaheads",
    "href": "slides/2025-02-24-regex.html#lookaheads",
    "title": "Regular Expressions",
    "section": "Lookaheads",
    "text": "Lookaheads\nx(?=y) – positive lookahead (matches ‘x’ when it is followed by ‘y’)\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \".+(?=\\\\.)\")\n\n[1] \"Episode 2: The pie whisperer\"\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \".+(?=:)\")\n\n[1] \"Episode 2\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-episode-information-5",
    "href": "slides/2025-02-24-regex.html#extracting-episode-information-5",
    "title": "Regular Expressions",
    "section": "Extracting episode information",
    "text": "Extracting episode information\nGetting everything between the : and the .\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=: ).+(?=\\\\.)\")\n\n[1] \"The pie whisperer\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-air-date",
    "href": "slides/2025-02-24-regex.html#extracting-air-date",
    "title": "Regular Expressions",
    "section": "Extracting air date",
    "text": "Extracting air date\nI want to extract just the air date. What pattern do I want to match?\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", ...)"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#extracting-air-date-1",
    "href": "slides/2025-02-24-regex.html#extracting-air-date-1",
    "title": "Regular Expressions",
    "section": "Extracting air date",
    "text": "Extracting air date\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \n            \"(?&lt;=\\\\().+(?=\\\\))\")\n\n[1] \"4 August 2015\""
  },
  {
    "objectID": "slides/2025-02-24-regex.html#wrangling-the-episode-info",
    "href": "slides/2025-02-24-regex.html#wrangling-the-episode-info",
    "title": "Regular Expressions",
    "section": "Wrangling the episode info",
    "text": "Wrangling the episode info\nCurrently:\n\n\n# A tibble: 270 × 1\n   episode                                        \n   &lt;chr&gt;                                          \n 1 Episode 1: It's not your fault. (18 March 2021)\n 2 Episode 1: It's not your fault. (18 March 2021)\n 3 Episode 1: It's not your fault. (18 March 2021)\n 4 Episode 1: It's not your fault. (18 March 2021)\n 5 Episode 1: It's not your fault. (18 March 2021)\n 6 Episode 1: It's not your fault. (18 March 2021)\n 7 Episode 1: It's not your fault. (18 March 2021)\n 8 Episode 1: It's not your fault. (18 March 2021)\n 9 Episode 1: It's not your fault. (18 March 2021)\n10 Episode 1: It's not your fault. (18 March 2021)\n# ℹ 260 more rows"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#wrangling-the-episode-info-1",
    "href": "slides/2025-02-24-regex.html#wrangling-the-episode-info-1",
    "title": "Regular Expressions",
    "section": "Wrangling the episode info",
    "text": "Wrangling the episode info\nOne option:\n\nresults |&gt;\n  select(episode) |&gt;\n  mutate(episode_name = str_extract(episode, \"(?&lt;=: ).+(?=\\\\.)\"),\n         air_date = str_extract(episode, \"(?&lt;=\\\\().+(?=\\\\))\"),\n         episode = str_extract(episode, \"\\\\d+\")) |&gt; \n  mutate(air_date2 = dmy(air_date))\n\n# A tibble: 270 × 4\n   episode episode_name        air_date      air_date2 \n   &lt;chr&gt;   &lt;chr&gt;               &lt;chr&gt;         &lt;date&gt;    \n 1 1       It's not your fault 18 March 2021 2021-03-18\n 2 1       It's not your fault 18 March 2021 2021-03-18\n 3 1       It's not your fault 18 March 2021 2021-03-18\n 4 1       It's not your fault 18 March 2021 2021-03-18\n 5 1       It's not your fault 18 March 2021 2021-03-18\n 6 1       It's not your fault 18 March 2021 2021-03-18\n 7 1       It's not your fault 18 March 2021 2021-03-18\n 8 1       It's not your fault 18 March 2021 2021-03-18\n 9 1       It's not your fault 18 March 2021 2021-03-18\n10 1       It's not your fault 18 March 2021 2021-03-18\n# ℹ 260 more rows"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#wrangling-the-episode-info-2",
    "href": "slides/2025-02-24-regex.html#wrangling-the-episode-info-2",
    "title": "Regular Expressions",
    "section": "Wrangling the episode info",
    "text": "Wrangling the episode info\nAnother option:\n\nresults |&gt;\n  separate_wider_regex(episode, \n                       patterns = c(\".+ \", \n                                    episode = \"\\\\d+\", \n                                    \": \", \n                                    episode_name = \".+\", \n                                    \"\\\\. \\\\(\", \n                                    air_date = \".+\", \n                                    \"\\\\)\")) |&gt; \n  mutate(air_date2 = dmy(air_date))\n\n\n\n# A tibble: 270 × 4\n   episode episode_name        air_date      air_date2 \n   &lt;chr&gt;   &lt;chr&gt;               &lt;chr&gt;         &lt;date&gt;    \n 1 1       It's not your fault 18 March 2021 2021-03-18\n 2 1       It's not your fault 18 March 2021 2021-03-18\n 3 1       It's not your fault 18 March 2021 2021-03-18\n 4 1       It's not your fault 18 March 2021 2021-03-18\n 5 1       It's not your fault 18 March 2021 2021-03-18\n 6 1       It's not your fault 18 March 2021 2021-03-18\n 7 1       It's not your fault 18 March 2021 2021-03-18\n 8 1       It's not your fault 18 March 2021 2021-03-18\n 9 1       It's not your fault 18 March 2021 2021-03-18\n10 1       It's not your fault 18 March 2021 2021-03-18\n# ℹ 260 more rows"
  },
  {
    "objectID": "slides/2025-02-24-regex.html#examples-of-operators---solution-.scrollable",
    "href": "slides/2025-02-24-regex.html#examples-of-operators---solution-.scrollable",
    "title": "Regular Expressions",
    "section": "Examples of operators - solution {.scrollable}1",
    "text": "Examples of operators - solution {.scrollable}1\n\nstrings &lt;- c(\"^ab\", \"ab\", \"abc\", \"abd\", \"abe\", \"ab 12\", \"a|b\")\nstr_subset(strings, \"ab.\")\n\n[1] \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"ab[c-e]\")\n\n[1] \"abc\" \"abd\" \"abe\"\n\nstr_subset(strings, \"ab[^c]\")\n\n[1] \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"^ab\")\n\n[1] \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"\\\\^ab\")\n\n[1] \"^ab\"\n\nstr_subset(strings, \"abc|abd\")\n\n[1] \"abc\" \"abd\"\n\nstr_subset(strings, \"ab|c\")\n\n[1] \"^ab\"   \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"(ab)|c\")\n\n[1] \"^ab\"   \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"(ab|c)\")\n\n[1] \"^ab\"   \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"a(b|c)\")\n\n[1] \"^ab\"   \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\"\n\nstr_subset(strings, \"a[b|c]\")\n\n[1] \"^ab\"   \"ab\"    \"abc\"   \"abd\"   \"abe\"   \"ab 12\" \"a|b\"  \n\nstr_extract(strings, \"a[b|c]\")\n\n[1] \"ab\" \"ab\" \"ab\" \"ab\" \"ab\" \"ab\" \"a|\"\n\n\nit turns out that “ab|c” and “(ab)|c” and “(ab|c)” are all equivalent!"
  },
  {
    "objectID": "project2.html#footnotes",
    "href": "project2.html#footnotes",
    "title": "Project 2",
    "section": "Footnotes",
    "text": "Footnotes\n\n\ncode folding allows the user can see the code if they want to: https://quarto.org/docs/output-formats/html-code.html#folding-code↩︎"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#function-components",
    "href": "slides/2025-03-03-funcmap.html#function-components",
    "title": "Functions + Iteration",
    "section": "Function components",
    "text": "Function components\nHere is a simple function to compute the absolute value.\n\nmy_abs &lt;- function(x){\n  return(ifelse(x &gt;= 0, x, -1*x))\n}\n\nmy_abs(-3)\n\n[1] 3\n\nmy_abs(c(-2, 5))\n\n[1] 2 5\n\n\n\nname: my_abs\narguments: x\nbody: everything inside the { }"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#ordering-and-arguments",
    "href": "slides/2025-03-03-funcmap.html#ordering-and-arguments",
    "title": "Functions + Iteration",
    "section": "Ordering and arguments",
    "text": "Ordering and arguments\n\nmy_power &lt;- function(x, y){\n  return(x^y)\n}\n\nmy_power(x = 2, y = 3)\n\n[1] 8\n\nmy_power(y = 3, x = 2)\n\n[1] 8\n\nmy_power(2, 3)\n\n[1] 8\n\nmy_power(3, 2)\n\n[1] 9\n\n\n\nWhen calling the function, if you don’t name the arguments, R assumes that you passed them in the order defined inside the function."
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#function-defaults",
    "href": "slides/2025-03-03-funcmap.html#function-defaults",
    "title": "Functions + Iteration",
    "section": "Function defaults",
    "text": "Function defaults\n\nfunctionresult\n\n\n\nmy_power &lt;- function(x, y){\n  return(x^y)\n}\n\nWhat will happen when I run the following code?\n\nmy_power(3)\n\n\n\n\nmy_power(3)\n\nError in my_power(3): argument \"y\" is missing, with no default"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#function-defaults-1",
    "href": "slides/2025-03-03-funcmap.html#function-defaults-1",
    "title": "Functions + Iteration",
    "section": "Function defaults",
    "text": "Function defaults\n\nfunctionresult\n\n\n\nmy_power &lt;- function(x, y = 2){\n  return(x^y)\n}\n\nWhat will happen when I run the following code?\n\nmy_power(3)\n\n\n\n\nmy_power(3)\n\n[1] 9"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#function-defaults-2",
    "href": "slides/2025-03-03-funcmap.html#function-defaults-2",
    "title": "Functions + Iteration",
    "section": "Function defaults",
    "text": "Function defaults\n\nfunctionresult\n\n\n\nmy_power &lt;- function(x, y = 2){\n  return(x^y)\n}\n\nWhat will happen when I run the following code?\n\nmy_power(2, 3)\n\n\n\n\nmy_power(2, 3)\n\n[1] 8"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#function-defaults-3",
    "href": "slides/2025-03-03-funcmap.html#function-defaults-3",
    "title": "Functions + Iteration",
    "section": "Function defaults",
    "text": "Function defaults\n\nfunctionresult\n\n\n\nmy_power &lt;- function(x = 2, y = 3){\n  return(x^y)\n}\n\nWhat will happen when I run the following code?\n\nmy_power()\n\n\n\n\nmy_power()\n\n[1] 8"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#returning-a-value",
    "href": "slides/2025-03-03-funcmap.html#returning-a-value",
    "title": "Functions + Iteration",
    "section": "Returning a value",
    "text": "Returning a value\n\nfunctionsresults\n\n\n\naverage1 &lt;- function(x, remove_nas) {\n    sum(x, na.rm = remove_nas)/sum(!is.na(x))\n}\n\naverage2 &lt;- function(x, remove_nas) {\n    return(sum(x, na.rm = remove_nas)/sum(!is.na(x)))\n}\n\naverage3 &lt;- function(x, remove_nas = TRUE) {\n    sum(x, na.rm = remove_nas)/sum(!is.na(x))\n}\n\n\n\n\nsome_data &lt;- c(3, NA, 2, 13, 2, NA, 47)\n\naverage1(some_data)\n\nError in average1(some_data): argument \"remove_nas\" is missing, with no default\n\naverage1(some_data, remove_nas = TRUE)\n\n[1] 13.4\n\naverage2(some_data)\n\nError in average2(some_data): argument \"remove_nas\" is missing, with no default\n\naverage2(some_data, remove_nas = TRUE)\n\n[1] 13.4\n\naverage3(some_data)\n\n[1] 13.4"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#returning-a-value-1",
    "href": "slides/2025-03-03-funcmap.html#returning-a-value-1",
    "title": "Functions + Iteration",
    "section": "Returning a value",
    "text": "Returning a value\n\nwithout return(): the function returns the last value which gets computed and isn’t stored as an object (using &lt;-).\nwith return(): the function will return an object that is explicitly included in the return() call. (Note: if you (accidentally?) have two return() calls, the function will return the object in the first return() call.)"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#control-flow",
    "href": "slides/2025-03-03-funcmap.html#control-flow",
    "title": "Functions + Iteration",
    "section": "Control flow",
    "text": "Control flow\nOften in functions, you will want to execute code conditionally. Consider the if-else if-else structure.\n\nif (logical_condition) {\n    # some code\n} else if (other_logical_condition) {\n    # some other code\n} else {\n    # yet more code\n}"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#control-flow-1",
    "href": "slides/2025-03-03-funcmap.html#control-flow-1",
    "title": "Functions + Iteration",
    "section": "Control flow",
    "text": "Control flow\n\nfunctionresult\n\n\n\nmiddle &lt;- function(x) {\n    mean_x &lt;- mean(x, na.rm = TRUE)\n    median_x &lt;- median(x, na.rm = TRUE)\n    seems_skewed &lt;- (mean_x &gt; 1.5*median_x) | (mean_x &lt; (1/1.5)*median_x)\n    if (seems_skewed) {\n        median_x\n    } else {\n        mean_x\n    }\n}\n\nNote that (mean_x &gt; 1.5*median_x) | (mean_x &lt; (1/1.5)*median_x) is a TRUE or FALSE question.\n\n\n\nsome_data &lt;- c(3, NA, 2, 13, 2, NA, 47)\n\n\nmean(some_data, na.rm = TRUE)\n\n[1] 13.4\n\nmedian(some_data, na.rm = TRUE)\n\n[1] 3\n\nmiddle(some_data)\n\n[1] 3"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#functions-in-the-tidyverse",
    "href": "slides/2025-03-03-funcmap.html#functions-in-the-tidyverse",
    "title": "Functions + Iteration",
    "section": "Functions in the tidyverse",
    "text": "Functions in the tidyverse\n\nDon’t collapse\nFunctions that return the same number of rows as the original data frame are good to use inside mutate() and filter(). For example, you might want to capitalize the first word of every string:\n\nfirst_upper &lt;- function(x) {\n  str_sub(x, 1, 1) &lt;- str_to_upper(str_sub(x, 1, 1))\n  x\n}\n\nfirst_upper(c(\"hello\", \"goodbye\"))\n\n[1] \"Hello\"   \"Goodbye\""
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#functions-in-the-tidyverse-1",
    "href": "slides/2025-03-03-funcmap.html#functions-in-the-tidyverse-1",
    "title": "Functions + Iteration",
    "section": "Functions in the tidyverse",
    "text": "Functions in the tidyverse\n\nCollapse\nFunctions that collapse into a single value will work well in the summarize() step of the pipeline. For example, you may want to calculate the coefficient of variation which is the standard deviation divided by the mean.\n\ncv &lt;- function(x, na.rm = FALSE) {\n  sd(x, na.rm = na.rm) / mean(x, na.rm = na.rm)\n}\n\ncv(runif(100, min = 0, max = 50))\n\n[1] 0.5623236\n\ncv(runif(100, min = 0, max = 500))\n\n[1] 0.6191225"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#functions-summary",
    "href": "slides/2025-03-03-funcmap.html#functions-summary",
    "title": "Functions + Iteration",
    "section": "Functions summary",
    "text": "Functions summary\n\nFunctions can be used to avoid repeating code\nArguments allow us specify the inputs when we call a function\nIf inputs are not named when calling the function, R uses the ordering from the function definition\nAll arguments must be specified when calling a function\nDefault arguments can be specified when the function is defined\nThe input to a function can be a function!"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#purrr-for-functional-programming",
    "href": "slides/2025-03-03-funcmap.html#purrr-for-functional-programming",
    "title": "Functions + Iteration",
    "section": "purrr for functional programming",
    "text": "purrr for functional programming\nfunctionals are functions that take function as input and return a vector / list / data frame as output.\n\nalternatives to loops\na functional is better than a for loop is better than while is better than repeat (in terms of computing efficiency)"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#benefits",
    "href": "slides/2025-03-03-funcmap.html#benefits",
    "title": "Functions + Iteration",
    "section": "Benefits",
    "text": "Benefits\n\nencourages function logic to be separated from iteration logic\ncan collapse results into vectors/data frames easily\ndirect connection to parallel processing"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#map",
    "href": "slides/2025-03-03-funcmap.html#map",
    "title": "Functions + Iteration",
    "section": "Map",
    "text": "Map\nmap() has (at least) two arguments, a data object and a function. It performs the function on each element of the object and returns a list. We can also pass additional arguments into the function."
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#variations-of-map_-functions",
    "href": "slides/2025-03-03-funcmap.html#variations-of-map_-functions",
    "title": "Functions + Iteration",
    "section": "variations of map_ functions",
    "text": "variations of map_ functions\n\n\nThe map functions are named by they output the produce. For example:\n\nmap(.x, .f) is the main mapping function and returns a list\nmap_dbl(.x, .f) returns a numeric (double) vector\nmap_chr(.x, .f) returns a character vector\nmap_lgl(.x, .f) returns a logical vector\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote that the first argument is always the data object and the second object is always the function you want to iteratively apply to each element in the input object."
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#map-variants-output",
    "href": "slides/2025-03-03-funcmap.html#map-variants-output",
    "title": "Functions + Iteration",
    "section": "map() variants (output)",
    "text": "map() variants (output)\n\ntriple &lt;- function(x) x * 3\nmap(.x = c(1:3), .f = triple)\n\n[[1]]\n[1] 3\n\n[[2]]\n[1] 6\n\n[[3]]\n[1] 9\n\nmap_dbl(.x = c(1:3), .f = triple)\n\n[1] 3 6 9\n\nmap_lgl(.x = c(1:3), .f = triple)\n\nError in `map_lgl()`:\nℹ In index: 1.\nCaused by error:\n! Can't coerce from a number to a logical.\n\nmap_lgl(.x = c(1, NA, 3), .f = is.na)\n\n[1] FALSE  TRUE FALSE"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#fastfood-dataset-from-openintro",
    "href": "slides/2025-03-03-funcmap.html#fastfood-dataset-from-openintro",
    "title": "Functions + Iteration",
    "section": "fastfood dataset from openintro",
    "text": "fastfood dataset from openintro\n\nlibrary(openintro)\nfastfood\n\n# A tibble: 515 × 17\n   restaurant item        calories cal_fat total_fat sat_fat trans_fat\n   &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1 Mcdonalds  Artisan Gr…      380      60         7       2       0  \n 2 Mcdonalds  Single Bac…      840     410        45      17       1.5\n 3 Mcdonalds  Double Bac…     1130     600        67      27       3  \n 4 Mcdonalds  Grilled Ba…      750     280        31      10       0.5\n 5 Mcdonalds  Crispy Bac…      920     410        45      12       0.5\n 6 Mcdonalds  Big Mac          540     250        28      10       1  \n 7 Mcdonalds  Cheeseburg…      300     100        12       5       0.5\n 8 Mcdonalds  Classic Ch…      510     210        24       4       0  \n 9 Mcdonalds  Double Che…      430     190        21      11       1  \n10 Mcdonalds  Double Qua…      770     400        45      21       2.5\n# ℹ 505 more rows\n# ℹ 10 more variables: cholesterol &lt;dbl&gt;, sodium &lt;dbl&gt;,\n#   total_carb &lt;dbl&gt;, fiber &lt;dbl&gt;, sugar &lt;dbl&gt;, protein &lt;dbl&gt;,\n#   vit_a &lt;dbl&gt;, vit_c &lt;dbl&gt;, calcium &lt;dbl&gt;, salad &lt;chr&gt;\n\n\nFrom TidyTuesday Fast food entree data on September 4, 2018."
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#anonymous-functions-and-shortcuts",
    "href": "slides/2025-03-03-funcmap.html#anonymous-functions-and-shortcuts",
    "title": "Functions + Iteration",
    "section": "Anonymous functions and shortcuts",
    "text": "Anonymous functions and shortcuts\n\nuse ~ to set a formula (when the function is neither a single name nor defined by function(...) { ...})\nuse .x to reference the input map(.x = ..., .f = )\n\n\nmap_dbl(.x = fastfood, .f = function(dog) mean(dog, na.rm = TRUE))\n\n  restaurant         item     calories      cal_fat    total_fat      sat_fat \n          NA           NA  530.9126214  238.8135922   26.5902913    8.1533981 \n   trans_fat  cholesterol       sodium   total_carb        fiber        sugar \n   0.4650485   72.4563107 1246.7378641   45.6640777    4.1371769    7.2621359 \n     protein        vit_a        vit_c      calcium        salad \n  27.8910506   18.8571429   20.1704918   24.8524590           NA \n\n\n\nmap_dbl(.x = fastfood,  .f = ~mean(.x, na.rm = TRUE))\n\n  restaurant         item     calories      cal_fat    total_fat      sat_fat \n          NA           NA  530.9126214  238.8135922   26.5902913    8.1533981 \n   trans_fat  cholesterol       sodium   total_carb        fiber        sugar \n   0.4650485   72.4563107 1246.7378641   45.6640777    4.1371769    7.2621359 \n     protein        vit_a        vit_c      calcium        salad \n  27.8910506   18.8571429   20.1704918   24.8524590           NA \n\n\n\nmap_dbl(.x = fastfood, .f = mean, na.rm = TRUE)\n\n  restaurant         item     calories      cal_fat    total_fat      sat_fat \n          NA           NA  530.9126214  238.8135922   26.5902913    8.1533981 \n   trans_fat  cholesterol       sodium   total_carb        fiber        sugar \n   0.4650485   72.4563107 1246.7378641   45.6640777    4.1371769    7.2621359 \n     protein        vit_a        vit_c      calcium        salad \n  27.8910506   18.8571429   20.1704918   24.8524590           NA \n\n\n\nmap_dbl(.x = fastfood, .f = mean)\n\n  restaurant         item     calories      cal_fat    total_fat      sat_fat \n          NA           NA  530.9126214  238.8135922   26.5902913    8.1533981 \n   trans_fat  cholesterol       sodium   total_carb        fiber        sugar \n   0.4650485   72.4563107 1246.7378641   45.6640777           NA    7.2621359 \n     protein        vit_a        vit_c      calcium        salad \n          NA           NA           NA           NA           NA"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#the-same-thing-many-ways",
    "href": "slides/2025-03-03-funcmap.html#the-same-thing-many-ways",
    "title": "Functions + Iteration",
    "section": "The same thing, many ways",
    "text": "The same thing, many ways\nNote that .x is the name of the first argument in map() (.f is the name of the second argument).\n\n# the task\nmap_dbl(fastfood, function(x) length(unique(x)))\n\n restaurant        item    calories     cal_fat   total_fat     sat_fat \n          8         505         113         117          80          40 \n  trans_fat cholesterol      sodium  total_carb       fiber       sugar \n         10          52         197         103          19          31 \n    protein       vit_a       vit_c     calcium       salad \n         71          22          24          27           1 \n\nmap_dbl(fastfood, function(unicorn) length(unique(unicorn)))\n\n restaurant        item    calories     cal_fat   total_fat     sat_fat \n          8         505         113         117          80          40 \n  trans_fat cholesterol      sodium  total_carb       fiber       sugar \n         10          52         197         103          19          31 \n    protein       vit_a       vit_c     calcium       salad \n         71          22          24          27           1 \n\nmap_dbl(fastfood, ~length(unique(.x)))\n\n restaurant        item    calories     cal_fat   total_fat     sat_fat \n          8         505         113         117          80          40 \n  trans_fat cholesterol      sodium  total_carb       fiber       sugar \n         10          52         197         103          19          31 \n    protein       vit_a       vit_c     calcium       salad \n         71          22          24          27           1 \n\nmap_dbl(fastfood, ~length(unique(..1)))\n\n restaurant        item    calories     cal_fat   total_fat     sat_fat \n          8         505         113         117          80          40 \n  trans_fat cholesterol      sodium  total_carb       fiber       sugar \n         10          52         197         103          19          31 \n    protein       vit_a       vit_c     calcium       salad \n         71          22          24          27           1 \n\nmap_dbl(fastfood, ~length(unique(.)))\n\n restaurant        item    calories     cal_fat   total_fat     sat_fat \n          8         505         113         117          80          40 \n  trans_fat cholesterol      sodium  total_carb       fiber       sugar \n         10          52         197         103          19          31 \n    protein       vit_a       vit_c     calcium       salad \n         71          22          24          27           1 \n\n# not the task\nmap_dbl(fastfood, length)\n\n restaurant        item    calories     cal_fat   total_fat     sat_fat \n        515         515         515         515         515         515 \n  trans_fat cholesterol      sodium  total_carb       fiber       sugar \n        515         515         515         515         515         515 \n    protein       vit_a       vit_c     calcium       salad \n        515         515         515         515         515 \n\n\n\n#error\nmap_dbl(fastfood, ~length)\n\nError in `map_dbl()`:\nℹ In index: 1.\nℹ With name: restaurant.\nCaused by error:\n! Can't coerce from a primitive function to a double.\n\n#error\nmap_dbl(fastfood, length(unique()))\n\nError in unique.default(): argument \"x\" is missing, with no default\n\n#error\nmap_dbl(fastfood, ~length(unique(x)))\n\nError in `map_dbl()`:\nℹ In index: 1.\nℹ With name: restaurant.\nCaused by error in `.f()`:\n! object 'x' not found"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#mapping-to-a-data-frame",
    "href": "slides/2025-03-03-funcmap.html#mapping-to-a-data-frame",
    "title": "Functions + Iteration",
    "section": "mapping to a data frame",
    "text": "mapping to a data frame\nWould be great if the results were a data frame! If the function outputs a data frame, then we can use list_rbind() and list_cbind() to create a data frame as the final map() output.\n\nresults as rows: map() |&gt; list_rbind()\nresults as columns: map() |&gt; list_cbind()\n\n\nfunctionmap()list_rbind()list_cbind()\n\n\n\ncol_stats &lt;- function(n) {\n  head(fastfood, n) |&gt; \n    select(calories, protein, vit_c) |&gt; \n    summarise_all(mean, na.rm = TRUE) |&gt; \n    mutate(n = paste(\"N =\", n))\n}\n\n\n\n\nout1 &lt;- map(c(10,20), col_stats)\n\nout1\n\n[[1]]\n# A tibble: 1 × 4\n  calories protein vit_c n     \n     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; \n1      657    39.5  12.3 N = 10\n\n[[2]]\n# A tibble: 1 × 4\n  calories protein vit_c n     \n     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; \n1     582.    34.6  12.2 N = 20\n\n\n\n\n\nout2 &lt;- map(c(10,20), col_stats) |&gt; list_rbind()\n\nout2\n\n# A tibble: 2 × 4\n  calories protein vit_c n     \n     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; \n1     657     39.5  12.3 N = 10\n2     582.    34.6  12.2 N = 20\n\n\n\n\n\nout3 &lt;- map(c(10,20), col_stats) |&gt; list_cbind()\n\nout3\n\n# A tibble: 1 × 8\n  calories...1 protein...2 vit_c...3 n...4  calories...5 protein...6\n         &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;       &lt;dbl&gt;\n1          657        39.5      12.3 N = 10         582.        34.6\n# ℹ 2 more variables: vit_c...7 &lt;dbl&gt;, n...8 &lt;chr&gt;"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#map_-variants-input",
    "href": "slides/2025-03-03-funcmap.html#map_-variants-input",
    "title": "Functions + Iteration",
    "section": "map_*() variants (input)",
    "text": "map_*() variants (input)\n\n\n\n\n\n\n\n\n\nWe’ve already described the difference between the columns. Now we cover the difference between the rows."
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#map2_",
    "href": "slides/2025-03-03-funcmap.html#map2_",
    "title": "Functions + Iteration",
    "section": "map2_*()",
    "text": "map2_*()\n\nmap2_*() has two arguments, .x and .y\nraise each value of .x to the power of 2\n\n\nmap_dbl(\n  .x = c(1:5), \n  .f = function(x) x ^ 2\n)\n\n[1]  1  4  9 16 25\n\n\n\nraise each value .x to the power .y\n\n\nmap2_dbl(\n  .x = c(1:5), \n  .y = c(2:6), \n  .f = ~ (.x ^ .y)\n)\n\n[1]     1     8    81  1024 15625"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#imap",
    "href": "slides/2025-03-03-funcmap.html#imap",
    "title": "Functions + Iteration",
    "section": "imap()",
    "text": "imap()\n\nimap() is like map2()except that .y is derived from names(.x) if the data frame has names.\nIf not, .y is 1, 2, 3, … \\(n\\) where \\(n\\) is the number of items in .x. (A data frame has \\(n\\) columns.)\nThese two calls produce the same result\n\n\nimap_chr(.x = fastfood, \n         .f = ~ paste(.y, \"has a mean of\", round(mean(.x), 1))) |&gt; \nhead()\n\n                    restaurant                           item \n \"restaurant has a mean of NA\"        \"item has a mean of NA\" \n                      calories                        cal_fat \n\"calories has a mean of 530.9\"  \"cal_fat has a mean of 238.8\" \n                     total_fat                        sat_fat \n\"total_fat has a mean of 26.6\"    \"sat_fat has a mean of 8.2\" \n\nmap2_chr(.x = fastfood, \n         .y = names(fastfood),\n         .f = ~ paste(.y, \"has a mean of\", round(mean(.x), 1))) |&gt; \nhead()\n\n                    restaurant                           item \n \"restaurant has a mean of NA\"        \"item has a mean of NA\" \n                      calories                        cal_fat \n\"calories has a mean of 530.9\"  \"cal_fat has a mean of 238.8\" \n                     total_fat                        sat_fat \n\"total_fat has a mean of 26.6\"    \"sat_fat has a mean of 8.2\""
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#pmap",
    "href": "slides/2025-03-03-funcmap.html#pmap",
    "title": "Functions + Iteration",
    "section": "pmap()",
    "text": "pmap()\n\nyou can pass a named list or dataframe as arguments to a function\nfor example runif() has the parameters n, min and max\n\n\nparams\n\n# A tibble: 3 × 3\n      n   min   max\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     1     1    10\n2     2    10   100\n3     3   100  1000\n\npmap(params, runif)\n\n[[1]]\n[1] 2.038837\n\n[[2]]\n[1] 86.44043 63.73928\n\n[[3]]\n[1] 158.5054 452.5885 731.0714\n\n\nOr use the pipe into pmap():\n\nparams |&gt; \n  pmap(runif)\n\n[[1]]\n[1] 3.76442\n\n[[2]]\n[1] 99.57063 83.03447\n\n[[3]]\n[1] 872.9958 141.6864 446.0891"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#an-aside",
    "href": "slides/2025-03-03-funcmap.html#an-aside",
    "title": "Functions + Iteration",
    "section": "An aside…",
    "text": "An aside…\nInterestingly, runif() will take either a scalar or a vector as its first argument. If the first argument is a vector, runif() will return N random uniforms, where N is the length of the vector.\n\nrunif(n = 3)\n\n[1] 0.76025364 0.72633544 0.08232044\n\nrunif(n = c(1,3))\n\n[1] 0.4915788 0.7554713\n\nrunif(n = c(10000,12321412424))\n\n[1] 0.5641052 0.9001109\n\nrunif(n = c(\"rainbow\", \"unicorn\"))\n\n[1] 0.6592858 0.7822218"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#pmap-vs-map",
    "href": "slides/2025-03-03-funcmap.html#pmap-vs-map",
    "title": "Functions + Iteration",
    "section": "pmap() vs map()",
    "text": "pmap() vs map()\nWhich means that the pmap() code will “work” in map() as well:\n\nparamspmapmap\n\n\n\nparams\n\n# A tibble: 3 × 3\n      n   min   max\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     1     1    10\n2     2    10   100\n3     3   100  1000\n\n\n\n\n\nparams |&gt; \n  pmap(runif)\n\n[[1]]\n[1] 8.354763\n\n[[2]]\n[1] 22.00145 34.83011\n\n[[3]]\n[1] 490.7894 648.9109 256.3255\n\n\n\n\n\nparams |&gt; \n  map(runif)\n\n$n\n[1] 0.8670149 0.2922877 0.2456421\n\n$min\n[1] 0.5385074 0.6674617 0.4424177\n\n$max\n[1] 0.77594009 0.03784851 0.16605208"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#pmap-with-expand_grid",
    "href": "slides/2025-03-03-funcmap.html#pmap-with-expand_grid",
    "title": "Functions + Iteration",
    "section": "pmap() with expand_grid()",
    "text": "pmap() with expand_grid()\n\nI like to use expand_grid() when I want all possible parameter combinations.\n\n\nexpand_grid(n = c(1, 2, 3), \n            min = c(1, 10),\n            max = c(10, 100)) \n\n# A tibble: 12 × 3\n       n   min   max\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1     1    10\n 2     1     1   100\n 3     1    10    10\n 4     1    10   100\n 5     2     1    10\n 6     2     1   100\n 7     2    10    10\n 8     2    10   100\n 9     3     1    10\n10     3     1   100\n11     3    10    10\n12     3    10   100\n\nexpand_grid(n = c(1, 2, 3), \n            min = c(1, 10),\n            max = c(10, 100)) |&gt; \npmap(runif)\n\n[[1]]\n[1] 7.597273\n\n[[2]]\n[1] 58.45669\n\n[[3]]\n[1] 10\n\n[[4]]\n[1] 87.31629\n\n[[5]]\n[1] 4.247986 6.148149\n\n[[6]]\n[1] 54.24720 68.78427\n\n[[7]]\n[1] 10 10\n\n[[8]]\n[1] 21.86420 90.13759\n\n[[9]]\n[1] 3.171491 6.834696 9.026135\n\n[[10]]\n[1] 73.65718 31.25866 23.71904\n\n[[11]]\n[1] 10 10 10\n\n[[12]]\n[1] 86.88795 74.66076 18.31709"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html#data-conclusions",
    "href": "slides/2025-03-03-funcmap.html#data-conclusions",
    "title": "Functions + Iteration",
    "section": "",
    "text": "Based on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#data-exploration",
    "href": "slides/2025-02-10-pivotjoin.html#data-exploration",
    "title": "Pivoting and Joining",
    "section": "Data Exploration",
    "text": "Data Exploration\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#data-visualization",
    "href": "slides/2025-01-27-dataviz.html#data-visualization",
    "title": "Better Data Visualizations",
    "section": "",
    "text": "Based on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-03-03-funcmap.html",
    "href": "slides/2025-03-03-funcmap.html",
    "title": "Functions + Iteration",
    "section": "",
    "text": "R functions\n\n\n\n\n\n\n\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-03-10-help.html#how-to-reprex",
    "href": "slides/2025-03-10-help.html#how-to-reprex",
    "title": "Help me help you",
    "section": "How to reprex()?",
    "text": "How to reprex()?\nStep 1. Write some R code and copy it into the clipboard (command-c or ctrl-c).\nStep 2. Type reprex() into the Console.\nStep 3. Look at the Viewer to the right. Copy the Viewer output into GitHub, Slack, an email, Stack Overflow, Posit Community, ChatGPT, etc."
  },
  {
    "objectID": "slides/2025-03-10-help.html#reprex-example---1st-try",
    "href": "slides/2025-03-10-help.html#reprex-example---1st-try",
    "title": "Help me help you",
    "section": "reprex() example - 1st try",
    "text": "reprex() example - 1st try\nCode:\n\njan31 + months(0:11) + days(31)\n\nOutput of reprex():\n\njan31 + months(0:11) + days(31)\n#&gt; Error in eval(expr, envir, enclos): object 'jan31' not found"
  },
  {
    "objectID": "slides/2025-03-10-help.html#reprex-example---2nd-try",
    "href": "slides/2025-03-10-help.html#reprex-example---2nd-try",
    "title": "Help me help you",
    "section": "reprex() example - 2nd try",
    "text": "reprex() example - 2nd try\nCode:\n\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n\nOutput of reprex():\n\n  jan31 &lt;- ymd(\"2021-01-31\")\n#&gt; Error in ymd(\"2021-01-31\"): could not find function \"ymd\"\n  jan31 + months(0:11) + days(31)\n#&gt; Error in eval(expr, envir, enclos): object 'jan31' not found"
  },
  {
    "objectID": "slides/2025-03-10-help.html#reprex-example---3rd-try",
    "href": "slides/2025-03-10-help.html#reprex-example---3rd-try",
    "title": "Help me help you",
    "section": "reprex() example - 3rd try",
    "text": "reprex() example - 3rd try\nCode:\n\n  library(lubridate)\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n\nOutput of reprex():\n\n  library(lubridate)\n#&gt; \n#&gt; Attaching package: 'lubridate'\n#&gt; The following objects are masked from 'package:base':\n#&gt; \n#&gt;     date, intersect, setdiff, union\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n#&gt;  [1] \"2021-03-03\" NA           \"2021-05-01\" NA           \"2021-07-01\"\n#&gt;  [6] NA           \"2021-08-31\" \"2021-10-01\" NA           \"2021-12-01\"\n#&gt; [11] NA           \"2022-01-31\""
  },
  {
    "objectID": "slides/2025-03-10-help.html#reproducible-example-w-chatgpt",
    "href": "slides/2025-03-10-help.html#reproducible-example-w-chatgpt",
    "title": "Help me help you",
    "section": "Reproducible example w ChatGPT",
    "text": "Reproducible example w ChatGPT\n\ngenerate a reprex in R to demonstrate how to reorder a factor variable"
  },
  {
    "objectID": "slides/2025-03-10-help.html#checklist-for-a-good-reprex",
    "href": "slides/2025-03-10-help.html#checklist-for-a-good-reprex",
    "title": "Help me help you",
    "section": "Checklist for a good reprex()",
    "text": "Checklist for a good reprex()\n✅ Minimal\n✅ Complete\n✅ Runnable\n✅ Clearly explains the problem"
  },
  {
    "objectID": "slides/2025-03-10-help.html#object-names",
    "href": "slides/2025-03-10-help.html#object-names",
    "title": "Help me help you",
    "section": "Object names",
    "text": "Object names\n\nThere are only two hard things in Computer Science: cache invalidation and naming things.\n\n\n– Phil Karlton"
  },
  {
    "objectID": "slides/2025-03-10-help.html#object-names-1",
    "href": "slides/2025-03-10-help.html#object-names-1",
    "title": "Help me help you",
    "section": "Object names",
    "text": "Object names\nVariable and function names should use only lowercase letters, numbers, and _. Use underscores (_) (so called snake case) to separate words within a name.\n\n# Good\nday_one\nday_1\n\n# Bad\nDayOne\ndayone\n\n# Really bad\nT &lt;- FALSE\nc &lt;- 10\nmean &lt;- function(x) sum(x)"
  },
  {
    "objectID": "slides/2025-03-10-help.html#spacing",
    "href": "slides/2025-03-10-help.html#spacing",
    "title": "Help me help you",
    "section": "Spacing",
    "text": "Spacing\nDo not put spaces inside or outside parentheses for regular funtion calls.\n\n# Good\nmean(x, na.rm = TRUE)\n\n# Bad\nmean (x, na.rm = TRUE)\nmean( x, na.rm = TRUE )"
  },
  {
    "objectID": "slides/2025-03-10-help.html#infix-operators",
    "href": "slides/2025-03-10-help.html#infix-operators",
    "title": "Help me help you",
    "section": "Infix operators",
    "text": "Infix operators\nMost infix operators (==, +, -, &lt;-, etc.) should always be surrounded by spaces:\n\n# Good\nheight &lt;- (feet * 12) + inches\nmean(x, na.rm = TRUE)\n\n# Bad\nheight&lt;-feet*12+inches\nmean(x, na.rm=TRUE)"
  },
  {
    "objectID": "slides/2025-03-10-help.html#long-function-calls",
    "href": "slides/2025-03-10-help.html#long-function-calls",
    "title": "Help me help you",
    "section": "Long function calls",
    "text": "Long function calls\nIf a function call is too long to fit on a single line, use one line each for the function name, each argument, and the closing ). This makes the code easier to read and to change later.\n\n# Good\ndo_something_very_complicated(\n  something = \"that\",\n  requires = many,\n  arguments = \"some of which may be long\"\n)\n\n# Bad\ndo_something_very_complicated(\"that\", requires, many, arguments,\n                              \"some of which may be long\"\n                              )"
  },
  {
    "objectID": "slides/2025-03-10-help.html#long-lines-piping",
    "href": "slides/2025-03-10-help.html#long-lines-piping",
    "title": "Help me help you",
    "section": "Long lines (piping)",
    "text": "Long lines (piping)\nIf the arguments to a function don’t all fit on one line, put each argument on its own line and indent:1\n\n# Good\niris |&gt;\n  summarise(\n    Sepal.Length = mean(Sepal.Length),\n    Sepal.Width = mean(Sepal.Width),\n    .by = Species\n  )\n\n# Bad\niris |&gt;\n  summarise(Sepal.Length = mean(Sepal.Length), Sepal.Width = mean(Sepal.Width), .by = Species)\n\n# Also bad\nsummarise(\n  iris,\n  Sepal.Length = mean(Sepal.Length),\n  Sepal.Width = mean(Sepal.Width),\n  .by = Species\n)\n\nThe last one isn’t great because it is hard to distinguish the data frame from the other arguments (which play very different roles in the summarize() function)."
  },
  {
    "objectID": "slides/2025-03-10-help.html#short-lines-piping",
    "href": "slides/2025-03-10-help.html#short-lines-piping",
    "title": "Help me help you",
    "section": "Short lines (piping)",
    "text": "Short lines (piping)\nSometimes it’s useful to include a short pipe as an argument to a function in a longer pipe. Carefully consider whether the code is more readable with a short inline pipe or if it’s better to move the code outside the pipe and give it an evocative name.\n\n# Good\nx |&gt;\n  semi_join(y |&gt; filter(is_valid))\n\n# Ok\nx |&gt;\n  select(a, b, w) |&gt;\n  left_join(y |&gt; select(a, b, v), join_by(a, b))\n\n# Better\nx_join &lt;- x |&gt; select(a, b, w)\ny_join &lt;- y |&gt; select(a, b, v)\nleft_join(x_join, y_join, join_by(a, b))"
  },
  {
    "objectID": "slides/2025-03-10-help.html#style",
    "href": "slides/2025-03-10-help.html#style",
    "title": "Help me help you",
    "section": "Style",
    "text": "Style\n\nThe point is that coding happens in community.\n\nNot only do you want your code to run well, but you want other people to be able to understand it and use it.\nThe more that you and others use the same syntax, the better the communication will be."
  },
  {
    "objectID": "slides/2025-03-10-help.html#data-communication",
    "href": "slides/2025-03-10-help.html#data-communication",
    "title": "Help me help you",
    "section": "Data Communication",
    "text": "Data Communication\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#goals-of-simulating-complicated-models",
    "href": "slides/2025-03-12-iters.html#goals-of-simulating-complicated-models",
    "title": "Iterations",
    "section": "Goals of Simulating Complicated Models",
    "text": "Goals of Simulating Complicated Models\nThe goal of simulating a complicated model is not only to create a program which will provide the desired results. We also hope to be able to write code such that:\n\nThe problem is broken down into small pieces.\nThe problem has checks in it to see what works (run the lines inside the functions!).\nuses simple code (as often as possible)."
  },
  {
    "objectID": "slides/2025-03-12-iters.html#simulate-to",
    "href": "slides/2025-03-12-iters.html#simulate-to",
    "title": "Iterations",
    "section": "Simulate to…",
    "text": "Simulate to…\n\n\n… estimate probabilities (easier than calculus).\n… understand complicated models."
  },
  {
    "objectID": "slides/2025-03-12-iters.html#aside-ifelse",
    "href": "slides/2025-03-12-iters.html#aside-ifelse",
    "title": "Iterations",
    "section": "Aside: ifelse()",
    "text": "Aside: ifelse()\n\ndata.frame(value = c(-2:2)) |&gt;\n  mutate(abs_value = ifelse(value &gt;=0, value, -value))  # abs val\n\n  value abs_value\n1    -2         2\n2    -1         1\n3     0         0\n4     1         1\n5     2         2"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#aside-case_when",
    "href": "slides/2025-03-12-iters.html#aside-case_when",
    "title": "Iterations",
    "section": "Aside: case_when()",
    "text": "Aside: case_when()\n\nset.seed(4747)\ndiamonds |&gt; select(carat, cut, color, price) |&gt;\n  sample_n(20) |&gt;\n  mutate(price_cat = case_when(\n    price &gt; 10000 ~ \"expensive\",\n    price &gt; 1500 ~ \"medium\", \n    TRUE ~ \"inexpensive\"))\n\n# A tibble: 20 × 5\n   carat cut       color price price_cat  \n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;int&gt; &lt;chr&gt;      \n 1  1.23 Very Good F     10276 expensive  \n 2  0.35 Premium   H       706 inexpensive\n 3  0.7  Good      E      2782 medium     \n 4  0.4  Ideal     D      1637 medium     \n 5  0.53 Ideal     G      1255 inexpensive\n 6  2.22 Ideal     G     14637 expensive  \n 7  0.3  Ideal     G       878 inexpensive\n 8  1.05 Ideal     H      4223 medium     \n 9  0.53 Premium   E      1654 medium     \n10  1.7  Ideal     H      7068 medium     \n11  0.31 Good      E       698 inexpensive\n12  0.31 Ideal     F       840 inexpensive\n13  1.03 Ideal     H      4900 medium     \n14  0.31 Premium   G       698 inexpensive\n15  1.56 Premium   G      8858 medium     \n16  1.71 Premium   G     11032 expensive  \n17  1    Good      E      5345 medium     \n18  1.86 Ideal     J     10312 expensive  \n19  1.08 Very Good E      3726 medium     \n20  0.31 Premium   E       698 inexpensive"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#aside-sample",
    "href": "slides/2025-03-12-iters.html#aside-sample",
    "title": "Iterations",
    "section": "Aside: sample()",
    "text": "Aside: sample()\nsampling, shuffling, and resampling: sample()\n\nset.seed(47)\nalph &lt;- letters[1:10]\nalph\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\"\n\nsample(alph, 5, replace = FALSE) # sample (from a population)\n\n[1] \"i\" \"b\" \"g\" \"d\" \"a\"\n\nsample(alph, 5, replace = TRUE) # sample (from a population)\n\n[1] \"j\" \"g\" \"f\" \"i\" \"f\"\n\nsample(alph, 10, replace = FALSE)  # shuffle\n\n [1] \"f\" \"h\" \"i\" \"e\" \"g\" \"d\" \"c\" \"j\" \"b\" \"a\"\n\nsample(alph, 10, replace = TRUE)  # resample\n\n [1] \"e\" \"j\" \"e\" \"b\" \"e\" \"c\" \"f\" \"a\" \"e\" \"a\""
  },
  {
    "objectID": "slides/2025-03-12-iters.html#aside-set.seed",
    "href": "slides/2025-03-12-iters.html#aside-set.seed",
    "title": "Iterations",
    "section": "Aside: set.seed()",
    "text": "Aside: set.seed()\nWhat if we want to be able to generate the same random numbers (here on the interval from 0 to 1) over and over?\n\nset.seed(4747)\nrunif(4, 0, 1) # random uniform numbers\n\n[1] 0.1949071 0.3390270 0.5147919 0.4516470\n\nset.seed(123)\nrunif(4, 0, 1) # random uniform numbers\n\n[1] 0.2875775 0.7883051 0.4089769 0.8830174\n\nset.seed(4747)\nrunif(4, 0, 1) # random uniform numbers\n\n[1] 0.1949071 0.3390270 0.5147919 0.4516470"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#step-1-representing-the-hats",
    "href": "slides/2025-03-12-iters.html#step-1-representing-the-hats",
    "title": "Iterations",
    "section": "Step 1: representing the hats",
    "text": "Step 1: representing the hats\n\nhats &lt;- c(1:10)\nhats\n\n [1]  1  2  3  4  5  6  7  8  9 10"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#step-2-everyone-draws-a-hat",
    "href": "slides/2025-03-12-iters.html#step-2-everyone-draws-a-hat",
    "title": "Iterations",
    "section": "Step 2: everyone draws a hat",
    "text": "Step 2: everyone draws a hat\n\nset.seed(47)\nrandom_hats &lt;- sample(hats, size = 10, replace = FALSE)\n\nhats\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\nrandom_hats\n\n [1]  9  2  7  4  1 10  6  3  5  8"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#step-3-who-got-their-original-hat",
    "href": "slides/2025-03-12-iters.html#step-3-who-got-their-original-hat",
    "title": "Iterations",
    "section": "Step 3: who got their original hat?",
    "text": "Step 3: who got their original hat?\n\nhats == random_hats\n\n [1] FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE\n\n# TRUE is 1, FALSE is 0\nsum(hats == random_hats)\n\n[1] 2\n\n# did at least one person get their hat?\nsum(hats == random_hats) &gt; 0\n\n[1] TRUE"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#code-so-far",
    "href": "slides/2025-03-12-iters.html#code-so-far",
    "title": "Iterations",
    "section": "Code so far",
    "text": "Code so far\n\nset.seed(47)\nhats &lt;- c(1:10)\nrandom_hats &lt;- sample(hats, size = 10, replace = FALSE)\nsum(hats == random_hats) &gt; 0\n\n[1] TRUE\n\n\n\nDo we have a good estimate of the probability of interest?"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#function",
    "href": "slides/2025-03-12-iters.html#function",
    "title": "Iterations",
    "section": "Function",
    "text": "Function\n\nremove the magic number 10\n\n\nhat_match &lt;- function(n){\n  hats &lt;- 1:n\n  random_hats &lt;- sample(hats, size = n, replace = FALSE)\n  sum(hats == random_hats) &gt; 0\n}\n\nhat_match(10)\n\n[1] TRUE\n\nhat_match(47)\n\n[1] FALSE"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#iterate",
    "href": "slides/2025-03-12-iters.html#iterate",
    "title": "Iterations",
    "section": "Iterate",
    "text": "Iterate\n\nmap_lgl(c(1:10), ~hat_match(n = 10))\n\n [1]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE\n\nmap_lgl(c(1:10), ~hat_match(n = 10)) |&gt; \n  mean()\n\n[1] 0.5"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#reproducible",
    "href": "slides/2025-03-12-iters.html#reproducible",
    "title": "Iterations",
    "section": "Reproducible",
    "text": "Reproducible\n\nset.seed(4747)\nnum_iter &lt;- 10000\n\nmap_lgl(c(1:num_iter), ~hat_match(n = 10)) |&gt; \n  mean()\n\n[1] 0.6329\n\n\n\nset.seed(123)\nnum_iter &lt;- 10000\n\nmap_lgl(c(1:num_iter), ~hat_match(n = 10)) |&gt; \n  mean()\n\n[1] 0.6333"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#vary-number-of-hats",
    "href": "slides/2025-03-12-iters.html#vary-number-of-hats",
    "title": "Iterations",
    "section": "Vary number of hats",
    "text": "Vary number of hats\n\nhat_match_prob &lt;- function(n, reps){\n  prob &lt;- map_lgl(c(1:reps), ~hat_match(n = n)) |&gt; \n    mean()\n  return(data.frame(match_prob = prob, num_hats = n))\n}\n\nhat_match_prob(47, 200)\n\n  match_prob num_hats\n1       0.62       47"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#visualizing",
    "href": "slides/2025-03-12-iters.html#visualizing",
    "title": "Iterations",
    "section": "Visualizing",
    "text": "Visualizing\n\nset.seed(47)\nnum_iter &lt;- 10000\nmap(c(1:20), hat_match_prob, reps = num_iter) |&gt; \n  list_rbind() |&gt; \n  ggplot(aes(x = num_hats, y = match_prob)) + \n  geom_line() + \n  labs(y = \"probability of at least one match\",\n       x = \"number of hats\")"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#example-2-birthday-problem",
    "href": "slides/2025-03-12-iters.html#example-2-birthday-problem",
    "title": "Iterations",
    "section": "Example 2: Birthday Problem",
    "text": "Example 2: Birthday Problem\nWhat is the probability that in a room of 29 people, at least 2 of them have the same birthday?"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#step-1-representing-the-birthdays",
    "href": "slides/2025-03-12-iters.html#step-1-representing-the-birthdays",
    "title": "Iterations",
    "section": "Step 1: representing the birthdays",
    "text": "Step 1: representing the birthdays\n\nset.seed(7474)\nclass_birthdays &lt;- sample(c(1:365), size = 28, replace = TRUE)\nclass_birthdays \n\n [1]  65 340 246 244 355 248 298 271 363 173 307 260 195 300 189 154 319  51 139\n[20] 241 275 271 102 363 201 165  35  13"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#step-2-any-duplicates",
    "href": "slides/2025-03-12-iters.html#step-2-any-duplicates",
    "title": "Iterations",
    "section": "Step 2: any duplicates?",
    "text": "Step 2: any duplicates?\n\nduplicated(class_birthdays)\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE\n[25] FALSE FALSE FALSE FALSE\n\nsum(duplicated(class_birthdays))\n\n[1] 2"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#function-1",
    "href": "slides/2025-03-12-iters.html#function-1",
    "title": "Iterations",
    "section": "Function",
    "text": "Function\n\nremove the magic number 10\n\n\nhat_match &lt;- function(n){\n  hats &lt;- c(1:n)\n  random_hats &lt;- sample(hats, size = n, replace = FALSE)\n  sum(hats == random_hats) &gt; 0\n}\n\nhat_match(10)\n\n[1] TRUE\n\nhat_match(47)\n\n[1] TRUE"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#iterate-1",
    "href": "slides/2025-03-12-iters.html#iterate-1",
    "title": "Iterations",
    "section": "Iterate",
    "text": "Iterate\n\nmap_dbl(c(1:10), class_duplicates)\n\n [1] 0 1 0 0 0 0 0 0 1 0"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#improve",
    "href": "slides/2025-03-12-iters.html#improve",
    "title": "Iterations",
    "section": "Improve",
    "text": "Improve\n\nclass_duplicates &lt;- function(class_size){\n  class_birthdays &lt;- sample(c(1:365), size = class_size, replace = TRUE)\n  num_duplicates &lt;- sum(duplicated(class_birthdays))\n  return(ifelse(num_duplicates &gt; 0, 1, 0))\n}\n\nset.seed(47)\nnum_stud &lt;- 28\nmap_dbl(c(1:10), ~class_duplicates(class_size = num_stud))\n\n [1] 0 1 0 1 1 1 1 0 1 0"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#many-classrooms",
    "href": "slides/2025-03-12-iters.html#many-classrooms",
    "title": "Iterations",
    "section": "Many classrooms",
    "text": "Many classrooms\n\nset.seed(47)\nnum_stud &lt;- 28\nnum_class &lt;- 1000\nmap_dbl(c(1:num_class), ~class_duplicates(class_size = num_stud)) |&gt; \n  mean()\n\n[1] 0.649"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#vary-number-of-students",
    "href": "slides/2025-03-12-iters.html#vary-number-of-students",
    "title": "Iterations",
    "section": "Vary number of students",
    "text": "Vary number of students\n\nset.seed(47)\nnum_stud_upper &lt;- 28\nnum_class &lt;- 100\n\nbirth_match_prob &lt;- function(num_stud, reps){\n  prob &lt;- map_dbl(c(1:reps), ~class_duplicates(class_size = num_stud)) |&gt; \n    mean()\n  return(data.frame(match_prob = prob, num_stud = num_stud))\n}\n\nmap(c(1:num_stud_upper), birth_match_prob, reps = num_class) |&gt; \n  list_rbind()\n\n   match_prob num_stud\n1        0.00        1\n2        0.00        2\n3        0.00        3\n4        0.00        4\n5        0.03        5\n6        0.03        6\n7        0.04        7\n8        0.06        8\n9        0.11        9\n10       0.13       10\n11       0.14       11\n12       0.18       12\n13       0.18       13\n14       0.25       14\n15       0.25       15\n16       0.32       16\n17       0.37       17\n18       0.43       18\n19       0.44       19\n20       0.40       20\n21       0.43       21\n22       0.47       22\n23       0.48       23\n24       0.47       24\n25       0.61       25\n26       0.67       26\n27       0.63       27\n28       0.66       28"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#visualize",
    "href": "slides/2025-03-12-iters.html#visualize",
    "title": "Iterations",
    "section": "Visualize",
    "text": "Visualize\n\nset.seed(123)\nnum_stud_upper &lt;- 40\nnum_class &lt;- 1000\n\nmap(c(1:num_stud_upper), birth_match_prob, reps = num_class) |&gt; \n  list_rbind()  |&gt; \n  ggplot(aes(x = num_stud, y = match_prob)) + \n  geom_line() + \n  labs(y = \"probability of birthday match\",\n       x = \"number of students in class\")"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#simulate-to-1",
    "href": "slides/2025-03-12-iters.html#simulate-to-1",
    "title": "Iterations",
    "section": "Simulate to…",
    "text": "Simulate to…\n\n… estimate probabilities (easier than calculus).\n… understand complicated models."
  },
  {
    "objectID": "slides/2025-03-12-iters.html#bias-in-a-model",
    "href": "slides/2025-03-12-iters.html#bias-in-a-model",
    "title": "Iterations",
    "section": "Bias in a model",
    "text": "Bias in a model\nPopulation:\ntalent ~ Normal (100, 15)\ngrades ~ Normal (talent, 15)\nSAT ~ Normal (talent, 15)\nThe example is taken directly (and mostly verbatim) from a blog by Aaron Roth Algorithmic Unfairness Without Any Bias Baked In."
  },
  {
    "objectID": "slides/2025-03-12-iters.html#goal-for-admitting-students",
    "href": "slides/2025-03-12-iters.html#goal-for-admitting-students",
    "title": "Iterations",
    "section": "Goal for admitting students",
    "text": "Goal for admitting students\nCollege wants to admit students with\n\ntalent &gt; 115\n\n… but they only have access to grades and SAT which are noisy estimates of talent."
  },
  {
    "objectID": "slides/2025-03-12-iters.html#plan-for-accepting-students",
    "href": "slides/2025-03-12-iters.html#plan-for-accepting-students",
    "title": "Iterations",
    "section": "Plan for accepting students",
    "text": "Plan for accepting students\n\nRun a regression on a training dataset (talent is known for existing students)\nFind a model which predicts talent based on grades and SAT\nChoose students for whom predicted talent is above 115"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#flaw-in-the-plan",
    "href": "slides/2025-03-12-iters.html#flaw-in-the-plan",
    "title": "Iterations",
    "section": "Flaw in the plan …",
    "text": "Flaw in the plan …\n\nthere are two populations of students, the Reds and Blues.\nReds are the majority population (99%), and Blues are a small minority population (1%)\nthe Reds and the Blues are no different when it comes to talent: they both have the same talent distribution, as described above.\nthere is no bias baked into the grading or the exams: both the Reds and the Blues also have exactly the same grade and exam score distributions"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#what-is-really-different",
    "href": "slides/2025-03-12-iters.html#what-is-really-different",
    "title": "Iterations",
    "section": "What is really different?",
    "text": "What is really different?\n\nBut there is one difference: the Blues have more money than the Reds, so they each take the SAT twice, and report only the highest of the two scores to the college. This results in a small but noticeable bump in their average SAT scores, compared to the Reds."
  },
  {
    "objectID": "slides/2025-03-12-iters.html#key-aspect",
    "href": "slides/2025-03-12-iters.html#key-aspect",
    "title": "Iterations",
    "section": "Key aspect:",
    "text": "Key aspect:\n\nThe value of SAT means something different for the Reds versus the Blues\n\n(They have different feature distributions.)"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#lets-see-what-happens",
    "href": "slides/2025-03-12-iters.html#lets-see-what-happens",
    "title": "Iterations",
    "section": "Let’s see what happens …",
    "text": "Let’s see what happens …"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#two-models",
    "href": "slides/2025-03-12-iters.html#two-models",
    "title": "Iterations",
    "section": "Two models:",
    "text": "Two models:\nRed model (SAT taken once):\n\n\n# A tibble: 3 × 5\n  term        estimate std.error statistic p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept)   33.2     0.152        218.       0\n2 SAT            0.334   0.00149      224.       0\n3 grades         0.334   0.00149      225.       0\n\n\nBlue model (SAT is max score of two):\n\n\n# A tibble: 3 × 5\n  term        estimate std.error statistic   p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)   25.3      1.60        15.8 2.04e- 50\n2 SAT            0.432    0.0161      26.7 3.35e-119\n3 grades         0.277    0.0154      18.0 6.83e- 63"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#new-data",
    "href": "slides/2025-03-12-iters.html#new-data",
    "title": "Iterations",
    "section": "New data",
    "text": "New data\n\nGenerate new data, use the two models separately.\nCan the models predict if a student has talent &gt; 115?"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#new-data-1",
    "href": "slides/2025-03-12-iters.html#new-data-1",
    "title": "Iterations",
    "section": "New data",
    "text": "New data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# A tibble: 2 × 5\n  color   tpr    fpr   fnr error\n  &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 blue  0.503 0.0379 0.497 0.109\n2 red   0.509 0.0378 0.491 0.109"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#two-models-doesnt-seem-right",
    "href": "slides/2025-03-12-iters.html#two-models-doesnt-seem-right",
    "title": "Iterations",
    "section": "TWO models doesn’t seem right????",
    "text": "TWO models doesn’t seem right????\nWhat if we fit only one model to the entire dataset?\nAfter all, there are laws against using protected classes to make decisions (housing, jobs, money loans, college, etc.)\n\n\n# A tibble: 3 × 5\n  term        estimate std.error statistic p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept)   33.1     0.151        219.       0\n2 SAT            0.334   0.00148      225.       0\n3 grades         0.334   0.00148      226.       0\n\n\n(The coefficients kinda look like the red model…)"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#how-do-the-error-rates-change",
    "href": "slides/2025-03-12-iters.html#how-do-the-error-rates-change",
    "title": "Iterations",
    "section": "How do the error rates change?",
    "text": "How do the error rates change?\n\n\n\n\n\n\n\n\n\n\n\n\nOne model:\n\n\n# A tibble: 2 × 5\n  color   tpr    fpr   fnr error\n  &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 blue  0.619 0.0627 0.381 0.112\n2 red   0.507 0.0375 0.493 0.109\n\n\nTwo separate models:\n\n\n# A tibble: 2 × 5\n  color   tpr    fpr   fnr error\n  &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 blue  0.503 0.0379 0.497 0.109\n2 red   0.509 0.0378 0.491 0.109"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#what-did-we-learn",
    "href": "slides/2025-03-12-iters.html#what-did-we-learn",
    "title": "Iterations",
    "section": "What did we learn?",
    "text": "What did we learn?\n\nwith two populations that have different feature distributions, learning a single classifier (that is prohibited from discriminating based on population) will fit the bigger of the two populations\n\n\ndepending on the nature of the distribution difference, it can be either to the benefit or the detriment of the minority population\nno explicit human bias, either on the part of the algorithm designer or the data gathering process\nthe problem is exacerbated if we artificially force the algorithm to be group blind\nwell-intentioned “fairness” regulations prohibiting decision makers form taking sensitive attributes into account can actually make things less fair and less accurate at the same time"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#simulate",
    "href": "slides/2025-03-12-iters.html#simulate",
    "title": "Iterations",
    "section": "Simulate?",
    "text": "Simulate?\n\ndifferent varying proportions\neffect due to variability\neffect due to SAT coefficient\ndifferent number of times the blues get to take the test\netc."
  },
  {
    "objectID": "slides/2025-03-12-iters.html#aside-rnorm",
    "href": "slides/2025-03-12-iters.html#aside-rnorm",
    "title": "Iterations",
    "section": "Aside: rnorm()",
    "text": "Aside: rnorm()\nrnorm() calculates random normal values\n\nrnorm(3)\n\n[1] 1.0598770 0.2813142 0.1483487\n\nrnorm(3, mean = 0, sd = 1)\n\n[1] -1.5222088 -0.2609479  0.1393759\n\nrnorm(4, mean = 47, sd = 5)\n\n[1] 48.91283 45.11651 50.69179 42.14037"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#asset-allocation-1",
    "href": "slides/2025-03-12-iters.html#asset-allocation-1",
    "title": "Iterations",
    "section": "Asset allocation",
    "text": "Asset allocation\nTask: to model an asset allocation problem where you decide what portion of wealth should be allocated to risk-free investment or high-risk investment\n\nthe function calculates returns based on different asset allocations.\n\n\ncalculate_return &lt;- function(step, alpha) {\n  risk_free_rate &lt;- 1.03\n  risky_rate &lt;- rnorm(1, mean = 0, sd = 1) * 0.05 + 1\n  return(data.frame(step = step, \n                    return = (1 - alpha) * risk_free_rate + alpha * risky_rate))\n}\n\ncalculate_return(\"unicorn\", 0.47)\n\n     step   return\n1 unicorn 1.034815"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#let-alpha-0.5",
    "href": "slides/2025-03-12-iters.html#let-alpha-0.5",
    "title": "Iterations",
    "section": "Let alpha = 0.5",
    "text": "Let alpha = 0.5\n(half risky, half risk free)\n\ndecision_steps &lt;- 12\n\npmap(data.frame(step = c(1:decision_steps),\n                alpha = rep(0.5, decision_steps)),\n     calculate_return) |&gt; \n  list_rbind()\n\n   step    return\n1     1 1.0244265\n2     2 0.9740712\n3     3 1.0111959\n4     4 1.0382488\n5     5 1.0019058\n6     6 0.9847674\n7     7 1.0296142\n8     8 0.9924038\n9     9 1.0381949\n10   10 1.0088956\n11   11 1.0370043\n12   12 1.0107057"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#many-runs",
    "href": "slides/2025-03-12-iters.html#many-runs",
    "title": "Iterations",
    "section": "Many runs",
    "text": "Many runs\n\nruns &lt;- 10\ndecision_steps &lt;- 12\n\nrun_func &lt;- function(run, steps, alpha){\n  pmap(data.frame(step = c(1:steps),\n                  alpha = rep(alpha, steps)),\n       calculate_return) |&gt; \n    list_rbind() |&gt; \n    cbind(run_number = as.factor(run))\n}\n\nrun_func(\"happy\", 12, 0.5)\n\n   step    return run_number\n1     1 0.9972576      happy\n2     2 1.0503818      happy\n3     3 1.0133106      happy\n4     4 1.0305766      happy\n5     5 1.0424264      happy\n6     6 1.0278066      happy\n7     7 1.0088744      happy\n8     8 1.0280513      happy\n9     9 1.0270015      happy\n10   10 1.0495620      happy\n11   11 1.0483569      happy\n12   12 1.0089000      happy\n\nmap(c(1:runs), run_func, \n    steps = decision_steps,\n    alpha = 0.5) |&gt; \n  list_rbind()\n\n    step    return run_number\n1      1 1.0037332          1\n2      2 1.0305053          1\n3      3 1.0177365          1\n4      4 0.9851848          1\n5      5 1.0200471          1\n6      6 0.9777514          1\n7      7 1.0139097          1\n8      8 1.0394459          1\n9      9 1.0311656          1\n10    10 1.0111325          1\n11    11 1.0600142          1\n12    12 0.9529528          1\n13     1 1.0511925          2\n14     2 1.0188551          2\n15     3 1.0546398          2\n16     4 1.0286009          2\n17     5 1.0090312          2\n18     6 1.0116230          2\n19     7 0.9982508          2\n20     8 1.0397553          2\n21     9 0.9748453          2\n22    10 0.9994628          2\n23    11 1.0325967          2\n24    12 1.0265163          2\n25     1 0.9846161          3\n26     2 1.0106626          3\n27     3 1.0085478          3\n28     4 1.0253148          3\n29     5 0.9879959          3\n30     6 1.0761028          3\n31     7 1.0095107          3\n32     8 1.0417969          3\n33     9 1.0299429          3\n34    10 1.0483370          3\n35    11 1.0039636          3\n36    12 1.0177251          3\n37     1 0.9957903          4\n38     2 1.0446025          4\n39     3 1.0151633          4\n40     4 1.0208127          4\n41     5 1.0138992          4\n42     6 1.0241599          4\n43     7 0.9636553          4\n44     8 1.0330971          4\n45     9 1.0707355          4\n46    10 1.0341161          4\n47    11 1.0076286          4\n48    12 1.0437015          4\n49     1 1.0166442          5\n50     2 1.0424126          5\n51     3 0.9944647          5\n52     4 0.9669553          5\n53     5 1.0152975          5\n54     6 1.0145272          5\n55     7 1.0372179          5\n56     8 1.0407917          5\n57     9 0.9811040          5\n58    10 1.0213106          5\n59    11 0.9962674          5\n60    12 1.0518327          5\n61     1 0.9804384          6\n62     2 1.0313983          6\n63     3 1.0456102          6\n64     4 1.0019782          6\n65     5 0.9848773          6\n66     6 1.0166534          6\n67     7 1.0338028          6\n68     8 1.0222348          6\n69     9 0.9802758          6\n70    10 1.0156817          6\n71    11 1.0424656          6\n72    12 1.0575701          6\n73     1 1.0750144          7\n74     2 1.0058097          7\n75     3 0.9927478          7\n76     4 1.0009444          7\n77     5 1.0055233          7\n78     6 1.0573874          7\n79     7 0.9575212          7\n80     8 0.9957913          7\n81     9 1.0893832          7\n82    10 1.0135442          7\n83    11 1.0152496          7\n84    12 1.0331392          7\n85     1 1.0304361          8\n86     2 1.0111527          8\n87     3 1.0077437          8\n88     4 1.0031964          8\n89     5 1.0507032          8\n90     6 0.9713326          8\n91     7 1.0101054          8\n92     8 1.0556004          8\n93     9 0.9991680          8\n94    10 1.0232786          8\n95    11 1.0182200          8\n96    12 0.9987042          8\n97     1 1.0250592          9\n98     2 1.0300056          9\n99     3 0.9890955          9\n100    4 1.0395173          9\n101    5 1.0147912          9\n102    6 1.0243437          9\n103    7 0.9964191          9\n104    8 1.0782102          9\n105    9 0.9746246          9\n106   10 1.0194040          9\n107   11 1.0383502          9\n108   12 1.0508320          9\n109    1 1.0563048         10\n110    2 0.9850083         10\n111    3 1.0395162         10\n112    4 0.9711030         10\n113    5 1.0193429         10\n114    6 1.0259306         10\n115    7 0.9889117         10\n116    8 1.0418063         10\n117    9 1.0055857         10\n118   10 1.0155720         10\n119   11 1.0350093         10\n120   12 0.9916229         10"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#cummulative-product",
    "href": "slides/2025-03-12-iters.html#cummulative-product",
    "title": "Iterations",
    "section": "Cummulative product",
    "text": "Cummulative product\n\nnumbers &lt;- sample(1:5)\nnumbers\n\n[1] 5 4 2 1 3\n\ncumprod(numbers)\n\n[1]   5  20  40  40 120"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#cummulative-rates",
    "href": "slides/2025-03-12-iters.html#cummulative-rates",
    "title": "Iterations",
    "section": "Cummulative rates",
    "text": "Cummulative rates\n\nmap(c(1:runs), run_func, \n    steps = decision_steps,\n    alpha = 0.5) |&gt; \n  list_rbind() |&gt; \n  group_by(run_number) |&gt; \n  mutate(compound_return = cumprod(return))\n\n# A tibble: 120 × 4\n# Groups:   run_number [10]\n    step return run_number compound_return\n   &lt;int&gt;  &lt;dbl&gt; &lt;fct&gt;                &lt;dbl&gt;\n 1     1  0.984 1                    0.984\n 2     2  1.01  1                    0.990\n 3     3  1.04  1                    1.03 \n 4     4  0.987 1                    1.02 \n 5     5  1.04  1                    1.05 \n 6     6  1.04  1                    1.09 \n 7     7  0.994 1                    1.09 \n 8     8  1.01  1                    1.10 \n 9     9  1.01  1                    1.12 \n10    10  0.994 1                    1.11 \n# ℹ 110 more rows"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#returns-over-time",
    "href": "slides/2025-03-12-iters.html#returns-over-time",
    "title": "Iterations",
    "section": "Returns over time",
    "text": "Returns over time\n\ngraphcode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nruns &lt;- 20\nmap(c(1:runs), run_func, \n    steps = decision_steps,\n    alpha = 0.5) |&gt; \n  list_rbind() |&gt; \n  group_by(run_number) |&gt; \n  mutate(compound_return = cumprod(return)) |&gt; \n  ggplot(aes(x = step, y = compound_return)) +\n  geom_line(aes(color = run_number)) +\n  theme(legend.position = \"none\") +\n  scale_x_continuous(breaks = seq(1,12)) + \n  labs(title = \"Simulations of returns from asset allocation, alpha = 0.5\")"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#change-the-allocation",
    "href": "slides/2025-03-12-iters.html#change-the-allocation",
    "title": "Iterations",
    "section": "Change the allocation",
    "text": "Change the allocation\n\ngraphcode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nruns &lt;- 20\nmap(c(1:runs), run_func, \n    steps = decision_steps, \n    alpha = 0.1) |&gt; \n  list_rbind() |&gt; \n  group_by(run_number) |&gt; \n  mutate(compound_return = cumprod(return)) |&gt; \n  ggplot(aes(x = step, y = compound_return)) +\n  geom_line(aes(color = run_number)) +\n  theme(legend.position = \"none\") +\n  scale_x_continuous(breaks = seq(1,12)) + \n  labs(title = \"Simulations of returns from asset allocation, alpha = 0.1\")"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#change-the-allocation-1",
    "href": "slides/2025-03-12-iters.html#change-the-allocation-1",
    "title": "Iterations",
    "section": "Change the allocation",
    "text": "Change the allocation\n\ngraphcode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nruns &lt;- 20\nmap(c(1:runs), run_func, \n    steps = decision_steps, \n    alpha = 0.9) |&gt; \n  list_rbind() |&gt; \n  group_by(run_number) |&gt; \n  mutate(compound_return = cumprod(return)) |&gt; \n  ggplot(aes(x = step, y = compound_return)) +\n  geom_line(aes(color = run_number)) +\n  theme(legend.position = \"none\") +\n  scale_x_continuous(breaks = seq(1,12)) + \n  labs(title = \"Simulations of returns from asset allocation, alpha = 0.9\")"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#change-the-return",
    "href": "slides/2025-03-12-iters.html#change-the-return",
    "title": "Iterations",
    "section": "Change the return",
    "text": "Change the return\n\ncalculate returnrun function\n\n\n\ncalculate_return_sd10 &lt;- function(step, alpha) {\n  risk_free_rate &lt;- 1.03\n  risky_rate &lt;- rnorm(1, mean = 0, sd = 10) * 0.05 + 1\n  return(data.frame(step = step, \n                    return = (1 - alpha) * risk_free_rate + alpha * risky_rate))\n}\n\ncalculate_return(\"unicorn\", 0.47)\n\n     step   return\n1 unicorn 0.987021\n\n\n\n\n\nrun_func_sd10 &lt;- function(run, steps, alpha){\n  pmap(data.frame(step = c(1:steps),\n                  alpha = rep(alpha, steps)),\n       calculate_return_sd10) |&gt; \n    list_rbind() |&gt; \n    cbind(run_number = as.factor(run))\n}"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#does-the-change-impact-long-term",
    "href": "slides/2025-03-12-iters.html#does-the-change-impact-long-term",
    "title": "Iterations",
    "section": "Does the change impact long-term?",
    "text": "Does the change impact long-term?\n\ngraphcode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nruns &lt;- 20\nmap(c(1:runs), run_func_sd10, \n    steps = decision_steps,\n    alpha = 0.5) |&gt; \n  list_rbind() |&gt; \n  group_by(run_number) |&gt; \n  mutate(compound_return = cumprod(return)) |&gt; \n  ggplot(aes(x = step, y = compound_return)) +\n  geom_line(aes(color = run_number)) +\n  theme(legend.position = \"none\") +\n  scale_x_continuous(breaks = seq(1,12)) + \n  labs(title = \"Simulations of returns from asset allocation, alpha = 0.5\")"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#example-2-sally-joan",
    "href": "slides/2025-03-12-iters.html#example-2-sally-joan",
    "title": "Iterations",
    "section": "Example 2: Sally & Joan",
    "text": "Example 2: Sally & Joan\nConsider a situation where Sally and Joan plan to meet to study in their college campus center (Mosteller 1987; Baumer, Kaplan, and Horton 2021). They are both impatient people who will wait only 10 minutes for the other before leaving.\nBut their planning was incomplete. Sally said, “Meet me between 7 and 8 tonight at the student center.” When should Joan plan to arrive at the campus center? And what is the probability that they actually meet?"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#simulate-their-meeting",
    "href": "slides/2025-03-12-iters.html#simulate-their-meeting",
    "title": "Iterations",
    "section": "Simulate their meeting",
    "text": "Simulate their meeting\nAssume that Alex and Jordan are both equally likely to arrive at the campus center anywhere between 7pm and 8pm.\n\nfunctionmap()for() loopvectorized\n\n\n\nmeet_func &lt;- function(nada){\n  data.frame(\n    alex = runif(1, min = 0, max = 60),\n    jordan = runif(1, min = 0, max = 60)) |&gt; \n    mutate(result = ifelse(abs(alex - jordan) &lt;= 10, \n                           \"They meet\", \n                           \"They do not\"\n  )\n  )\n}\n\n\n\n\nn &lt;- 100000\n\ntic()\nmeet_map &lt;- 1:n |&gt; \n  map(meet_func) |&gt; \n  list_rbind()\ntoc()\n\n31.887 sec elapsed\n\n\n\n\n\ntic()\nmeet_for &lt;- data.frame()\nfor(i in c(1:n)){\n  meet_for &lt;- meet_for |&gt; rbind(\n    data.frame(\n      alex = runif(1, min = 0, max = 60),\n      jordan = runif(1, min = 0, max = 60)) |&gt; \n      mutate(result = ifelse(abs(alex - jordan) &lt;= 10,\n                             \"They meet\", \n                             \"They do not\"\n  )))\n}\ntoc()\n\n156.773 sec elapsed\n\n\n\n\n\ntic()\nmeet_vect &lt;- data.frame(\n  alex = runif(n, min = 0, max = 60),\n  jordan = runif(n, min = 0, max = 60)) |&gt; \n  mutate(result = ifelse(abs(alex - jordan) &lt;= 10, \n                         \"They meet\", \n                         \"They do not\"\n  )\n)\ntoc()\n\n0.008 sec elapsed"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#results",
    "href": "slides/2025-03-12-iters.html#results",
    "title": "Iterations",
    "section": "Results",
    "text": "Results\nThe results themselves are equivalent. Differing values due to randomness in the simulation.\n\nmap()for() loopvectorized\n\n\n\nmeet_map |&gt; \n  group_by(result) |&gt; \n  summarize(number = n())|&gt; \n  mutate(proprotion = number / sum(number))\n\n# A tibble: 2 × 3\n  result      number proprotion\n  &lt;chr&gt;        &lt;int&gt;      &lt;dbl&gt;\n1 They do not  69600      0.696\n2 They meet    30400      0.304\n\n\n\n\n\nmeet_for |&gt; \n  group_by(result) |&gt; \n  summarize(number = n())|&gt; \n  mutate(proprotion = number / sum(number))\n\n# A tibble: 2 × 3\n  result      number proprotion\n  &lt;chr&gt;        &lt;int&gt;      &lt;dbl&gt;\n1 They do not  69408      0.694\n2 They meet    30592      0.306\n\n\n\n\n\nmeet_vect |&gt; \n  group_by(result) |&gt; \n  summarize(number = n()) |&gt; \n  mutate(proprotion = number / sum(number))\n\n# A tibble: 2 × 3\n  result      number proprotion\n  &lt;chr&gt;        &lt;int&gt;      &lt;dbl&gt;\n1 They do not  69529      0.695\n2 They meet    30471      0.305"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#visualizing-the-meet-up",
    "href": "slides/2025-03-12-iters.html#visualizing-the-meet-up",
    "title": "Iterations",
    "section": "Visualizing the meet up",
    "text": "Visualizing the meet up\n\nmeet_map |&gt; \n  ggplot(aes(x = jordan, y = alex, color = result)) +\n  geom_point(alpha = 0.3) + \n  geom_abline(intercept = 10, slope = 1) + \n  geom_abline(intercept = -10, slope = 1) + \n  scale_color_brewer(palette = \"Paired\")"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#example-3-birthday-problem",
    "href": "slides/2025-03-12-iters.html#example-3-birthday-problem",
    "title": "Iterations",
    "section": "Example 3: Birthday Problem",
    "text": "Example 3: Birthday Problem\nWhat is the probability that in a room of 28 people, at least 2 of them have the same birthday?"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#function-2",
    "href": "slides/2025-03-12-iters.html#function-2",
    "title": "Iterations",
    "section": "Function",
    "text": "Function\n\nclass_duplicates &lt;- function(unicorn){\n  class_birthdays &lt;- sample(c(1:365), size = 28, replace = TRUE)\n  num_duplicates &lt;- sum(duplicated(class_birthdays))\n  return(ifelse(num_duplicates &gt; 0, 1, 0))\n}\n\nclass_duplicates()\n\n[1] 0\n\nclass_duplicates()\n\n[1] 1"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#example-1-alex-jordan",
    "href": "slides/2025-03-12-iters.html#example-1-alex-jordan",
    "title": "Iterations",
    "section": "Example 1: Alex & Jordan",
    "text": "Example 1: Alex & Jordan\nConsider a situation where Alex and Jordan plan to meet to study in their college campus center (Mosteller 1987; Baumer, Kaplan, and Horton 2021). They are both impatient people who will wait only 10 minutes for the other before leaving.\nBut their planning was incomplete. Alex said, “Meet me between 7 and 8 tonight at the student center.” When should Jordan plan to arrive at the campus center? And what is the probability that they actually meet?"
  },
  {
    "objectID": "slides/2025-03-10-help.html",
    "href": "slides/2025-03-10-help.html",
    "title": "Help me help you",
    "section": "",
    "text": "Reproducible examples (reprex())\nCode style\n\n\n\n\n\n\n\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-03-10-help.html#footnotes",
    "href": "slides/2025-03-10-help.html#footnotes",
    "title": "Help me help you",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nhttps://style.tidyverse.org/↩︎\nThe last one isn’t great because it is hard to distinguish the data frame from the other arguments (which play very different roles in the summarize() function).↩︎"
  },
  {
    "objectID": "slides/2025-03-12-iters.html#vary-number-of-hats-1",
    "href": "slides/2025-03-12-iters.html#vary-number-of-hats-1",
    "title": "Iterations",
    "section": "Vary number of hats",
    "text": "Vary number of hats\n\nhat_match_prob &lt;- function(n, reps){\n  prob &lt;- map_lgl(c(1:reps), ~hat_match(n = n)) |&gt; \n    mean()\n  return(data.frame(match_prob = prob, num_hats = n))\n}\n\nset.seed(47)\nmap(c(1:20), hat_match_prob, reps = num_iter) |&gt; \n  list_rbind()\n\n   match_prob num_hats\n1      1.0000        1\n2      0.4964        2\n3      0.6695        3\n4      0.6241        4\n5      0.6376        5\n6      0.6290        6\n7      0.6299        7\n8      0.6299        8\n9      0.6373        9\n10     0.6273       10\n11     0.6319       11\n12     0.6348       12\n13     0.6393       13\n14     0.6300       14\n15     0.6280       15\n16     0.6396       16\n17     0.6355       17\n18     0.6283       18\n19     0.6304       19\n20     0.6461       20"
  },
  {
    "objectID": "slides/2025-03-10-help.html#must-haves-for-reprex",
    "href": "slides/2025-03-10-help.html#must-haves-for-reprex",
    "title": "Help me help you",
    "section": "Must-haves for reprex()",
    "text": "Must-haves for reprex()\nThe following must be included in order for a reproducible example to work (i.e., for someone else to run the code and get the same output):\n\nR pacakges\nrelevant dataset(s)\nall of the code"
  },
  {
    "objectID": "project3.html#footnotes",
    "href": "project3.html#footnotes",
    "title": "Project 3",
    "section": "Footnotes",
    "text": "Footnotes\n\n\ncode folding allows the user can see the code if they want to: https://quarto.org/docs/output-formats/html-code.html#folding-code↩︎"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#example-helper-or-hinderer",
    "href": "slides/2025-03-26-perm.html#example-helper-or-hinderer",
    "title": "Permutation Tests",
    "section": "Example: helper or hinderer",
    "text": "Example: helper or hinderer\n\nIn a study reported in the November 2007 issue of Nature, researchers investigated whether infants take into account an individual’s actions towards others in evaluating that individual as appealing or aversive, perhaps laying for the foundation for social interaction (Hamlin, Wynn, and Bloom 2007). In other words, do children who aren’t even yet talking still form impressions as to someone’s friendliness based on their actions? In one component of the study, 10-month-old infants were shown a “climber” character (a piece of wood with “googly” eyes glued onto it) that could not make it up a hill in two tries. Then the infants were shown two scenarios for the climber’s next try, one where the climber was pushed to the top of the hill by another character (the “helper” toy) and one where the climber was pushed back down the hill by another character (the “hinderer” toy). The infant was alternately shown these two scenarios several times. Then the child was presented with both pieces of wood (the helper and the hinderer characters) and asked to pick one to play with."
  },
  {
    "objectID": "slides/2025-03-26-perm.html#example-helper-or-hinderer-1",
    "href": "slides/2025-03-26-perm.html#example-helper-or-hinderer-1",
    "title": "Permutation Tests",
    "section": "Example: helper or hinderer",
    "text": "Example: helper or hinderer\n\nInfant videos\n“Social evaluation by preverbal infants”, Nature 2007"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#parts-of-a-hypothesis-test",
    "href": "slides/2025-03-26-perm.html#parts-of-a-hypothesis-test",
    "title": "Permutation Tests",
    "section": "Parts of a hypothesis test",
    "text": "Parts of a hypothesis test\n\nWhat are the observational units?\n\ninfants\n\nWhat is the variable? What type of variable?\n\nchoice of helper or hindered: categorical\n\nWhat is the statistic?\n\n\\(\\hat{p}\\) = proportion of infants who chose helper = 14/16 = 0.875\n\nWhat is the parameter?\n\np = proportion of all infants who might choose helper (not measurable!)"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#hypotheses",
    "href": "slides/2025-03-26-perm.html#hypotheses",
    "title": "Permutation Tests",
    "section": "Hypotheses",
    "text": "Hypotheses\n\\(H_0\\): Null hypothesis. Babies (or rather, the population of babies under consideration) have no inherent preference for the helper or the hinderer shape.\n\\(H_A\\): Alternative hypothesis. Babies (or rather, the population of babies under consideration) are more likely to prefer the helper shape over the hinderer shape."
  },
  {
    "objectID": "slides/2025-03-26-perm.html#p-value",
    "href": "slides/2025-03-26-perm.html#p-value",
    "title": "Permutation Tests",
    "section": "p-value",
    "text": "p-value\n\np-value is the probability of our data or more extreme if nothing interesting is going on.\n\n\n\n\n\n\n\n\n\ncompletely arbitrary cutoff\n\\(\\rightarrow\\)\ngenerally accepted conclusion\n\n\n\n\np-value \\(&gt;\\) 0.10\n\\(\\rightarrow\\)\nno evidence against the null model\n\n\n0.05 \\(&lt;\\) p-value \\(&lt;\\) 0.10\n\\(\\rightarrow\\)\nmoderate evidence against the null model\n\n\n0.01 \\(&lt;\\) p-value \\(&lt;\\) 0.05\n\\(\\rightarrow\\)\nstrong evidence against the null model\n\n\np-value \\(&lt;\\) 0.01\n\\(\\rightarrow\\)\nvery strong evidence against the null model"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#computation",
    "href": "slides/2025-03-26-perm.html#computation",
    "title": "Permutation Tests",
    "section": "Computation",
    "text": "Computation\nFirst find the statistic\n\n# to control the randomness\nset.seed(47)\n\n# first create a data frame with the Infant data\nInfants &lt;- read.delim(\"http://www.rossmanchance.com/iscam3/data/InfantData.txt\")\n\n# find the observed number of babies who chose the helper\nhelp_obs &lt;- Infants |&gt; \n  summarize(prop_help = mean(choice == \"helper\")) |&gt; \n  pull()\nhelp_obs\n\n[1] 0.875"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#computation-1",
    "href": "slides/2025-03-26-perm.html#computation-1",
    "title": "Permutation Tests",
    "section": "Computation",
    "text": "Computation\nFind the sampling distribution under the condition that the null hypothesis is true.\n\nfunctionrepeatvizviz code\n\n\n\n# write a function to simulate a set of infants who are \n# equally likely to choose the helper or the hinderer\n\nrandom_choice &lt;- function(rep, num_babies){\n  choice = sample(c(\"helper\", \"hinderer\"), size = num_babies,\n                  replace = TRUE, prob = c(0.5, 0.5))\n  return(mean(choice == \"helper\"))\n}\n\n\n\n\n# repeat the function many times\nmap_dbl(c(1:10), random_choice, num_babies = 16)\n\n [1] 0.6875 0.3750 0.4375 0.3750 0.5000 0.5000 0.6250 0.4375 0.6875 0.6250\n\nnum_exper &lt;- 5000\nhelp_random &lt;- map_dbl(c(1:num_exper), random_choice, \n                            num_babies = 16)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# visualize null sampling distribution\nhelp_random |&gt; \n  data.frame() |&gt; \n  ggplot(aes(x = help_random)) + \n  geom_histogram() + \n  labs(x = \"proportion of babies who chose the helper\",\n       title = \"sampling distribution when null hypothesis is true\",\n       subtitle = \"that is, no inherent preference for helper or hinderer\")"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#computation-2",
    "href": "slides/2025-03-26-perm.html#computation-2",
    "title": "Permutation Tests",
    "section": "Computation",
    "text": "Computation\nAre the null values consistent with the observed value?\n\nvizp-valueviz code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# the p-value!\nsum(help_random &gt;= help_obs) / num_exper\n\n[1] 0.0022\n\n\n\n\n\n# visualize null sampling distribution\nhelp_random |&gt; \n  data.frame() |&gt; \n  ggplot(aes(x = help_random)) + \n  geom_histogram() + \n  geom_vline(xintercept = help_obs, color = \"red\") + \n  labs(x = \"proportion of babies who chose the helper\",\n       title = \"sampling distribution when null hypothesis is true\",\n       subtitle = \"that is, no inherent preference for helper or hinderer\")"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#all-together-structure-of-a-hypothesis-test",
    "href": "slides/2025-03-26-perm.html#all-together-structure-of-a-hypothesis-test",
    "title": "Permutation Tests",
    "section": "All together: structure of a hypothesis test",
    "text": "All together: structure of a hypothesis test\n\ndecide on a research question (which will determine the test)\ncollect data, specify the variables of interest\nstate the null (and alternative) hypothesis values (often statements about parameters)\n\nthe null claim is the science we want to reject\nthe alternative claim is the science we want to demonstrate\n\ngenerate a (null) sampling distribution to describe the variability of the statistic that was calculated along the way\nvisualize the distribution of the statistics under the null model\nget p-value to measure the consistency of the observed statistic and the possible values of the statistic under the null model\nmake a conclusion using words that describe the research setting"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#hypotheses-1",
    "href": "slides/2025-03-26-perm.html#hypotheses-1",
    "title": "Permutation Tests",
    "section": "Hypotheses",
    "text": "Hypotheses\n\nHypothesis Testing compares data to the expectation of a specific null hypothesis. If the data are unusual, assuming that the null hypothesis is true, then the null hypothesis is rejected.\nThe Null Hypothesis, \\(H_0\\), is a specific statement about a population made for the purposes of argument. A good null hypothesis is a statement that would be interesting to reject.\nThe Alternative Hypothesis, \\(H_A\\), is a specific statement about a population that is in the researcher’s interest to demonstrate. Typically, the alternative hypothesis contains all the values of the population that are not included in the null hypothesis.\nIn a two-sided (or two-tailed) test, the alternative hypothesis includes values on both sides of the value specified by the null hypothesis.\nIn a one-sided (or one-tailed) test, the alternative hypothesis includes parameter values on only one side of the value specified by the null hypothesis. \\(H_0\\) is rejected only if the data depart from it in the direction stated by \\(H_A\\)."
  },
  {
    "objectID": "slides/2025-03-26-perm.html#statistics-without-the-agonizing-pain",
    "href": "slides/2025-03-26-perm.html#statistics-without-the-agonizing-pain",
    "title": "Permutation Tests",
    "section": "Statistics Without the Agonizing Pain",
    "text": "Statistics Without the Agonizing Pain\n\nJohn Rauser of Pintrest (now Amazon), speaking at Strata + Hadoop 2014. https://blog.revolutionanalytics.com/2014/10/statistics-doesnt-have-to-be-that-hard.html"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#logic-of-hypothesis-tests",
    "href": "slides/2025-03-26-perm.html#logic-of-hypothesis-tests",
    "title": "Permutation Tests",
    "section": "Logic of hypothesis tests",
    "text": "Logic of hypothesis tests\n\nChoose a statistic that measures the effect.\nConstruct the sampling distribution under \\(H_0\\).\nLocate the observed statistic in the null sampling distribution.\np-value is the probability of the observed data or more extreme if the null hypothesis is true"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#logic-of-permutation-tests",
    "href": "slides/2025-03-26-perm.html#logic-of-permutation-tests",
    "title": "Permutation Tests",
    "section": "Logic of permutation tests",
    "text": "Logic of permutation tests\n\nChoose a test statistic.\nShuffle the data (force the null hypothesis to be true). Using the shuffled statistics, create a null sampling distribution of the test statistic (under \\(H_0\\)).\nFind the observed test statistic on the null sampling distribution.\nCompute the p-value (observed data or more extreme). The p-value can be one or two-sided."
  },
  {
    "objectID": "slides/2025-03-26-perm.html#applet-for-two-sample-permutation-tests",
    "href": "slides/2025-03-26-perm.html#applet-for-two-sample-permutation-tests",
    "title": "Permutation Tests",
    "section": "Applet for two sample permutation tests",
    "text": "Applet for two sample permutation tests\n\npermutation test for two samples from Rossman Chance applets."
  },
  {
    "objectID": "slides/2025-03-26-perm.html#high-school-beyond-survey",
    "href": "slides/2025-03-26-perm.html#high-school-beyond-survey",
    "title": "Permutation Tests",
    "section": "High School & Beyond survey",
    "text": "High School & Beyond survey\nData: 200 randomly selected observations from the High School and Beyond survey, conducted on high school seniors by the National Center for Educational Statistics.\nResearch Question: in the population, do private school kids have a higher math score on average?\n\\[H_0: \\mu_{private} = \\mu_{public}\\] \\[H_A: \\mu_{private} &gt; \\mu_{public}\\]\n\\(\\mu\\) is the average math score in the population.\n\nlibrary(openintro)\nhsb2\n\n# A tibble: 200 × 11\n      id gender race      ses   schtyp prog   read write  math science\n   &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;     &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;\n 1    70 male   white     low   public gene…    57    52    41      47\n 2   121 female white     midd… public voca…    68    59    53      63\n 3    86 male   white     high  public gene…    44    33    54      58\n 4   141 male   white     high  public voca…    63    44    47      53\n 5   172 male   white     midd… public acad…    47    52    57      53\n 6   113 male   white     midd… public acad…    44    52    51      63\n 7    50 male   african … midd… public gene…    50    59    42      53\n 8    11 male   hispanic  midd… public acad…    34    46    45      39\n 9    84 male   white     midd… public gene…    63    57    54      58\n10    48 male   african … midd… public acad…    57    55    52      50\n# ℹ 190 more rows\n# ℹ 1 more variable: socst &lt;int&gt;"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#summary-of-the-variables",
    "href": "slides/2025-03-26-perm.html#summary-of-the-variables",
    "title": "Permutation Tests",
    "section": "Summary of the variables",
    "text": "Summary of the variables\n\nhsb2 |&gt; \n  group_by(schtyp) |&gt; \n  summarize(ave_math = mean(math),\n            med_math = median(math))\n\n# A tibble: 2 × 3\n  schtyp  ave_math med_math\n  &lt;fct&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n1 public      52.2     52  \n2 private     54.8     53.5"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#visualize-the-relationship-of-interest",
    "href": "slides/2025-03-26-perm.html#visualize-the-relationship-of-interest",
    "title": "Permutation Tests",
    "section": "Visualize the relationship of interest",
    "text": "Visualize the relationship of interest\n\nhsb2 |&gt; \n  ggplot(aes(x = schtyp, y = math)) + \n  geom_boxplot()"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#calculate-the-observed-statistics",
    "href": "slides/2025-03-26-perm.html#calculate-the-observed-statistics",
    "title": "Permutation Tests",
    "section": "Calculate the observed statistic(s)",
    "text": "Calculate the observed statistic(s)\nFor fun, we are calculating both the difference in averages as well as the difference in medians. That is, we have two different observed summary statistics to work with.\n\nhsb2 |&gt; \n  group_by(schtyp) |&gt; \n  summarize(ave_math = mean(math),\n            med_math = median(math))\n\n# A tibble: 2 × 3\n  schtyp  ave_math med_math\n  &lt;fct&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n1 public      52.2     52  \n2 private     54.8     53.5\n\nhsb2 |&gt; \n  group_by(schtyp) |&gt; \n  summarize(ave_math = mean(math),\n            med_math = median(math)) |&gt; \n  summarize(ave_diff = diff(ave_math),\n            med_diff = diff(med_math))\n\n# A tibble: 1 × 2\n  ave_diff med_diff\n     &lt;dbl&gt;    &lt;dbl&gt;\n1     2.51      1.5"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#generate-a-null-sampling-distribution.",
    "href": "slides/2025-03-26-perm.html#generate-a-null-sampling-distribution.",
    "title": "Permutation Tests",
    "section": "Generate a null sampling distribution.",
    "text": "Generate a null sampling distribution.\n\nperm_data &lt;- function(rep, data){\n  data |&gt; \n    select(schtyp, math) |&gt; \n    mutate(math_perm = sample(math, replace = FALSE)) |&gt; \n    group_by(schtyp) |&gt; \n    summarize(obs_ave = mean(math),\n              obs_med = median(math),\n              perm_ave = mean(math_perm),\n              perm_med = median(math_perm)) |&gt; \n    summarize(obs_ave_diff = diff(obs_ave),\n              obs_med_diff = diff(obs_med),\n              perm_ave_diff = diff(perm_ave),\n              perm_med_diff = diff(perm_med),\n              rep = rep)\n}\n\nmap(c(1:10), perm_data, data = hsb2) |&gt; \n  list_rbind()\n\n# A tibble: 10 × 5\n   obs_ave_diff obs_med_diff perm_ave_diff perm_med_diff   rep\n          &lt;dbl&gt;        &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1         2.51          1.5         2.62            2.5     1\n 2         2.51          1.5         0.757          -1       2\n 3         2.51          1.5         1.65            2       3\n 4         2.51          1.5        -0.805          -0.5     4\n 5         2.51          1.5         1.80            2.5     5\n 6         2.51          1.5         2.92            3       6\n 7         2.51          1.5         1.91            2.5     7\n 8         2.51          1.5        -2.55           -3.5     8\n 9         2.51          1.5        -1.21           -3       9\n10         2.51          1.5         1.32            1      10"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#visualize-the-null-sampling-distribution-average",
    "href": "slides/2025-03-26-perm.html#visualize-the-null-sampling-distribution-average",
    "title": "Permutation Tests",
    "section": "Visualize the null sampling distribution (average)",
    "text": "Visualize the null sampling distribution (average)\n\nset.seed(47)\nperm_stats &lt;- \n  map(c(1:500), perm_data, data = hsb2) |&gt; \n  list_rbind() \n\nperm_stats |&gt; \n  ggplot(aes(x = perm_ave_diff)) + \n  geom_histogram() + \n  geom_vline(aes(xintercept = obs_ave_diff), color = \"red\")"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#visualize-the-null-sampling-distribution-median",
    "href": "slides/2025-03-26-perm.html#visualize-the-null-sampling-distribution-median",
    "title": "Permutation Tests",
    "section": "Visualize the null sampling distribution (median)",
    "text": "Visualize the null sampling distribution (median)\n\nperm_stats |&gt; \n  ggplot(aes(x = perm_med_diff)) + \n  geom_histogram() + \n  geom_vline(aes(xintercept = obs_med_diff), color = \"red\")"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#p-value-2",
    "href": "slides/2025-03-26-perm.html#p-value-2",
    "title": "Permutation Tests",
    "section": "p-value",
    "text": "p-value\n\nperm_stats |&gt; \n  summarize(p_val_ave = mean(perm_ave_diff &gt; obs_ave_diff),\n            p_val_med = mean(perm_med_diff &gt; obs_med_diff))\n\n# A tibble: 1 × 2\n  p_val_ave p_val_med\n      &lt;dbl&gt;     &lt;dbl&gt;\n1     0.086      0.27"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#conclusion",
    "href": "slides/2025-03-26-perm.html#conclusion",
    "title": "Permutation Tests",
    "section": "Conclusion",
    "text": "Conclusion\nFrom these data, the observed differences seem to be consistent with the distribution of differences in the null sampling distribution.\nThere is no evidence to reject the null hypothesis.\nWe cannot claim that in the population the average math scores for private school kids is larger than the average math scores for public school kids (p-value = 0.086).\nWe cannot claim that in the population the median math scores for private school kids is larger than the median math scores for public school kids (p-value = 0.27)."
  },
  {
    "objectID": "slides/2025-03-26-perm.html#two-sided-test",
    "href": "slides/2025-03-26-perm.html#two-sided-test",
    "title": "Permutation Tests",
    "section": "Two-sided test:",
    "text": "Two-sided test:\n\\(H_0: \\mu_{private} = \\mu_{public}\\) and \\(H_A: \\mu_{private} \\ne \\mu_{public}\\)"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#two-sided-p-value",
    "href": "slides/2025-03-26-perm.html#two-sided-p-value",
    "title": "Permutation Tests",
    "section": "Two-sided p-value",
    "text": "Two-sided p-value\n\nperm_stats |&gt; \n    summarize(p_val_ave = \n                mean(perm_ave_diff &gt; obs_ave_diff | \n                       perm_ave_diff &lt; -obs_ave_diff),\n              p_val_med = \n              mean(perm_med_diff &gt; obs_med_diff | \n                     perm_med_diff &lt; -obs_med_diff))\n\n# A tibble: 1 × 2\n  p_val_ave p_val_med\n      &lt;dbl&gt;     &lt;dbl&gt;\n1     0.154     0.534"
  },
  {
    "objectID": "slides/2025-03-26-perm.html#two-sided-conclusion",
    "href": "slides/2025-03-26-perm.html#two-sided-conclusion",
    "title": "Permutation Tests",
    "section": "Two-sided conclusion",
    "text": "Two-sided conclusion\nFrom these data, the observed differences seem to be consistent with the distribution of differences in the null sampling distribution.\nThere is no evidence to reject the null hypothesis.\nWe cannot claim that there is a difference in average math scores in the population (p-value = 0.154).\nWe cannot claim that there is a difference in median math scores int he population (p-value = 0.534)."
  },
  {
    "objectID": "slides/2025-03-26-perm.html#references",
    "href": "slides/2025-03-26-perm.html#references",
    "title": "Permutation Tests",
    "section": "References",
    "text": "References\n\n\n\n\nHamlin, J. Kiley, Karen Wynn, and Paul Bloom. 2007. “Social Evaluation by Preverbal Infants.” Nature 450: 557–59."
  },
  {
    "objectID": "slides/2025-03-12-iters.html#section",
    "href": "slides/2025-03-12-iters.html#section",
    "title": "Iterations",
    "section": "",
    "text": "Baumer, Ben, Daniel Kaplan, and Nicholas Horton. 2021. Modern Data Science with r. CRC Press. https://mdsr-book.github.io/mdsr2e/.\n\n\nMosteller, Frederick. 1987. Fifty Challenging Problems in Probability with Solutions. Dover Publications: Mineola, NY."
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#stand-your-ground",
    "href": "slides/2025-04-02-ethics.html#stand-your-ground",
    "title": "Ethics in Data Science",
    "section": "Stand Your Ground",
    "text": "Stand Your Ground\n\nReproduction of a data graphic reporting the number of gun deaths in Florida over time. The original image was published by Reuters. (Baumer, Kaplan, and Horton 2021)"
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#climate",
    "href": "slides/2025-04-02-ethics.html#climate",
    "title": "Ethics in Data Science",
    "section": "Climate",
    "text": "Climate\n\nA tweet by National Review on December 14, 2015 showing the change in global temperature over time. (Baumer, Kaplan, and Horton 2021)"
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#ga-covid-19-confirmed-cases",
    "href": "slides/2025-04-02-ethics.html#ga-covid-19-confirmed-cases",
    "title": "Ethics in Data Science",
    "section": "GA COVID-19 confirmed cases",
    "text": "GA COVID-19 confirmed cases\n\n\n\n\n\nMay 10, 2020, Georgia Department of Health, COVID-19 cases for 5 counties across time. https://dph.georgia.gov/covid-19-daily-status-report\n\n\n\n\n\n\n\n\n\nMay 17, 2020, Georgia Department of Health, COVID-19 cases for 5 counties across time. https://dph.georgia.gov/covid-19-daily-status-report"
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#ga-covid-19-cases-per-100k",
    "href": "slides/2025-04-02-ethics.html#ga-covid-19-cases-per-100k",
    "title": "Ethics in Data Science",
    "section": "GA COVID-19 cases per 100K",
    "text": "GA COVID-19 cases per 100K\n\n\n\n\n\n\n\nJuly 2, 2020, Georgia Department of Health, COVID-19 cases per 100K\n\n\n\n\n\n\n\n\n\n\nJuly 17, 2020, https://dph.georgia.gov/covid-19-daily-status-report"
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#principles-1",
    "href": "slides/2025-04-02-ethics.html#principles-1",
    "title": "Ethics in Data Science",
    "section": "12 principles",
    "text": "12 principles\nAs data teams, we aim to…\n\nUse data to improve life for our users, customers, organizations, and communities.\nCreate reproducible and extensible work.\nBuild teams with diverse ideas, backgrounds, and strengths.\nPrioritize the continuous collection and availability of discussions and metadata.\nClearly identify the questions and objectives that drive each project and use to guide both planning and refinement.\nBe open to changing our methods and conclusions in response to new knowledge.\nRecognize and mitigate bias in ourselves and in the data we use.\nPresent our work in ways that empower others to make better-informed decisions.\nConsider carefully the ethical implications of choices we make when using data, and the impacts of our work on individuals and society.\nRespect and invite fair criticism while promoting the identification and open discussion of errors, risks, and unintended consequences of our work.\nProtect the privacy and security of individuals represented in our data.\nHelp others to understand the most useful and appropriate applications of data to solve real-world problems."
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#examples",
    "href": "slides/2025-04-02-ethics.html#examples",
    "title": "Ethics in Data Science",
    "section": "Examples",
    "text": "Examples\nIt is impossible to predict every ethical quandary that a data scientist might face.\nInstead, we tour some examples which help us think carefully about a set of guiding principles."
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#references",
    "href": "slides/2025-04-02-ethics.html#references",
    "title": "Ethics in Data Science",
    "section": "References",
    "text": "References\n\n\n\n\nBaumer, Ben, Daniel Kaplan, and Nicholas Horton. 2021. Modern Data Science with r. CRC Press. https://mdsr-book.github.io/mdsr2e/.\n\n\nHerndon, Thomas, Michael Ash, and Robert Pollin. 2013. “Does High Public Debt Consistently Stifle Economic Growth? A Critique of Reinhart and Rogo ff.” Working Papers wp322. Political Economy Research Institute, University of Massachusetts at Amherst. https://ideas.repec.org/p/uma/periwp/wp322.html.\n\n\nImai, Kosuke, and Kabir Khanna. 2016. “Improving Ecological Inference by Predicting Individual Ethnicity from Voter Registration Records.” Political Analysis 24 (2): 263–72. https://doi.org/10.1093/pan/mpw001.\n\n\nKirkegaard, Emil O. W., and Julius D. Bjerrekær. 2016. “The OKCupid Dataset: A Very Large Public Dataset of Dating Site Users.” Open Differential Psychology, November. https://doi.org/10.26775/odp.2016.11.03.\n\n\nReinhart, Carmen M, and Kenneth S Rogoff. 2010. “Growth in a Time of Debt.” Working Paper 15639. Working Paper Series. National Bureau of Economic Research. https://doi.org/10.3386/w15639.\n\n\nRoose, Kevin. 2013. “Meet the 28-Year-Old Grad Student Who Just Shook the Global Austerity Movement.” New York Magazine. http://nymag.com/daily/intelligencer/2013/04/grad-student-who-shook-global-austerity-movement.html.\n\n\nWang, Y., and M. Kosinski. 2018. “Deep Neural Networks Are More Accurate Than Humans at Detecting Sexual Orientation from Facial Images.” Journal of Personality and Social Psychology 114 (2): 246–57."
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#predicting-race",
    "href": "slides/2025-04-02-ethics.html#predicting-race",
    "title": "Ethics in Data Science",
    "section": "Predicting race",
    "text": "Predicting race\nConsider a racial prediction algorithm including published software for the classier under an open-source license as the R package wru (Imai and Khanna 2016). (Trained using US Census Surname Data.)\nThe main function predict_race() returns predicted probabilities for a person’s race based on either their last name alone, or their last name and their address.\n\nlibrary(tidyverse)\nlibrary(wru)\npredict_race(voter.file = voters, surname.only = TRUE) |&gt;\n  select(surname, pred.whi, pred.bla, pred.his, pred.asi, pred.oth)\n\n      surname    pred.whi    pred.bla     pred.his    pred.asi    pred.oth\n1      Khanna 0.045110474 0.003067623 0.0068522723 0.860411906 0.084557725\n2        Imai 0.052645440 0.001334812 0.0558160072 0.719376581 0.170827160\n3      Rivera 0.043285692 0.008204605 0.9136195794 0.024316883 0.010573240\n4     Fifield 0.895405704 0.001911388 0.0337464844 0.011079323 0.057857101\n5        Zhou 0.006572555 0.001298962 0.0005388581 0.982365594 0.009224032\n6    Ratkovic 0.861236727 0.008212824 0.0095395642 0.011334635 0.109676251\n7     Johnson 0.543815322 0.344128607 0.0272403940 0.007405765 0.077409913\n8       Lopez 0.038939877 0.004920643 0.9318797791 0.012154125 0.012105576\n10 Wantchekon 0.330697188 0.194700665 0.4042849478 0.021379541 0.048937658\n9       Morse 0.866360147 0.044429853 0.0246568086 0.010219712 0.054333479\n\n\nGiven the long history of systemic racism in the United States, it is clear how this software could be used to discriminate against people of color.\nWhat if we partnered with a progressive voting rights organization that wanted to use racial prediction to target members of a particular ethnic group to help them register to vote?\nWas the publication of this model ethical? Does the open-source nature of the code affect your answer? Is it ethical to use this software? Does your answer change depending on the intended use?"
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#data-scraping",
    "href": "slides/2025-04-02-ethics.html#data-scraping",
    "title": "Ethics in Data Science",
    "section": "Data scraping",
    "text": "Data scraping\n“The OkCupid data set: A very large public data set of dating site users” (Kirkegaard and Bjerrekær 2016):\n\n2,620 variables\nincluding usernames, gender, and dating preferences\n68,371 people scraped from the OkCupid dating website\n\nThe data scraping did not involve any illicit technology such as breaking passwords. Nonetheless, the author received many challenges to the work as an ethical breach and accusing him of doxing people by releasing personal data.\nDoes the work raise ethical issues?"
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#reproducible-spreadsheet",
    "href": "slides/2025-04-02-ethics.html#reproducible-spreadsheet",
    "title": "Ethics in Data Science",
    "section": "Reproducible spreadsheet",
    "text": "Reproducible spreadsheet\n“Growth in a Time of Debt” (Reinhart and Rogoff 2010) argued that countries which pursued austerity measures did not necessarily suffer from slow economic growth.\nThomas Herndon requested access to the data and analysis contained in the paper. After receiving the original spreadsheet from Reinhart, Herndon found several errors.\n\nI clicked on cell L51, and saw that they had only averaged rows 30 through 44, instead of rows 30 through 49.” —Thomas Herndon (Roose 2013)\n\nIn a critique of the paper, Herndon, Ash, and Pollin (2013) point out coding errors, selective inclusion of data, and odd weighting of summary statistics that shaped the conclusions of Reinhart and Rogoff (2010).\nWhat ethical questions does publishing a flawed analysis raise?"
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#predicting-sexuality",
    "href": "slides/2025-04-02-ethics.html#predicting-sexuality",
    "title": "Ethics in Data Science",
    "section": "Predicting Sexuality",
    "text": "Predicting Sexuality\nWang and Kosinski (2018) used a deep neural network and logistic regression to build a classifier for sexual orientation based on pictures of people’s faces. The authors claim that if given five images of a person’s face, their model would correctly predict the sexual orientation of 91% of men and 83% of women. The authors highlight the potential harm that their work could do in their abstract:\n\nAdditionally, given that companies and governments are increasingly using computer vision algorithms to detect people’s intimate traits, our findings expose a threat to the privacy and safety of gay men and women.\n\nA subsequent article in The New Yorker also notes that:\n\nthe study consisted entirely of white faces, but only because the dating site had served up too few faces of color to provide for meaningful analysis.\n\nWas the research ethical? Were the authors justified in creating and publishing this model?"
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#principles-in-action",
    "href": "slides/2025-04-02-ethics.html#principles-in-action",
    "title": "Ethics in Data Science",
    "section": "Principles in action",
    "text": "Principles in action\nTo think clearly about ethics, we need to apply principles directly to the examples…"
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#predicting-sexuality-1",
    "href": "slides/2025-04-02-ethics.html#predicting-sexuality-1",
    "title": "Ethics in Data Science",
    "section": "Predicting sexuality",
    "text": "Predicting sexuality\n\nprinciple 1: Does the prediction of sexual orientation based on facial recognition improve life for communities?\nprinciple 9: As noted in the abstract, the researchers did consider the ethical implications of their work,\nprinciple 11: but did they protect the privacy and security of the individuals presented in their data?\nprinciple 7: The exclusion of non-white faces from the study casts doubt on whether the authors recognized their own biases."
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#predicting-race-1",
    "href": "slides/2025-04-02-ethics.html#predicting-race-1",
    "title": "Ethics in Data Science",
    "section": "Predicting race",
    "text": "Predicting race\n\nusing this software to discriminate against historically marginalized people would violate some combination of principles 3, 7, and 9.\nis it ethical to use this software to try and help underrepresented groups if those same principles are not violated?\nThe authors of the wru package admirably met principle 2, but they may not have fully adhered to principle 9."
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#data-scraping-1",
    "href": "slides/2025-04-02-ethics.html#data-scraping-1",
    "title": "Ethics in Data Science",
    "section": "Data scraping",
    "text": "Data scraping\nstakeholders: OKCupid users (principles 1, 9, 11)\n\nresearch involving humans requires that the human not be exposed to any risk for which consent has not been explicitly given. The OkCupid members did not provide such consent.\nthe data contain information that makes it possible to identify individual humans, there is a realistic risk of the release of potentially embarrassing information, or worse, information that jeopardizes the physical safety of certain users.\n\nstakeholders: OKCupid itself (principle 4)\n\nwere the terms of agreement (set by OKCupid) violated?"
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#reproducible-spreadsheet-1",
    "href": "slides/2025-04-02-ethics.html#reproducible-spreadsheet-1",
    "title": "Ethics in Data Science",
    "section": "Reproducible spreadsheet",
    "text": "Reproducible spreadsheet\n\nprinciple 10 was met: Reinhart and Rogoff shared their work when it was challenged\nprinciple 2 is violated: Microsoft Excel, the tool used by Reinhart and Rogoff, is an unfortunate choice because it mixes the data with the analysis."
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#your-role",
    "href": "slides/2025-04-02-ethics.html#your-role",
    "title": "Ethics in Data Science",
    "section": "Your role",
    "text": "Your role\nIndividual control:\n\n\ncreate reproducible and extensible work\n\n\nClearly identify the questions and objectives that drive each project and use to guide both planning and refinement.\n\n\nBe open to changing our methods and conclusions in response to new knowledge.\n\n\nPresent our work in ways that empower others to make better-informed decisions.\n\n\nInstitutional control:\n\n\nBuild teams with diverse ideas, backgrounds, and strengths.\n\n\nProtect the privacy and security of individuals represented in our data."
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#important-tool",
    "href": "slides/2025-04-07-webscrape.html#important-tool",
    "title": "Web Scraping",
    "section": "Important tool",
    "text": "Important tool\nOur approach to web scraping relies on the Chrome browser and an extension called SelectorGadget. Download them here:\n\nChrome\nSelectorGadget from Chrome or SelectorGadget vignette etc."
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#data-acquisition",
    "href": "slides/2025-04-07-webscrape.html#data-acquisition",
    "title": "Web Scraping",
    "section": "Data Acquisition",
    "text": "Data Acquisition\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#reading-the-student-life",
    "href": "slides/2025-04-07-webscrape.html#reading-the-student-life",
    "title": "Web Scraping",
    "section": "Reading The Student Life",
    "text": "Reading The Student Life\n\nHow often do you read The Student Life?\na. Every day\nb. 3-5 times a week\nc. Once a week\nd. Rarely"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#reading-the-student-life-1",
    "href": "slides/2025-04-07-webscrape.html#reading-the-student-life-1",
    "title": "Web Scraping",
    "section": "Reading The Student Life",
    "text": "Reading The Student Life\n\nWhat do you think is the most common word in the titles of The Student Life opinion pieces?"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#analyzing-the-student-life",
    "href": "slides/2025-04-07-webscrape.html#analyzing-the-student-life",
    "title": "Web Scraping",
    "section": "Analyzing The Student Life",
    "text": "Analyzing The Student Life"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#reading-the-student-life-2",
    "href": "slides/2025-04-07-webscrape.html#reading-the-student-life-2",
    "title": "Web Scraping",
    "section": "Reading The Student Life",
    "text": "Reading The Student Life\n\nHow do you think the sentiments in opinion pieces in The Student Life compare across authors?\nRoughly the same?\nWildly different?\nSomewhere in between?"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#analyzing-the-student-life-1",
    "href": "slides/2025-04-07-webscrape.html#analyzing-the-student-life-1",
    "title": "Web Scraping",
    "section": "Analyzing The Student Life",
    "text": "Analyzing The Student Life"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#all-of-this-analysis-is-done-in-r",
    "href": "slides/2025-04-07-webscrape.html#all-of-this-analysis-is-done-in-r",
    "title": "Web Scraping",
    "section": "All of this analysis is done in R!",
    "text": "All of this analysis is done in R!\n\n(mostly) with tools you already know!"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#common-words-in-the-student-life-titles",
    "href": "slides/2025-04-07-webscrape.html#common-words-in-the-student-life-titles",
    "title": "Web Scraping",
    "section": "Common words in The Student Life titles",
    "text": "Common words in The Student Life titles\nCode for the earlier plot:\n\ndata(stop_words)  # from tidytext\ntsl_opinion_titles |&gt;\n  tidytext::unnest_tokens(word, title) |&gt;\n  anti_join(stop_words) |&gt;\n  count(word, sort = TRUE) |&gt;\n  slice_head(n = 20) |&gt;\n  mutate(word = fct_reorder(word, n)) |&gt;\n  ggplot(aes(y = word, x = n, fill = log(n))) +\n  geom_col(show.legend = FALSE) +\n  theme_minimal(base_size = 16) +\n  labs(\n    x = \"Number of mentions\",\n    y = \"Word\",\n    title = \"The Student Life - Opinion pieces\",\n    subtitle = \"Common words in the 500 most recent opinion pieces\",\n    caption = \"Source: Data scraped from The Student Life on April 6, 2025\"\n  ) +\n  theme(\n    plot.title.position = \"plot\",\n    plot.caption = element_text(color = \"gray30\")\n  )"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#avg-sentiment-scores-of-first-paragraph",
    "href": "slides/2025-04-07-webscrape.html#avg-sentiment-scores-of-first-paragraph",
    "title": "Web Scraping",
    "section": "Avg sentiment scores of first paragraph",
    "text": "Avg sentiment scores of first paragraph\nCode for the earlier plot:\n\nafinn_sentiments &lt;- get_sentiments(\"afinn\")  # need tidytext and textdata\ntsl_opinion_titles |&gt;\n  tidytext::unnest_tokens(word, first_p) |&gt;\n  anti_join(stop_words) |&gt;\n  left_join(afinn_sentiments) |&gt; \n  group_by(authors, title) |&gt;\n  summarize(total_sentiment = sum(value, na.rm = TRUE), .groups = \"drop\") |&gt;\n  group_by(authors) |&gt;\n  summarize(\n    n_articles = n(),\n    avg_sentiment = mean(total_sentiment, na.rm = TRUE),\n  ) |&gt;\n  filter(n_articles &gt; 1 & !is.na(authors)) |&gt;\n  arrange(desc(avg_sentiment)) |&gt;\n  slice(c(1:10, 69:78)) |&gt;\n  mutate(\n    authors = fct_reorder(authors, avg_sentiment),\n    neg_pos = if_else(avg_sentiment &lt; 0, \"neg\", \"pos\"),\n    label_position = if_else(neg_pos == \"neg\", 0.25, -0.25)\n  ) |&gt;\n  ggplot(aes(y = authors, x = avg_sentiment)) +\n  geom_col(aes(fill = neg_pos), show.legend = FALSE) +\n  geom_text(\n    aes(x = label_position, label = authors, color = neg_pos),\n    hjust = c(rep(1,10), rep(0, 10)),\n    show.legend = FALSE,\n    fontface = \"bold\"\n  ) +\n  geom_text(\n    aes(label = round(avg_sentiment, 1)),\n    hjust = c(rep(1.25,10), rep(-0.25, 10)),\n    color = \"white\",\n    fontface = \"bold\"\n  ) +\n  scale_fill_manual(values = c(\"neg\" = \"#4d4009\", \"pos\" = \"#FF4B91\")) +\n  scale_color_manual(values = c(\"neg\" = \"#4d4009\", \"pos\" = \"#FF4B91\")) +\n  scale_x_continuous(breaks = -5:5, minor_breaks = NULL) +\n  scale_y_discrete(breaks = NULL) +\n  coord_cartesian(xlim = c(-5, 5)) +\n  labs(\n    x = \"negative  ←     Average sentiment score (AFINN)     →  positive\",\n    y = NULL,\n    title = \"The Student Life - Opinion pieces\\nAverage sentiment scores of first paragraph by author\",\n    subtitle = \"Top 10 average positive and negative scores\",\n    caption = \"Source: Data scraped from The Student Life on April 6, 2025\"\n  ) +\n  theme_void(base_size = 16) +\n  theme(\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5, margin = unit(c(0.5, 0, 1, 0), \"lines\")),\n    axis.text.y = element_blank(),\n    plot.caption = element_text(color = \"gray30\")\n  )"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#where-is-the-data-coming-from",
    "href": "slides/2025-04-07-webscrape.html#where-is-the-data-coming-from",
    "title": "Web Scraping",
    "section": "Where is the data coming from?",
    "text": "Where is the data coming from?\n\nhttps://tsl.news/category/opinions/"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#where-is-the-data-coming-from-1",
    "href": "slides/2025-04-07-webscrape.html#where-is-the-data-coming-from-1",
    "title": "Web Scraping",
    "section": "Where is the data coming from?",
    "text": "Where is the data coming from?\n\n\n\n\n\n\n\n\n\ntsl_opinion_titles\n\n# A tibble: 500 × 4\n   title                           authors date                first_p\n   &lt;chr&gt;                           &lt;chr&gt;   &lt;dttm&gt;              &lt;chr&gt;  \n 1 Stop buying your books          Sarah … 2025-04-04 08:03:00 from b…\n 2 The case for fleeing the count… Alex B… 2025-04-04 07:27:00 when t…\n 3 Tolerate thy neighbor           Parker… 2025-04-04 07:22:00 it’s s…\n 4 Confronting furry hate          Xavier… 2025-04-04 07:16:00 furrie…\n 5 Shame on the governor: Gavin N… Akshay… 2025-03-28 06:56:00 gavin …\n 6 Accessibility at the 5Cs requi… Zena A… 2025-03-28 06:42:00 althou…\n 7 Your spring break destination … Nicole… 2025-03-15 04:44:00 spring…\n 8 Pomona College’s Merritt Field… Katie … 2025-03-15 03:03:00 with l…\n 9 Seminars should be tech-free s… Elias … 2025-03-14 09:15:00 we hav…\n10 The bitter truth to the bitter… Daniel… 2025-03-14 09:13:00 have y…\n# ℹ 490 more rows"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#scraping-the-web-what-why",
    "href": "slides/2025-04-07-webscrape.html#scraping-the-web-what-why",
    "title": "Web Scraping",
    "section": "Scraping the web: what? why?",
    "text": "Scraping the web: what? why?\n\nIncreasing amount of data is available on the web\nThese data are provided in an unstructured format: you can always copy & paste, but it’s time-consuming and prone to errors\nWeb scraping is the process of extracting information automatically and transforming it into a structured dataset\nTwo different scenarios:\n\nScreen scraping: extract data from source code of website, with html parser (easy) or regular expression matching (less easy).\nWeb APIs (application programming interface): website offers a set of structured http requests that return JSON or XML files."
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#hypertext-markup-language",
    "href": "slides/2025-04-07-webscrape.html#hypertext-markup-language",
    "title": "Web Scraping",
    "section": "Hypertext Markup Language",
    "text": "Hypertext Markup Language\nMuch of the data on the web is available as HTML - while it is structured (hierarchical), often it is not immediately available in a form useful for analysis (flat / tidy).\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n    &lt;br&gt;\n    &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n    &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n    &lt;div class=\"contact\"&gt;\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n      &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n      &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n      &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#some-html-elements",
    "href": "slides/2025-04-07-webscrape.html#some-html-elements",
    "title": "Web Scraping",
    "section": "Some HTML elements",
    "text": "Some HTML elements\n\n&lt;html&gt;: start of the HTML page\n&lt;head&gt;: header information (metadata about the page)\n&lt;body&gt;: everything that is on the page\n&lt;p&gt;: paragraphs\n&lt;b&gt;: bold\n&lt;table&gt;: table\n&lt;div&gt;: a container to group content together\n&lt;a&gt;: the “anchor” element that creates a hyperlink"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#rvest",
    "href": "slides/2025-04-07-webscrape.html#rvest",
    "title": "Web Scraping",
    "section": "rvest",
    "text": "rvest\n\n\n\nThe rvest package makes basic processing and manipulation of HTML data straight forward\nIt is designed to work with pipelines built with |&gt;\nrvest.tidyverse.org\n\n\nlibrary(rvest)"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#rvest-1",
    "href": "slides/2025-04-07-webscrape.html#rvest-1",
    "title": "Web Scraping",
    "section": "rvest",
    "text": "rvest\nCore functions:\n\nread_html() - read HTML data from a url or character string.\nhtml_elements() - select specified elements from the HTML document using CSS selectors.\nhtml_element() - select a single element from the HTML document using CSS selectors.\nhtml_table() - parse an HTML table into a data frame.\nhtml_text() / html_text2() - extract element’s text content.\nhtml_name - extract a element’s name(s).\nhtml_attrs - extract all attributes.\nhtml_attr - extract attribute value(s) by name."
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#html-rvest",
    "href": "slides/2025-04-07-webscrape.html#html-rvest",
    "title": "Web Scraping",
    "section": "html & rvest",
    "text": "html & rvest\n\nhtml &lt;- \n'&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n    &lt;br&gt;\n    &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n    &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n    &lt;div class=\"contact\"&gt;\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n      &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n      &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n      &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;'\n\n\n\nread_html(html)\n\n{html_document}\n&lt;html&gt;\n[1] &lt;head&gt;\\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n[2] &lt;body&gt;\\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\\n    &lt;br&gt;&lt;div class=\"name\" ..."
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#selecting-elements",
    "href": "slides/2025-04-07-webscrape.html#selecting-elements",
    "title": "Web Scraping",
    "section": "Selecting elements",
    "text": "Selecting elements\n\nread_html(html) |&gt; html_elements(\"p\")\n\n{xml_nodeset (1)}\n[1] &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_text()\n\n[1] \"Hello world!\"\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_name()\n\n[1] \"p\"\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_attrs()\n\n[[1]]\n   align \n\"center\" \n\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_attr(\"align\")\n\n[1] \"center\""
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#more-selecting-elements",
    "href": "slides/2025-04-07-webscrape.html#more-selecting-elements",
    "title": "Web Scraping",
    "section": "More selecting elements",
    "text": "More selecting elements\n\n\nread_html(html) |&gt; html_elements(\"div\")\n\n{xml_nodeset (7)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n[3] &lt;div class=\"contact\"&gt;\\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\\n       ...\n[4] &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n[5] &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n[6] &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n[7] &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"div\") |&gt; html_text()\n\n[1] \"John\"                                                                                  \n[2] \"Doe\"                                                                                   \n[3] \"\\n      555-555-1234\\n      555-555-2345\\n      555-555-9999\\n      555-555-8888\\n    \"\n[4] \"555-555-1234\"                                                                          \n[5] \"555-555-2345\"                                                                          \n[6] \"555-555-9999\"                                                                          \n[7] \"555-555-8888\""
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#css-selectors",
    "href": "slides/2025-04-07-webscrape.html#css-selectors",
    "title": "Web Scraping",
    "section": "CSS selectors",
    "text": "CSS selectors\n\nWe will use a tool called SelectorGadget to help us identify the HTML elements of interest by constructing a CSS selector which can be used to subset the HTML document.\n\n\n\nSome examples of basic selector syntax is below,\n\n\n\n\n\n\n\n\n\n\nSelector\nExample\nDescription\n\n\n\n\n.class\n.title\nSelect all elements with class=“title”\n\n\n#id\n#name\nSelect all elements with id=“name”\n\n\nelement\np\nSelect all &lt;p&gt; elements\n\n\nelement element\ndiv p\nSelect all &lt;p&gt; elements inside a &lt;div&gt; element\n\n\nelement&gt;element\ndiv &gt; p\nSelect all &lt;p&gt; elements with &lt;div&gt; as a direct parent\n\n\n[attribute]\n[class]\nSelect all elements with a class attribute\n\n\n[attribute=value]\n[class=title]\nSelect all elements with class=“title”"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#css-classes-and-ids",
    "href": "slides/2025-04-07-webscrape.html#css-classes-and-ids",
    "title": "Web Scraping",
    "section": "CSS classes and ids",
    "text": "CSS classes and ids\n\nclass and id are used to style elements (e.g., change their color!). They are special types of attributes.\nclass can be applied to multiple different elements (class is identified with ., for example .name)\nid is unique to each element (id is identified with #, for example, #first)\n\n\nread_html(html) |&gt; html_elements(\".name\")\n\n{xml_nodeset (2)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n\n\n\n\nread_html(html) |&gt; html_elements(\"div.name\")\n\n{xml_nodeset (2)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"#first\")\n\n{xml_nodeset (1)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#text-with-html_text-vs.-html_text2",
    "href": "slides/2025-04-07-webscrape.html#text-with-html_text-vs.-html_text2",
    "title": "Web Scraping",
    "section": "Text with html_text() vs. html_text2()",
    "text": "Text with html_text() vs. html_text2()\n\nThe two functions handle whitespace differently:\n\n\nhtml &lt;- read_html(\"&lt;p&gt;  Hello,\\n   world! &lt;/p&gt;\")\n\nhtml |&gt;  html_element(\"p\") |&gt;  html_text()\n\n[1] \"  Hello,\\n   world! \"\n\nhtml |&gt;  html_element(\"p\") |&gt;  html_text2()\n\n[1] \"Hello, world!\""
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#html-tables-with-html_table",
    "href": "slides/2025-04-07-webscrape.html#html-tables-with-html_table",
    "title": "Web Scraping",
    "section": "HTML tables with html_table()",
    "text": "HTML tables with html_table()\n\nhtml_table = \n'&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;table&gt;\n      &lt;tr&gt; &lt;th&gt;a&lt;/th&gt; &lt;th&gt;b&lt;/th&gt; &lt;th&gt;c&lt;/th&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;4&lt;/td&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;4&lt;/td&gt; &lt;td&gt;5&lt;/td&gt; &lt;/tr&gt;\n    &lt;/table&gt;\n  &lt;/body&gt;\n&lt;/html&gt;'\n\n\n\nread_html(html_table) |&gt;\n  html_elements(\"table\") |&gt; \n  html_table()\n\n[[1]]\n# A tibble: 3 × 3\n      a     b     c\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1     1     2     3\n2     2     3     4\n3     3     4     5"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#html_attr",
    "href": "slides/2025-04-07-webscrape.html#html_attr",
    "title": "Web Scraping",
    "section": "html_attr()",
    "text": "html_attr()\nextracts data from attributes:\n(n.b., the &lt;a&gt; tag refers to “anchor” and is used to create hyperlinks)\n\nhtml &lt;- minimal_html(\"\n  &lt;p&gt;&lt;a href='https://en.wikipedia.org/wiki/Cat'&gt;cats&lt;/a&gt;&lt;/p&gt;\n  &lt;p&gt;&lt;a href='https://en.wikipedia.org/wiki/Dog'&gt;dogs&lt;/a&gt;&lt;/p&gt;\n\")\nhtml\n\n{html_document}\n&lt;html&gt;\n[1] &lt;head&gt;\\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n[2] &lt;body&gt;\\n&lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Cat\"&gt;cats&lt;/a&gt;&lt;/p&gt;\\n  &lt;p ...\n\n\n\nhtml |&gt; \nhtml_attr(\"href\")\n\n[1] NA\n\n\n\nhtml |&gt; \nhtml_elements(\"[href]\") |&gt; \nhtml_attr(\"href\")\n\n[1] \"https://en.wikipedia.org/wiki/Cat\" \"https://en.wikipedia.org/wiki/Dog\"\n\n\n\nhtml |&gt; \n  html_elements(\"p\") \n\n{xml_nodeset (2)}\n[1] &lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Cat\"&gt;cats&lt;/a&gt;&lt;/p&gt;\n[2] &lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Dog\"&gt;dogs&lt;/a&gt;&lt;/p&gt;\n\n\n\nhtml |&gt; \n  html_elements(\"p\") |&gt; \n  html_element(\"a\") \n\n{xml_nodeset (2)}\n[1] &lt;a href=\"https://en.wikipedia.org/wiki/Cat\"&gt;cats&lt;/a&gt;\n[2] &lt;a href=\"https://en.wikipedia.org/wiki/Dog\"&gt;dogs&lt;/a&gt;\n\n\n\nhtml |&gt; \n  html_elements(\"p\") |&gt; \n  html_element(\"a\") |&gt; \n  html_attr(\"href\")\n\n[1] \"https://en.wikipedia.org/wiki/Cat\" \"https://en.wikipedia.org/wiki/Dog\"\n\n\n\nhtml |&gt; \n  html_elements(\"p a\") |&gt; \n  html_attr(\"href\")\n\n[1] \"https://en.wikipedia.org/wiki/Cat\" \"https://en.wikipedia.org/wiki/Dog\"\n\n\n\nhtml |&gt; \n  html_element(\"a\") |&gt; \n  html_attr(\"href\")\n\n[1] \"https://en.wikipedia.org/wiki/Cat\"\n\n\n\nhtml |&gt; \n  html_elements(\"a\") |&gt; \n  html_attr(\"href\")\n\n[1] \"https://en.wikipedia.org/wiki/Cat\" \"https://en.wikipedia.org/wiki/Dog\"\n\n\n\nhtml_attr() always returns a string, so if you’re extracting numbers or dates, you’ll need to do some post-processing."
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#div-p-vs-div-p",
    "href": "slides/2025-04-07-webscrape.html#div-p-vs-div-p",
    "title": "Web Scraping",
    "section": "div p vs div > p",
    "text": "div p vs div &gt; p\n\ndiv p selects all &lt;p&gt; elements within &lt;div&gt;, regardless of depth.\ndiv &gt; p selects only direct child &lt;p&gt; elements of &lt;div&gt;.\n\n&lt;div&gt;\n  &lt;p&gt;This will be selected by both `div p` and `div &gt; p`.&lt;/p&gt; \n  &lt;section&gt;\n   &lt;p&gt;This will be selected only by `div p`, not by `div &gt; p`. Because it is inside the section tag.&lt;/p&gt;\n  &lt;/section&gt;\n&lt;/div&gt;"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#selectorgadget",
    "href": "slides/2025-04-07-webscrape.html#selectorgadget",
    "title": "Web Scraping",
    "section": "SelectorGadget",
    "text": "SelectorGadget\nSelectorGadget (selectorgadget.com) is a javascript based tool that helps you interactively build an appropriate CSS selector for the content you are interested in."
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#recap",
    "href": "slides/2025-04-07-webscrape.html#recap",
    "title": "Web Scraping",
    "section": "Recap",
    "text": "Recap\n\nUse the SelectorGadget identify elements you want to grab\nUse the rvest R package to first read in the entire page (into R) and then parse the object you’ve read in to the elements you’re interested in\nPut the components together in a data frame (a tibble) and analyze it like you analyze any other data"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#plan",
    "href": "slides/2025-04-07-webscrape.html#plan",
    "title": "Web Scraping",
    "section": "Plan",
    "text": "Plan\n\nRead in the entire page\nScrape opinion title and save as title\nScrape author and save as author\nScrape date and save as date\nCreate a new data frame called tsl_opinion with variables title, author, and date"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#read-in-the-entire-page",
    "href": "slides/2025-04-07-webscrape.html#read-in-the-entire-page",
    "title": "Web Scraping",
    "section": "Read in the entire page",
    "text": "Read in the entire page\n\ntsl_page &lt;- read_html(\"https://tsl.news/category/opinions/\")\ntsl_page\n\n{html_document}\n&lt;html lang=\"en-US\"&gt;\n[1] &lt;head&gt;\\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n[2] &lt;body class=\"archive category category-opinions category-2244 custom-back ...\n\n\n\n\ntypeof(tsl_page)\n\n[1] \"list\"\n\nclass(tsl_page)\n\n[1] \"xml_document\" \"xml_node\"    \n\n\n\nwe need to convert into something more familiar, like a data frame"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#scrape-title-and-save-as-title",
    "href": "slides/2025-04-07-webscrape.html#scrape-title-and-save-as-title",
    "title": "Web Scraping",
    "section": "Scrape title and save as title",
    "text": "Scrape title and save as title\n\ntsl_page |&gt; \nhtml_elements(\".entry-title a\") \n\n{xml_nodeset (10)}\n [1] &lt;a href=\"https://tsl.news/opinion-the-real-cost-of-administrative-bloat/ ...\n [2] &lt;a href=\"https://tsl.news/opinion-finding-hope-in-the-courts/\" title=\"OP ...\n [3] &lt;a href=\"https://tsl.news/opinion-your-vote-for-aspc-president-didnt-mat ...\n [4] &lt;a href=\"https://tsl.news/opinion-stop-buying-your-books/\" title=\"OPINIO ...\n [5] &lt;a href=\"https://tsl.news/opinion-the-case-for-fleeing-the-country/\" tit ...\n [6] &lt;a href=\"https://tsl.news/opinion-tolerate-thy-neighbor/\" title=\"OPINION ...\n [7] &lt;a href=\"https://tsl.news/opinion-confronting-furry-hate/\" title=\"OPINIO ...\n [8] &lt;a href=\"https://tsl.news/shame-on-the-governor-gavin-newsom-is-his-own- ...\n [9] &lt;a href=\"https://tsl.news/opinions-accessibility-at-the-5cs-requires-mor ...\n[10] &lt;a href=\"https://tsl.news/opinion-your-spring-break-destination-isnt-rea ...\n\n\n\n\ntitle &lt;- tsl_page |&gt; \nhtml_elements(\".entry-title a\") |&gt; \nhtml_text()\n\ntitle\n\n [1] \"Opinion: The real cost of administrative bloat\"                           \n [2] \"OPINION: Finding hope in the courts\"                                      \n [3] \"OPINION: Your vote for ASPC president didn’t matter. Here’s why\"          \n [4] \"OPINION: Stop buying your books\"                                          \n [5] \"OPINION: The case for fleeing the country\"                                \n [6] \"OPINION: Tolerate thy neighbor\"                                           \n [7] \"OPINION: Confronting furry hate\"                                          \n [8] \"Shame on the governor: Gavin Newsom is his own worst enemy\"               \n [9] \"OPINION: Accessibility at the 5Cs requires more than just good intentions\"\n[10] \"OPINION: Your spring break destination isn’t really yours\"                \n\ntitle &lt;- title |&gt; \nstr_remove(\"OPINION: \")\n\ntitle\n\n [1] \"Opinion: The real cost of administrative bloat\"                  \n [2] \"Finding hope in the courts\"                                      \n [3] \"Your vote for ASPC president didn’t matter. Here’s why\"          \n [4] \"Stop buying your books\"                                          \n [5] \"The case for fleeing the country\"                                \n [6] \"Tolerate thy neighbor\"                                           \n [7] \"Confronting furry hate\"                                          \n [8] \"Shame on the governor: Gavin Newsom is his own worst enemy\"      \n [9] \"Accessibility at the 5Cs requires more than just good intentions\"\n[10] \"Your spring break destination isn’t really yours\""
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#scrape-author-and-save-as-author",
    "href": "slides/2025-04-07-webscrape.html#scrape-author-and-save-as-author",
    "title": "Web Scraping",
    "section": "Scrape author and save as author",
    "text": "Scrape author and save as author\n\nauthor &lt;- tsl_page |&gt; \nhtml_elements(\"span.author\") |&gt; \nhtml_text()\nauthor\n\n [1] \"By Eric Lu\"                                    \n [2] \"By Daniel Han Tae Choi\"                        \n [3] \"By Luke Brown\"                                 \n [4] \"By Sarah Russo\"                                \n [5] \"By Alex Benach\"                                \n [6] \"By Parker DeVore\"                              \n [7] \"By Xavier Callan\"                              \n [8] \"By Akshay Seetharam\"                           \n [9] \"By Zena Almeida-Warwin and Jackie Kostyuchenko\"\n[10] \"By Nicole Teh\"                                 \n\n\n\nauthor &lt;- author |&gt; \nstr_replace(\"By \", \"\")\n\nauthor\n\n [1] \"Eric Lu\"                                    \n [2] \"Daniel Han Tae Choi\"                        \n [3] \"Luke Brown\"                                 \n [4] \"Sarah Russo\"                                \n [5] \"Alex Benach\"                                \n [6] \"Parker DeVore\"                              \n [7] \"Xavier Callan\"                              \n [8] \"Akshay Seetharam\"                           \n [9] \"Zena Almeida-Warwin and Jackie Kostyuchenko\"\n[10] \"Nicole Teh\""
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#scrape-date-and-save-as-date",
    "href": "slides/2025-04-07-webscrape.html#scrape-date-and-save-as-date",
    "title": "Web Scraping",
    "section": "Scrape date and save as date",
    "text": "Scrape date and save as date\n\ndate &lt;- tsl_page |&gt; \nhtml_elements(\".published\") |&gt; \nhtml_text()\ndate\n\n [1] \"April 10, 2025 10:41 pm\" \"April 10, 2025 9:11 pm\" \n [3] \"April 10, 2025 7:39 pm\"  \"April 4, 2025 1:03 am\"  \n [5] \"April 4, 2025 12:27 am\"  \"April 4, 2025 12:22 am\" \n [7] \"April 4, 2025 12:16 am\"  \"March 27, 2025 11:56 pm\"\n [9] \"March 27, 2025 11:42 pm\" \"March 14, 2025 9:44 pm\" \n\ndate &lt;- date |&gt; \nlubridate::mdy_hm(tz = \"America/Los_Angeles\")\ndate\n\n [1] \"2025-04-10 22:41:00 PDT\" \"2025-04-10 21:11:00 PDT\"\n [3] \"2025-04-10 19:39:00 PDT\" \"2025-04-04 01:03:00 PDT\"\n [5] \"2025-04-04 00:27:00 PDT\" \"2025-04-04 00:22:00 PDT\"\n [7] \"2025-04-04 00:16:00 PDT\" \"2025-03-27 23:56:00 PDT\"\n [9] \"2025-03-27 23:42:00 PDT\" \"2025-03-14 21:44:00 PDT\""
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#create-a-new-data-frame",
    "href": "slides/2025-04-07-webscrape.html#create-a-new-data-frame",
    "title": "Web Scraping",
    "section": "Create a new data frame",
    "text": "Create a new data frame\n\ntsl_opinion &lt;- tibble(\n    title,\n    author,\n    date\n)\n\ntsl_opinion\n\n# A tibble: 10 × 3\n   title                                    author date               \n   &lt;chr&gt;                                    &lt;chr&gt;  &lt;dttm&gt;             \n 1 Opinion: The real cost of administrativ… Eric … 2025-04-10 22:41:00\n 2 Finding hope in the courts               Danie… 2025-04-10 21:11:00\n 3 Your vote for ASPC president didn’t mat… Luke … 2025-04-10 19:39:00\n 4 Stop buying your books                   Sarah… 2025-04-04 01:03:00\n 5 The case for fleeing the country         Alex … 2025-04-04 00:27:00\n 6 Tolerate thy neighbor                    Parke… 2025-04-04 00:22:00\n 7 Confronting furry hate                   Xavie… 2025-04-04 00:16:00\n 8 Shame on the governor: Gavin Newsom is … Aksha… 2025-03-27 23:56:00\n 9 Accessibility at the 5Cs requires more … Zena … 2025-03-27 23:42:00\n10 Your spring break destination isn’t rea… Nicol… 2025-03-14 21:44:00"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#opinion-titles",
    "href": "slides/2025-04-07-webscrape.html#opinion-titles",
    "title": "Web Scraping",
    "section": "Opinion titles",
    "text": "Opinion titles\n\ntsl_opinions &lt;- function(i){\ntsl_page &lt;- rvest::read_html(paste0(\"https://tsl.news/category/opinions/page/\",i))\n  \ntitle &lt;- tsl_page |&gt; \nhtml_elements(\".entry-title a\") |&gt; \nhtml_text() |&gt; \nstr_remove(\"OPINION: \")\n  \nauthor &lt;- tsl_page |&gt; \nhtml_elements(\"span.author\") |&gt; \nhtml_text() |&gt; \ntibble() |&gt; \nset_names(nm = \"authors\") |&gt; \nmutate(authors = str_replace(authors, \"By \", \"\")) \n  \ndate &lt;- tsl_page |&gt; \nhtml_elements(\".published\") |&gt; \nhtml_text() |&gt; \nlubridate::mdy_hm(tz = \"America/Los_Angeles\")\n\nfirst_p &lt;- tsl_page |&gt; \n  html_elements(\".entry-content p:nth-child(1)\") |&gt; \n  html_text() |&gt; \n  tolower()\n  \ntibble(\n    title,\n    author,\n    date,\n    first_p\n)  \n}\n\ntsl_opinion_titles &lt;- c(1:50) |&gt; purrr::map(tsl_opinions) |&gt; \nlist_rbind()"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#check-if-you-are-allowed",
    "href": "slides/2025-04-07-webscrape.html#check-if-you-are-allowed",
    "title": "Web Scraping",
    "section": "Check if you are allowed!",
    "text": "Check if you are allowed!\n\nlibrary(robotstxt)\npaths_allowed(\"https://tsl.news/category/opinions/\")\n\n[1] TRUE\n\n\n\npaths_allowed(\"http://www.facebook.com\")\n\n[1] FALSE"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#ethics-can-you-vs-should-you",
    "href": "slides/2025-04-07-webscrape.html#ethics-can-you-vs-should-you",
    "title": "Web Scraping",
    "section": "Ethics: “Can you?” vs “Should you?”",
    "text": "Ethics: “Can you?” vs “Should you?”\n\n\n\n\n\n\n\nSource: Brian Resnick, Researchers just released profile data on 70,000 OkCupid users without permission, Vox."
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#can-you-vs-should-you",
    "href": "slides/2025-04-07-webscrape.html#can-you-vs-should-you",
    "title": "Web Scraping",
    "section": "“Can you?” vs “Should you?”",
    "text": "“Can you?” vs “Should you?”"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#challenges-unreliable-formatting",
    "href": "slides/2025-04-07-webscrape.html#challenges-unreliable-formatting",
    "title": "Web Scraping",
    "section": "Challenges: Unreliable formatting",
    "text": "Challenges: Unreliable formatting\n\n\n\n\n\n\n\nalumni.duke.edu/news/notable-alumni"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#challenges-data-broken-into-many-pages",
    "href": "slides/2025-04-07-webscrape.html#challenges-data-broken-into-many-pages",
    "title": "Web Scraping",
    "section": "Challenges: Data broken into many pages",
    "text": "Challenges: Data broken into many pages"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#more-ethics-graphics",
    "href": "slides/2025-04-07-webscrape.html#more-ethics-graphics",
    "title": "Web Scraping",
    "section": "More ethics: graphics",
    "text": "More ethics: graphics\nConsider the following image. What do you think is wrong? (Hint: examine the y-axis carefully)\n\nReproduction of a data graphic reporting the number of gun deaths in Florida over time. The original image was published by Reuters. (Baumer, Kaplan, and Horton 2021)"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#more-ethics-graphics-1",
    "href": "slides/2025-04-07-webscrape.html#more-ethics-graphics-1",
    "title": "Web Scraping",
    "section": "More ethics: graphics",
    "text": "More ethics: graphics\n\n\n\n\n\n\n\nMay 10, 2020, Georgia Department of Health, COVID-19 cases for 5 counties across time. https://dph.georgia.gov/covid-19-daily-status-report\n\n\n\n\n\n\n\n\n\n\nMay 17, 2020, Georgia Department of Health, COVID-19 cases for 5 counties across time. https://dph.georgia.gov/covid-19-daily-status-report"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#more-ethics-graphics-2",
    "href": "slides/2025-04-07-webscrape.html#more-ethics-graphics-2",
    "title": "Web Scraping",
    "section": "More ethics: graphics",
    "text": "More ethics: graphics\nA few weeks later, the Georgia Department of Health came out with the following two plots where, despite cases skyrocketing, they display images where the visual doesn’t really change.\n\n\n\n\n\n\n\nJuly 2, 2020, Georgia Department of Health, COVID-19 cases per 100K https://dph.georgia.gov/covid-19-daily-status-report\n\n\n\n\n\n\n\n\n\n\nJuly 17, 2020, Georgia Department of Health, COVID-19 cases per 100K https://dph.georgia.gov/covid-19-daily-status-report"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#more-ethics-algorithms",
    "href": "slides/2025-04-07-webscrape.html#more-ethics-algorithms",
    "title": "Web Scraping",
    "section": "More ethics: algorithms",
    "text": "More ethics: algorithms\n\ndisparate treatment \\(\\rightarrow\\) means that the differential treatment is intentional\ndisparate impact \\(\\rightarrow\\) means that the differential treatment is unintentional or implicit (some examples include advancing mortgage credit, employment selection, predictive policing)"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#more-ethics-compas",
    "href": "slides/2025-04-07-webscrape.html#more-ethics-compas",
    "title": "Web Scraping",
    "section": "More ethics: COMPAS",
    "text": "More ethics: COMPAS\n\nDylan Fugett had three subsequent arrests for drug possession. Bernard Parker had no subsequent offenses."
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#more-ethics-compas-1",
    "href": "slides/2025-04-07-webscrape.html#more-ethics-compas-1",
    "title": "Web Scraping",
    "section": "More ethics: COMPAS",
    "text": "More ethics: COMPAS\n\n\n\nDYLAN FUGETT\nBERNARD PARKER\n\n\n\n\nPrior Offense\nPrior Offense\n\n\n1 attempted burglary\n1 resisting arrest without violence\n\n\nLOW RISK - 3\nHIGH RISK - 10\n\n\nSubsequent Offenses\nSubsequent Offenses\n\n\n3 drug possessions\nNone"
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#more-ethics-compas-2",
    "href": "slides/2025-04-07-webscrape.html#more-ethics-compas-2",
    "title": "Web Scraping",
    "section": "More ethics: COMPAS",
    "text": "More ethics: COMPAS\n\nFalse positive and false negative rates broken down by race."
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#references",
    "href": "slides/2025-04-07-webscrape.html#references",
    "title": "Web Scraping",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#compas",
    "href": "slides/2025-04-02-ethics.html#compas",
    "title": "Ethics in Data Science",
    "section": "COMPAS",
    "text": "COMPAS\n\nDylan Fugett had three subsequent arrests for drug possession. Bernard Parker had no subsequent offenses."
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#compas-1",
    "href": "slides/2025-04-02-ethics.html#compas-1",
    "title": "Ethics in Data Science",
    "section": "COMPAS",
    "text": "COMPAS\n\n\n\nDYLAN FUGETT\nBERNARD PARKER\n\n\n\n\nPrior Offense\nPrior Offense\n\n\n1 attempted burglary\n1 resisting arrest without violence\n\n\nLOW RISK - 3\nHIGH RISK - 10\n\n\nSubsequent Offenses\nSubsequent Offenses\n\n\n3 drug possessions\nNone"
  },
  {
    "objectID": "slides/2025-04-02-ethics.html#compas-2",
    "href": "slides/2025-04-02-ethics.html#compas-2",
    "title": "Ethics in Data Science",
    "section": "COMPAS",
    "text": "COMPAS\n\nFalse positive and false negative rates broken down by race."
  },
  {
    "objectID": "slides/2025-04-07-webscrape.html#text-with-html_text-vs.-html_text2-1",
    "href": "slides/2025-04-07-webscrape.html#text-with-html_text-vs.-html_text2-1",
    "title": "Web Scraping",
    "section": "Text with html_text() vs. html_text2()",
    "text": "Text with html_text() vs. html_text2()\n\nhtml = read_html(\n  \"&lt;p&gt;  \n    This is the first sentence in the paragraph.\n    This is the second sentence that should be on the same line as the first sentence.&lt;br&gt;This third sentence should start on a new line.\n  &lt;/p&gt;\"\n)\n\n\n\nhtml |&gt; html_text()\n\n[1] \"  \\n    This is the first sentence in the paragraph.\\n    This is the second sentence that should be on the same line as the first sentence.This third sentence should start on a new line.\\n  \"\n\nhtml |&gt; html_text2()\n\n[1] \"This is the first sentence in the paragraph. This is the second sentence that should be on the same line as the first sentence.\\nThis third sentence should start on a new line.\""
  },
  {
    "objectID": "project4.html#your-task",
    "href": "project4.html#your-task",
    "title": "Project 4",
    "section": "Your task",
    "text": "Your task\n\nFirst, find an ethical dilemma with a data science component. Please take on only one ethical dilemma, it is too difficult to compare multiple dilemmsas in one short blog entry. There are many examples below, and within each example you should start with the reference provided and find at least one more article (possibly from another angle? or go find the privacy policy / user agreement if there is one!) to expand your understanding of the topic. It should be clear from your report what information came from which article. Feel free to choose an example different from those below.\nDescribe the example / scenario as if to someone who is not at all familiar with the setting. In particular, it should be clear both what is the data science component and what is the ethical dilemma.\nRespond to at least 4 of the items below (from the list of questions or the Data Values and Principles Manifesto). Four separate paragraphs that explain both the issue (e.g., consent) and how the issue played out in the data science example. Note: totally fine if there are items that were done well in your example.\nGiven what you described in #3 (above), summarize by explaining why it matters. Who benefits? Who is neglected or harmed? Were the ethical violations in the interest of profit? Surveillance? Power?"
  },
  {
    "objectID": "project4.html#questions-to-respond-to",
    "href": "project4.html#questions-to-respond-to",
    "title": "Project 4",
    "section": "Questions to respond to",
    "text": "Questions to respond to\n\nWhat is the permission structure for using the data? Was it followed?\nWhat was the consent structure for recruiting participants? Were the participants aware of the ways their data would be used for research? Was informed consent possible? Can you provide informed consent for applications that are yet foreseen?\nWhat was the data collection process? Were the observations collected ethically? Are there missing observations?\nWere the data made publicly available? Why? How? On what platform?\nIs the data identifiable? All of it? Some of it? In what way? Are the data sufficiently anonymized or old to be free of ethical concerns? Is anonymity guaranteed?\nHow were the variables collected? Were they accurately recorded? Is there any missing data?\nWho was measured? Are those individuals representative of the people to whom we’d like to generalize / apply the algorithm? Should we analyze data if we do not know how the data were collected?\nIs the data being used in unintended ways to the original study?\nShould race be used as a variable? Is it a proxy for something else (e.g., amount of melanin in the skin, stress of navigating microaggressions, zip-code, etc.)? What about gender?\nData Values and Principles manifesto\n\n\nAs data teams, we aim to…\n\n\n\nUse data to improve life for our users, customers, organizations, and communities.\nCreate reproducible and extensible work.\nBuild teams with diverse ideas, backgrounds, and strengths.\nPrioritize the continuous collection and availability of discussions and metadata.\nClearly identify the questions and objectives that drive each project and use to guide both planning and refinement.\nBe open to changing our methods and conclusions in response to new knowledge.\nRecognize and mitigate bias in ourselves and in the data we use.\nPresent our work in ways that empower others to make better-informed decisions.\nConsider carefully the ethical implications of choices we make when using data, and the impacts of our work on individuals and society.\nRespect and invite fair criticism while promoting the identification and open discussion of errors, risks, and unintended consequences of our work.\nProtect the privacy and security of individuals represented in our data.\nHelp others to understand the most useful and appropriate applications of data to solve real-world problems."
  },
  {
    "objectID": "project4.html#potential-examples",
    "href": "project4.html#potential-examples",
    "title": "Project 4",
    "section": "Potential examples",
    "text": "Potential examples\n\nBiobank samples from the Havasupai lawsuit (informed consent, among other things). Van Assche, K., Gutwirth, S., and Sterckx, S. (2013), Protecting Dignitary Interests of Biobank Research Participants: Lessons from Havasupai Tribe v Arizona Board of Regents, Law, Innovation and Technology, 5, 54–84.\nFacebook emotional contagion experiment (patient consent, among other things). Kramer, A. D., Guillory, J. E., and Hancock, J. T. (2014), Experimental Evidence of Massive-Scale Emotional Contagion through Social Networks, Proceedings of the National Academy of Sciences of the United States of America, 111, 8788–8790.\nOK Cupid data release (privacy and publicly available data). Xiao, T., and Ma, Y. (2021), A Letter to the Journal of Statistics and Data Science Education — A Call for Review of ‘OkCupid Data for Introductory Statistics and Data Science Courses’ by Albert Y. Kim and Adriana Escobedo-Land, Journal of Statistics and Data Science Education, 29, 214–215.\nTaxis dataset with 173 million cab rides (poorly anonymized data). Goodin, D. (2014) Poorly anonymized logs reveal NYC cab drivers’ detailed whereabouts, Ars Technical.\nNetflix “de-anonymized” + link to IMDB (poorly anonymized data). Leetaru, K. (2016), The Big Data Era of Mosaicked Deidentification: Can We Anonymize Data Anymore?, Forbes.\nCOMPAS (Correctional Offender Management Profiling for Alternative Sanctions) (biased algorithm). Angwin, J., Larson, J., Mattu, S., and Kirchner, L. (2016), Machine Bias, ProPublica.\nTarget (what if the algorithm is good at predicting something you don’t want predicted?). Duhigg, C. (2012), How Companies Learn Your Secrets, The New York Times Magazine.\nAmazon hiring algorithm (who has moral responsibility) Dastin, J. (2018), “Amazon Scraps Secret AI Recruiting Tool that Showed Bias Against Women, Reuters.\nAirlines respond differently, depending on who is tweeting (should the algorithm be used?). Gunarathne, P., Rui, H., and Seidmann, A. (2022). Racial Bias in Customer Service: Evidence from Twitter, Information Systems Research: 33, 43-54. n.b., log into the Claremont Colleges Library and search for the title. The library has the digital copy available.\nThe Allegheny Family Screening Tool is specifically designed to predict the risk that a child will be placed in foster care in the two years after being investigated (what if the marginalized community is overrepresented?). Ho, S. and Burke, G. (2022). An Algorithm That Screens for Child Neglect Raises Concerns, Pulitzer Center.\nTraining facial recognition software from publicly available data (what if the marginalized community is underrepresented?). Buolamwini, J. and Gebru, T. (2018). Gender Shades: Intersectional Accuracy Disparities in Commercial Gender Classification, Proceedings of Machine Learning Research: 81, 77-91."
  },
  {
    "objectID": "project4.html#logistics",
    "href": "project4.html#logistics",
    "title": "Project 4",
    "section": "Logistics",
    "text": "Logistics\n\nwork in your website .Rproj, do not start a new R Project.\ncreate a new Quarto file (just like you did for previous projects), and type words into it, even though there is no code.\nno code is expected. If, for some reason, you include code, follow the same practices as in previous projects: explain what you are doing, show your code, no messages or warnings, etc.\ninclude the full citations for your references (of which there should be at least two), not just the hyperlink. If you do not know how to create or format a citation, as me or chatGPT.\nmake it clear which information came from which resource."
  },
  {
    "objectID": "slides/2025-04-14-db.html#what-is-a-database",
    "href": "slides/2025-04-14-db.html#what-is-a-database",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "What is a database?",
    "text": "What is a database?\n\nstructured collection of data organized with\n\nefficient storage\neasy retrieval\nconsistent management\n\ndata stored in tables which are linked to one another via keys (called a relational database, think join)"
  },
  {
    "objectID": "slides/2025-04-14-db.html#tidy-data",
    "href": "slides/2025-04-14-db.html#tidy-data",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "Tidy data",
    "text": "Tidy data\n\ndata frame (R) or table (SQL)\ncolumns of variables\nrows of observational units"
  },
  {
    "objectID": "slides/2025-04-14-db.html#differences-between-r-and-sql",
    "href": "slides/2025-04-14-db.html#differences-between-r-and-sql",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "Differences between R and SQL",
    "text": "Differences between R and SQL\n\ntables in SQL databases can be arbitrarily large\n\nlive in storage, computer’s hard drive (usually remote)\n\ndata frames in R\n\nlive in memory (RAM) on your personal computer\n\ntables in a database are linked via a key"
  },
  {
    "objectID": "slides/2025-04-14-db.html#the-airlines-database",
    "href": "slides/2025-04-14-db.html#the-airlines-database",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "The airlines database",
    "text": "The airlines database\nConsider a database of US flights between 2013 and 2015. The flights are downloaded from the Bureau of Transportation Statistics, US Department of Transportation. The database is a superset of the nycflights13 R package that tracks only flights in and out of airports serving New York City in 2013."
  },
  {
    "objectID": "slides/2025-04-14-db.html#sql-connection",
    "href": "slides/2025-04-14-db.html#sql-connection",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "SQL connection",
    "text": "SQL connection\nTo set up a SQL connection, you need the location of the server (host) as well as a username and password.\n\ncon_air &lt;- DBI::dbConnect(\n  RMariaDB::MariaDB(),\n  dbname = \"airlines\",\n  host = Sys.getenv(\"MDSR_HOST\"),\n  user = Sys.getenv(\"MDSR_USER\"),\n  password = Sys.getenv(\"MDSR_PWD\")\n)\n\nHadley Wickham discusses how to use Sys.getenv: https://cran.r-project.org/web/packages/httr/vignettes/secrets.html"
  },
  {
    "objectID": "slides/2025-04-14-db.html#tables-in-airlines-database",
    "href": "slides/2025-04-14-db.html#tables-in-airlines-database",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "Tables in airlines database",
    "text": "Tables in airlines database\n\nDBI::dbListTables(con_air)\n\n[1] \"airports\"        \"planes\"          \"carriers\"        \"flights_summary\"\n[5] \"flights\""
  },
  {
    "objectID": "slides/2025-04-14-db.html#sql-tables-as-tbl",
    "href": "slides/2025-04-14-db.html#sql-tables-as-tbl",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "SQL tables as tbl",
    "text": "SQL tables as tbl\n\ncarriers &lt;- dplyr::tbl(con_air, \"carriers\")\ndim(carriers)\n\n[1] NA  2\n\nhead(carriers)\n\n# Source:   SQL [6 x 2]\n# Database: mysql  [mdsr_public@mdsr.crcbo51tmesf.us-east-2.rds.amazonaws.com:3306/airlines]\n  carrier name                         \n  &lt;chr&gt;   &lt;chr&gt;                        \n1 02Q     Titan Airways                \n2 04Q     Tradewind Aviation           \n3 05Q     Comlux Aviation, AG          \n4 06Q     Master Top Linhas Aereas Ltd.\n5 07Q     Flair Airlines Ltd.          \n6 09Q     Swift Air, LLC"
  },
  {
    "objectID": "slides/2025-04-14-db.html#sql-tables-as-tibble",
    "href": "slides/2025-04-14-db.html#sql-tables-as-tibble",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "SQL tables as tibble",
    "text": "SQL tables as tibble\nThe function collect() copies a SQL table from its server location on disk to your local memory location in R.\n\ncarriers_tibble &lt;- carriers |&gt;\n  dplyr::collect()\n\ndim(carriers_tibble)\n\n[1] 1610    2\n\nhead(carriers_tibble)\n\n# A tibble: 6 × 2\n  carrier name                         \n  &lt;chr&gt;   &lt;chr&gt;                        \n1 02Q     Titan Airways                \n2 04Q     Tradewind Aviation           \n3 05Q     Comlux Aviation, AG          \n4 06Q     Master Top Linhas Aereas Ltd.\n5 07Q     Flair Airlines Ltd.          \n6 09Q     Swift Air, LLC"
  },
  {
    "objectID": "slides/2025-04-14-db.html#how-much-space-does-carriers-take-up",
    "href": "slides/2025-04-14-db.html#how-much-space-does-carriers-take-up",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "How much space does carriers take up?",
    "text": "How much space does carriers take up?\nThe data frame in R takes up 2 orders of magnitude of memory more than the table which just points to the object in SQL.\n\ncarriers |&gt;\n  object.size() |&gt;\n  print(units = \"Kb\")\n\n5.3 Kb\n\ncarriers_tibble |&gt;\n  object.size() |&gt;\n  print(units = \"Kb\")\n\n234.8 Kb"
  },
  {
    "objectID": "slides/2025-04-14-db.html#what-is-sql",
    "href": "slides/2025-04-14-db.html#what-is-sql",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "What is SQL?",
    "text": "What is SQL?\n\nSQL is a programming language for working with relational databases.\nSQL has been around since the 1970s, but has, unfortunately, many different dialects.\nTo connect to the mdsr database (via R), use MySQL."
  },
  {
    "objectID": "slides/2025-04-14-db.html#translating-dplyr-code-into-sql",
    "href": "slides/2025-04-14-db.html#translating-dplyr-code-into-sql",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\nThe function dbListTables() in the DBI package will tell us what tables exist in the airlines database.\n\nDBI::dbListTables(con_air)\n\n[1] \"airports\"        \"planes\"          \"carriers\"        \"flights_summary\"\n[5] \"flights\"        \n\nflights &lt;- dplyr::tbl(con_air, \"flights\")\ncarriers &lt;- dplyr::tbl(con_air, \"carriers\")"
  },
  {
    "objectID": "slides/2025-04-14-db.html#translating-dplyr-code-into-sql-1",
    "href": "slides/2025-04-14-db.html#translating-dplyr-code-into-sql-1",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\n\nOver what years is the flights data taken?\n\n\nyrs &lt;- flights |&gt;\n  summarize(min_year = min(year), max_year = max(year))\n\nyrs\n\n# Source:   SQL [1 x 2]\n# Database: mysql  [mdsr_public@mdsr.crcbo51tmesf.us-east-2.rds.amazonaws.com:3306/airlines]\n  min_year max_year\n     &lt;int&gt;    &lt;int&gt;\n1     2013     2015"
  },
  {
    "objectID": "slides/2025-04-14-db.html#translating-dplyr-code-into-sql-2",
    "href": "slides/2025-04-14-db.html#translating-dplyr-code-into-sql-2",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\nBecause flights is not actually a data.frame in R (but instead a tbl in SQL), the work that was done above was actually performed in SQL. To see the SQL code, we can use the function show_query.\n\ndplyr::show_query(yrs)\n\n&lt;SQL&gt;\nSELECT MIN(`year`) AS `min_year`, MAX(`year`) AS `max_year`\nFROM `flights`"
  },
  {
    "objectID": "slides/2025-04-14-db.html#translating-dplyr-code-into-sql-3",
    "href": "slides/2025-04-14-db.html#translating-dplyr-code-into-sql-3",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\n\nCreate a data set containing only flights between LAX and BOS in 2015.\n\n\nla_bos &lt;- flights |&gt;\n  filter(year == 2015 & ((origin == \"LAX\" & dest == \"BOS\") | \n           (origin == \"BOS\" & dest == \"LAX\"))) \n\ndplyr::show_query(la_bos)\n\n&lt;SQL&gt;\nSELECT `flights`.*\nFROM `flights`\nWHERE (`year` = 2015.0 AND ((`origin` = 'LAX' AND `dest` = 'BOS') OR (`origin` = 'BOS' AND `dest` = 'LAX')))"
  },
  {
    "objectID": "slides/2025-04-14-db.html#translating-dplyr-code-into-sql-4",
    "href": "slides/2025-04-14-db.html#translating-dplyr-code-into-sql-4",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "1. Translating dplyr code into SQL",
    "text": "1. Translating dplyr code into SQL\n\ndbplyr doesn’t translate every R command into SQL.\nSQL is not a statistical software and doesn’t, for example, have a mechanism for creating data visualizations.\ntrack which R commands are connected to SQL at the dbplyr reference sheet."
  },
  {
    "objectID": "slides/2025-04-14-db.html#sql-queries-via-the-dbi-package",
    "href": "slides/2025-04-14-db.html#sql-queries-via-the-dbi-package",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "2. SQL queries via the DBI package",
    "text": "2. SQL queries via the DBI package\n\nLook at the first few rows of the flights data.\n\n\nDBI::dbGetQuery(con_air,\n                \"SELECT * FROM flights LIMIT 8;\")\n\n  year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n1 2013    10   1        2             10        -8      453            505\n2 2013    10   1        4           2359         5      730            729\n3 2013    10   1       11             15        -4      528            530\n4 2013    10   1       14           2355        19      544            540\n5 2013    10   1       16             17        -1      515            525\n6 2013    10   1       22             20         2      552            554\n7 2013    10   1       29             35        -6      808            816\n8 2013    10   1       29             35        -6      449            458\n  arr_delay carrier tailnum flight origin dest air_time distance cancelled\n1       -12      AA  N201AA   2400    LAX  DFW      149     1235         0\n2         1      FL  N344AT    710    SFO  ATL      247     2139         0\n3        -2      AA  N3KMAA   1052    SFO  DFW      182     1464         0\n4         4      AA  N3ENAA   2392    SEA  ORD      191     1721         0\n5       -10      UA  N38473   1614    LAX  IAH      157     1379         0\n6        -2      UA  N458UA    291    SFO  IAH      188     1635         0\n7        -8      US  N551UW    436    LAX  CLT      256     2125         0\n8        -9      AS  N402AS    108    ANC  SEA      181     1448         0\n  diverted hour minute           time_hour\n1        0    0     10 2013-10-01 00:10:00\n2        0   23     59 2013-10-01 23:59:00\n3        0    0     15 2013-10-01 00:15:00\n4        0   23     55 2013-10-01 23:55:00\n5        0    0     17 2013-10-01 00:17:00\n6        0    0     20 2013-10-01 00:20:00\n7        0    0     35 2013-10-01 00:35:00\n8        0    0     35 2013-10-01 00:35:00"
  },
  {
    "objectID": "slides/2025-04-14-db.html#sql-queries-via-the-dbi-package-1",
    "href": "slides/2025-04-14-db.html#sql-queries-via-the-dbi-package-1",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "2. SQL queries via the DBI package",
    "text": "2. SQL queries via the DBI package\n\nHow many flights per year are in the flights table?\n\n\nDBI::dbGetQuery(con_air, \n  \"SELECT year, count(*) AS num_flights FROM flights GROUP BY year ORDER BY num_flights;\")\n\n  year num_flights\n1 2015     5819079\n2 2014     5819811\n3 2013     6369482"
  },
  {
    "objectID": "slides/2025-04-14-db.html#direct-sql-queries-via-sql-chunks",
    "href": "slides/2025-04-14-db.html#direct-sql-queries-via-sql-chunks",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "3. Direct SQL queries via sql chunks",
    "text": "3. Direct SQL queries via sql chunks\nSQL queries can be written directly inside a sql chunk in Quarto.\n\n```{sql}\n#| connection: con_air\n\nSELECT * FROM flights LIMIT 8;\n```\n\n\n8 records\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nyear\nmonth\nday\ndep_time\nsched_dep_time\ndep_delay\narr_time\nsched_arr_time\narr_delay\ncarrier\ntailnum\nflight\norigin\ndest\nair_time\ndistance\ncancelled\ndiverted\nhour\nminute\ntime_hour\n\n\n\n\n2013\n10\n1\n2\n10\n-8\n453\n505\n-12\nAA\nN201AA\n2400\nLAX\nDFW\n149\n1235\n0\n0\n0\n10\n2013-10-01 00:10:00\n\n\n2013\n10\n1\n4\n2359\n5\n730\n729\n1\nFL\nN344AT\n710\nSFO\nATL\n247\n2139\n0\n0\n23\n59\n2013-10-01 23:59:00\n\n\n2013\n10\n1\n11\n15\n-4\n528\n530\n-2\nAA\nN3KMAA\n1052\nSFO\nDFW\n182\n1464\n0\n0\n0\n15\n2013-10-01 00:15:00\n\n\n2013\n10\n1\n14\n2355\n19\n544\n540\n4\nAA\nN3ENAA\n2392\nSEA\nORD\n191\n1721\n0\n0\n23\n55\n2013-10-01 23:55:00\n\n\n2013\n10\n1\n16\n17\n-1\n515\n525\n-10\nUA\nN38473\n1614\nLAX\nIAH\n157\n1379\n0\n0\n0\n17\n2013-10-01 00:17:00\n\n\n2013\n10\n1\n22\n20\n2\n552\n554\n-2\nUA\nN458UA\n291\nSFO\nIAH\n188\n1635\n0\n0\n0\n20\n2013-10-01 00:20:00\n\n\n2013\n10\n1\n29\n35\n-6\n808\n816\n-8\nUS\nN551UW\n436\nLAX\nCLT\n256\n2125\n0\n0\n0\n35\n2013-10-01 00:35:00\n\n\n2013\n10\n1\n29\n35\n-6\n449\n458\n-9\nAS\nN402AS\n108\nANC\nSEA\n181\n1448\n0\n0\n0\n35\n2013-10-01 00:35:00"
  },
  {
    "objectID": "slides/2025-04-14-db.html#direct-sql-queries-via-sql-chunks-1",
    "href": "slides/2025-04-14-db.html#direct-sql-queries-via-sql-chunks-1",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "3. Direct SQL queries via sql chunks",
    "text": "3. Direct SQL queries via sql chunks\nSQL queries can be written directly inside a sql chunk in Quarto.\n\n```{sql}\n#| connection: con_air\n\nSELECT year, count(*) AS num_flights \n       FROM flights \n       GROUP BY year \n       ORDER BY num_flights;\n```\n\n\n3 records\n\n\nyear\nnum_flights\n\n\n\n\n2015\n5819079\n\n\n2014\n5819811\n\n\n2013\n6369482"
  },
  {
    "objectID": "slides/2025-04-14-db.html#good-practice",
    "href": "slides/2025-04-14-db.html#good-practice",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "Good practice",
    "text": "Good practice\nAlways a good idea to terminate the SQL connection when you are done with it.\n\ndbDisconnect(con_air, shutdown = TRUE)"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#traffic-stops",
    "href": "slides/2025-04-16-clauses.html#traffic-stops",
    "title": "SQL statements",
    "section": "Traffic Stops",
    "text": "Traffic Stops\nConsider a database of information from Stanford Open Policing Project on over 200 million traffic stops in the US."
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#establishing-a-sql-connection",
    "href": "slides/2025-04-16-clauses.html#establishing-a-sql-connection",
    "title": "SQL statements",
    "section": "Establishing a SQL connection",
    "text": "Establishing a SQL connection\n\ncon_traffic &lt;- DBI::dbConnect(\n  RMariaDB::MariaDB(),\n  dbname = \"traffic\",\n  host = Sys.getenv(\"TRAFFIC_HOST\"),\n  user = Sys.getenv(\"TRAFFIC_USER\"),\n  password = Sys.getenv(\"TRAFFIC_PWD\")\n)"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#traffic-stops-1",
    "href": "slides/2025-04-16-clauses.html#traffic-stops-1",
    "title": "SQL statements",
    "section": "Traffic Stops",
    "text": "Traffic Stops\n88 tables in the traffic database! Lots of details on traffic stops across cities and highway patrols.\n\nSHOW TABLES;\n\n\nDisplaying records 1 - 10\n\n\nTables_in_traffic\n\n\n\n\nar_little_rock_2020_04_01\n\n\naz_gilbert_2020_04_01\n\n\naz_mesa_2023_01_26\n\n\naz_statewide_2020_04_01\n\n\nca_anaheim_2020_04_01\n\n\nca_bakersfield_2020_04_01\n\n\nca_long_beach_2020_04_01\n\n\nca_los_angeles_2020_04_01\n\n\nca_oakland_2020_04_01\n\n\nca_san_bernardino_2020_04_01"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#lapd---glance-through-tables",
    "href": "slides/2025-04-16-clauses.html#lapd---glance-through-tables",
    "title": "SQL statements",
    "section": "LAPD - glance through tables",
    "text": "LAPD - glance through tables\n(0 is the number of rows that are skipped, 10 is the number of rows that are retrieved.)\n\nSELECT * FROM ca_los_angeles_2020_04_01\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nraw_row_number\ndate\ntime\ndistrict\nregion\nsubject_race\nsubject_sex\nofficer_id_hash\ntype\nraw_descent_description\n\n\n\n\n5692933\n\n13:59:00\n0753\nWILSHIRE\nhispanic\nmale\n15ecd81b00\npedestrian\nHISPANIC\n\n\n240731\n2010-01-01\n00:05:00\n665\nWEST TRAFFIC\nother\nmale\nb707de41e0\nvehicular\nOTHER\n\n\n240592|240593\n2010-01-01\n00:10:00\n1258\nSEVENTY-SEVENTH\nhispanic\nmale\nb49ae7078c\npedestrian\nHISPANIC\n\n\n241116\n2010-01-01\n00:10:00\n1635\nFOOTHILL\nhispanic\nmale\ne70ce46248\nvehicular\nHISPANIC\n\n\n240681\n2010-01-01\n00:15:00\n882\nWEST LA\nother\nmale\n8587bd743c\nvehicular\nOTHER\n\n\n240602\n2010-01-01\n00:20:00\n559\nHARBOR\nhispanic\nmale\n601bf1fdff\nvehicular\nHISPANIC\n\n\n240594\n2010-01-01\n00:20:00\n667\nHOLLYWOOD\nhispanic\nmale\nfb2e6d8ab3\npedestrian\nHISPANIC\n\n\n241434\n2010-01-01\n00:25:00\n1658\nFOOTHILL\nhispanic\nfemale\n5100c8c759\nvehicular\nHISPANIC\n\n\n240582\n2010-01-01\n00:30:00\n1041\nWEST VALLEY\nblack\nfemale\nd54d90a4d0\nvehicular\nBLACK\n\n\n240642\n2010-01-01\n00:30:00\n1162\nNORTH EAST\nhispanic\nmale\n5d6fbef1d3\npedestrian\nHISPANIC"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#describe-tables",
    "href": "slides/2025-04-16-clauses.html#describe-tables",
    "title": "SQL statements",
    "section": "DESCRIBE tables",
    "text": "DESCRIBE tables\nStill using a {sql} chunk. The DESCRIBE command shows the 10 field names (variables) in the ca_los_angeles_2020_04_01 table. Some of the variables are characters (text) and some are date or time.\n\nDESCRIBE ca_los_angeles_2020_04_01;\n\n\nDisplaying records 1 - 10\n\n\nField\nType\nNull\nKey\nDefault\nExtra\n\n\n\n\nraw_row_number\ntext\nYES\n\n\n\n\n\ndate\ndate\nYES\n\n\n\n\n\ntime\ntime\nYES\n\n\n\n\n\ndistrict\ntext\nYES\n\n\n\n\n\nregion\ntext\nYES\n\n\n\n\n\nsubject_race\ntext\nYES\n\n\n\n\n\nsubject_sex\ntext\nYES\n\n\n\n\n\nofficer_id_hash\ntext\nYES\n\n\n\n\n\ntype\ntext\nYES\n\n\n\n\n\nraw_descent_description\ntext\nYES"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#parts-of-a-sql-table",
    "href": "slides/2025-04-16-clauses.html#parts-of-a-sql-table",
    "title": "SQL statements",
    "section": "Parts of a SQL table",
    "text": "Parts of a SQL table\n\nField is the name of the variable\nType is the type of the variable (numeric, character, etc.)\nNull indicates whether or not NULL values are acceptable. NULL values are never allowed for a Primary Key.\nKey designates whether the variable is a Primary Key. PRI is a primary key, all unique, no NULL values. UNI is a unique key, but NULL values are allowed. MUL is a non-unique (“Multiple”) key, allowing for duplicates, can speed up queries.\nDefault provides the default value of the variable if no value is provided when a row is added to the database."
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#order-of-clauses",
    "href": "slides/2025-04-16-clauses.html#order-of-clauses",
    "title": "SQL clauses",
    "section": "Order of clauses",
    "text": "Order of clauses\nQueries in SQL start with the SELECT keyword and consist of several clauses, which must be written in the following order:\n\n\n\nSELECT\nFROM\nJOIN\nWHERE\n\n\n\nGROUP BY\nHAVING\nORDER BY\nLIMIT\n\n\nThe clauses are similar to data wrangling verbs in R, but the order in SQL is super important!"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#select-from",
    "href": "slides/2025-04-16-clauses.html#select-from",
    "title": "SQL statements",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\n\nstart with a SELECT, include a corresponding FROM\ncolumns may be specified or * returns every column\n\nThe shortest SQL query is the following SELECT clause. Do not run this clause!!! The ca_los_angeles_2020_04_01 table has 5 million rows, and we do not want to look at them (print to screen) simultaneously.\n\nDO NOT RUN:  SELECT * FROM ca_los_angeles_2020_04_01;"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#select-from-1",
    "href": "slides/2025-04-16-clauses.html#select-from-1",
    "title": "SQL statements",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nMuch better for big tables:\n\nSELECT * FROM ca_los_angeles_2020_04_01 LIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nraw_row_number\ndate\ntime\ndistrict\nregion\nsubject_race\nsubject_sex\nofficer_id_hash\ntype\nraw_descent_description\n\n\n\n\n5692933\n\n13:59:00\n0753\nWILSHIRE\nhispanic\nmale\n15ecd81b00\npedestrian\nHISPANIC\n\n\n240731\n2010-01-01\n00:05:00\n665\nWEST TRAFFIC\nother\nmale\nb707de41e0\nvehicular\nOTHER\n\n\n240592|240593\n2010-01-01\n00:10:00\n1258\nSEVENTY-SEVENTH\nhispanic\nmale\nb49ae7078c\npedestrian\nHISPANIC\n\n\n241116\n2010-01-01\n00:10:00\n1635\nFOOTHILL\nhispanic\nmale\ne70ce46248\nvehicular\nHISPANIC\n\n\n240681\n2010-01-01\n00:15:00\n882\nWEST LA\nother\nmale\n8587bd743c\nvehicular\nOTHER\n\n\n240602\n2010-01-01\n00:20:00\n559\nHARBOR\nhispanic\nmale\n601bf1fdff\nvehicular\nHISPANIC\n\n\n240594\n2010-01-01\n00:20:00\n667\nHOLLYWOOD\nhispanic\nmale\nfb2e6d8ab3\npedestrian\nHISPANIC\n\n\n241434\n2010-01-01\n00:25:00\n1658\nFOOTHILL\nhispanic\nfemale\n5100c8c759\nvehicular\nHISPANIC\n\n\n240582\n2010-01-01\n00:30:00\n1041\nWEST VALLEY\nblack\nfemale\nd54d90a4d0\nvehicular\nBLACK\n\n\n240642\n2010-01-01\n00:30:00\n1162\nNORTH EAST\nhispanic\nmale\n5d6fbef1d3\npedestrian\nHISPANIC"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#select-from-2",
    "href": "slides/2025-04-16-clauses.html#select-from-2",
    "title": "SQL statements",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nWhat if I switch the order of SQL keywords?\n\nSELECT * LIMIT 0, 10 FROM ca_los_angeles_2020_04_01;\n\nError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM ca_los_angeles_2020_04_01' at line 1 [1064]"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#select-from-3",
    "href": "slides/2025-04-16-clauses.html#select-from-3",
    "title": "SQL statements",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nHow do we know how many traffic stops are in the database? Two different ways of counting the rows (that produce the same number):\n\nSELECT COUNT(*), SUM(1) FROM ca_los_angeles_2020_04_01 LIMIT 0, 10;\n\n\n1 records\n\n\nCOUNT(*)\nSUM(1)\n\n\n\n\n5418402\n5418402\n\n\n\n\n\nMore than 5.4 million LAPD traffic stops."
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#select-from-4",
    "href": "slides/2025-04-16-clauses.html#select-from-4",
    "title": "SQL statements",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nLet’s look at New Orleans, LA\n\nDESCRIBE la_new_orleans_2020_04_01;\n\n\nDisplaying records 1 - 10\n\n\nField\nType\nNull\nKey\nDefault\nExtra\n\n\n\n\nraw_row_number\ntext\nYES\n\n\n\n\n\ndate\ndate\nYES\n\n\n\n\n\ntime\ntime\nYES\n\n\n\n\n\nlocation\ntext\nYES\n\n\n\n\n\nlat\ndouble\nYES\n\n\n\n\n\nlng\ndouble\nYES\n\n\n\n\n\ndistrict\ndouble\nYES\n\n\n\n\n\nzone\ntext\nYES\n\n\n\n\n\nsubject_age\nbigint(20)\nYES\n\n\n\n\n\nsubject_race\ntext\nYES"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#select-from-5",
    "href": "slides/2025-04-16-clauses.html#select-from-5",
    "title": "SQL statements",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nHow old was the car being driven?\nUnfortunately, date is saved as a date variable, and vehicle_year is saved as a double. Fortunately, we can convert vehicle_year to a date variable.\n\nSELECT\n      date, vehicle_year,\n      STR_TO_DATE(CONCAT(vehicle_year, '-01-01'), '%Y-%m-%d') AS vehicle_date\n   FROM la_new_orleans_2020_04_01\n   LIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ndate\nvehicle_year\nvehicle_date\n\n\n\n\n2010-01-01\n2005\n2005-01-01\n\n\n2010-01-01\n2005\n2005-01-01\n\n\n2010-01-01\n2005\n2005-01-01\n\n\n2010-01-01\n2003\n2003-01-01\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#select-from-6",
    "href": "slides/2025-04-16-clauses.html#select-from-6",
    "title": "SQL statements",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nWhy can’t we find the difference between the two time variables?\n\nSELECT\n      date, vehicle_year,\n      STR_TO_DATE(CONCAT(vehicle_year, '-01-01'), '%Y-%m-%d') AS vehicle_date\n      TIMESTAMPDIFF(YEAR, vehicle_date, date) AS car_age\n   FROM la_new_orleans_2020_04_01\n   LIMIT 0, 10;\n\nError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TIMESTAMPDIFF(YEAR, vehicle_date, date) AS car_age\n   FROM la_new_orleans_2020_0' at line 4 [1064]"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#select-from-7",
    "href": "slides/2025-04-16-clauses.html#select-from-7",
    "title": "SQL statements",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nSolution 1: apply the STR_TO_DATE() function inside the TIMESTAMPDIFF() function\n\nSELECT \n   date,\n   vehicle_year,\n   TIMESTAMPDIFF(YEAR, \n                 STR_TO_DATE(CONCAT(vehicle_year, '-01-01'), '%Y-%m-%d'),\n                 date) AS car_age \nFROM la_new_orleans_2020_04_01\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ndate\nvehicle_year\ncar_age\n\n\n\n\n2010-01-01\n2005\n5\n\n\n2010-01-01\n2005\n5\n\n\n2010-01-01\n2005\n5\n\n\n2010-01-01\n2003\n7\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#important-note",
    "href": "slides/2025-04-16-clauses.html#important-note",
    "title": "SQL statements",
    "section": "Important note:",
    "text": "Important note:\nThere is a distinction between keywords that operate on the variables of the original table versus those that operate on the variables of the results set.\ndate and vehicle_year are columns in the original table - they are written to disk on the SQL server.\ncar_age (and previously, vehicle_date) exist only in the results set, which is passed from the server (SQL server) to the client (e.g., Quarto or DBeaver) in your computer’s memory and is not written to disk."
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#select-distinct",
    "href": "slides/2025-04-16-clauses.html#select-distinct",
    "title": "SQL statements",
    "section": "SELECT DISTINCT",
    "text": "SELECT DISTINCT\nReturns only unique rows.\n\nSELECT DISTINCT raw_actions_taken\nFROM la_new_orleans_2020_04_01\nLIMIT 0, 200;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\nraw_actions_taken\n\n\n\n\n\n\n\nStop Results: Citation Issued;Subject Type: Driver\n\n\nStop Results: Verbal Warning;Search Occurred: Yes;Search Types: Vehicle;Search Types: Pat-down;Search Types: Driver;Legal Basises: Consent to search;Legal Basises: Probable cause\n\n\nStop Results: Verbal Warning;Subject Type: Driver;Search Occurred: No;Evidence Seized: No\n\n\nStop Results: Verbal Warning;Subject Type: Driver\n\n\nStop Results: Verbal Warning;Subject Type: Driver;Search Occurred: No\n\n\nStop Results: No action taken;Search Occurred: No\n\n\nStop Results: Citation Issued;Subject Type: Driver;Search Occurred: No\n\n\nStop Results: Citation Issued;Subject Type: Driver;Search Occurred: No;Evidence Seized: No\n\n\nStop Results: No action taken;Search Occurred: No;Search Types: Pat-down\n\n\n\n\n\n\nSELECT DISTINCT outcome\nFROM la_new_orleans_2020_04_01\nLIMIT 0, 10;\n\n\n4 records\n\n\noutcome\n\n\n\n\n\n\n\ncitation\n\n\nwarning\n\n\narrest\n\n\n\n\n\n\nSELECT DISTINCT vehicle_make, vehicle_color\nFROM la_new_orleans_2020_04_01\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\nvehicle_make\nvehicle_color\n\n\n\n\nDODGE\nBLACK\n\n\nNISSAN\nBLUE\n\n\nJEEP\nGRAY\n\n\n\n\n\n\nGMC - GENERAL MOTORS CORP.\nBLUE\n\n\nCHEVROLET\nYELLOW\n\n\nOLDSMOBILE\nSILVER\n\n\nTOYOTA\nGREEN\n\n\nPONTIAC\nBRONZE\n\n\nCHEVROLET\nWHITE\n\n\n\n\n\n(note that we haven’t yet arranged the distinct values!)"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#where",
    "href": "slides/2025-04-16-clauses.html#where",
    "title": "SQL statements",
    "section": "WHERE",
    "text": "WHERE\nThe WHERE keyword is analogous to the filter() function in dplyr. However, keep in mind that there are two SQL keywords that resemble the dplyr filter() function. WHERE operates on the original data in the table and HAVING operates on the result set."
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#where-1",
    "href": "slides/2025-04-16-clauses.html#where-1",
    "title": "SQL statements",
    "section": "WHERE",
    "text": "WHERE\nWhat was the time of day for those traffic stops search_conducted was true and vehicle_make was Subaru?\nNote that in SQL the equality logical is = and in R the equality logical is ==. Note also that the WHERE keyword is case-insensitive!\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE search_conducted = 1\n   AND vehicle_make = \"Subaru\"\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n21:05:00\n1\n1996\nSUBARU\n\n\n21:05:00\n1\n1996\nSUBARU\n\n\n03:27:00\n1\n1998\nSUBARU\n\n\n19:28:00\n1\n2012\nSUBARU\n\n\n21:40:00\n1\n1998\nSUBARU\n\n\n10:38:00\n1\n2014\nSUBARU\n\n\n05:01:00\n1\n1998\nSUBARU\n\n\n22:00:00\n1\n1998\nSUBARU\n\n\n13:46:00\n1\n2007\nSUBARU\n\n\n22:50:00\n1\n1999\nSUBARU"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#where-2",
    "href": "slides/2025-04-16-clauses.html#where-2",
    "title": "SQL statements",
    "section": "WHERE",
    "text": "WHERE\nBETWEEN can be used to specify a range of values for a numeric value. BETWEEN is inclusive.\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_year BETWEEN 1970 and 1999\n   AND vehicle_make = \"Subaru\"\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n20:16:00\n0\n1991\nSUBARU\n\n\n20:54:00\n0\n1998\nSUBARU\n\n\n17:09:00\n0\n1999\nSUBARU\n\n\n13:20:00\n0\n1996\nSUBARU\n\n\n20:44:00\n0\n1998\nSUBARU\n\n\n21:05:00\n1\n1996\nSUBARU\n\n\n21:05:00\n1\n1996\nSUBARU\n\n\n18:52:00\n0\n1995\nSUBARU\n\n\n17:36:00\n0\n1996\nSUBARU\n\n\n08:40:00\n0\n1999\nSUBARU"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#where-3",
    "href": "slides/2025-04-16-clauses.html#where-3",
    "title": "SQL statements",
    "section": "WHERE",
    "text": "WHERE\nIN is similar to the dplyr %in% function which specifies distinct values for the variable.\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_make IN (\"Subaru\", \"Dodge\")\n   AND search_conducted = 1\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n03:45:00\n1\n2010\nDODGE\n\n\n20:29:00\n1\n2012\nDODGE\n\n\n21:12:00\n1\n2011\nDODGE\n\n\n21:12:00\n1\n2011\nDODGE\n\n\n02:00:00\n1\n2014\nDODGE\n\n\n20:46:00\n1\n2008\nDODGE\n\n\n20:46:00\n1\n2008\nDODGE\n\n\n04:47:00\n1\n2014\nDODGE\n\n\n19:16:00\n1\n1995\nDODGE\n\n\n09:43:00\n1\n2009\nDODGE"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#where-4",
    "href": "slides/2025-04-16-clauses.html#where-4",
    "title": "SQL statements",
    "section": "WHERE",
    "text": "WHERE\nAND takes precedence over OR in the order of operations, when there are no parentheses.\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_year BETWEEN 1970 and 1999 OR\n      vehicle_make IN (\"Subaru\", \"Dodge\") AND \n      search_conducted = 1\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n16:03:00\n0\n1997\nGMC - GENERAL MOTORS CORP.\n\n\n16:03:00\n0\n1997\nGMC - GENERAL MOTORS CORP.\n\n\n07:54:00\n0\n1995\nTOYOTA\n\n\n21:01:00\n0\n1997\nGMC - GENERAL MOTORS CORP.\n\n\n21:06:00\n0\n1996\nDODGE\n\n\n21:16:00\n0\n1996\nDODGE\n\n\n10:20:00\n0\n1994\nMERCEDES-BENZ\n\n\n10:35:00\n0\n1998\nPONTIAC\n\n\n12:46:00\n0\n1996\nACURA\n\n\n15:17:00\n0\n1997\nOLDSMOBILE\n\n\n\n\n\nsame as:\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_year BETWEEN 1970 and 1999 OR\n      (vehicle_make IN (\"Subaru\", \"Dodge\") AND \n      search_conducted = 1)\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n16:03:00\n0\n1997\nGMC - GENERAL MOTORS CORP.\n\n\n16:03:00\n0\n1997\nGMC - GENERAL MOTORS CORP.\n\n\n07:54:00\n0\n1995\nTOYOTA\n\n\n21:01:00\n0\n1997\nGMC - GENERAL MOTORS CORP.\n\n\n21:06:00\n0\n1996\nDODGE\n\n\n21:16:00\n0\n1996\nDODGE\n\n\n10:20:00\n0\n1994\nMERCEDES-BENZ\n\n\n10:35:00\n0\n1998\nPONTIAC\n\n\n12:46:00\n0\n1996\nACURA\n\n\n15:17:00\n0\n1997\nOLDSMOBILE"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#where-5",
    "href": "slides/2025-04-16-clauses.html#where-5",
    "title": "SQL statements",
    "section": "WHERE",
    "text": "WHERE\nParentheses take precedence over AND and OR.\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE (vehicle_year BETWEEN 1970 and 1999 OR\n      vehicle_make IN (\"Subaru\", \"Dodge\") ) AND \n      search_conducted = 1\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n03:45:00\n1\n2010\nDODGE\n\n\n07:11:00\n1\n1999\nCADILLAC\n\n\n20:21:00\n1\n1999\nMERCURY\n\n\n20:29:00\n1\n2012\nDODGE\n\n\n20:31:00\n1\n1993\nINFINITY\n\n\n21:12:00\n1\n2011\nDODGE\n\n\n21:12:00\n1\n2011\nDODGE\n\n\n02:00:00\n1\n2014\nDODGE\n\n\n14:31:00\n1\n1994\nJEEP\n\n\n04:39:00\n1\n1995\nCHEVROLET"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#where-6",
    "href": "slides/2025-04-16-clauses.html#where-6",
    "title": "SQL statements",
    "section": "WHERE",
    "text": "WHERE\nIS NULL not = NULL (because NULL indicates unknown). (Just like how we need to use is.na() in R!)\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_make IS NULL\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ntime\nsearch_conducted\nvehicle_year\nvehicle_make\n\n\n\n\n02:06:00\n0\n\n\n\n\n02:06:00\n0\n\n\n\n\n02:06:00\n0\n\n\n\n\n02:06:00\n0\n\n\n\n\n02:06:00\n0\n\n\n\n\n02:06:00\n0\n\n\n\n\n02:06:00\n0\n\n\n\n\n08:02:00\n0\n\n\n\n\n20:05:00\n0\n\n\n\n\n20:05:00\n0\n\n\n\n\n\n\n\n\nSELECT time, search_conducted, vehicle_year, vehicle_make\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_make = NULL\nLIMIT 0, 10;"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#a-null-example",
    "href": "slides/2025-04-16-clauses.html#a-null-example",
    "title": "SQL statements",
    "section": "A NULL example",
    "text": "A NULL example\nThe logic of NULL:1\n\nIf you do anything with NULL, you’ll just get NULL. For instance if \\(x\\) is NULL, then \\(x &gt; 3\\), \\(1 = x\\), and \\(x + 4\\) all evaluate to NULL. Even \\(x =\\) NULL evaluates to NULL! if you want to check whether \\(x\\) is NULL, use x IS NULL or x IS NOT NULL.\nNULL short-circuits with boolean operators. That means a boolean expression involving NULL will evaluate to:\n\nTRUE, if it’d evaluate to TRUE regardless of whether the NULL value is really TRUE or FALSE.\nFALSE, if it’d evaluate to FALSE regardless of whether the NULL value is really TRUE or FALSE.\nOr NULL, if it depends on the NULL value.\n\n\ntaken from: https://cs186berkeley.net/notes/note1/#filtering-null-values"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#a-null-example-1",
    "href": "slides/2025-04-16-clauses.html#a-null-example-1",
    "title": "SQL statements",
    "section": "A NULL example",
    "text": "A NULL example\nEvaluate WHERE age &lt;= 20 OR num_dogs = 3:\n\nSELECT * FROM (\n   SELECT 'Ace' AS name, 20 AS age, 4 as num_dogs\n   UNION\n   SELECT 'Ada' AS name, NULL AS age, 3 as num_dogs   \n   UNION\n   SELECT 'Ben' AS name, NULL AS age, NULL as num_dogs\n   UNION\n   SELECT 'Cho' AS name, 27 AS age, NULL as num_dogs\n   ) AS temptable;\n\n\n4 records\n\n\nname\nage\nnum_dogs\n\n\n\n\nAce\n20\n4\n\n\nAda\n\n3\n\n\nBen\n\n\n\n\nCho\n27"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#a-null-example-2",
    "href": "slides/2025-04-16-clauses.html#a-null-example-2",
    "title": "SQL statements",
    "section": "A NULL example",
    "text": "A NULL example\nKeep the rows satisfying: age &lt;= 20 OR num_dogs = 3\n\nFor Ace, age &lt;= 20 evaluates to TRUE so the claim is satisfied.\nFor Ada, age &lt;= 20 evaluates to NULL but num_dogs = 3 evaluates to TRUE so the claim is satisfied.\nFor Ben, age &lt;= 20 evaluates to NULL and num_dogs = 3 evaluates to NULL so the overall expression is NULL which has a FALSE value.\nFor Cho, age &lt;= 20 evaluates to FALSE and num_dogs = 3 evaluates to NULL so the overall expression evaluates to NULL (because it depends on the value of the NULL).\n\nThus we keep only Ace and Ada."
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#a-null-example-3",
    "href": "slides/2025-04-16-clauses.html#a-null-example-3",
    "title": "SQL statements",
    "section": "A NULL example",
    "text": "A NULL example\n\nSELECT * FROM (\n   SELECT 'Ace' AS name, 20 AS age, 4 as num_dogs\n   UNION\n   SELECT 'Ada' AS name, NULL AS age, 3 as num_dogs   \n   UNION\n   SELECT 'Ben' AS name, NULL AS age, NULL as num_dogs\n   UNION\n   SELECT 'Cho' AS name, 27 AS age, NULL as num_dogs\n   ) AS temptable\nWHERE age &lt;= 20 OR num_dogs = 3;\n\n\n2 records\n\n\nname\nage\nnum_dogs\n\n\n\n\nAce\n20\n4\n\n\nAda\n\n3"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#group-by",
    "href": "slides/2025-04-16-clauses.html#group-by",
    "title": "SQL statements",
    "section": "GROUP BY",
    "text": "GROUP BY\nThe GROUP BY keyword will direct SQL to carry out the query separately for each category in the grouped variable.\n\naggregate functions include COUNT(), SUM(), MAX(), MIN(), and AVG().\n\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       SUM(1) AS num_stops_also,\n       SUM(2) AS double_stops\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_year BETWEEN 1970 and 1999\nGROUP BY subject_race;\n\n\n7 records\n\n\nsubject_race\nnum_stops\nnum_stops_also\ndouble_stops\n\n\n\n\n\n2217\n2217\n4434\n\n\nasian/pacific islander\n315\n315\n630\n\n\nblack\n31586\n31586\n63172\n\n\nhispanic\n2347\n2347\n4694\n\n\nother\n23\n23\n46\n\n\nunknown\n211\n211\n422\n\n\nwhite\n11475\n11475\n22950"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#group-by-1",
    "href": "slides/2025-04-16-clauses.html#group-by-1",
    "title": "SQL statements",
    "section": "GROUP BY",
    "text": "GROUP BY\nFor those people whose cars are between 1970 and 1999, how old is the youngest and oldest person for each subject_race?\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       MIN(subject_age) AS min_age,\n       MAX(subject_age) AS max_age\nFROM la_new_orleans_2020_04_01\nWHERE vehicle_year BETWEEN 1970 and 1999\nGROUP BY subject_race;\n\n\n7 records\n\n\nsubject_race\nnum_stops\nmin_age\nmax_age\n\n\n\n\n\n2217\n\n\n\n\nasian/pacific islander\n315\n17\n78\n\n\nblack\n31586\n10\n100\n\n\nhispanic\n2347\n13\n87\n\n\nother\n23\n19\n68\n\n\nunknown\n211\n17\n81\n\n\nwhite\n11475\n12\n99"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#group-by-2",
    "href": "slides/2025-04-16-clauses.html#group-by-2",
    "title": "SQL statements",
    "section": "GROUP BY",
    "text": "GROUP BY\nGROUP BY will work applied to multiple columns.\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       MIN(subject_age) AS min_age,\n       MAX(subject_age) AS max_age,\n       DAYNAME(date) AS wday\nFROM la_new_orleans_2020_04_01\nGROUP BY subject_race, wday;\n\n\nDisplaying records 1 - 10\n\n\nsubject_race\nnum_stops\nmin_age\nmax_age\nwday\n\n\n\n\n\n1800\n\n\nFriday\n\n\n\n1590\n\n\nMonday\n\n\n\n1332\n\n\nSaturday\n\n\n\n1172\n\n\nSunday\n\n\n\n1953\n\n\nThursday\n\n\n\n1877\n\n\nTuesday\n\n\n\n2006\n\n\nWednesday\n\n\nasian/pacific islander\n551\n16\n78\nFriday\n\n\nasian/pacific islander\n484\n13\n78\nMonday\n\n\nasian/pacific islander\n475\n15\n78\nSaturday"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#order-by",
    "href": "slides/2025-04-16-clauses.html#order-by",
    "title": "SQL statements",
    "section": "ORDER BY",
    "text": "ORDER BY\nORDER BY allows us to look at interesting aspects of the data by sorting the data.\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       MIN(subject_age) AS min_age,\n       MAX(subject_age) AS max_age,\n       DAYNAME(date) AS wday\nFROM la_new_orleans_2020_04_01\nGROUP BY subject_race, wday\nORDER BY min_age ASC;\n\n\nDisplaying records 1 - 10\n\n\nsubject_race\nnum_stops\nmin_age\nmax_age\nwday\n\n\n\n\n\n1332\n\n\nSaturday\n\n\n\n1172\n\n\nSunday\n\n\n\n1877\n\n\nTuesday\n\n\n\n2006\n\n\nWednesday\n\n\n\n1953\n\n\nThursday\n\n\n\n1800\n\n\nFriday\n\n\n\n1590\n\n\nMonday\n\n\nblack\n49945\n10\n110\nFriday\n\n\nblack\n42593\n10\n106\nSaturday\n\n\nblack\n39252\n10\n92\nSunday\n\n\n\n\n\nWHAT?!?!! How are 10 year olds getting pulled over for traffic stops?"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#order-by-1",
    "href": "slides/2025-04-16-clauses.html#order-by-1",
    "title": "SQL statements",
    "section": "ORDER BY",
    "text": "ORDER BY\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       MIN(subject_age) AS min_age,\n       MAX(subject_age) AS max_age,\n       DAYNAME(date) AS wday\nFROM la_new_orleans_2020_04_01\nGROUP BY subject_race, wday\nORDER BY max_age DESC;\n\n\nDisplaying records 1 - 10\n\n\nsubject_race\nnum_stops\nmin_age\nmax_age\nwday\n\n\n\n\nblack\n49945\n10\n110\nFriday\n\n\nblack\n56459\n10\n110\nTuesday\n\n\nblack\n57153\n10\n110\nWednesday\n\n\nblack\n54858\n10\n110\nThursday\n\n\nhispanic\n2007\n11\n110\nThursday\n\n\nblack\n49557\n10\n110\nMonday\n\n\nwhite\n18494\n11\n107\nFriday\n\n\nblack\n42593\n10\n106\nSaturday\n\n\nwhite\n20764\n11\n105\nWednesday\n\n\nwhite\n15778\n11\n104\nSunday\n\n\n\n\n\nSo many people over 100 years old… the data seem fishy!"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#order-by-2",
    "href": "slides/2025-04-16-clauses.html#order-by-2",
    "title": "SQL statements",
    "section": "ORDER BY",
    "text": "ORDER BY\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       MIN(subject_age) AS min_age,\n       MAX(subject_age) AS max_age,\n       DAYNAME(date) AS wday\nFROM la_new_orleans_2020_04_01\nGROUP BY subject_race, wday\nORDER BY wday, subject_race;\n\n\nDisplaying records 1 - 10\n\n\nsubject_race\nnum_stops\nmin_age\nmax_age\nwday\n\n\n\n\nblack\n2\n17\n24\n\n\n\nwhite\n2\n23\n57\n\n\n\n\n1800\n\n\nFriday\n\n\nasian/pacific islander\n551\n16\n78\nFriday\n\n\nblack\n49945\n10\n110\nFriday\n\n\nhispanic\n1851\n11\n83\nFriday\n\n\nother\n61\n19\n66\nFriday\n\n\nunknown\n510\n17\n75\nFriday\n\n\nwhite\n18494\n11\n107\nFriday\n\n\n\n1590\n\n\nMonday"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#order-by-3",
    "href": "slides/2025-04-16-clauses.html#order-by-3",
    "title": "SQL statements",
    "section": "ORDER BY",
    "text": "ORDER BY\n\n\n\nNote that both GROUP BY and ORDER BY evaluate the data after it has been retrieved. Therefore, the functions operate on the results set, not the original rows of the data.\n\n\n\nWe are able to GROUP BY and ORDER BY on the new variables we had created, wday."
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#having",
    "href": "slides/2025-04-16-clauses.html#having",
    "title": "SQL statements",
    "section": "HAVING",
    "text": "HAVING\nRecall that WHERE acts only on the original data. If we are interested in traffic stops that happened on Friday, we need to use the derived variable wday instead of the raw variable date. Fortunately, HAVING works on the results set."
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#having-1",
    "href": "slides/2025-04-16-clauses.html#having-1",
    "title": "SQL statements",
    "section": "HAVING",
    "text": "HAVING\n\nSELECT subject_race,\n       COUNT(*) AS num_stops, \n       MIN(subject_age) AS min_age,\n       MAX(subject_age) AS max_age,\n       DAYNAME(date) AS wday\nFROM la_new_orleans_2020_04_01\nGROUP BY subject_race, wday\nHAVING wday = 'Friday';\n\n\n7 records\n\n\nsubject_race\nnum_stops\nmin_age\nmax_age\nwday\n\n\n\n\n\n1800\n\n\nFriday\n\n\nasian/pacific islander\n551\n16\n78\nFriday\n\n\nblack\n49945\n10\n110\nFriday\n\n\nhispanic\n1851\n11\n83\nFriday\n\n\nother\n61\n19\n66\nFriday\n\n\nunknown\n510\n17\n75\nFriday\n\n\nwhite\n18494\n11\n107\nFriday"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#having-2",
    "href": "slides/2025-04-16-clauses.html#having-2",
    "title": "SQL statements",
    "section": "HAVING",
    "text": "HAVING\nWhile it worked out quite well for us that HAVING was able to filter the data based on the results set, the use of HAVING was quite onerous because the entire data set was considered before the filter was applied. That is, if the filter can be done on the original data using WHERE, the query will be much faster and more efficient.\nNote: HAVING requires a GROUP BY clause. And the variable(s) used in HAVING must also be part of the GROUP BY clause."
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#limit",
    "href": "slides/2025-04-16-clauses.html#limit",
    "title": "SQL statements",
    "section": "LIMIT",
    "text": "LIMIT\nLIMIT truncates the query to specified rows. The first number is the offset (i.e., the number of rows to skip), the second number is the (maximum) number of rows to return. Here, we return rows 154219 through 154228.\nThe first number is optional.\n\nSELECT * FROM la_new_orleans_2020_04_01 LIMIT 154218, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nraw_row_number\ndate\ntime\nlocation\nlat\nlng\ndistrict\nzone\nsubject_age\nsubject_race\nsubject_sex\nofficer_assignment\ntype\narrest_made\ncitation_issued\nwarning_issued\noutcome\ncontraband_found\ncontraband_drugs\ncontraband_weapons\nfrisk_performed\nsearch_conducted\nsearch_person\nsearch_vehicle\nsearch_basis\nreason_for_stop\nvehicle_color\nvehicle_make\nvehicle_model\nvehicle_year\nraw_actions_taken\nraw_subject_race\n\n\n\n\n442170\n2017-04-20\n13:15:00\nGentilly Blvd & Franklin Ave\n30.0\n-90.0\n3\nY\n31\nblack\nmale\n3rd District\nvehicular\n0\n0\n1\nwarning\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nBLACK\nDODGE\nCHARGER\n2008\nStop Results: Verbal Warning;Subject Type: Driver;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nBLACK\n\n\n442169\n2017-04-20\n13:15:00\nGentilly Blvd & Franklin Ave\n30.0\n-90.0\n3\nY\n32\nblack\nmale\n3rd District\nvehicular\n1\n0\n0\narrest\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nBLACK\nDODGE\nCHARGER\n2008\nStop Results: Physical Arrest;Subject Type: Passenger;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nBLACK\n\n\n442094\n2017-04-20\n01:16:00\nBroadway & Freret St\n29.9\n-90.1\n2\nH\n41\nblack\nmale\n2nd District\npedestrian\n0\n0\n0\n\n0\n0\n0\n1\n1\n1\n1\nconsent\nSUSPECT PERSON\n\n\n\n\nStop Results: No action taken;Subject Type: Pedestrian;Search Occurred: Yes;Search Types: Pat-down;Evidence Seized: No;Legal Basises: Consent to search;Consent To Search: Yes;Exit Vehicle: No\nBLACK\n\n\n442171\n2017-04-20\n13:17:00\nFranklin Ave & Gentilly Blvd\n30.0\n-90.0\n3\nY\n27\nblack\nmale\n3rd District\nvehicular\n0\n1\n0\ncitation\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nGRAY\nPONTIAC\nGRAND PRIX\n2008\nStop Results: Citation Issued;Subject Type: Driver;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: Yes\nBLACK\n\n\n442093\n2017-04-20\n01:22:00\nS Claiborne Ave & Thalia St\n29.9\n-90.1\n6\nJ\n28\nwhite\nfemale\n6th District\nvehicular\n0\n0\n1\nwarning\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nBLUE\nJEEP\nGRAND CHEROKEE\n2002\nStop Results: Verbal Warning;Subject Type: Driver;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nWHITE\n\n\n442162\n2017-04-20\n13:27:00\n007XX Saint Charles Ave\n\n\n8\nH\n30\nwhite\nmale\n8th District\nvehicular\n0\n1\n0\ncitation\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nYELLOW\nDODGE\nGRAND CARAVAN\n2013\nStop Results: Citation Issued;Subject Type: Driver;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nWHITE\n\n\n442160\n2017-04-20\n13:27:00\nTulane Ave & S Jefferson Davis Pkwy\n30.0\n-90.1\n1\nL\n22\nblack\nfemale\n1st District\nvehicular\n0\n1\n1\ncitation\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nWHITE\nCHEVROLET\nOTHER\n2007\nStop Results: Citation Issued;Stop Results: Verbal Warning;Subject Type: Driver;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nBLACK\n\n\n442159\n2017-04-20\n13:31:00\nDiana St & Wagner St\n29.9\n-90.0\n4\nH\n20\nblack\nfemale\n4th District\nvehicular\n0\n0\n1\nwarning\n\n\n\n0\n0\n0\n0\n\nTRAFFIC VIOLATION\nWHITE\nNISSAN\nALTIMA\n2003\nStop Results: Verbal Warning;Subject Type: Driver;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nBLACK\n\n\n442161\n2017-04-20\n13:35:00\nS Jefferson Davis Pkwy & Tulane Ave\n30.0\n-90.1\n1\nL\n28\nblack\nmale\n1st District\nvehicular\n0\n1\n0\ncitation\n0\n0\n0\n0\n1\n1\n1\nconsent\nTRAFFIC VIOLATION\nBLACK\nHONDA\nACCORD\n1991\nStop Results: Citation Issued;Subject Type: Driver;Search Occurred: Yes;Search Types: Vehicle;Evidence Seized: No;Legal Basises: Consent to search;Consent To Search: Yes;Exit Vehicle: Yes\nBLACK\n\n\n442650\n2017-04-20\n13:37:00\nSaint Louis St & N Peters St\n30.0\n-90.1\n8\nD\n57\nblack\nmale\n8th District\n\n0\n1\n0\ncitation\n\n\n\n0\n0\n0\n0\n\nCRIMINAL VIOLATION\n\n\n\n\nStop Results: Citation Issued;Subject Type: Pedestrian;Search Occurred: No;Evidence Seized: No;Consent To Search: No;Exit Vehicle: No\nBLACK"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#saving-sql-queries-as-r-objects",
    "href": "slides/2025-04-16-clauses.html#saving-sql-queries-as-r-objects",
    "title": "SQL statements",
    "section": "Saving SQL queries as R objects",
    "text": "Saving SQL queries as R objects\nIf you are working in R to run SQL queries, you may want to use the query output for further analysis or visualizations.\n\nuse #| output.var: \"name_of_variable\" inside the {sql} chunk.\nname_of_variable will then be available to be used in the R environment.\n\n\n```{sql}\n#| connection: con_traffic\n#| output.var: \"new_table\"\n\nSELECT *, DAYNAME(date) AS wday\nFROM la_new_orleans_2020_04_01\nLIMIT 0, 1000;\n```"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#saving-sql-queries-as-r-objects-1",
    "href": "slides/2025-04-16-clauses.html#saving-sql-queries-as-r-objects-1",
    "title": "SQL statements",
    "section": "Saving SQL queries as R objects",
    "text": "Saving SQL queries as R objects\n\n```{r}\nnew_table |&gt;\n  drop_na(wday) |&gt;\n  ggplot(aes(x = vehicle_year, y = subject_age, color = wday)) + \n  geom_point() +\n  xlim(1985, 2025)\n```"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#good-practice",
    "href": "slides/2025-04-16-clauses.html#good-practice",
    "title": "SQL statements",
    "section": "Good practice",
    "text": "Good practice\nAlways a good idea to terminate the SQL connection when you are done with it.\n\ndbDisconnect(con_traffic, shutdown = TRUE)"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#select-from-8",
    "href": "slides/2025-04-16-clauses.html#select-from-8",
    "title": "SQL statements",
    "section": "SELECT … FROM",
    "text": "SELECT … FROM\nSolution 2: two layers of SELECT\n\nfirst SELECT (i.e., inside) layer creates the new variables\nsecond SELECT (i.e., outside) layer subtracts the two times\n\n\nSELECT \n   date,\n   vehicle_date, \n   TIMESTAMPDIFF(YEAR, vehicle_date, date) AS car_age \nFROM (\n   SELECT\n      date,\n      STR_TO_DATE(CONCAT(vehicle_year, '-01-01'), '%Y-%m-%d') AS vehicle_date\n   FROM la_new_orleans_2020_04_01)\n   AS subquery_table\nLIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\ndate\nvehicle_date\ncar_age\n\n\n\n\n2010-01-01\n2005-01-01\n5\n\n\n2010-01-01\n2005-01-01\n5\n\n\n2010-01-01\n2005-01-01\n5\n\n\n2010-01-01\n2003-01-01\n7\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01\n\n\n\n\n2010-01-01"
  },
  {
    "objectID": "slides/2025-04-16-clauses.html#order-of-keywords",
    "href": "slides/2025-04-16-clauses.html#order-of-keywords",
    "title": "SQL statements",
    "section": "Order of keywords",
    "text": "Order of keywords\nQueries in SQL start with the SELECT keyword and consist of several keywords, which must be written in the following order:\n\n\n\nSELECT\nFROM\nJOIN\nWHERE\n\n\n\nGROUP BY\nHAVING\nORDER BY\nLIMIT\n\n\nThe keywords are similar to data wrangling verbs in R, but the order in SQL is super important!"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#imdb",
    "href": "slides/2025-04-21-joins.html#imdb",
    "title": "SQL joins",
    "section": "IMDb",
    "text": "IMDb\nConsider a database of information from IMDb."
  },
  {
    "objectID": "slides/2025-04-21-joins.html#imdb-1",
    "href": "slides/2025-04-21-joins.html#imdb-1",
    "title": "SQL joins",
    "section": "IMDb",
    "text": "IMDb\n21 tables in the imdb database! Lots of details on movies, TV series, video games, and more. Today interest is in movies (and details within, like actors and ratings).\n\nSHOW TABLES;\n\n\nDisplaying records 1 - 10\n\n\nTables_in_imdb\n\n\n\n\naka_name\n\n\naka_title\n\n\ncast_info\n\n\nchar_name\n\n\ncomp_cast_type\n\n\ncompany_name\n\n\ncompany_type\n\n\ncomplete_cast\n\n\ninfo_type\n\n\nkeyword"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#imdb---glance-through-tables",
    "href": "slides/2025-04-21-joins.html#imdb---glance-through-tables",
    "title": "SQL joins",
    "section": "IMDb - glance through tables",
    "text": "IMDb - glance through tables\n\nSELECT * FROM kind_type\nLIMIT 0, 10;\n\n\n7 records\n\n\nid\nkind\n\n\n\n\n1\nmovie\n\n\n2\ntv series\n\n\n3\ntv movie\n\n\n4\nvideo movie\n\n\n5\ntv mini series\n\n\n6\nvideo game\n\n\n7\nepisode"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#all-the-joins",
    "href": "slides/2025-04-21-joins.html#all-the-joins",
    "title": "SQL joins",
    "section": "All the JOINs",
    "text": "All the JOINs\n\nJOIN (aka INNER JOIN): include all of the rows that exist in both tables\nLEFT JOIN: include all of the rows in the first table.\n\nRIGHT JOIN: include all of the rows in the second table.\nFULL OUTER JOIN: include all rows in either table. (The functionality doesn’t exist in MySQL but can be created using joins and UNION.)\nCROSS JOIN: match each row of the first table with each row in the second table."
  },
  {
    "objectID": "slides/2025-04-21-joins.html#all-the-joins-1",
    "href": "slides/2025-04-21-joins.html#all-the-joins-1",
    "title": "SQL joins",
    "section": "All the JOINs",
    "text": "All the JOINs\nVenn diagrams of the different types of joins.\n\nVenn diagrams describing different JOINs, image credit: phoenixNAP https://phoenixnap.com/kb/mysql-join"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#all-the-joins-2",
    "href": "slides/2025-04-21-joins.html#all-the-joins-2",
    "title": "SQL joins",
    "section": "All the JOINs",
    "text": "All the JOINs\nMini data tables of the different types of JOIN. (In SQL the missing values will be labeled as NULL (not NA).)\n\nMini data tables describing different JOINs, image credit: Statistics Globe blog, https://statisticsglobe.com/r-dplyr-join-inner-left-right-full-semi-anti"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#all-the-joins-3",
    "href": "slides/2025-04-21-joins.html#all-the-joins-3",
    "title": "SQL joins",
    "section": "All the JOINs",
    "text": "All the JOINs\nEach JOIN clause needs four specific pieces of information:\n\nThe name of the first table you want to JOIN.\nThe type of JOIN being used.\nThe name of the second table you want to JOIN.\nThe condition(s) under which you want the records in the first table to match records in the second table."
  },
  {
    "objectID": "slides/2025-04-21-joins.html#a-toy-example",
    "href": "slides/2025-04-21-joins.html#a-toy-example",
    "title": "SQL joins",
    "section": "A toy example",
    "text": "A toy example\nRock bands from the 60s.\n\nband_members\n\n# A tibble: 3 × 2\n  name  band   \n  &lt;chr&gt; &lt;chr&gt;  \n1 Mick  Stones \n2 John  Beatles\n3 Paul  Beatles\n\nband_instruments\n\n# A tibble: 3 × 2\n  name  plays \n  &lt;chr&gt; &lt;chr&gt; \n1 John  guitar\n2 Paul  bass  \n3 Keith guitar\n\n\nThe function sqldf() in the sqldf R package allows for SQL commands on R objects."
  },
  {
    "objectID": "slides/2025-04-21-joins.html#rock-bands---inner-join",
    "href": "slides/2025-04-21-joins.html#rock-bands---inner-join",
    "title": "SQL joins",
    "section": "Rock bands - INNER JOIN",
    "text": "Rock bands - INNER JOIN\nAn inner join combines two datasets returning only the observations that exist in both of the original datasets.\n\nsqldf::sqldf(\"SELECT star.name,\n                     star.band,\n                     inst.plays\n              FROM band_members AS star\n              JOIN band_instruments AS inst ON star.name = inst.name\")\n\n  name    band  plays\n1 John Beatles guitar\n2 Paul Beatles   bass"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#rock-bands---full-join",
    "href": "slides/2025-04-21-joins.html#rock-bands---full-join",
    "title": "SQL joins",
    "section": "Rock bands - FULL JOIN",
    "text": "Rock bands - FULL JOIN\nA full join combines two datasets returning every observation that exists in either one of the original datasets.\n\nband_members |&gt;\n  full_join(band_instruments)\n\n# A tibble: 4 × 3\n  name  band    plays \n  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n1 Mick  Stones  &lt;NA&gt;  \n2 John  Beatles guitar\n3 Paul  Beatles bass  \n4 Keith &lt;NA&gt;    guitar\n\n\nThe full_join() function does not have an equivalent in MySQL. See later slides for using JOINs and UNIONs to produce a full join."
  },
  {
    "objectID": "slides/2025-04-21-joins.html#rock-bands---left-join",
    "href": "slides/2025-04-21-joins.html#rock-bands---left-join",
    "title": "SQL joins",
    "section": "Rock bands - LEFT JOIN",
    "text": "Rock bands - LEFT JOIN\nA left join combines two datasets returning every observation that exists in the left (or first) original dataset.\n\nsqldf::sqldf(\"SELECT star.name,\n                     star.band,\n                      inst.plays\n              FROM band_members AS star\n              LEFT JOIN band_instruments AS inst \n              ON star.name = inst.name\")\n\n  name    band  plays\n1 Mick  Stones   &lt;NA&gt;\n2 John Beatles guitar\n3 Paul Beatles   bass"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#rock-bands---right-join",
    "href": "slides/2025-04-21-joins.html#rock-bands---right-join",
    "title": "SQL joins",
    "section": "Rock bands - RIGHT JOIN",
    "text": "Rock bands - RIGHT JOIN\nA right join combines two datasets returning every observation that exists in the right (or second) original dataset.\n\nsqldf::sqldf(\"SELECT inst.name,\n                     star.band,\n                      inst.plays\n              FROM band_members AS star\n              RIGHT JOIN band_instruments AS inst \n              ON star.name = inst.name\")\n\n   name    band  plays\n1  John Beatles guitar\n2  Paul Beatles   bass\n3 Keith    &lt;NA&gt; guitar"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#rock-bands---cross-join",
    "href": "slides/2025-04-21-joins.html#rock-bands---cross-join",
    "title": "SQL joins",
    "section": "Rock bands - CROSS JOIN",
    "text": "Rock bands - CROSS JOIN\nA cross join combines every row from one table with every row from another table to produce the Cartesian product of the two tables.\n\nsqldf::sqldf(\"SELECT *\n              FROM band_members AS star\n              CROSS JOIN band_instruments AS inst\")\n\n  name    band  name  plays\n1 Mick  Stones  John guitar\n2 Mick  Stones  Paul   bass\n3 Mick  Stones Keith guitar\n4 John Beatles  John guitar\n5 John Beatles  Paul   bass\n6 John Beatles Keith guitar\n7 Paul Beatles  John guitar\n8 Paul Beatles  Paul   bass\n9 Paul Beatles Keith guitar"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#join-imdb-title-votes",
    "href": "slides/2025-04-21-joins.html#join-imdb-title-votes",
    "title": "SQL joins",
    "section": "JOIN IMDb title + votes",
    "text": "JOIN IMDb title + votes\nIn the imdb database, the title table includes information about the 4,626,322 titles in the database, including the id, title, kind_id (indicator for the kind of ID it is), and production_year. It does not, however, include the review of the title.\n\nSELECT * FROM title LIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ntitle\nimdb_index\nkind_id\nproduction_year\nimdb_id\nphonetic_code\nepisode_of_id\nseason_nr\nepisode_nr\nseries_years\nmd5sum\n\n\n\n\n78460\nAdults Recat to the Simpsons (30th Anniversary)\n\n7\n2017\n\nA3432\n78406\n\n\n\n2ae09eed7d576cc2c24774fed5b18168\n\n\n70273\n(2016-05-18)\n\n7\n2016\n\n\n68058\n\n\n\n511dfc14cfff7589d29a95abb30cd66a\n\n\n60105\n(2014-04-11)\n\n7\n2014\n\n\n59138\n\n\n\nc6cdce7e667e07713e431805c407feed\n\n\n32120\n(2008-05-01)\n\n7\n2008\n\n\n32060\n\n\n\n100df65742caf5afd092b2e0ead67d8e\n\n\n97554\nSchmÃ¶lders Traum\n\n7\n2001\n\nS2543\n97302\n10\n1\n\n46862a2f96f9fb2d59e8c9a11ecfdd28\n\n\n57966\n(#1.1)\n\n7\n2013\n\n\n57965\n1\n1\n\n409c37703766c4b24f8a86162fd9cf85\n\n\n76391\nAnniversary\n\n7\n1971\n\nA5162\n76385\n4\n9\n\n5e12ce73fac1d1dcf94136b6e9acd8f8\n\n\n11952\nAngus Black/Lester Barrie/DC Curry\n\n7\n2009\n\nA5214\n11937\n4\n7\n\n9c38b9e5601dc154444b73b518034aa1\n\n\n1554\nNew Orleans\n\n7\n2003\n\nN6452\n1508\n2\n11\n\n621bea735740a547e862e4a3226f35d2\n\n\n58442\nKiss Me Kate\n\n7\n2011\n\nK2523\n58436\n1\n10\n\n293e8c75c7f35a4035abf617962be5a9"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#join-imdb-title-votes-1",
    "href": "slides/2025-04-21-joins.html#join-imdb-title-votes-1",
    "title": "SQL joins",
    "section": "JOIN IMDb title + votes",
    "text": "JOIN IMDb title + votes\nThe movie_info_idx table does not contain much information about each particular film. It does, however, have an indicator for the movie ID (given by movie_id) as well as the number of votes (given by info where type_id = 100).\n\nSELECT * FROM movie_info_idx LIMIT 0, 6;\n\n\n6 records\n\n\nid\nmovie_id\ninfo_type_id\ninfo\nnote\n\n\n\n\n1\n1\n99\n31.2.1..2.\n\n\n\n2\n1\n100\n9\n\n\n\n3\n1\n101\n4.1\n\n\n\n4\n2\n99\n1000000102\n\n\n\n5\n2\n100\n61\n\n\n\n6\n2\n101\n6.4"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#join-imdb-title-votes-2",
    "href": "slides/2025-04-21-joins.html#join-imdb-title-votes-2",
    "title": "SQL joins",
    "section": "JOIN IMDb title + votes",
    "text": "JOIN IMDb title + votes\n\ncombine the titles with the number of votes so that each title with user votes is included (INNER JOIN)\n\n\nSELECT title.id,\n       title.title,\n       movie_info_idx.info\nFROM title\nJOIN movie_info_idx ON title.id = movie_info_idx.movie_id \nWHERE title.production_year = 2015 \n    AND title.kind_id = 1                  # movies only\n    AND movie_info_idx.info_type_id = 100  # info_type is votes\n    AND movie_info_idx.info &gt; 150000       # at least 150,000 votes\nORDER BY movie_info_idx.info DESC\nLIMIT 0, 20;\n\n\nDisplaying records 1 - 10\n\n\nid\ntitle\ninfo\n\n\n\n\n4260166\nStar Wars: Episode VII - The Force Awakens\n691691\n\n\n3915213\nMad Max: Fury Road\n666484\n\n\n4389619\nThe Martian\n583987\n\n\n3313672\nAvengers: Age of Ultron\n540606\n\n\n4414139\nThe Revenant\n526189\n\n\n3787790\nJurassic World\n471237\n\n\n3752999\nInside Out\n443051\n\n\n3292159\nAnt-Man\n390965\n\n\n4364483\nThe Hateful Eight\n363199\n\n\n4251736\nSpectre\n319875\n\n\n\n\n\nSome aspects of the query are worth pointing out:\n\nThe variables in the output are given in the SELECT clause. The id and title (both from the title table) and the info from the movie_info_idx which represents the number of IMDb votes.\nThe variables are preceded by the table from which they came. While not always necessary, it is good practice so as to avoid confusion.\nThe JOIN happens by linking the id variable in the title table with the movie_id variable in the movie_info_idx table.\nThe LIMIT wasn’t necessary (there are only 12 observations), but it’s good practice so that we don’t end up with unwieldy query results.\nThe WHERE clause happens before the JOIN action, despite being written after.\nIn the WHERE clause, we keep only movies, only 2015 production year, and only at least 150,000 votes."
  },
  {
    "objectID": "slides/2025-04-21-joins.html#join-imdb-title-actress",
    "href": "slides/2025-04-21-joins.html#join-imdb-title-actress",
    "title": "SQL joins",
    "section": "JOIN IMDb title + actress",
    "text": "JOIN IMDb title + actress\ncast_info contains the person_id and the movie_id\n\nSELECT * FROM cast_info LIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\nid\nperson_id\nmovie_id\nperson_role_id\nnote\nnr_order\nrole_id\n\n\n\n\n1\n1\n3432997\n1\n\n31\n1\n\n\n2\n2\n1901690\n2\n\n\n1\n\n\n3\n3\n4027567\n2\n\n25\n1\n\n\n4\n3\n4282876\n3\n\n22\n1\n\n\n5\n4\n3542672\n\n\n12\n1\n\n\n6\n5\n3331520\n4\n(as $hutter Boy)\n10\n1\n\n\n7\n5\n4027191\n2\n(as $hutter Boy)\n1\n1\n\n\n8\n5\n4195731\n5\n(uncredited)\n\n1\n\n\n9\n5\n4263956\n6\n(uncredited)\n\n1\n\n\n10\n5\n4267787\n7\n(uncredited)\n\n1\n\n\n\n\n\nperson_role_id is 1 if actor and 2 if actress"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#join-imdb-title-actress-1",
    "href": "slides/2025-04-21-joins.html#join-imdb-title-actress-1",
    "title": "SQL joins",
    "section": "JOIN IMDb title + actress",
    "text": "JOIN IMDb title + actress\naka_name contains person_id and name (of actor)\n\nSELECT * FROM aka_name LIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\nid\nperson_id\nname\nimdb_index\nname_pcode_cf\nname_pcode_nf\nsurname_pcode\nmd5sum\n\n\n\n\n1\n6188450\nSmith, Jessica Noel\n\nS5325\nJ2542\nS53\n25c9d464e3ff2957533546aa92b397ed\n\n\n2\n5125059\nPain, L. $ham\n\nP545\nL515\nP5\n569b1e885ccb51211c01753f0dad9b2c\n\n\n3\n5\nBoy, \\(hutter               |           |B36           |H361          |B             |35092b5604ce378fc48c8a6fc0038a49 |\n|4  |   4152053|Dollasign, Ty              |           |D4253         |T3425         |D425          |0f565a2d8027cfb8ed6c5f4bba719fcd |\n|5  |   4152053|Sign, Ty Dolla             |           |S2534         |T3425         |S25           |2eded1b021b96333b4b74e0fec959650 |\n|6  |         6|Moore, Brandon             |           |M6165         |B6535         |M6            |193a6f5adf4756320f622162d2475608 |\n|7  |         8|\\)torm, Country\n\nT6525\nC5363\nT65\n1654400b707d34323ea392b87060e6cc\n\n\n8\n19\n‘Hooper’, Simon P.J. Kelly\n\nH1625\nS5124\nH16\n3fd8885372c23f8c74e583da91d1fd05\n\n\n9\n19\nHooper\n\nH16\n\n\n24ddc68ab605ee95857ad45b65ffa2d8\n\n\n10\n19\nKelly, Simon P.J.\n\nK4251\nS5124\nK4\n33d976f22e276b73c61513bc5f6e72a6"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#join-imdb-title-actress-2",
    "href": "slides/2025-04-21-joins.html#join-imdb-title-actress-2",
    "title": "SQL joins",
    "section": "JOIN IMDb title + actress",
    "text": "JOIN IMDb title + actress\ntitle contains id and title (of the movie)\n\nSELECT * FROM title LIMIT 0, 10;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ntitle\nimdb_index\nkind_id\nproduction_year\nimdb_id\nphonetic_code\nepisode_of_id\nseason_nr\nepisode_nr\nseries_years\nmd5sum\n\n\n\n\n78460\nAdults Recat to the Simpsons (30th Anniversary)\n\n7\n2017\n\nA3432\n78406\n\n\n\n2ae09eed7d576cc2c24774fed5b18168\n\n\n70273\n(2016-05-18)\n\n7\n2016\n\n\n68058\n\n\n\n511dfc14cfff7589d29a95abb30cd66a\n\n\n60105\n(2014-04-11)\n\n7\n2014\n\n\n59138\n\n\n\nc6cdce7e667e07713e431805c407feed\n\n\n32120\n(2008-05-01)\n\n7\n2008\n\n\n32060\n\n\n\n100df65742caf5afd092b2e0ead67d8e\n\n\n97554\nSchmÃ¶lders Traum\n\n7\n2001\n\nS2543\n97302\n10\n1\n\n46862a2f96f9fb2d59e8c9a11ecfdd28\n\n\n57966\n(#1.1)\n\n7\n2013\n\n\n57965\n1\n1\n\n409c37703766c4b24f8a86162fd9cf85\n\n\n76391\nAnniversary\n\n7\n1971\n\nA5162\n76385\n4\n9\n\n5e12ce73fac1d1dcf94136b6e9acd8f8\n\n\n11952\nAngus Black/Lester Barrie/DC Curry\n\n7\n2009\n\nA5214\n11937\n4\n7\n\n9c38b9e5601dc154444b73b518034aa1\n\n\n1554\nNew Orleans\n\n7\n2003\n\nN6452\n1508\n2\n11\n\n621bea735740a547e862e4a3226f35d2\n\n\n58442\nKiss Me Kate\n\n7\n2011\n\nK2523\n58436\n1\n10\n\n293e8c75c7f35a4035abf617962be5a9"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#join-imdb-title-actress-3",
    "href": "slides/2025-04-21-joins.html#join-imdb-title-actress-3",
    "title": "SQL joins",
    "section": "JOIN IMDb title + actress",
    "text": "JOIN IMDb title + actress\nGoal: identify the actresses in those movies with the highest number of votes.\n\nSELECT DISTINCT t.title,\n       idx.info,\n       a.person_id,\n       n.name\nFROM title AS t\nJOIN movie_info_idx AS idx ON t.id = idx.movie_id \nJOIN cast_info AS a ON idx.movie_id = a.movie_id\nJOIN aka_name AS n ON a.person_id = n.person_id\nWHERE t.production_year = 2015 \n    AND t.kind_id = 1           # movies only\n    AND idx.info_type_id = 100  # info_type is votes\n    AND idx.info &gt; 150000       # at least 150,000 votes\n    AND a.role_id = 2           # actresses only\nORDER BY a.person_id\nLIMIT 0, 50;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\ntitle\ninfo\nperson_id\nname\n\n\n\n\nMission: Impossible - Rogue Nation\n266759\n2674172\nSofz\n\n\nMission: Impossible - Rogue Nation\n266759\n2674172\nSof\n\n\nFocus\n172680\n2678594\nLabouisse, Kate\n\n\nMad Max: Fury Road\n666484\n2681098\nMichelle, Debra\n\n\nThe Hunger Games: Mockingjay - Part 2\n214569\n2685496\nHarris, Ahnie\n\n\nThe Hunger Games: Mockingjay - Part 2\n214569\n2685496\nHarris, Jasmine\n\n\nCreed\n183904\n2686218\nKareema, Kiana A.\n\n\nAnt-Man\n390965\n2687271\nAkana, Anna Kay\n\n\nInside Out\n443051\n2689505\nAllen, Lori\n\n\nInside Out\n443051\n2689505\nDenniberg, Lori Alan\n\n\n\n\n\nConnecting the most popular movies of 2015 with the actresses in those movies requires a series of JOINs. Note that to make the code less onerous, the title table has been aliased by t, the movie_info_idx table has been aliased by idx, the cast_info table has been aliased by a, and the aka_name table has been aliased by n.\nThere is a lot of data cleaning to do as some of the person_id values are one to many!! That is, the person_id matches multiple names in the aka_name database."
  },
  {
    "objectID": "slides/2025-04-21-joins.html#other-joins",
    "href": "slides/2025-04-21-joins.html#other-joins",
    "title": "SQL joins",
    "section": "Other JOINs",
    "text": "Other JOINs\nLet’s look at RIGHT JOIN and LEFT JOIN using two new smaller tables.\n\nThe first has seven movies in it (from 2015 with at least 400,000 IMDb votes).\nThe second consists of almost 3 million actresses (person_role_id = 2). In order to find a subset of actresses, the person_id &gt; 3900000 was set arbitrarily (in order to have a smaller group with which to work).\n\nUsing subqueries, we can JOIN the two datasets using different JOIN techniques."
  },
  {
    "objectID": "slides/2025-04-21-joins.html#movies",
    "href": "slides/2025-04-21-joins.html#movies",
    "title": "SQL joins",
    "section": "movies:",
    "text": "movies:\n\nSELECT t.id,\n       t.title,\n       idx.info,\n       (SELECT COUNT(*)\n       FROM title AS t\n       JOIN movie_info_idx AS idx ON idx.movie_id = t.id\n       WHERE t.production_year = 2015  \n             AND t.kind_id = 1\n             AND idx.info_type_id = 100\n             AND idx.info &gt; 400000) AS row_count\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1             # movies only\n    AND idx.info_type_id = 100    # info_type is votes\n    AND idx.info &gt; 400000         # at least 400,000 votes\nORDER BY idx.info DESC;\n\n\n7 records\n\n\n\n\n\n\n\n\nid\ntitle\ninfo\nrow_count\n\n\n\n\n4260166\nStar Wars: Episode VII - The Force Awakens\n691691\n7\n\n\n3915213\nMad Max: Fury Road\n666484\n7\n\n\n4389619\nThe Martian\n583987\n7\n\n\n3313672\nAvengers: Age of Ultron\n540606\n7\n\n\n4414139\nThe Revenant\n526189\n7\n\n\n3787790\nJurassic World\n471237\n7\n\n\n3752999\nInside Out\n443051\n7"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#actresses",
    "href": "slides/2025-04-21-joins.html#actresses",
    "title": "SQL joins",
    "section": "actresses:",
    "text": "actresses:\n\n\nSELECT a.person_id,\n       a.movie_id,\n       n.name,\n       (SELECT COUNT(*)\n       FROM cast_info AS a\n       JOIN aka_name AS n ON a.person_id = n.person_id\n       WHERE a.person_role_id = 2  \n             AND a.person_id &gt; 390000) AS row_count\nFROM cast_info AS a\nJOIN aka_name AS n ON a.person_id = n.person_id\n       WHERE a.person_role_id = 2  \n             AND a.person_id &gt; 3900000\nLIMIT 0, 20;\n\n\nDisplaying records 1 - 10\n\n\nperson_id\nmovie_id\nname\nrow_count\n\n\n\n\n3900141\n759802\nSimons, Rita Joanne\n2904759\n\n\n3902258\n4365829\nSinger, Rabbi Tovia\n2904759\n\n\n3902699\n3109788\nSingh, Sabine Erika\n2904759\n\n\n3903035\n3215866\nVal\n2904759\n\n\n3904831\n2468067\nMasha\n2904759\n\n\n3904928\n3654347\nFei, Siu Yin\n2904759\n\n\n3904928\n3654347\nHsiao, Yen-fei\n2904759\n\n\n3904928\n3654347\nSiu, Yinfei\n2904759\n\n\n3904928\n3654347\nXiao, Yanfei\n2904759\n\n\n3904928\n3654347\nYin-Fai, Siu\n2904759"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#inner-join",
    "href": "slides/2025-04-21-joins.html#inner-join",
    "title": "SQL joins",
    "section": "Inner JOIN",
    "text": "Inner JOIN\nWith an inner JOIN, there are 32 rows corresponding to all the actresses in the seven 2015 films with the most votes. Because the JOIN is an intersection of the two tables, only the actresses with person_id above 3900000 are included.\n\nSELECT * FROM\n(SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes     \nINNER JOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nLIMIT 0, 300;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\nid\ntitle\nperson_id\nmovie_id\nname\n\n\n\n\n3313672\nAvengers: Age of Ultron\n3916648\n3313672\nSmulders, Jacoba Francisca Maria\n\n\n3752999\nInside Out\n4122876\n3752999\nKuzniar, Lennon Wynn\n\n\n3787790\nJurassic World\n3938423\n3787790\nNorvell, Ingrid\n\n\n3787790\nJurassic World\n3938423\n3787790\nNorvell, Ingrid\n\n\n3787790\nJurassic World\n3950111\n3787790\nSallaway, Seannon Jane\n\n\n3787790\nJurassic World\n4079047\n3787790\nWashington, Kelly Lynn\n\n\n3787790\nJurassic World\n4079047\n3787790\nWashington, Kelly Lynn\n\n\n3787790\nJurassic World\n4084626\n3787790\nWeeks, Jency\n\n\n3787790\nJurassic World\n4084626\n3787790\nJenc\n\n\n3787790\nJurassic World\n4084626\n3787790\nLittle J"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#right-join",
    "href": "slides/2025-04-21-joins.html#right-join",
    "title": "SQL joins",
    "section": "RIGHT JOIN",
    "text": "RIGHT JOIN\nWith a RIGHT JOIN, there are more than 300 rows (the LIMIT clause keeps us from knowing how many rows, but there are a LOT!) corresponding to all the actresses whose person_id above 3900000 are included. Those actresses who acted in one of the seven top 2015 films are also included in the full results table, but they don’t happen to be in the truncated output here.\n\nSELECT * FROM\n(SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes     \nRIGHT JOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nLIMIT 0, 300;\n\n\nDisplaying records 1 - 10\n\n\nid\ntitle\nperson_id\nmovie_id\nname\n\n\n\n\n\n\n3900001\n3355298\nSimonis, Heidi\n\n\n\n\n3900001\n3509490\nSimonis, Heidi\n\n\n\n\n3900001\n3739780\nSimonis, Heidi\n\n\n\n\n3900001\n3943329\nSimonis, Heidi\n\n\n\n\n3900001\n165963\nSimonis, Heidi\n\n\n\n\n3900001\n268249\nSimonis, Heidi\n\n\n\n\n3900001\n268370\nSimonis, Heidi\n\n\n\n\n3900001\n268406\nSimonis, Heidi\n\n\n\n\n3900001\n268475\nSimonis, Heidi\n\n\n\n\n3900001\n279082\nSimonis, Heidi"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#left-join",
    "href": "slides/2025-04-21-joins.html#left-join",
    "title": "SQL joins",
    "section": "LEFT JOIN",
    "text": "LEFT JOIN\nWith a LEFT JOIN, there are 33 rows corresponding to the actresses in the seven top 2015 movies. Only The Revenant did not have any actresses whose person_id is greater than 3900000.\n\nSELECT * FROM\n(SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes     \nLEFT JOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nLIMIT 0, 300;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\n\n\nid\ntitle\nperson_id\nmovie_id\nname\n\n\n\n\n3313672\nAvengers: Age of Ultron\n3916648\n3313672\nSmulders, Jacoba Francisca Maria\n\n\n3752999\nInside Out\n4122876\n3752999\nKuzniar, Lennon Wynn\n\n\n3787790\nJurassic World\n3938423\n3787790\nNorvell, Ingrid\n\n\n3787790\nJurassic World\n3938423\n3787790\nNorvell, Ingrid\n\n\n3787790\nJurassic World\n3950111\n3787790\nSallaway, Seannon Jane\n\n\n3787790\nJurassic World\n4079047\n3787790\nWashington, Kelly Lynn\n\n\n3787790\nJurassic World\n4079047\n3787790\nWashington, Kelly Lynn\n\n\n3787790\nJurassic World\n4084626\n3787790\nWeeks, Jency\n\n\n3787790\nJurassic World\n4084626\n3787790\nJenc\n\n\n3787790\nJurassic World\n4084626\n3787790\nLittle J"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#counting-repeat-actresses",
    "href": "slides/2025-04-21-joins.html#counting-repeat-actresses",
    "title": "SQL joins",
    "section": "Counting repeat actresses",
    "text": "Counting repeat actresses\nWe might, for example, want to know how many names / spellings of a name with a specific person_id (above 3900000) exist for each person_id in each of the top voted seven films of 2015.\n\nSELECT acts.person_id, \n       COUNT(*) AS num_repeat_names\nFROM (SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes\nJOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nGROUP BY acts.person_id;\n\n\nDisplaying records 1 - 10\n\n\nperson_id\nnum_repeat_names\n\n\n\n\n3916648\n1\n\n\n4122876\n1\n\n\n3938423\n2\n\n\n3950111\n1\n\n\n4079047\n2\n\n\n4084626\n3\n\n\n4099458\n1\n\n\n3958614\n1\n\n\n3990819\n2\n\n\n4081131\n2"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#counting-number-of-actresses-per-film",
    "href": "slides/2025-04-21-joins.html#counting-number-of-actresses-per-film",
    "title": "SQL joins",
    "section": "Counting number of actresses per film",
    "text": "Counting number of actresses per film\nWe might, for example, want to know how many actresses with a specific person_id (above 3900000) are in each of the top voted seven films of 2015.\n\nSELECT movs.id, \n       movs.title,\n       COUNT(*) AS num_actress\nFROM (SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info &gt; 400000) AS movs  # at least 400,000 votes\nJOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id &gt; 3900000) AS acts ON acts.movie_id = movs.id\nGROUP BY movs.id;\n\n\n6 records\n\n\nid\ntitle\nnum_actress\n\n\n\n\n3313672\nAvengers: Age of Ultron\n1\n\n\n3752999\nInside Out\n1\n\n\n3787790\nJurassic World\n9\n\n\n3915213\nMad Max: Fury Road\n5\n\n\n4260166\nStar Wars: Episode VII - The Force Awakens\n15\n\n\n4389619\nThe Martian\n1"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#unioning",
    "href": "slides/2025-04-21-joins.html#unioning",
    "title": "SQL joins",
    "section": "UNIONing",
    "text": "UNIONing\nIn SQL a UNION clause combines two different tables by their rows (whereas JOIN combines two tables by columns). Think about UNION similarly to the bind_rows() command in R.\n\nUNION binds rows while JOIN appends columns, image credit: Jane Williams https://blog.devart.com/mysql-union-tutorial-html.html"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#unions",
    "href": "slides/2025-04-21-joins.html#unions",
    "title": "SQL joins",
    "section": "UNIONs",
    "text": "UNIONs\nSilly example where the column names are ignored.\n\nSELECT \n    1 AS bar,\n    2 AS foo\n\nUNION\n\nSELECT \n    10 AS foo,\n    20 AS bar;\n\n\n2 records\n\n\nbar\nfoo\n\n\n\n\n1\n2\n\n\n10\n20"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#union",
    "href": "slides/2025-04-21-joins.html#union",
    "title": "SQL joins",
    "section": "UNION",
    "text": "UNION\nUNION is specifically designed to bind rows from two different SELECT queries where the variables have been selected in the same order.\nCombine the top voted movies from 2015 with the top voted movies from 2019.\nHowever, to account for time, we require the movies from 2015 to have more votes (400,000) than the movies from 2017 (200,000).\nThat is, the WHERE clause is different for the two subqueries."
  },
  {
    "objectID": "slides/2025-04-21-joins.html#union-1",
    "href": "slides/2025-04-21-joins.html#union-1",
    "title": "SQL joins",
    "section": "UNION",
    "text": "UNION\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 400000)\n\nUNION\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2017  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 200000)\nLIMIT 0, 100;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\ntitle\nproduction_year\nnum_votes\n\n\n\n\nAvengers: Age of Ultron\n2015\n540606\n\n\nInside Out\n2015\n443051\n\n\nJurassic World\n2015\n471237\n\n\nMad Max: Fury Road\n2015\n666484\n\n\nStar Wars: Episode VII - The Force Awakens\n2015\n691691\n\n\nThe Martian\n2015\n583987\n\n\nThe Revenant\n2015\n526189\n\n\nDunkirk\n2017\n229089\n\n\nGuardians of the Galaxy Vol. 2\n2017\n281845\n\n\nLogan\n2017\n397056"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#union-all",
    "href": "slides/2025-04-21-joins.html#union-all",
    "title": "SQL joins",
    "section": "UNION ALL",
    "text": "UNION ALL\nIf the goal is to include duplicates across two tables, use UNION ALL instead of UNION.\nLet’s say that the first table is all movies with production year after 2012 and number of votes greater than 500,000. The second table is movies with production year equal to 2015 and number of votes greater than 400,000.\nThe Martian would be in both tables."
  },
  {
    "objectID": "slides/2025-04-21-joins.html#union-all-1",
    "href": "slides/2025-04-21-joins.html#union-all-1",
    "title": "SQL joins",
    "section": "UNION ALL",
    "text": "UNION ALL\nWith just UNION\n\n(SELECT t.title,\n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year &gt; 2012  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 500000)\n\nUNION\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 400000)\nORDER BY production_year DESC, num_votes;\n\n\nDisplaying records 1 - 10\n\n\n\n\n\n\n\ntitle\nproduction_year\nnum_votes\n\n\n\n\nBatman v Superman: Dawn of Justice\n2016\n500037\n\n\nDeadpool\n2016\n673887\n\n\nInside Out\n2015\n443051\n\n\nJurassic World\n2015\n471237\n\n\nThe Revenant\n2015\n526189\n\n\nAvengers: Age of Ultron\n2015\n540606\n\n\nThe Martian\n2015\n583987\n\n\nMad Max: Fury Road\n2015\n666484\n\n\nStar Wars: Episode VII - The Force Awakens\n2015\n691691\n\n\nInterstellar\n2014\n1102826"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#union-all-2",
    "href": "slides/2025-04-21-joins.html#union-all-2",
    "title": "SQL joins",
    "section": "UNION ALL",
    "text": "UNION ALL\nWhen UNION ALL is applied, The Martian is listed twice in the results table.\n\n(SELECT t.title,\n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year &gt; 2012  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 500000)\n\nUNION ALL\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info &gt; 400000)\nORDER BY production_year DESC, num_votes;\n\n\nDisplaying records 1 - 10\n\n\ntitle\nproduction_year\nnum_votes\n\n\n\n\nBatman v Superman: Dawn of Justice\n2016\n500037\n\n\nDeadpool\n2016\n673887\n\n\nInside Out\n2015\n443051\n\n\nJurassic World\n2015\n471237\n\n\nThe Revenant\n2015\n526189\n\n\nThe Revenant\n2015\n526189\n\n\nAvengers: Age of Ultron\n2015\n540606\n\n\nAvengers: Age of Ultron\n2015\n540606\n\n\nThe Martian\n2015\n583987\n\n\nThe Martian\n2015\n583987"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#best-practice",
    "href": "slides/2025-04-21-joins.html#best-practice",
    "title": "SQL joins",
    "section": "Best practice",
    "text": "Best practice\nIt is always a good idea to terminate the SQL connection when you are done with it.\n\nDBI::dbDisconnect(con_imdb, shutdown = TRUE)"
  },
  {
    "objectID": "project5.html#logistics",
    "href": "project5.html#logistics",
    "title": "Project 5",
    "section": "Logistics",
    "text": "Logistics\n\nThe information on how to connect to the SQL database was sent to you via email. Please ask if you don’t have the email!\nRecall that the in-class slides on SQL statements provide many SQL queries that give a sense of the datasets.\nThe goal is to use SQL for 100% of the data wrangling. If there is some data wrangling that you need to do and can’t figure it out in SQL, please ask.\nAll wrangling (i.e., all SQL code) should be written in SQL chunks, not R chunks.\nIn almost every case, you should use the entire table (i.e., no reason to use LIMIT on your final analysis). Please confirm with me in advance if you do need to use LIMIT for some reason. The expectation is that your WHERE clause will filter the data to make it small enough to use in memory.\nYou are unlikely to use a JOIN, but you might want to use a UNION. UNION is similar to rbind() in R, so make sure that the columns of the two tables measure exactly the same thing.\nwork in your website .Rproj, do not start a new R Project.\nat a minimum, start by describing what you plan to do (3-4 sentences). end with a description of what you did (3-4 sentences). That is, use words to guide the reader through your analysis.\nplease include all your code used in the analysis (but feel free to use code folding2).\nmake sure that all graphs are well-labeled (including x and y axes, title of the graph, and accurate and succinct labels for color and fill).\ndo not include error or warning messages (see HW YAML for code).\ninclude a few sentences describing each of your plots or tables. That is, tell the reader what they see when they look at the plot. Your narrative description should be in the text part of the qmd file, not as a comment in an R chunk."
  },
  {
    "objectID": "project5.html#footnotes",
    "href": "project5.html#footnotes",
    "title": "Project 5",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAmy Shoemaker is PO ’14.↩︎\ncode folding allows the user can see the code if they want to: https://quarto.org/docs/output-formats/html-code.html#folding-code↩︎"
  },
  {
    "objectID": "slides/2025-05-05-fin.html#data-science-overview",
    "href": "slides/2025-05-05-fin.html#data-science-overview",
    "title": "Fin",
    "section": "Data Science Overview",
    "text": "Data Science Overview\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-05-05-fin.html#data-science-overview-1",
    "href": "slides/2025-05-05-fin.html#data-science-overview-1",
    "title": "Fin",
    "section": "Data Science Overview",
    "text": "Data Science Overview\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-05-05-fin.html#data-scientists",
    "href": "slides/2025-05-05-fin.html#data-scientists",
    "title": "Fin",
    "section": "Data Scientists",
    "text": "Data Scientists\nWho does data science?\nconnecting, uplifting, and recognizing voices – a database of statisticians and data scientists."
  },
  {
    "objectID": "slides/2025-05-05-fin.html#take-aways",
    "href": "slides/2025-05-05-fin.html#take-aways",
    "title": "Fin",
    "section": "Take-aways",
    "text": "Take-aways\n\n80-90% of data science work is data wrangling and visualization\nwrangling the data well is usually more important than modeling the data well\nthere are many choices along the way, there is no such thing as truth\nif you can’t reproduce the work, you should question whether to trust it\ncommunicating to your audience is likely the most important aspect of doing data science"
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#examples",
    "href": "slides/2025-04-30-shiny.html#examples",
    "title": "Shiny",
    "section": "Examples",
    "text": "Examples\nSee the following gallery of Shiny example from Posit: https://shiny.posit.co/r/gallery/"
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#a-simple-shiny-app",
    "href": "slides/2025-04-30-shiny.html#a-simple-shiny-app",
    "title": "Shiny",
    "section": "A simple Shiny App",
    "text": "A simple Shiny App\nPut the following into a Shiny App using File \\(\\rightarrow\\) New File \\(\\rightarrow\\) Shiny Web App ... as a file called app.R.\n\nlibrary(shiny)\n\nui &lt;- fluidPage(\n  \"Hello, world!\"\n)\n\nserver &lt;- function(input, output, session) {\n}\n\nshinyApp(ui, server)"
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#what-are-the-parts-of-a-shiny-app",
    "href": "slides/2025-04-30-shiny.html#what-are-the-parts-of-a-shiny-app",
    "title": "Shiny",
    "section": "What are the parts of a Shiny App?",
    "text": "What are the parts of a Shiny App?\nLooking closely at the code above, the app.R does four things:\n\nIt calls library(shiny) to load the shiny package.\nIt defines the user interface, the HTML webpage that humans interact with. In this case, it’s a page containing the words “Hello, world!”.\nIt specifies the behaviour of our app by defining a server function. It’s currently empty, so our app doesn’t do anything, but we’ll be back to revisit this shortly.\nIt executes shinyApp(ui, server) to construct and start a Shiny application from UI and server."
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#how-to-run-a-shiny-app",
    "href": "slides/2025-04-30-shiny.html#how-to-run-a-shiny-app",
    "title": "Shiny",
    "section": "How to run a Shiny App?",
    "text": "How to run a Shiny App?\n\n\n\nTo run Shiny\n\n\n\nClick the Run App button in the document toolbar.\n\n\n\n\n\n\n\n\n\n\n\nUse a keyboard shortcut: Cmd/Ctrl + Shift + Enter.\nIf you’re not using RStudio, you can (source()) the whole document, or call shiny::runApp() with the path to the directory containing app.R."
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#what-does-it-look-like",
    "href": "slides/2025-04-30-shiny.html#what-does-it-look-like",
    "title": "Shiny",
    "section": "What does it look like?",
    "text": "What does it look like?"
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#back-in-r",
    "href": "slides/2025-04-30-shiny.html#back-in-r",
    "title": "Shiny",
    "section": "Back in R…",
    "text": "Back in R…\nGo back and look at the console. You will see something like:\nListening on http://127.0.0.1:7521\nR is busy! It is running your Shiny App. You can’t do anything in R because the processes are engaged with the Shiny App."
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#pieces",
    "href": "slides/2025-04-30-shiny.html#pieces",
    "title": "Shiny",
    "section": "Pieces",
    "text": "Pieces\nShiny applications will be contained in one app.R file. The file contains two key components:\nui: code for the user interface. The user interface is the webpage that your user will interact with.\nserver: code for the computer part. What should the computer/server do with your inputs as the user changes them.\nThe last code at the bottom, shinyApp(ui = ui, server = server), will compile everything together to result in the interactive webpage.\nPress Run App at the top of RStudio and see what happens!"
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#pieces-1",
    "href": "slides/2025-04-30-shiny.html#pieces-1",
    "title": "Shiny",
    "section": "Pieces",
    "text": "Pieces\n\nlibrary(shiny)\n\nshinyApp(\n  ui = list(\n    # new (to you) widgets go here\n  ),\n  \n  server = function(input, output, session) {\n    # somewhat familiar (to you) code goes here\n  }\n)"
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#a-brief-widget-tour",
    "href": "slides/2025-04-30-shiny.html#a-brief-widget-tour",
    "title": "Shiny",
    "section": "A brief widget tour",
    "text": "A brief widget tour\nhttps://rundel.shinyapps.io/widgets/"
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#the-default-shinny-app",
    "href": "slides/2025-04-30-shiny.html#the-default-shinny-app",
    "title": "Shiny",
    "section": "The default Shinny App",
    "text": "The default Shinny App\n\n#\n# This is a Shiny web application. You can run the application by clicking\n# the 'Run App' button above.\n#\n# Find out more about building applications with Shiny here:\n#\n#    https://shiny.posit.co/\n#\n\nlibrary(shiny)\n\n# Define UI for application that draws a histogram\nui &lt;- fluidPage(\n\n    # Application title\n    titlePanel(\"Old Faithful Geyser Data\"),\n\n    # Sidebar with a slider input for number of bins \n    sidebarLayout(\n        sidebarPanel(\n            sliderInput(\"bins\",\n                        \"Number of bins:\",\n                        min = 1,\n                        max = 50,\n                        value = 30)\n        ),\n\n        # Show a plot of the generated distribution\n        mainPanel(\n           plotOutput(\"distPlot\")\n        )\n    )\n)\n\n# Define server logic required to draw a histogram\nserver &lt;- function(input, output) {\n\n    output$distPlot &lt;- renderPlot({\n        # generate bins based on input$bins from ui.R\n        x    &lt;- faithful[, 2]\n        bins &lt;- seq(min(x), max(x), length.out = input$bins + 1)\n\n        # draw the histogram with the specified number of bins\n        hist(x, breaks = bins, col = 'darkgray', border = 'white',\n             xlab = 'Waiting time to next eruption (in mins)',\n             main = 'Histogram of waiting times')\n    })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)"
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#running-old-faithful",
    "href": "slides/2025-04-30-shiny.html#running-old-faithful",
    "title": "Shiny",
    "section": "Running Old Faithful",
    "text": "Running Old Faithful\n\nRun in RStudio\nSee the app in action here: https://shiny.posit.co/r/gallery/start-simple/faithful/"
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#reactive",
    "href": "slides/2025-04-30-shiny.html#reactive",
    "title": "Shiny",
    "section": "reactive()",
    "text": "reactive()\nThe function reactive() is worth pointing out. It is used to create a reactive expression — an expression that is automatically recalculated when any of its inputs change.\nUse reactive() when\n\nYou want to perform calculations that depend on user input and automatically update when those inputs change.\nYou need to pass dynamically calculated values to other parts of the app (outputs, observers, etc.).\nYou need to create reactive data or state, such as subsets or transformations of input data.\n\nDo not use reactive() on the UI inputs because they are inherently reactive already!"
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#live-demo",
    "href": "slides/2025-04-30-shiny.html#live-demo",
    "title": "Shiny",
    "section": "Live demo",
    "text": "Live demo\nLet’s build a weather app! See sample files here: https://github.com/hardin47/ds002r-fds/tree/main/Shiny_weather"
  },
  {
    "objectID": "slides/2025-04-30-shiny.html#shiny-in-python",
    "href": "slides/2025-04-30-shiny.html#shiny-in-python",
    "title": "Shiny",
    "section": "Shiny in Python",
    "text": "Shiny in Python\nCheck it out!\nhttps://shiny.posit.co/py/"
  },
  {
    "objectID": "project5.html#task",
    "href": "project5.html#task",
    "title": "Project 5",
    "section": "Task",
    "text": "Task\nYour task is to use at least 3 data tables to say something interesting about traffic stops (or pedestrian stops). It will take a little bit of sleuthing to figure out what you want to look at. In the end, you will present your findings in a figure or table. Some potential areas to explore include:\n\nAre there differences over time?\nAre there differences across datasets?\nIs there anything interesting about pedestrian stops versus vehicular stops? (I’m not sure how many of the datasets have much information on pedestrian stops).\n\nYour analysis should have the following elements:\n\nqueries of at least three of the SQL tables\nat least 6 uses of SQL keywords other than SELECT, FROM, and LIMIT.\nat least 2 illustrative, well-labeled plots or tables\na description of what insights can be gained from your plots and tables\na reference / documentation of the data source (see below, make sure to include the citation!)1"
  },
  {
    "objectID": "slides/2025-04-21-joins.html#full-join-with-union",
    "href": "slides/2025-04-21-joins.html#full-join-with-union",
    "title": "SQL joins",
    "section": "FULL JOIN with UNION",
    "text": "FULL JOIN with UNION\n\nsqldf::sqldf(\"SELECT star.name,\n                     star.band,\n                     inst.plays\n              FROM band_members AS star\n              LEFT JOIN band_instruments AS inst \n              ON star.name = inst.name\n             \n             UNION\n             \n             SELECT star.name, \n                    star.band, \n                    inst.plays\n             FROM band_instruments AS inst\n             LEFT JOIN band_members AS star\n             ON inst.name = star.name\")\n\n  name    band  plays\n1 &lt;NA&gt;    &lt;NA&gt; guitar\n2 John Beatles guitar\n3 Mick  Stones   &lt;NA&gt;\n4 Paul Beatles   bass"
  },
  {
    "objectID": "slides/2025-04-14-db.html#sql-dialects",
    "href": "slides/2025-04-14-db.html#sql-dialects",
    "title": "Databases and dbplyr and SQL, oh my!",
    "section": "SQL dialects",
    "text": "SQL dialects\nYou may have heard of some of the following SQL dialects\n\nMySQL\nDuckDB\nPostgreSQL\nBigQuery\nSQLite\n\nThey are very similar, and you will be able to quickly pick up whichever dialect your institution uses. In our work, we will use MySQL."
  },
  {
    "objectID": "syllabus.html#ds002r-fall-2025",
    "href": "syllabus.html#ds002r-fall-2025",
    "title": "syllabus",
    "section": "",
    "text": "Jo Hardin\n2351 Estella\njo.hardin@pomona.edu\nClass: Mondays & Wednesdays, 11-12:15pm\nEstella 2141\nOffice Hours: (Estella 2351)\nMonday: 2:30-5:00pm\nTuesday: 9-11am\nThursday: 1:15-3pm\nMentor Sessions:\nSunday 4-6pm & Tuesday 6-8pm\nEstella 2141\nMentor: Evelyn Hao\n\n\n\n\n\nArtwork by @allison_horst."
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#pivot_wider-paralympic_1500",
    "href": "slides/2025-02-10-pivotjoin.html#pivot_wider-paralympic_1500",
    "title": "Pivoting and Joining",
    "section": "pivot_wider() paralympic_1500",
    "text": "pivot_wider() paralympic_1500\n\nparalympic_1500 |&gt;  \n  filter(division == \"Men\" & type %in% c(\"Olympic\", \"T13\")) |&gt; \n  select(year, type, time_min) |&gt; \n  gt::gt()\n\n\n\n\n\n\n\nyear\ntype\ntime_min\n\n\n\n\n1896\nOlympic\n4.553333\n\n\n1900\nOlympic\n4.103333\n\n\n1904\nOlympic\n4.090000\n\n\n1908\nOlympic\n4.056667\n\n\n1912\nOlympic\n3.946667\n\n\n1920\nOlympic\n4.030000\n\n\n1924\nOlympic\n3.893333\n\n\n1928\nOlympic\n3.886667\n\n\n1932\nOlympic\n3.853333\n\n\n1936\nOlympic\n3.796667\n\n\n1948\nOlympic\n3.830000\n\n\n1952\nOlympic\n3.753333\n\n\n1956\nOlympic\n3.686667\n\n\n1960\nOlympic\n3.593333\n\n\n1964\nOlympic\n3.635000\n\n\n1968\nOlympic\n3.581833\n\n\n1972\nOlympic\n3.605000\n\n\n1976\nOlympic\n3.652833\n\n\n1980\nOlympic\n3.640000\n\n\n1984\nOlympic\n3.542167\n\n\n1984\nT13\n4.241833\n\n\n1988\nOlympic\n3.599333\n\n\n1988\nT13\n4.185500\n\n\n1992\nOlympic\n3.668667\n\n\n1992\nT13\n4.037333\n\n\n1996\nOlympic\n3.596333\n\n\n1996\nT13\n3.958833\n\n\n2000\nOlympic\n3.534500\n\n\n2000\nT13\n3.949500\n\n\n2004\nOlympic\n3.569833\n\n\n2004\nT13\n3.851500\n\n\n2008\nOlympic\n3.551833\n\n\n2008\nT13\n4.101833\n\n\n2012\nOlympic\n3.568000\n\n\n2012\nT13\n3.805167\n\n\n2016\nOlympic\n3.833333\n\n\n2016\nT13\n3.804833\n\n\n2020\nOlympic\n3.472000\n\n\n2020\nT13\n3.900667\n\n\n\n\n\n\n\n\n\nparalympic_1500 |&gt;  \n  filter(division == \"Men\" & type %in% c(\"Olympic\", \"T13\")) |&gt; \n  select(year, type, time_min) |&gt;\n  pivot_wider(names_from = type, values_from = time_min) |&gt; \n  gt::gt()\n\n\n\n\n\n\n\nyear\nOlympic\nT13\n\n\n\n\n1896\n4.553333\nNA\n\n\n1900\n4.103333\nNA\n\n\n1904\n4.090000\nNA\n\n\n1908\n4.056667\nNA\n\n\n1912\n3.946667\nNA\n\n\n1920\n4.030000\nNA\n\n\n1924\n3.893333\nNA\n\n\n1928\n3.886667\nNA\n\n\n1932\n3.853333\nNA\n\n\n1936\n3.796667\nNA\n\n\n1948\n3.830000\nNA\n\n\n1952\n3.753333\nNA\n\n\n1956\n3.686667\nNA\n\n\n1960\n3.593333\nNA\n\n\n1964\n3.635000\nNA\n\n\n1968\n3.581833\nNA\n\n\n1972\n3.605000\nNA\n\n\n1976\n3.652833\nNA\n\n\n1980\n3.640000\nNA\n\n\n1984\n3.542167\n4.241833\n\n\n1988\n3.599333\n4.185500\n\n\n1992\n3.668667\n4.037333\n\n\n1996\n3.596333\n3.958833\n\n\n2000\n3.534500\n3.949500\n\n\n2004\n3.569833\n3.851500\n\n\n2008\n3.551833\n4.101833\n\n\n2012\n3.568000\n3.805167\n\n\n2016\n3.833333\n3.804833\n\n\n2020\n3.472000\n3.900667\n\n\n\n\n\n\n\n\nhttps://www.paralympic.org/news/remarkable-finish-1500m-rio-2016"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#pivot_wider-paralympic_1500-1",
    "href": "slides/2025-02-10-pivotjoin.html#pivot_wider-paralympic_1500-1",
    "title": "Pivoting and Joining",
    "section": "pivot_wider() paralympic_1500",
    "text": "pivot_wider() paralympic_1500\n\nparalympic_1500 |&gt;  \n  filter(division == \"Men\" & type %in% c(\"Olympic\", \"T13\")) |&gt; \n  select(year, type, time_min) |&gt;\n  pivot_wider(names_from = type, values_from = time_min) |&gt;\n  filter(!is.na(T13)) |&gt; \n  arrange(Olympic) |&gt; \n  gt::gt()\n\n\n\n\n\n\n\nyear\nOlympic\nT13\n\n\n\n\n2020\n3.472000\n3.900667\n\n\n2000\n3.534500\n3.949500\n\n\n1984\n3.542167\n4.241833\n\n\n2008\n3.551833\n4.101833\n\n\n2012\n3.568000\n3.805167\n\n\n2004\n3.569833\n3.851500\n\n\n1996\n3.596333\n3.958833\n\n\n1988\n3.599333\n4.185500\n\n\n1992\n3.668667\n4.037333\n\n\n2016\n3.833333\n3.804833"
  },
  {
    "objectID": "slides/2025-02-10-pivotjoin.html#pivot_wider-paralympic_1500-2",
    "href": "slides/2025-02-10-pivotjoin.html#pivot_wider-paralympic_1500-2",
    "title": "Pivoting and Joining",
    "section": "pivot_wider() paralympic_1500",
    "text": "pivot_wider() paralympic_1500\n\nparalympic_1500 |&gt;  \n  filter(division == \"Men\" & type %in% c(\"Olympic\", \"T13\")) |&gt; \n  select(year, type, time_min) |&gt;\n  pivot_wider(names_from = type, values_from = time_min) |&gt; \n  mutate(mintime = pmin(Olympic, T13, na.rm = TRUE)) |&gt; \n  arrange(mintime) |&gt; \n  gt::gt()\n\n\n\n\n\n\n\nyear\nOlympic\nT13\nmintime\n\n\n\n\n2020\n3.472000\n3.900667\n3.472000\n\n\n2000\n3.534500\n3.949500\n3.534500\n\n\n1984\n3.542167\n4.241833\n3.542167\n\n\n2008\n3.551833\n4.101833\n3.551833\n\n\n2012\n3.568000\n3.805167\n3.568000\n\n\n2004\n3.569833\n3.851500\n3.569833\n\n\n1968\n3.581833\nNA\n3.581833\n\n\n1960\n3.593333\nNA\n3.593333\n\n\n1996\n3.596333\n3.958833\n3.596333\n\n\n1988\n3.599333\n4.185500\n3.599333\n\n\n1972\n3.605000\nNA\n3.605000\n\n\n1964\n3.635000\nNA\n3.635000\n\n\n1980\n3.640000\nNA\n3.640000\n\n\n1976\n3.652833\nNA\n3.652833\n\n\n1992\n3.668667\n4.037333\n3.668667\n\n\n1956\n3.686667\nNA\n3.686667\n\n\n1952\n3.753333\nNA\n3.753333\n\n\n1936\n3.796667\nNA\n3.796667\n\n\n2016\n3.833333\n3.804833\n3.804833\n\n\n1948\n3.830000\nNA\n3.830000\n\n\n1932\n3.853333\nNA\n3.853333\n\n\n1928\n3.886667\nNA\n3.886667\n\n\n1924\n3.893333\nNA\n3.893333\n\n\n1912\n3.946667\nNA\n3.946667\n\n\n1920\n4.030000\nNA\n4.030000\n\n\n1908\n4.056667\nNA\n4.056667\n\n\n1904\n4.090000\nNA\n4.090000\n\n\n1900\n4.103333\nNA\n4.103333\n\n\n1896\n4.553333\nNA\n4.553333"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html",
    "href": "slides/2025-01-27-dataviz.html",
    "title": "Better Data Visualizations",
    "section": "",
    "text": "GitHub\nNSSD\ngrammar of graphics\n\n\n\n\n\n\n\nImportant\n\n\n\nBefore Wednesday, read: Tufte. 1997. Visual and Statistical Thinking: Displays of Evidence for Making Decisions. (Use Google to find it.)\n\n\n\n\n\n\nWhat was Hilary trying to answer in her data collection?\nName two of Hilary’s main hurdles in gathering accurate data.\nWhich is better: high touch (manual) or low touch (automatic) data collection? Why?\nWhat additional covariates are needed / desired? Any problems with them?\nHow much data does she need?\nAre there any ethical considerations to think about?\n\n\n\n\n\n\n\n\n\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-01-27-dataviz.html#footnotes",
    "href": "slides/2025-01-27-dataviz.html#footnotes",
    "title": "Better Data Visualizations",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nimage credit: Better Data Visualization by Schwabish↩︎"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#course-structure",
    "href": "slides/2025-08-25-intro.html#course-structure",
    "title": "Introduction to DS002R",
    "section": "Course structure",
    "text": "Course structure\n\nbi-weekly HW (to GitHub + Gradescope)\nbi-weekly quizzes\nmini-projects\nin-class activities / clickers\nethical considerations"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#additional-details",
    "href": "slides/2025-08-25-intro.html#additional-details",
    "title": "Introduction to DS002R",
    "section": "Additional details",
    "text": "Additional details\n\nCanvas has all the links\n\ncourse website – almost everything\nclass notes\nCanvas page – solutions and assignments\n\nno computers (tablets fine)\ngood communication\nTidyTuesday"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#syllabus",
    "href": "slides/2025-08-25-intro.html#syllabus",
    "title": "Introduction to DS002R",
    "section": "Syllabus",
    "text": "Syllabus\n\n\n\noffice hours\nmentor sessions\nanonymous feedback\ndates for assignments\n\n\n\nlinks to resources\nHW grading\nproject information\n\n\n\n\n\n\n\n\nImportant\n\n\nI need your GitHub user name - please email it to me."
  },
  {
    "objectID": "slides/2025-08-25-intro.html#participation",
    "href": "slides/2025-08-25-intro.html#participation",
    "title": "Introduction to DS002R",
    "section": "Participation",
    "text": "Participation\nFor full participation points, you’ll need to share at least one R-tip-of-the day.\n\nBeginning of class, I’ll ask if anyone has ideas\nYou share the tip\nI’ll post the tip online"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#v1.0---drew-conway",
    "href": "slides/2025-08-25-intro.html#v1.0---drew-conway",
    "title": "Introduction to DS002R",
    "section": "V1.0 - Drew Conway",
    "text": "V1.0 - Drew Conway\n\n2010: http://drewconway.com/zia/2013/3/26/the-data-science-venn-diagram"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#v2.0---steve-geringer",
    "href": "slides/2025-08-25-intro.html#v2.0---steve-geringer",
    "title": "Introduction to DS002R",
    "section": "V2.0 - Steve Geringer",
    "text": "V2.0 - Steve Geringer\n\n2014: http://www.anlytcs.com/2014/01/data-science-venn-diagram-v20.html"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#v3.0---writuparna-banerjee",
    "href": "slides/2025-08-25-intro.html#v3.0---writuparna-banerjee",
    "title": "Introduction to DS002R",
    "section": "V3.0 - Writuparna Banerjee",
    "text": "V3.0 - Writuparna Banerjee\n\n2020: https://medium.com/@writuparnabanerjee/the-difference-in-the-career-options-in-data-science-data-scientist-vs-data-engineer-vs-data-33209d0ac880"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#v4.0---joel-grus",
    "href": "slides/2025-08-25-intro.html#v4.0---joel-grus",
    "title": "Introduction to DS002R",
    "section": "V4.0 - Joel Grus",
    "text": "V4.0 - Joel Grus\n\n2013: https://posit.co/wp-content/themes/Posit/public/markdown-blogs/role-of-the-data-scientist/index.html?wtime=%7Bseek_to_second_number%7D"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#data-science-overview",
    "href": "slides/2025-08-25-intro.html#data-science-overview",
    "title": "Introduction to DS002R",
    "section": "Data Science Overview",
    "text": "Data Science Overview\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#data-science-in-ds-002r",
    "href": "slides/2025-08-25-intro.html#data-science-in-ds-002r",
    "title": "Introduction to DS002R",
    "section": "Data Science in DS 002R",
    "text": "Data Science in DS 002R\n\n\n\n\n\n\n\n\n\n\n\n\n\nDS workflow\nin DS002R\nbeyond DS002R\n\n\n\n\ndata acquisition\nweb scraping, relational databases (SQL)\nAPIs\n\n\ndata exploration\nwrangling, strings, regular expressions\nnatural language processing\n\n\ndata visualization\ngrammar of graphics\nanimations\n\n\ndata conclusions\niteration, permutation tests\npredictive modeling, machine learning, AI\n\n\ndata communication\nyes!\nyes!"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#data-science-in-the-wild",
    "href": "slides/2025-08-25-intro.html#data-science-in-the-wild",
    "title": "Introduction to DS002R",
    "section": "Data Science in the Wild",
    "text": "Data Science in the Wild\nData science extracts knowledge from within a particular domain of inquiry. Examples from Pomona!\n\nShannon Burns (Psychological Science and Neuroscience) uses data to understand brain processes of social communication.\nCharlotte Chang (Environmental Analysis & Biology) uses data to study and improve earth stewardship.\nAnthony (Tony) Clark (Computer Science) uses data to improve the safety and reliability of mobile robots.\nManisha Goel (Economics) uses data to understand how people’s identities shape the fortunes of businesses where they work.\nJun Lang (Asian Languages and Literatures) uses data to analyze (1) the intersection of language, gender, and society, and (2) second language acquisition and pedagogy.\nFrank Pericolosi (Physical Education) uses data to improve his team’s chances on the field.\nAmi Radunskaya (Mathematics) uses data to model tumor growth and treatment.\nYuqing Zhu (Neuroscience) uses data to figure out how a jumble of neurons becomes smart."
  },
  {
    "objectID": "slides/2025-08-25-intro.html#learning-goals",
    "href": "slides/2025-08-25-intro.html#learning-goals",
    "title": "Introduction to DS002R",
    "section": "Learning goals",
    "text": "Learning goals\nBy the end of the course, you will be able to…\n\n\ngain insight from data\ngain insight from data, reproducibly\ngain insight from data, reproducibly, using modern programming tools and techniques\ngain insight from data, reproducibly (with literate programming and version control), using modern programming tools and techniques\nethically gain insight from data, reproducibly (with literate programming and version control), using modern programming tools and techniques"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#activity",
    "href": "slides/2025-08-25-intro.html#activity",
    "title": "Introduction to DS002R",
    "section": "Activity",
    "text": "Activity\n\nWhat problem or task would you like to investigate using data?\nWhat would be hard about executing the project?\nWhat are the potential ethical frameworks to consider?\nHow would you define success?"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#reproducibility-checklist",
    "href": "slides/2025-08-25-intro.html#reproducibility-checklist",
    "title": "Introduction to DS002R",
    "section": "Reproducibility checklist",
    "text": "Reproducibility checklist\n\nWhat does it mean for a data analysis to be “reproducible”?\n\nShort-term goals:\n\nAre the tables and figures reproducible from the code and data?\nDoes the code actually do what you think it does?\nIn addition to what was done, is it clear why it was done?\n\nLong-term goals:\n\nCan the code be used for other data?\nCan you extend the code to do other things?"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#toolkit-for-reproducibility",
    "href": "slides/2025-08-25-intro.html#toolkit-for-reproducibility",
    "title": "Introduction to DS002R",
    "section": "Toolkit for reproducibility",
    "text": "Toolkit for reproducibility\n\nScriptability \\(\\rightarrow\\) R\nLiterate programming (code, narrative, output in one place) \\(\\rightarrow\\) Quarto\nVersion control \\(\\rightarrow\\) Git / GitHub"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#r-and-rstudio-1",
    "href": "slides/2025-08-25-intro.html#r-and-rstudio-1",
    "title": "Introduction to DS002R",
    "section": "R and RStudio",
    "text": "R and RStudio\n\n\n\n\n\n\n\n\nR is an open-source statistical programming language\nR is also an environment for statistical computing and graphics\nIt’s easily extensible with packages\n\n\n\n\nRStudio is a convenient interface for R called an IDE (integrated development environment), e.g. “I write R code in the RStudio IDE”\nRStudio is not a requirement for programming with R, but it’s very commonly used by R programmers and data scientists"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#r-vs.-rstudio",
    "href": "slides/2025-08-25-intro.html#r-vs.-rstudio",
    "title": "Introduction to DS002R",
    "section": "R vs. RStudio",
    "text": "R vs. RStudio\n\n\n\n\n\n\n\nSource: Modern Dive."
  },
  {
    "objectID": "slides/2025-08-25-intro.html#r-packages",
    "href": "slides/2025-08-25-intro.html#r-packages",
    "title": "Introduction to DS002R",
    "section": "R packages",
    "text": "R packages\n\nPackages: Fundamental units of reproducible R code, including reusable R functions, the documentation that describes how to use them, and sample data1\nAs of August 23, 2025, there are 22,553 R packages available on CRAN (the Comprehensive R Archive Network)2\nWe’re going to work with a small (but important) subset of these!\n\n\n\n1 Wickham and Bryan, R Packages.\n2 CRAN contributed packages."
  },
  {
    "objectID": "slides/2025-08-25-intro.html#tour-r-rstudio",
    "href": "slides/2025-08-25-intro.html#tour-r-rstudio",
    "title": "Introduction to DS002R",
    "section": "Tour: R + RStudio",
    "text": "Tour: R + RStudio"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#tour-recap-r-rstudio",
    "href": "slides/2025-08-25-intro.html#tour-recap-r-rstudio",
    "title": "Introduction to DS002R",
    "section": "Tour recap: R + RStudio",
    "text": "Tour recap: R + RStudio"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#a-short-list-for-now-of-r-essentials",
    "href": "slides/2025-08-25-intro.html#a-short-list-for-now-of-r-essentials",
    "title": "Introduction to DS002R",
    "section": "A short list (for now) of R essentials",
    "text": "A short list (for now) of R essentials\n\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses:\n\n\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n\n\n\nPackages are installed with the install.packages() function and loaded with the library function, once per session:\n\n\ninstall.packages(\"package_name\")\nlibrary(package_name)"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#r-essentials-continued",
    "href": "slides/2025-08-25-intro.html#r-essentials-continued",
    "title": "Introduction to DS002R",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\n\nColumns (variables) in data frames are accessed with $:\n\n\ndataframe$var_name\n\n\n\nObject documentation can be accessed with ?\n\n\n?mean"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#tidyverse",
    "href": "slides/2025-08-25-intro.html#tidyverse",
    "title": "Introduction to DS002R",
    "section": "tidyverse",
    "text": "tidyverse\n\n\n\n\ntidyverse.org\n\nThe tidyverse is an opinionated collection of R packages designed for data science\nAll packages share an underlying philosophy and a common grammar"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#quarto-1",
    "href": "slides/2025-08-25-intro.html#quarto-1",
    "title": "Introduction to DS002R",
    "section": "Quarto",
    "text": "Quarto\n\nFully reproducible reports – each time you Render, the analysis is run from the beginning\nCode goes in chunks\nNarrative goes outside of chunks"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#tour-quarto",
    "href": "slides/2025-08-25-intro.html#tour-quarto",
    "title": "Introduction to DS002R",
    "section": "Tour: Quarto",
    "text": "Tour: Quarto"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#tour-recap-quarto",
    "href": "slides/2025-08-25-intro.html#tour-recap-quarto",
    "title": "Introduction to DS002R",
    "section": "Tour recap: Quarto",
    "text": "Tour recap: Quarto"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#environments",
    "href": "slides/2025-08-25-intro.html#environments",
    "title": "Introduction to DS002R",
    "section": "Environments",
    "text": "Environments\n\n\n\n\n\n\nImportant\n\n\nThe environment of your Quarto document is separate from the Console!\n\n\n\nRemember this, and expect it to bite you a few times as you’re learning to work with Quarto!"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#environments-1",
    "href": "slides/2025-08-25-intro.html#environments-1",
    "title": "Introduction to DS002R",
    "section": "Environments",
    "text": "Environments\n\n\nFirst, run the following in the console:\n\nx &lt;- 2\nx * 3\n\n\n\nAll looks good, eh?\n\n\nThen, add the following in an R chunk in your Quarto document\n\nx * 3\n\n\n\nWhat happens? Why the error?"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#how-will-we-use-quarto",
    "href": "slides/2025-08-25-intro.html#how-will-we-use-quarto",
    "title": "Introduction to DS002R",
    "section": "How will we use Quarto?",
    "text": "How will we use Quarto?\n\nEvery assignment is an Quarto document.\nYou’ll always have a template Quarto document to start with.\nThe amount of scaffolding in the template will decrease over the semester."
  },
  {
    "objectID": "slides/2025-08-25-intro.html#git-and-github",
    "href": "slides/2025-08-25-intro.html#git-and-github",
    "title": "Introduction to DS002R",
    "section": "Git and GitHub",
    "text": "Git and GitHub\n\n\n\n\n\n\n\n\nGit is a version control system – like “Track Changes” features from Microsoft Word, on steroids\nIt’s not the only version control system, but it’s a very popular one\n\n\n\n\n\n\n\n\nGitHub is the home for your Git-based projects on the internet – like DropBox but much, much better\nWe will use GitHub as a platform for web hosting and collaboration (and as our course management system!)"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#versioning---done-badly",
    "href": "slides/2025-08-25-intro.html#versioning---done-badly",
    "title": "Introduction to DS002R",
    "section": "Versioning - done badly",
    "text": "Versioning - done badly"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#versioning---done-better",
    "href": "slides/2025-08-25-intro.html#versioning---done-better",
    "title": "Introduction to DS002R",
    "section": "Versioning - done better",
    "text": "Versioning - done better"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#versioning---done-even-better",
    "href": "slides/2025-08-25-intro.html#versioning---done-even-better",
    "title": "Introduction to DS002R",
    "section": "Versioning - done even better",
    "text": "Versioning - done even better\nwith human readable messages"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#how-will-we-use-git-and-github",
    "href": "slides/2025-08-25-intro.html#how-will-we-use-git-and-github",
    "title": "Introduction to DS002R",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#how-will-we-use-git-and-github-1",
    "href": "slides/2025-08-25-intro.html#how-will-we-use-git-and-github-1",
    "title": "Introduction to DS002R",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#how-will-we-use-git-and-github-2",
    "href": "slides/2025-08-25-intro.html#how-will-we-use-git-and-github-2",
    "title": "Introduction to DS002R",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#how-will-we-use-git-and-github-3",
    "href": "slides/2025-08-25-intro.html#how-will-we-use-git-and-github-3",
    "title": "Introduction to DS002R",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2025-08-25-intro.html#git-and-github-tips",
    "href": "slides/2025-08-25-intro.html#git-and-github-tips",
    "title": "Introduction to DS002R",
    "section": "Git and GitHub tips",
    "text": "Git and GitHub tips\n\n\nThere are millions of git commands – ok, that’s an exaggeration, but there are a lot of them – and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.\nWe will be doing Git things and interfacing with GitHub through RStudio, but if you Google for help you might come across methods for doing these things in the command line – skip that and move on to the next resource unless you feel comfortable trying it out.\nThere is a great resource for working with git and R: happygitwithr.com. Some of the content in there is beyond the scope of this course, but it’s a good place to look for help."
  },
  {
    "objectID": "slides/2025-08-25-intro.html#tour-git-github",
    "href": "slides/2025-08-25-intro.html#tour-git-github",
    "title": "Introduction to DS002R",
    "section": "Tour: Git + GitHub",
    "text": "Tour: Git + GitHub"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#nssd",
    "href": "slides/2025-09-03-dataviz.html#nssd",
    "title": "Better Data Visualizations",
    "section": "NSSD:",
    "text": "NSSD:\n\n\nWhat was Hilary trying to answer in her data collection?\nName two of Hilary’s main hurdles in gathering accurate data.\nWhich is better: high touch (manual) or low touch (automatic) data collection? Why?\nWhat additional covariates are needed / desired? Any problems with them?\nHow much data does she need?\nAre there any ethical considerations to think about?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#data-visualization",
    "href": "slides/2025-09-03-dataviz.html#data-visualization",
    "title": "Better Data Visualizations",
    "section": "Data Visualization",
    "text": "Data Visualization\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#grammar-of-graphics",
    "href": "slides/2025-09-03-dataviz.html#grammar-of-graphics",
    "title": "Better Data Visualizations",
    "section": "Grammar of graphics",
    "text": "Grammar of graphics\nYau (2013) gives us nine visual cues, and Wickham (2014) translates them into a language using ggplot2.\n\nVisual Cues: the aspects of the figure where we should focus.\nPosition (numerical) where in relation to other things?\nLength (numerical) how big (in one dimension)?\nAngle (numerical) how wide? parallel to something else?\nDirection (numerical) at what slope? In a time series, going up or down?\nShape (categorical) belonging to what group?\nArea (numerical) how big (in two dimensions)? Beware of improper scaling!\nVolume (numerical) how big (in three dimensions)? Beware of improper scaling!\nShade (either) to what extent? how severely?\nColor (either) to what extent? how severely? Beware of red/green color blindness.\nCoordinate System: rectangular, polar, geographic, etc.\nScale: numeric (linear? logarithmic?), categorical (ordered?), time\nContext: in comparison to what (think back to ideas from Tufte)"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#pieces-of-the-graph",
    "href": "slides/2025-09-03-dataviz.html#pieces-of-the-graph",
    "title": "Better Data Visualizations",
    "section": "Pieces of the Graph",
    "text": "Pieces of the Graph\n\n\nVisual Cues of Yau (2013):\nPosition (numerical)\nLength (numerical)\nAngle (numerical)\nDirection (numerical)\nShape (categorical)\nArea (numerical)\nVolume (numerical)\nShade (either)\nColor (either)"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#order-matters",
    "href": "slides/2025-09-03-dataviz.html#order-matters",
    "title": "Better Data Visualizations",
    "section": "Order Matters",
    "text": "Order Matters"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#cues-together",
    "href": "slides/2025-09-03-dataviz.html#cues-together",
    "title": "Better Data Visualizations",
    "section": "Cues Together",
    "text": "Cues Together"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#attributes",
    "href": "slides/2025-09-03-dataviz.html#attributes",
    "title": "Better Data Visualizations",
    "section": "Attributes",
    "text": "Attributes\nAttributes can focus your reader’s attention.1\n\n\n\n\n\n\n\n\n\nimage credit: Better Data Visualization by Schwabish"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#advice-for-plotting",
    "href": "slides/2025-09-03-dataviz.html#advice-for-plotting",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\n\n\n\nAvoid having other graph elements interfere with data\nUse visually prominent symbols\nAvoid over-plotting (One way to avoid over plotting: jitter the values)\nDifferent values of data may obscure each other\nInclude all or nearly all of the data\nFill data region"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#advice-for-plotting-1",
    "href": "slides/2025-09-03-dataviz.html#advice-for-plotting-1",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\n\n\n\nChart junk & stuff that adds no meaning, e.g. butterflies on top of barplots, background images\nExtra tick marks and grid lines\nUnnecessary text and arrows\nDecimal places beyond the measurement error or the level of difference"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#advice-for-plotting-2",
    "href": "slides/2025-09-03-dataviz.html#advice-for-plotting-2",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\n\n\n\nPut juxtaposed plots on same scale\nMake it easy to distinguish elements of superposed plots (e.g. color)\nEmphasizes the important difference\nComparison: volume, area, height (be careful, volume can seem bigger than you mean it to)"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#advice-for-plotting-3",
    "href": "slides/2025-09-03-dataviz.html#advice-for-plotting-3",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\n\n\n\nKeep scales on x and y axes the same for both plots to facilitate the comparison\nZoom in to focus on the region that contains the bulk of the data\nKeep the scale the same throughout the plot (i.e. don’t change it mid-axis)\nOrigin need not be on the scale\nChoose a scale that improves resolution\nAvoid jiggling the baseline"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#advice-for-plotting-4",
    "href": "slides/2025-09-03-dataviz.html#advice-for-plotting-4",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\n\n\n\nDescribe what you see in the caption\nAdd context with reference markers (lines and points) including text\nAdd legends and labels\nUse color and plotting symbols to add more information\nPlot the same thing more than once in different ways/scales\nReduce clutter"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#advice-for-plotting-5",
    "href": "slides/2025-09-03-dataviz.html#advice-for-plotting-5",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\nCaptions should\n\n\n\nBe comprehensive\nSelf-contained\nDescribe what has been graphed\nDraw attention to important features\nDescribe conclusions drawn from graph"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#advice-for-plotting-6",
    "href": "slides/2025-09-03-dataviz.html#advice-for-plotting-6",
    "title": "Better Data Visualizations",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\nCaptions should\nGood Plot Making Practice\n\n\n\nPut major conclusions in graphical form\nProvide reference information\nProof read for clarity and consistency\nGraphing is an iterative process\nMultiplicity is OK, i.e. two plots of the same variable may provide different messages\nMake plots data rich"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#preliminaries",
    "href": "slides/2025-09-03-dataviz.html#preliminaries",
    "title": "Better Data Visualizations",
    "section": "Preliminaries",
    "text": "Preliminaries\n\nMake the data stand out\nFacilitate comparison\nAdd information\n\n(Nolan & Perrrett, 2016)"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#preliminaries-1",
    "href": "slides/2025-09-03-dataviz.html#preliminaries-1",
    "title": "Better Data Visualizations",
    "section": "Preliminaries",
    "text": "Preliminaries\nTufte lists two main motivational steps to working with graphics as part of an argument.\n\n“An essential analytic task in making decisions based on evidence is to understand how things work.”\nMaking decisions based on evidence requires the appropriate display of that evidence.”"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#cholera---a-picture-tells-1000-words",
    "href": "slides/2025-09-03-dataviz.html#cholera---a-picture-tells-1000-words",
    "title": "Better Data Visualizations",
    "section": "Cholera - a picture tells 1000 words",
    "text": "Cholera - a picture tells 1000 words\n\nHow many aspects of this graph can you point out which are relevant to figuring out that cholera infection was coming from a single pump? Are there any distracting aspects?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#cholera---difficult-to-interpret",
    "href": "slides/2025-09-03-dataviz.html#cholera---difficult-to-interpret",
    "title": "Better Data Visualizations",
    "section": "Cholera - difficult to interpret",
    "text": "Cholera - difficult to interpret\n\nWhy would the outbreak already have begun to decline before the pump handle was removed?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#challenger---problematic",
    "href": "slides/2025-09-03-dataviz.html#challenger---problematic",
    "title": "Better Data Visualizations",
    "section": "Challenger - Problematic",
    "text": "Challenger - Problematic\n\nOne of the graphics which was particularly unconvincing in trying to explain that O-rings fail in the cold."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#challenger---better",
    "href": "slides/2025-09-03-dataviz.html#challenger---better",
    "title": "Better Data Visualizations",
    "section": "Challenger - Better????",
    "text": "Challenger - Better????\n\nA different graph of the Challenger information, now sorted by temperature"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#challenger---improved",
    "href": "slides/2025-09-03-dataviz.html#challenger---improved",
    "title": "Better Data Visualizations",
    "section": "Challenger - Improved",
    "text": "Challenger - Improved\n\nThe graphic the engineers should have led with in trying to persuade the administrators not to launch. It is evident that the number of O-ring failures is quite highly associated with the ambient temperature. Note the vital information on the x-axis associated with the large number of launches at warm temperatures that had zero O-ring failures.Note that the “improved” Challenger graphic was made by Tufte, not by the engineers working on the problem at the time."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#fonts-matter",
    "href": "slides/2025-09-03-dataviz.html#fonts-matter",
    "title": "Better Data Visualizations",
    "section": "Fonts matter",
    "text": "Fonts matter"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#advice-on-plotting-specific",
    "href": "slides/2025-09-03-dataviz.html#advice-on-plotting-specific",
    "title": "Better Data Visualizations",
    "section": "Advice on plotting, specific",
    "text": "Advice on plotting, specific\n\nAvoid having other graph elements interfere with data\nUse visually prominent symbols\nAvoid over-plotting (One way to avoid over plotting: jitter the values)\nDifferent values of data may obscure each other\nInclude all or nearly all of the data\nFill data region"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#advice-on-plotting-general",
    "href": "slides/2025-09-03-dataviz.html#advice-on-plotting-general",
    "title": "Better Data Visualizations",
    "section": "Advice on plotting, general",
    "text": "Advice on plotting, general\n\nEliminate superfluous material\nFacilitate comparisons\nChoose the best scale\nMake the plot data / information rich\nUse good captions, alt text, conclusions"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#simplify",
    "href": "slides/2025-09-03-dataviz.html#simplify",
    "title": "Better Data Visualizations",
    "section": "Simplify",
    "text": "Simplify\n\nimage credit: https://www.darkhorseanalytics.com/portfolio-data-looks-better-naked"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#simplified",
    "href": "slides/2025-09-03-dataviz.html#simplified",
    "title": "Better Data Visualizations",
    "section": "Simplified",
    "text": "Simplified\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimage credit: https://www.darkhorseanalytics.com/portfolio-data-looks-better-naked"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#nyt-9721",
    "href": "slides/2025-09-03-dataviz.html#nyt-9721",
    "title": "Better Data Visualizations",
    "section": "NYT 9/7/21",
    "text": "NYT 9/7/21\n\nData VizWhat they did well\n\n\n\n\n\n\n\nOne in 5,000, NYT, D. Leonhardt 9/7/21; image credit: https://www.nytimes.com/2021/09/07/briefing/risk-breakthrough-infections-delta.html\n\n\n\n\n\n\n\nlighter grid lines\nno extra information\ngood caption\nregression line to give context to the trend\ny axes labels horizontal, not vertical\na few states (and the US) are highlighted to draw the reader’s eye"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#worth-a-mention",
    "href": "slides/2025-09-03-dataviz.html#worth-a-mention",
    "title": "Better Data Visualizations",
    "section": "Worth a Mention",
    "text": "Worth a Mention\n\n\nW.E.B. Du Bois (1868-1963)\n\nsociologist\ndata scientist\n\n\n\n\n\n\n\nimage credit: wikipedia\n\n\n\n\n\nIn 1900 Du Bois contributed approximately 60 data visualizations to an exhibit at the Exposition Universelle in Paris, an exhibit designed to illustrate the progress made by African Americans since the end of slavery (only 37 years prior, in 1863)."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#beautiful-informative-graphics",
    "href": "slides/2025-09-03-dataviz.html#beautiful-informative-graphics",
    "title": "Better Data Visualizations",
    "section": "Beautiful & Informative Graphics",
    "text": "Beautiful & Informative Graphics\nhttps://drawingmatter.org/w-e-b-du-bois-visionary-infographics/"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#getting-help",
    "href": "slides/2025-09-03-dataviz.html#getting-help",
    "title": "Better Data Visualizations",
    "section": "Getting help",
    "text": "Getting help\n\nOne of the best ways to get started with ggplot is to Google what you want to do with the word ggplot. Then look through the images that come up. More often than not, the associated code is there. There are also ggplot galleries of images, one of them is here: https://plot.ly/ggplot2/\nLook at the end of this presentation and the syllabus. More help options there."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#what-are-the-visual-cues-on-this-plot",
    "href": "slides/2025-09-03-dataviz.html#what-are-the-visual-cues-on-this-plot",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#what-are-the-visual-cues-on-this-plot-1",
    "href": "slides/2025-09-03-dataviz.html#what-are-the-visual-cues-on-this-plot-1",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#what-are-the-visual-cues-on-this-plot-2",
    "href": "slides/2025-09-03-dataviz.html#what-are-the-visual-cues-on-this-plot-2",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#the-grammar-of-graphics-ggplot",
    "href": "slides/2025-09-03-dataviz.html#the-grammar-of-graphics-ggplot",
    "title": "Better Data Visualizations",
    "section": "The grammar of graphics ggplot",
    "text": "The grammar of graphics ggplot\ngeom: the geometric “shape” used to display data\n\nbar, point, line, ribbon, text, etc.\n\naesthetic: an attribute controlling how geom is displayed with respect to variables\n\nx position, y position, color, fill, shape, size, etc.\n\n\nguide: helps user convert visual data back into raw data (legends, axes)\nstat: a transformation applied to data before geom gets it\n\nexample: histograms work on binned data"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#set-up",
    "href": "slides/2025-09-03-dataviz.html#set-up",
    "title": "Better Data Visualizations",
    "section": "Set up",
    "text": "Set up\n\nlibrary(mosaic)\ndata(Births2015)\n\n\nhead(Births2015)\n\n\n\n\n\n\n\n\n\ndate\nbirths\nwday\nyear\nmonth\nday_of_year\nday_of_month\nday_of_week\n\n\n\n\n2015-01-01\n8068\nThu\n2015\n1\n1\n1\n5\n\n\n2015-01-02\n10850\nFri\n2015\n1\n2\n2\n6\n\n\n2015-01-03\n8328\nSat\n2015\n1\n3\n3\n7\n\n\n2015-01-04\n7065\nSun\n2015\n1\n4\n4\n1\n\n\n2015-01-05\n11892\nMon\n2015\n1\n5\n5\n2\n\n\n2015-01-06\n12425\nTue\n2015\n1\n6\n6\n3\n\n\n\n\n\n\n\nObtained from the National Center for Health Statistics, National Vital Statistics System, Natality, 2015 data."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nTwo Questions:\n\nWhat do we want R to do? (What is the goal?)\nWhat does R need to know?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-1",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-1",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nGoal: scatterplot = a plot with points\nWhat does R need to know?\n\ndata source: Births2015\naesthetics:\n\ndate -&gt; x\nbirths -&gt; y\n\npoints"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-2",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-2",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births)) + \n  geom_point() +\n  labs(title = \"US Births in 2015\")\n\nggplot() +\n  geom_point(data = Births2015, \n             aes(x = date, y = births)) +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers",
    "href": "slides/2025-09-03-dataviz.html#layers",
    "title": "Better Data Visualizations",
    "section": "Layers",
    "text": "Layers\nLayer 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births))"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers-1",
    "href": "slides/2025-09-03-dataviz.html#layers-1",
    "title": "Better Data Visualizations",
    "section": "Layers",
    "text": "Layers\nLayer 2\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births)) + \n  geom_point()"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers-2",
    "href": "slides/2025-09-03-dataviz.html#layers-2",
    "title": "Better Data Visualizations",
    "section": "Layers",
    "text": "Layers\nLayer 3\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births)) + \n  geom_point() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-3",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-3",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nWhat has changed?\n\nnew aesthetic: mapping color to day of week"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-4",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-4",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015,\n       aes(x = date,\n           y = births, \n           color = wday)) +\n  geom_point() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-5",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-5",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-6",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-6",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nlines instead of dots!\n\nggplot(data = Births2015,\n         aes(x = date, \n             y = births,\n             color = wday)) +\n  geom_line() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-7",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-7",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-8",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-8",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nNow there are two layers: one with points and one with lines\n\nggplot(data = Births2015,\n       aes(x = date,\n           y = births,\n           color = wday)) + \n  geom_point() +  \n  geom_line() +\n  labs(title = \"US Births in 2015\")\n\n\nThe layers are placed one on top of the other: the points are below and the lines are above.\ndata and aes specified in ggplot() affect all geoms"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#what-does-this-code-do",
    "href": "slides/2025-09-03-dataviz.html#what-does-this-code-do",
    "title": "Better Data Visualizations",
    "section": "What does this code do?",
    "text": "What does this code do?\n\nggplot(data = Births2015,\n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#what-does-this-code-do-1",
    "href": "slides/2025-09-03-dataviz.html#what-does-this-code-do-1",
    "title": "Better Data Visualizations",
    "section": "What does this code do?",
    "text": "What does this code do?\n\nggplot(data = Births2015,\n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point()  +\n  labs(title = \"US Births in 2015\")\n\n\nThis is mapping the color aesthetic to a new variable with only one value (“navy”).\nSo all the dots get set to the same color, but it’s not navy."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#setting-vs.-mapping",
    "href": "slides/2025-09-03-dataviz.html#setting-vs.-mapping",
    "title": "Better Data Visualizations",
    "section": "Setting vs. Mapping",
    "text": "Setting vs. Mapping\nIf we want to set the color to be navy for all of the dots, we do it outside the aes() designation:\n\nggplot(data = Births2015,\n       aes(x = date, y = births)) +   # map variables \n  geom_point(color = \"navy\")    +   # set attributes\n  labs(title = \"US Births in 2015\")\n\n\n\nNote that color = \"navy\" is now outside of the aesthetics list. That’s how ggplot2 distinguishes between mapping and setting."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-9",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-9",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-10",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-10",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015,\n       aes(x = date,\n           y = births)) + \n  geom_line(aes(color = wday)) +      \n  geom_point(color = \"navy\")  +         \n  labs(title = \"US Births in 2015\")\n\n\nggplot() establishes the default data and aesthetics for the geoms, but each geom may change these defaults.\ngood practice: put into ggplot() the things that affect all (or most) of the layers; rest in geom_XXXX()"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#setting-vs.-mapping-again",
    "href": "slides/2025-09-03-dataviz.html#setting-vs.-mapping-again",
    "title": "Better Data Visualizations",
    "section": "Setting vs. Mapping (again)",
    "text": "Setting vs. Mapping (again)\nInformation gets passed to the plot via:\n\nmap the variable information inside the aes (aesthetic) command\nset the non-variable information outside the aes (aesthetic) command"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#other-geoms",
    "href": "slides/2025-09-03-dataviz.html#other-geoms",
    "title": "Better Data Visualizations",
    "section": "Other geoms",
    "text": "Other geoms\n\napropos(\"^geom_\")\n\n [1] \"geom_abline\"                  \"geom_area\"                   \n [3] \"geom_ash\"                     \"geom_bar\"                    \n [5] \"geom_bin_2d\"                  \"geom_bin2d\"                  \n [7] \"geom_blank\"                   \"geom_boxplot\"                \n [9] \"geom_bracket\"                 \"geom_col\"                    \n[11] \"geom_contour\"                 \"geom_contour_filled\"         \n[13] \"geom_count\"                   \"geom_crossbar\"               \n[15] \"geom_curve\"                   \"geom_density\"                \n[17] \"geom_density_2d\"              \"geom_density_2d_filled\"      \n[19] \"geom_density_line\"            \"geom_density_ridges\"         \n[21] \"geom_density_ridges_gradient\" \"geom_density_ridges2\"        \n[23] \"geom_density2d\"               \"geom_density2d_filled\"       \n[25] \"geom_dotplot\"                 \"geom_errorbar\"               \n[27] \"geom_errorbarh\"               \"geom_exec\"                   \n[29] \"geom_freqpoly\"                \"geom_function\"               \n[31] \"geom_hex\"                     \"geom_histogram\"              \n[33] \"geom_hline\"                   \"geom_jitter\"                 \n[35] \"geom_label\"                   \"geom_label_repel\"            \n[37] \"geom_line\"                    \"geom_linerange\"              \n[39] \"geom_lm\"                      \"geom_map\"                    \n[41] \"geom_mosaic\"                  \"geom_mosaic_jitter\"          \n[43] \"geom_mosaic_text\"             \"geom_path\"                   \n[45] \"geom_pictogram\"               \"geom_point\"                  \n[47] \"geom_pointrange\"              \"geom_polygon\"                \n[49] \"geom_pwc\"                     \"geom_qq\"                     \n[51] \"geom_qq_line\"                 \"geom_quantile\"               \n[53] \"geom_rangeframe\"              \"geom_raster\"                 \n[55] \"geom_rect\"                    \"geom_ribbon\"                 \n[57] \"geom_ridgeline\"               \"geom_ridgeline_gradient\"     \n[59] \"geom_rug\"                     \"geom_segment\"                \n[61] \"geom_sf\"                      \"geom_sf_label\"               \n[63] \"geom_sf_text\"                 \"geom_signif\"                 \n[65] \"geom_smooth\"                  \"geom_spline\"                 \n[67] \"geom_spoke\"                   \"geom_step\"                   \n[69] \"geom_stripped_cols\"           \"geom_stripped_rows\"          \n[71] \"geom_text\"                    \"geom_text_repel\"             \n[73] \"geom_tile\"                    \"geom_tufteboxplot\"           \n[75] \"geom_violin\"                  \"geom_vline\"                  \n[77] \"geom_vridgeline\"              \"geom_waffle\""
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#other-geoms-1",
    "href": "slides/2025-09-03-dataviz.html#other-geoms-1",
    "title": "Better Data Visualizations",
    "section": "Other geoms",
    "text": "Other geoms\nhelp pages will tell you their aesthetics, default stats, etc.\n\n?geom_area             # for example"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#lets-try-geom_area",
    "href": "slides/2025-09-03-dataviz.html#lets-try-geom_area",
    "title": "Better Data Visualizations",
    "section": "Let’s try geom_area",
    "text": "Let’s try geom_area\n\n\n\nggplot(data = Births2015,\n       aes(x = date,\n           y = births, \n           fill = wday)) + \n  geom_area() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#lets-try-geom_area-1",
    "href": "slides/2025-09-03-dataviz.html#lets-try-geom_area-1",
    "title": "Better Data Visualizations",
    "section": "Let’s try geom_area",
    "text": "Let’s try geom_area\n\n\n\nggplot(data = Births2015,\n       aes(x = date, y = births, fill = wday)) + \n  geom_area() +\n  labs(title = \"US Births in 2015\")\n\n\n\n\n\n\n\n\n\n… not a good plot\n\noverplotting is hiding much of the data\nextending y-axis to 0 may or may not be desirable."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#side-note-what-makes-a-plot-good",
    "href": "slides/2025-09-03-dataviz.html#side-note-what-makes-a-plot-good",
    "title": "Better Data Visualizations",
    "section": "Side note: what makes a plot good?",
    "text": "Side note: what makes a plot good?\nMost (all?) graphics are intended to help us make comparisons\n\nHow does something change over time?\nDo my treatments matter? How much?\nDo treatment and control respond the same way?\n\n\n\n\n\n\n\nKey plot metric\n\n\nDoes my plot make the comparisons I am interested in:\n\neasily, and\naccurately?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#time-for-some-different-data",
    "href": "slides/2025-09-03-dataviz.html#time-for-some-different-data",
    "title": "Better Data Visualizations",
    "section": "Time for some different data",
    "text": "Time for some different data\nHELPrct: Health Evaluation and Linkage to Primary care randomized clinical trial. Subjects admitted for treatment for addiction to one of three substances.\n\nhead(HELPrct)\n\n\n\n\n\n\n\n\n\nage\nanysubstatus\nanysub\ncesd\nd1\ndaysanysub\ndayslink\ndrugrisk\ne2b\nfemale\nsex\ng1b\nhomeless\ni1\ni2\nid\nindtot\nlinkstatus\nlink\nmcs\npcs\npss_fr\nracegrp\nsatreat\nsexrisk\nsubstance\ntreat\navg_drinks\nmax_drinks\nhospitalizations\n\n\n\n\n37\n1\nyes\n49\n3\n177\n225\n0\nNA\n0\nmale\nyes\nhoused\n13\n26\n1\n39\n1\nyes\n25.11\n58.4\n0\nblack\nno\n4\ncocaine\nyes\n13\n26\n3\n\n\n37\n1\nyes\n30\n22\n2\nNA\n0\nNA\n0\nmale\nyes\nhomeless\n56\n62\n2\n43\nNA\nNA\n26.67\n36.0\n1\nwhite\nno\n7\nalcohol\nyes\n56\n62\n22\n\n\n26\n1\nyes\n39\n0\n3\n365\n20\nNA\n0\nmale\nno\nhoused\n0\n0\n3\n41\n0\nno\n6.76\n74.8\n13\nblack\nno\n2\nheroin\nno\n0\n0\n0\n\n\n39\n1\nyes\n15\n2\n189\n343\n0\n1\n1\nfemale\nno\nhoused\n5\n5\n4\n28\n0\nno\n43.97\n61.9\n11\nwhite\nyes\n4\nheroin\nno\n5\n5\n2\n\n\n32\n1\nyes\n39\n12\n2\n57\n0\n1\n0\nmale\nno\nhomeless\n10\n13\n5\n38\n1\nyes\n21.68\n37.3\n10\nblack\nno\n6\ncocaine\nno\n10\n13\n12\n\n\n47\n1\nyes\n6\n1\n31\n365\n0\nNA\n1\nfemale\nno\nhoused\n4\n4\n6\n29\n0\nno\n55.51\n46.5\n5\nblack\nno\n5\ncocaine\nyes\n4\n4\n1"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#who-are-the-people-in-the-study",
    "href": "slides/2025-09-03-dataviz.html#who-are-the-people-in-the-study",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = substance)) + \n  geom_bar() +\n  labs(title = \"HELP trial\")\n\n\nHmm. What’s up with y?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#who-are-the-people-in-the-study-1",
    "href": "slides/2025-09-03-dataviz.html#who-are-the-people-in-the-study-1",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = substance)) + \n  geom_bar() +\n  labs(title = \"HELP trial\")\n\n\nHmm. What’s up with y?\n\nstat_bin() is being applied to the data before the geom_bar() gets to do its thing. Binning creates the y values."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#who-are-the-people-in-the-study-2",
    "href": "slides/2025-09-03-dataviz.html#who-are-the-people-in-the-study-2",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = substance,\n           fill = children)) + \n  geom_bar() +\n  labs(title = \"HELP trial\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-old-are-people-in-the-help-study",
    "href": "slides/2025-09-03-dataviz.html#how-old-are-people-in-the-help-study",
    "title": "Better Data Visualizations",
    "section": "How old are people in the HELP study?",
    "text": "How old are people in the HELP study?\n\n\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_histogram() +\n  labs(title = \"HELP trial\")\n\nNotice the messages\n\nstat_bin: Histograms are not mapping the raw data but binned data.\nstat_bin() performs the data transformation.\nbinwidth: a default binwidth has been selected, but we should really choose our own."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#setting-the-binwidth-manually",
    "href": "slides/2025-09-03-dataviz.html#setting-the-binwidth-manually",
    "title": "Better Data Visualizations",
    "section": "Setting the binwidth manually",
    "text": "Setting the binwidth manually\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_histogram(binwidth = 2) +\n  labs(title = \"HELP trial\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-old-are-people-in-the-help-study-other-geoms",
    "href": "slides/2025-09-03-dataviz.html#how-old-are-people-in-the-help-study-other-geoms",
    "title": "Better Data Visualizations",
    "section": "How old are people in the HELP study? – Other geoms",
    "text": "How old are people in the HELP study? – Other geoms\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_freqpoly(binwidth = 2) +\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_density() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#selecting-stat-and-geom-manually",
    "href": "slides/2025-09-03-dataviz.html#selecting-stat-and-geom-manually",
    "title": "Better Data Visualizations",
    "section": "Selecting stat and geom manually",
    "text": "Selecting stat and geom manually\nEvery geom comes with a default stat\n\nfor simple cases, the stat is stat_identity() which does nothing\nwe can mix and match geoms and stats however we like\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_line(stat = \"density\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#selecting-stat-and-geom-manually-1",
    "href": "slides/2025-09-03-dataviz.html#selecting-stat-and-geom-manually-1",
    "title": "Better Data Visualizations",
    "section": "Selecting stat and geom manually",
    "text": "Selecting stat and geom manually\nEvery stat comes with a default geom, every geom with a default stat\n\nwe can specify stats instead of geom, if we prefer\nwe can mix and match geoms and stats however we like\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  stat_density(geom = \"line\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#more-combinations",
    "href": "slides/2025-09-03-dataviz.html#more-combinations",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_point(stat = \"bin\", binwidth = 3) + \n  geom_line(stat = \"bin\", binwidth = 3)  +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#more-combinations-1",
    "href": "slides/2025-09-03-dataviz.html#more-combinations-1",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_area(stat = \"bin\", binwidth = 3)  +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#more-combinations-2",
    "href": "slides/2025-09-03-dataviz.html#more-combinations-2",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_point(stat = \"bin\", \n             binwidth = 3, \n             aes(size = ..count..)) +\n  geom_line(stat = \"bin\", binwidth = 3) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-much-drinking-i1",
    "href": "slides/2025-09-03-dataviz.html#how-much-drinking-i1",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_histogram() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-much-drinking-i1-1",
    "href": "slides/2025-09-03-dataviz.html#how-much-drinking-i1-1",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_density() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-much-drinking-i1-2",
    "href": "slides/2025-09-03-dataviz.html#how-much-drinking-i1-2",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_area(stat = \"density\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#covariates-adding-in-more-variables",
    "href": "slides/2025-09-03-dataviz.html#covariates-adding-in-more-variables",
    "title": "Better Data Visualizations",
    "section": "Covariates: Adding in more variables",
    "text": "Covariates: Adding in more variables\nUsing color and linetype:\n\nggplot(data = HELP_data,\n       aes(x = i1,\n           color = substance,\n           linetype = children)) + \n  geom_line(stat = \"density\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#using-color-and-facets",
    "href": "slides/2025-09-03-dataviz.html#using-color-and-facets",
    "title": "Better Data Visualizations",
    "section": "Using color and facets",
    "text": "Using color and facets\n\nggplot(data = HELP_data,\n       aes(x = i1, color = substance)) + \n  geom_line(stat = \"density\") + \n  facet_grid( . ~ children ) +\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = i1, color = substance)) + \n  geom_line(stat = \"density\") + \n  facet_grid( children ~ . ) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#boxplots",
    "href": "slides/2025-09-03-dataviz.html#boxplots",
    "title": "Better Data Visualizations",
    "section": "Boxplots",
    "text": "Boxplots\nBoxplots use stat_quantile() (five number summary).\nThe quantitative variable must be y, and there must be an additional x variable.\n\nHELP_data |&gt; \n  ggplot(aes(x = substance, y = age, color = children)) + \n  geom_boxplot() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#horizontal-boxplots",
    "href": "slides/2025-09-03-dataviz.html#horizontal-boxplots",
    "title": "Better Data Visualizations",
    "section": "Horizontal boxplots",
    "text": "Horizontal boxplots\nHorizontal boxplots are obtained by flipping the coordinate system:\n\ncoord_flip() may be used with other plots as well to reverse the roles of x and y on the plot.\n\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot() +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#axes-scaling-with-boxplots",
    "href": "slides/2025-09-03-dataviz.html#axes-scaling-with-boxplots",
    "title": "Better Data Visualizations",
    "section": "Axes scaling with boxplots",
    "text": "Axes scaling with boxplots\nWe can scale the continuous axis\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot() +\n  coord_trans(y = \"exp\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#give-me-some-space",
    "href": "slides/2025-09-03-dataviz.html#give-me-some-space",
    "title": "Better Data Visualizations",
    "section": "Give me some space",
    "text": "Give me some space\nWe’ve triggered a new feature: dodge (for dodging things left/right). We can control how much if we set the dodge manually.\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot(position = position_dodge(width=1)) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#issues-with-bigger-data",
    "href": "slides/2025-09-03-dataviz.html#issues-with-bigger-data",
    "title": "Better Data Visualizations",
    "section": "Issues with bigger data",
    "text": "Issues with bigger data\n\nAlthough we can see a generally positive association (as we would expect), the overplotting may be hiding information.\n\n\nlibrary(NHANES)\ndim(NHANES)\n\n[1] 10000    76\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_point() + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#using-alpha-opacity",
    "href": "slides/2025-09-03-dataviz.html#using-alpha-opacity",
    "title": "Better Data Visualizations",
    "section": "Using alpha (opacity)",
    "text": "Using alpha (opacity)\nOne way to deal with overplotting is to set the opacity low.\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_point(alpha=0.01) + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#geom_density2d",
    "href": "slides/2025-09-03-dataviz.html#geom_density2d",
    "title": "Better Data Visualizations",
    "section": "geom_density2d",
    "text": "geom_density2d\nAlternatively (or simultaneously) we might prefer a different geom altogether.\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_density2d() + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#multiple-layers",
    "href": "slides/2025-09-03-dataviz.html#multiple-layers",
    "title": "Better Data Visualizations",
    "section": "Multiple layers",
    "text": "Multiple layers\n\n\n\nggplot(data = HELP_data, \n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_point(alpha=.6) +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_jitter(alpha=.6, width = 0.1) +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#multiple-layers-1",
    "href": "slides/2025-09-03-dataviz.html#multiple-layers-1",
    "title": "Better Data Visualizations",
    "section": "Multiple layers",
    "text": "Multiple layers\n\nggplot(data = HELP_data,\n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_point(alpha=.6, \n             position = position_jitter(width=.1, height=0)) +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#things-i-havent-mentioned-much",
    "href": "slides/2025-09-03-dataviz.html#things-i-havent-mentioned-much",
    "title": "Better Data Visualizations",
    "section": "Things I haven’t mentioned (much)",
    "text": "Things I haven’t mentioned (much)\n\ncoords (coord_flip() is good to know about)\nthemes (for customizing appearance)\nposition (position_dodge(), position_jitterdodge(), position_stack(), etc.)\ntransforming axes"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#themes",
    "href": "slides/2025-09-03-dataviz.html#themes",
    "title": "Better Data Visualizations",
    "section": "themes",
    "text": "themes\n\nlibrary(ggthemes)\nggplot(Births2015, aes(x = date, y = births)) + \n  geom_point() + \n  theme_wsj()"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#jitterdodge",
    "href": "slides/2025-09-03-dataviz.html#jitterdodge",
    "title": "Better Data Visualizations",
    "section": "jitterdodge()",
    "text": "jitterdodge()\n\nggplot(data = HELP_data, \n       aes(x = substance, y = age, color = children)) +\n  geom_boxplot(coef = 10, position = position_dodge()) +\n  geom_point(aes(color = children, \n                 fill = children), \n             position = position_jitterdodge()) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#a-little-bit-of-everything",
    "href": "slides/2025-09-03-dataviz.html#a-little-bit-of-everything",
    "title": "Better Data Visualizations",
    "section": "A little bit of everything",
    "text": "A little bit of everything\n\nggplot(data = HELP_data, aes(x = substance, y = age, color = children)) +\n  geom_boxplot(coef = 10, position = position_dodge(width=1)) +\n  geom_point(aes(fill = children), alpha=.5, \n             position = position_jitterdodge(dodge.width=1, jitter.width = 0.2)) + \n  facet_wrap(~homeless) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#want-to-learn-more",
    "href": "slides/2025-09-03-dataviz.html#want-to-learn-more",
    "title": "Better Data Visualizations",
    "section": "Want to learn more?",
    "text": "Want to learn more?\n\ndocs.ggplot2.org/\nR for Data Science by Hadley Wickham and Garrett Grolemund"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#whats-around-the-corner",
    "href": "slides/2025-09-03-dataviz.html#whats-around-the-corner",
    "title": "Better Data Visualizations",
    "section": "What’s around the corner?",
    "text": "What’s around the corner?\nshiny\n\ninteractive graphics / modeling\nhttps://shiny.rstudio.com/\n\nplotly\n\nPlotly is an R package for creating interactive web-based graphs via plotly’s JavaScript graphing library, plotly.js. The plotly R libary contains the ggplotly function , which will convert ggplot2 figures into a Plotly object. Furthermore, you have the option of manipulating the Plotly object with the style function.\n\n\nhttps://plot.ly/ggplot2/getting-started/\n\ngganimate\n\ngganimate tutorial"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#getting-help-1",
    "href": "slides/2025-09-03-dataviz.html#getting-help-1",
    "title": "Better Data Visualizations",
    "section": "Getting help",
    "text": "Getting help\n\nOne of the best ways to get started with ggplot is to Google what you want to do with the word ggplot. Then look through the images that come up. More often than not, the associated code is there. There are also ggplot galleries of images, one of them is here: https://plot.ly/ggplot2/\nLook at the end of this presentation and the syllabus. More help options there."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#what-are-the-visual-cues-on-this-plot-3",
    "href": "slides/2025-09-03-dataviz.html#what-are-the-visual-cues-on-this-plot-3",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#what-are-the-visual-cues-on-this-plot-4",
    "href": "slides/2025-09-03-dataviz.html#what-are-the-visual-cues-on-this-plot-4",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#what-are-the-visual-cues-on-this-plot-5",
    "href": "slides/2025-09-03-dataviz.html#what-are-the-visual-cues-on-this-plot-5",
    "title": "Better Data Visualizations",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#the-grammar-of-graphics-ggplot-1",
    "href": "slides/2025-09-03-dataviz.html#the-grammar-of-graphics-ggplot-1",
    "title": "Better Data Visualizations",
    "section": "The grammar of graphics ggplot",
    "text": "The grammar of graphics ggplot\ngeom: the geometric “shape” used to display data\n\nbar, point, line, ribbon, text, etc.\n\naesthetic: an attribute controlling how geom is displayed with respect to variables\n\nx position, y position, color, fill, shape, size, etc.\n\n\nguide: helps user convert visual data back into raw data (legends, axes)\nstat: a transformation applied to data before geom gets it\n\nexample: histograms work on binned data"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#set-up-1",
    "href": "slides/2025-09-03-dataviz.html#set-up-1",
    "title": "Better Data Visualizations",
    "section": "Set up",
    "text": "Set up\n\nlibrary(mosaic)\ndata(Births2015)\n\n\nhead(Births2015)\n\n\n\n\n\n\n\n\n\ndate\nbirths\nwday\nyear\nmonth\nday_of_year\nday_of_month\nday_of_week\n\n\n\n\n2015-01-01\n8068\nThu\n2015\n1\n1\n1\n5\n\n\n2015-01-02\n10850\nFri\n2015\n1\n2\n2\n6\n\n\n2015-01-03\n8328\nSat\n2015\n1\n3\n3\n7\n\n\n2015-01-04\n7065\nSun\n2015\n1\n4\n4\n1\n\n\n2015-01-05\n11892\nMon\n2015\n1\n5\n5\n2\n\n\n2015-01-06\n12425\nTue\n2015\n1\n6\n6\n3\n\n\n\n\n\n\n\nObtained from the National Center for Health Statistics, National Vital Statistics System, Natality, 2015 data."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-11",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-11",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nTwo Questions:\n\nWhat do we want R to do? (What is the goal?)\nWhat does R need to know?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-12",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-12",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nGoal: scatterplot = a plot with points\nWhat does R need to know?\n\ndata source: Births2015\naesthetics:\n\ndate -&gt; x\nbirths -&gt; y\n\npoints"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-13",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-13",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births)) + \n  geom_point() +\n  labs(title = \"US Births in 2015\")\n\nggplot() +\n  geom_point(data = Births2015, \n             aes(x = date, y = births)) +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers-3",
    "href": "slides/2025-09-03-dataviz.html#layers-3",
    "title": "Better Data Visualizations",
    "section": "Layers",
    "text": "Layers\nLayer 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births))"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers-4",
    "href": "slides/2025-09-03-dataviz.html#layers-4",
    "title": "Better Data Visualizations",
    "section": "Layers",
    "text": "Layers\nLayer 2\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births)) + \n  geom_point()"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers-5",
    "href": "slides/2025-09-03-dataviz.html#layers-5",
    "title": "Better Data Visualizations",
    "section": "Layers",
    "text": "Layers\nLayer 3\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births)) + \n  geom_point() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-14",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-14",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nWhat has changed?\n\nnew aesthetic: mapping color to day of week"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-15",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-15",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015,\n       aes(x = date,\n           y = births, \n           color = wday)) +\n  geom_point() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-16",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-16",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-17",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-17",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nlines instead of dots!\n\nggplot(data = Births2015,\n         aes(x = date, \n             y = births,\n             color = wday)) +\n  geom_line() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-18",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-18",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-19",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-19",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nNow there are two layers: one with points and one with lines\n\nggplot(data = Births2015,\n       aes(x = date,\n           y = births,\n           color = wday)) + \n  geom_point() +  \n  geom_line() +\n  labs(title = \"US Births in 2015\")\n\n\nThe layers are placed one on top of the other: the points are below and the lines are above.\ndata and aes specified in ggplot() affect all geoms"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#what-does-this-code-do-2",
    "href": "slides/2025-09-03-dataviz.html#what-does-this-code-do-2",
    "title": "Better Data Visualizations",
    "section": "What does this code do?",
    "text": "What does this code do?\n\nggplot(data = Births2015,\n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#what-does-this-code-do-3",
    "href": "slides/2025-09-03-dataviz.html#what-does-this-code-do-3",
    "title": "Better Data Visualizations",
    "section": "What does this code do?",
    "text": "What does this code do?\n\nggplot(data = Births2015,\n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point()  +\n  labs(title = \"US Births in 2015\")\n\n\nThis is mapping the color aesthetic to a new variable with only one value (“navy”).\nSo all the dots get set to the same color, but it’s not navy."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#setting-vs.-mapping-1",
    "href": "slides/2025-09-03-dataviz.html#setting-vs.-mapping-1",
    "title": "Better Data Visualizations",
    "section": "Setting vs. Mapping",
    "text": "Setting vs. Mapping\nIf we want to set the color to be navy for all of the dots, we do it outside the aes() designation:\n\nggplot(data = Births2015,\n       aes(x = date, y = births)) +   # map variables \n  geom_point(color = \"navy\")    +   # set attributes\n  labs(title = \"US Births in 2015\")\n\n\n\nNote that color = \"navy\" is now outside of the aesthetics list. That’s how ggplot2 distinguishes between mapping and setting."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-20",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-20",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-21",
    "href": "slides/2025-09-03-dataviz.html#how-do-we-make-this-plot-21",
    "title": "Better Data Visualizations",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015,\n       aes(x = date,\n           y = births)) + \n  geom_line(aes(color = wday)) +      \n  geom_point(color = \"navy\")  +         \n  labs(title = \"US Births in 2015\")\n\n\nggplot() establishes the default data and aesthetics for the geoms, but each geom may change these defaults.\ngood practice: put into ggplot() the things that affect all (or most) of the layers; rest in geom_XXXX()"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#setting-vs.-mapping-again-1",
    "href": "slides/2025-09-03-dataviz.html#setting-vs.-mapping-again-1",
    "title": "Better Data Visualizations",
    "section": "Setting vs. Mapping (again)",
    "text": "Setting vs. Mapping (again)\nInformation gets passed to the plot via:\n\nmap the variable information inside the aes (aesthetic) command\nset the non-variable information outside the aes (aesthetic) command"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#other-geoms-2",
    "href": "slides/2025-09-03-dataviz.html#other-geoms-2",
    "title": "Better Data Visualizations",
    "section": "Other geoms",
    "text": "Other geoms\n\napropos(\"^geom_\")\n\n [1] \"geom_abline\"                  \"geom_area\"                   \n [3] \"geom_ash\"                     \"geom_bar\"                    \n [5] \"geom_bin_2d\"                  \"geom_bin2d\"                  \n [7] \"geom_blank\"                   \"geom_boxplot\"                \n [9] \"geom_bracket\"                 \"geom_col\"                    \n[11] \"geom_contour\"                 \"geom_contour_filled\"         \n[13] \"geom_count\"                   \"geom_crossbar\"               \n[15] \"geom_curve\"                   \"geom_density\"                \n[17] \"geom_density_2d\"              \"geom_density_2d_filled\"      \n[19] \"geom_density_line\"            \"geom_density_ridges\"         \n[21] \"geom_density_ridges_gradient\" \"geom_density_ridges2\"        \n[23] \"geom_density2d\"               \"geom_density2d_filled\"       \n[25] \"geom_dotplot\"                 \"geom_errorbar\"               \n[27] \"geom_errorbarh\"               \"geom_exec\"                   \n[29] \"geom_freqpoly\"                \"geom_function\"               \n[31] \"geom_hex\"                     \"geom_histogram\"              \n[33] \"geom_hline\"                   \"geom_jitter\"                 \n[35] \"geom_label\"                   \"geom_label_repel\"            \n[37] \"geom_line\"                    \"geom_linerange\"              \n[39] \"geom_lm\"                      \"geom_map\"                    \n[41] \"geom_mosaic\"                  \"geom_mosaic_jitter\"          \n[43] \"geom_mosaic_text\"             \"geom_path\"                   \n[45] \"geom_pictogram\"               \"geom_point\"                  \n[47] \"geom_pointrange\"              \"geom_polygon\"                \n[49] \"geom_pwc\"                     \"geom_qq\"                     \n[51] \"geom_qq_line\"                 \"geom_quantile\"               \n[53] \"geom_rangeframe\"              \"geom_raster\"                 \n[55] \"geom_rect\"                    \"geom_ribbon\"                 \n[57] \"geom_ridgeline\"               \"geom_ridgeline_gradient\"     \n[59] \"geom_rug\"                     \"geom_segment\"                \n[61] \"geom_sf\"                      \"geom_sf_label\"               \n[63] \"geom_sf_text\"                 \"geom_signif\"                 \n[65] \"geom_smooth\"                  \"geom_spline\"                 \n[67] \"geom_spoke\"                   \"geom_step\"                   \n[69] \"geom_stripped_cols\"           \"geom_stripped_rows\"          \n[71] \"geom_text\"                    \"geom_text_repel\"             \n[73] \"geom_tile\"                    \"geom_tufteboxplot\"           \n[75] \"geom_violin\"                  \"geom_vline\"                  \n[77] \"geom_vridgeline\"              \"geom_waffle\""
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#other-geoms-3",
    "href": "slides/2025-09-03-dataviz.html#other-geoms-3",
    "title": "Better Data Visualizations",
    "section": "Other geoms",
    "text": "Other geoms\nhelp pages will tell you their aesthetics, default stats, etc.\n\n?geom_area             # for example"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#lets-try-geom_area-2",
    "href": "slides/2025-09-03-dataviz.html#lets-try-geom_area-2",
    "title": "Better Data Visualizations",
    "section": "Let’s try geom_area",
    "text": "Let’s try geom_area\n\n\n\nggplot(data = Births2015,\n       aes(x = date,\n           y = births, \n           fill = wday)) + \n  geom_area() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#lets-try-geom_area-3",
    "href": "slides/2025-09-03-dataviz.html#lets-try-geom_area-3",
    "title": "Better Data Visualizations",
    "section": "Let’s try geom_area",
    "text": "Let’s try geom_area\n\n\n\nggplot(data = Births2015,\n       aes(x = date, y = births, fill = wday)) + \n  geom_area() +\n  labs(title = \"US Births in 2015\")\n\n\n\n\n\n\n\n\n\n… not a good plot\n\noverplotting is hiding much of the data\nextending y-axis to 0 may or may not be desirable."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#side-note-what-makes-a-plot-good-1",
    "href": "slides/2025-09-03-dataviz.html#side-note-what-makes-a-plot-good-1",
    "title": "Better Data Visualizations",
    "section": "Side note: what makes a plot good?",
    "text": "Side note: what makes a plot good?\nMost (all?) graphics are intended to help us make comparisons\n\nHow does something change over time?\nDo my treatments matter? How much?\nDo treatment and control respond the same way?\n\n\n\n\n\n\n\nKey plot metric\n\n\nDoes my plot make the comparisons I am interested in:\n\neasily, and\naccurately?"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#time-for-some-different-data-1",
    "href": "slides/2025-09-03-dataviz.html#time-for-some-different-data-1",
    "title": "Better Data Visualizations",
    "section": "Time for some different data",
    "text": "Time for some different data\nHELPrct: Health Evaluation and Linkage to Primary care randomized clinical trial. Subjects admitted for treatment for addiction to one of three substances.\n\nhead(HELPrct)\n\n\n\n\n\n\n\n\n\nage\nanysubstatus\nanysub\ncesd\nd1\ndaysanysub\ndayslink\ndrugrisk\ne2b\nfemale\nsex\ng1b\nhomeless\ni1\ni2\nid\nindtot\nlinkstatus\nlink\nmcs\npcs\npss_fr\nracegrp\nsatreat\nsexrisk\nsubstance\ntreat\navg_drinks\nmax_drinks\nhospitalizations\n\n\n\n\n37\n1\nyes\n49\n3\n177\n225\n0\nNA\n0\nmale\nyes\nhoused\n13\n26\n1\n39\n1\nyes\n25.11\n58.4\n0\nblack\nno\n4\ncocaine\nyes\n13\n26\n3\n\n\n37\n1\nyes\n30\n22\n2\nNA\n0\nNA\n0\nmale\nyes\nhomeless\n56\n62\n2\n43\nNA\nNA\n26.67\n36.0\n1\nwhite\nno\n7\nalcohol\nyes\n56\n62\n22\n\n\n26\n1\nyes\n39\n0\n3\n365\n20\nNA\n0\nmale\nno\nhoused\n0\n0\n3\n41\n0\nno\n6.76\n74.8\n13\nblack\nno\n2\nheroin\nno\n0\n0\n0\n\n\n39\n1\nyes\n15\n2\n189\n343\n0\n1\n1\nfemale\nno\nhoused\n5\n5\n4\n28\n0\nno\n43.97\n61.9\n11\nwhite\nyes\n4\nheroin\nno\n5\n5\n2\n\n\n32\n1\nyes\n39\n12\n2\n57\n0\n1\n0\nmale\nno\nhomeless\n10\n13\n5\n38\n1\nyes\n21.68\n37.3\n10\nblack\nno\n6\ncocaine\nno\n10\n13\n12\n\n\n47\n1\nyes\n6\n1\n31\n365\n0\nNA\n1\nfemale\nno\nhoused\n4\n4\n6\n29\n0\nno\n55.51\n46.5\n5\nblack\nno\n5\ncocaine\nyes\n4\n4\n1"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#who-are-the-people-in-the-study-3",
    "href": "slides/2025-09-03-dataviz.html#who-are-the-people-in-the-study-3",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(HELP_data,\n       aes(x = substance,\n           fill = children)) + \n  geom_bar(position = \"fill\") +\n  labs(title = \"HELP trial\",\n       y = \"actually, percent\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#who-are-the-people-in-the-study-4",
    "href": "slides/2025-09-03-dataviz.html#who-are-the-people-in-the-study-4",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = substance,\n           fill = children)) + \n  geom_bar() +\n  labs(title = \"HELP trial\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#who-are-the-people-in-the-study-5",
    "href": "slides/2025-09-03-dataviz.html#who-are-the-people-in-the-study-5",
    "title": "Better Data Visualizations",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(HELP_data,\n       aes(x = substance,\n           fill = children)) + \n  geom_bar(position = \"fill\") +\n  labs(title = \"HELP trial\",\n       y = \"actually, percent\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-old-are-people-in-the-help-study-1",
    "href": "slides/2025-09-03-dataviz.html#how-old-are-people-in-the-help-study-1",
    "title": "Better Data Visualizations",
    "section": "How old are people in the HELP study?",
    "text": "How old are people in the HELP study?\n\n\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_histogram() +\n  labs(title = \"HELP trial\")\n\nNotice the messages\n\nstat_bin: Histograms are not mapping the raw data but binned data.\nstat_bin() performs the data transformation.\nbinwidth: a default binwidth has been selected, but we should really choose our own."
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#setting-the-binwidth-manually-1",
    "href": "slides/2025-09-03-dataviz.html#setting-the-binwidth-manually-1",
    "title": "Better Data Visualizations",
    "section": "Setting the binwidth manually",
    "text": "Setting the binwidth manually\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_histogram(binwidth = 2) +\n  labs(title = \"HELP trial\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-old-are-people-in-the-help-study-other-geoms-1",
    "href": "slides/2025-09-03-dataviz.html#how-old-are-people-in-the-help-study-other-geoms-1",
    "title": "Better Data Visualizations",
    "section": "How old are people in the HELP study? – Other geoms",
    "text": "How old are people in the HELP study? – Other geoms\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_freqpoly(binwidth = 2) +\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_density() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#selecting-stat-and-geom-manually-2",
    "href": "slides/2025-09-03-dataviz.html#selecting-stat-and-geom-manually-2",
    "title": "Better Data Visualizations",
    "section": "Selecting stat and geom manually",
    "text": "Selecting stat and geom manually\nEvery geom comes with a default stat\n\nfor simple cases, the stat is stat_identity() which does nothing\nwe can mix and match geoms and stats however we like\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_line(stat = \"density\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#selecting-stat-and-geom-manually-3",
    "href": "slides/2025-09-03-dataviz.html#selecting-stat-and-geom-manually-3",
    "title": "Better Data Visualizations",
    "section": "Selecting stat and geom manually",
    "text": "Selecting stat and geom manually\nEvery stat comes with a default geom, every geom with a default stat\n\nwe can specify stats instead of geom, if we prefer\nwe can mix and match geoms and stats however we like\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  stat_density(geom = \"line\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#more-combinations-3",
    "href": "slides/2025-09-03-dataviz.html#more-combinations-3",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_point(stat = \"bin\", binwidth = 3) + \n  geom_line(stat = \"bin\", binwidth = 3)  +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#more-combinations-4",
    "href": "slides/2025-09-03-dataviz.html#more-combinations-4",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_area(stat = \"bin\", binwidth = 3)  +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#more-combinations-5",
    "href": "slides/2025-09-03-dataviz.html#more-combinations-5",
    "title": "Better Data Visualizations",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_point(stat = \"bin\", \n             binwidth = 3, \n             aes(size = ..count..)) +\n  geom_line(stat = \"bin\", binwidth = 3) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-much-drinking-i1-3",
    "href": "slides/2025-09-03-dataviz.html#how-much-drinking-i1-3",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_histogram() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-much-drinking-i1-4",
    "href": "slides/2025-09-03-dataviz.html#how-much-drinking-i1-4",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_density() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#how-much-drinking-i1-5",
    "href": "slides/2025-09-03-dataviz.html#how-much-drinking-i1-5",
    "title": "Better Data Visualizations",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nHELP_data |&gt; \n  ggplot(aes(x = i1)) + geom_area(stat = \"density\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#covariates-adding-in-more-variables-1",
    "href": "slides/2025-09-03-dataviz.html#covariates-adding-in-more-variables-1",
    "title": "Better Data Visualizations",
    "section": "Covariates: Adding in more variables",
    "text": "Covariates: Adding in more variables\nUsing color and linetype:\n\nggplot(data = HELP_data,\n       aes(x = i1,\n           color = substance,\n           linetype = children)) + \n  geom_line(stat = \"density\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#using-color-and-facets-1",
    "href": "slides/2025-09-03-dataviz.html#using-color-and-facets-1",
    "title": "Better Data Visualizations",
    "section": "Using color and facets",
    "text": "Using color and facets\n\nggplot(data = HELP_data,\n       aes(x = i1, color = substance)) + \n  geom_line(stat = \"density\") + \n  facet_grid( . ~ children ) +\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = i1, color = substance)) + \n  geom_line(stat = \"density\") + \n  facet_grid( children ~ . ) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#boxplots-1",
    "href": "slides/2025-09-03-dataviz.html#boxplots-1",
    "title": "Better Data Visualizations",
    "section": "Boxplots",
    "text": "Boxplots\nBoxplots use stat_quantile() (five number summary).\nThe quantitative variable must be y, and there must be an additional x variable.\n\nHELP_data |&gt; \n  ggplot(aes(x = substance, y = age, color = children)) + \n  geom_boxplot() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#horizontal-boxplots-1",
    "href": "slides/2025-09-03-dataviz.html#horizontal-boxplots-1",
    "title": "Better Data Visualizations",
    "section": "Horizontal boxplots",
    "text": "Horizontal boxplots\nHorizontal boxplots are obtained by flipping the coordinate system:\n\ncoord_flip() may be used with other plots as well to reverse the roles of x and y on the plot.\n\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot() +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#axes-scaling-with-boxplots-1",
    "href": "slides/2025-09-03-dataviz.html#axes-scaling-with-boxplots-1",
    "title": "Better Data Visualizations",
    "section": "Axes scaling with boxplots",
    "text": "Axes scaling with boxplots\nWe can scale the continuous axis\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot() +\n  coord_trans(y = \"exp\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#give-me-some-space-1",
    "href": "slides/2025-09-03-dataviz.html#give-me-some-space-1",
    "title": "Better Data Visualizations",
    "section": "Give me some space",
    "text": "Give me some space\nWe’ve triggered a new feature: dodge (for dodging things left/right). We can control how much if we set the dodge manually.\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot(position = position_dodge(width=1)) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#issues-with-bigger-data-1",
    "href": "slides/2025-09-03-dataviz.html#issues-with-bigger-data-1",
    "title": "Better Data Visualizations",
    "section": "Issues with bigger data",
    "text": "Issues with bigger data\n\nAlthough we can see a generally positive association (as we would expect), the overplotting may be hiding information.\n\n\nlibrary(NHANES)\ndim(NHANES)\n\n[1] 10000    76\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_point() + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#using-alpha-opacity-1",
    "href": "slides/2025-09-03-dataviz.html#using-alpha-opacity-1",
    "title": "Better Data Visualizations",
    "section": "Using alpha (opacity)",
    "text": "Using alpha (opacity)\nOne way to deal with overplotting is to set the opacity low.\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_point(alpha=0.01) + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#geom_density2d-1",
    "href": "slides/2025-09-03-dataviz.html#geom_density2d-1",
    "title": "Better Data Visualizations",
    "section": "geom_density2d",
    "text": "geom_density2d\nAlternatively (or simultaneously) we might prefer a different geom altogether.\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_density2d() + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#multiple-layers-2",
    "href": "slides/2025-09-03-dataviz.html#multiple-layers-2",
    "title": "Better Data Visualizations",
    "section": "Multiple layers",
    "text": "Multiple layers\n\n\n\nggplot(data = HELP_data, \n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_point(alpha=.6) +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_jitter(alpha=.6, width = 0.1) +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#multiple-layers-3",
    "href": "slides/2025-09-03-dataviz.html#multiple-layers-3",
    "title": "Better Data Visualizations",
    "section": "Multiple layers",
    "text": "Multiple layers\n\nggplot(data = HELP_data,\n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_point(alpha=.6, \n             position = position_jitter(width=.1, height=0)) +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#things-i-havent-mentioned-much-1",
    "href": "slides/2025-09-03-dataviz.html#things-i-havent-mentioned-much-1",
    "title": "Better Data Visualizations",
    "section": "Things I haven’t mentioned (much)",
    "text": "Things I haven’t mentioned (much)\n\ncoords (coord_flip() is good to know about)\nthemes (for customizing appearance)\nposition (position_dodge(), position_jitterdodge(), position_stack(), etc.)\ntransforming axes"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#themes-1",
    "href": "slides/2025-09-03-dataviz.html#themes-1",
    "title": "Better Data Visualizations",
    "section": "themes",
    "text": "themes\n\nlibrary(ggthemes)\nggplot(Births2015, aes(x = date, y = births)) + \n  geom_point() + \n  theme_wsj()"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#jitterdodge-1",
    "href": "slides/2025-09-03-dataviz.html#jitterdodge-1",
    "title": "Better Data Visualizations",
    "section": "jitterdodge()",
    "text": "jitterdodge()\n\nggplot(data = HELP_data, \n       aes(x = substance, y = age, color = children)) +\n  geom_boxplot(coef = 10, position = position_dodge()) +\n  geom_point(aes(color = children, \n                 fill = children), \n             position = position_jitterdodge()) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#a-little-bit-of-everything-1",
    "href": "slides/2025-09-03-dataviz.html#a-little-bit-of-everything-1",
    "title": "Better Data Visualizations",
    "section": "A little bit of everything",
    "text": "A little bit of everything\n\nggplot(data = HELP_data, aes(x = substance, y = age, color = children)) +\n  geom_boxplot(coef = 10, position = position_dodge(width=1)) +\n  geom_point(aes(fill = children), alpha=.5, \n             position = position_jitterdodge(dodge.width=1, jitter.width = 0.2)) + \n  facet_wrap(~homeless) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#want-to-learn-more-1",
    "href": "slides/2025-09-03-dataviz.html#want-to-learn-more-1",
    "title": "Better Data Visualizations",
    "section": "Want to learn more?",
    "text": "Want to learn more?\n\ndocs.ggplot2.org/\nR for Data Science by Hadley Wickham and Garrett Grolemund"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#whats-around-the-corner-1",
    "href": "slides/2025-09-03-dataviz.html#whats-around-the-corner-1",
    "title": "Better Data Visualizations",
    "section": "What’s around the corner?",
    "text": "What’s around the corner?\nshiny\n\ninteractive graphics / modeling\nhttps://shiny.rstudio.com/\n\nplotly\n\nPlotly is an R package for creating interactive web-based graphs via plotly’s JavaScript graphing library, plotly.js. The plotly R libary contains the ggplotly function , which will convert ggplot2 figures into a Plotly object. Furthermore, you have the option of manipulating the Plotly object with the style function.\n\n\nhttps://plot.ly/ggplot2/getting-started/\n\ngganimate\n\ngganimate tutorial"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers-layer-0",
    "href": "slides/2025-09-03-dataviz.html#layers-layer-0",
    "title": "Better Data Visualizations",
    "section": "Layers: layer 0",
    "text": "Layers: layer 0\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot()"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers-layer-1",
    "href": "slides/2025-09-03-dataviz.html#layers-layer-1",
    "title": "Better Data Visualizations",
    "section": "Layers: layer 1",
    "text": "Layers: layer 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births))"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers-layer-2",
    "href": "slides/2025-09-03-dataviz.html#layers-layer-2",
    "title": "Better Data Visualizations",
    "section": "Layers: layer 2",
    "text": "Layers: layer 2\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births)) + \n  geom_point()"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers-layer-3",
    "href": "slides/2025-09-03-dataviz.html#layers-layer-3",
    "title": "Better Data Visualizations",
    "section": "Layers: layer 3",
    "text": "Layers: layer 3\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births)) + \n  geom_point() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers-layer-0-1",
    "href": "slides/2025-09-03-dataviz.html#layers-layer-0-1",
    "title": "Better Data Visualizations",
    "section": "Layers: layer 0",
    "text": "Layers: layer 0\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot()"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers-layer-1-1",
    "href": "slides/2025-09-03-dataviz.html#layers-layer-1-1",
    "title": "Better Data Visualizations",
    "section": "Layers: layer 1",
    "text": "Layers: layer 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births))"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers-layer-2-1",
    "href": "slides/2025-09-03-dataviz.html#layers-layer-2-1",
    "title": "Better Data Visualizations",
    "section": "Layers: layer 2",
    "text": "Layers: layer 2\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births)) + \n  geom_point()"
  },
  {
    "objectID": "slides/2025-09-03-dataviz.html#layers-layer-3-1",
    "href": "slides/2025-09-03-dataviz.html#layers-layer-3-1",
    "title": "Better Data Visualizations",
    "section": "Layers: layer 3",
    "text": "Layers: layer 3\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births2015, \n       aes(x = date, y = births)) + \n  geom_point() +\n  labs(title = \"US Births in 2015\")"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html",
    "href": "slides/2025-09-10-verbs.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Tidy data\nData verbs"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#tidy-data",
    "href": "slides/2025-09-10-verbs.html#tidy-data",
    "title": "Data Wrangling",
    "section": "Tidy data",
    "text": "Tidy data\n\neach row = a unit of observation (here, a penguin)\neach column = a measure on some variable of interest, either quantitative (numbers with units) or categorical (discrete possibilities or categories)\neach entry contains a single data value; no analysis, summaries, footnotes, comments, etc, and only one value per cell"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#definition-of-datum",
    "href": "slides/2025-09-10-verbs.html#definition-of-datum",
    "title": "Data Wrangling",
    "section": "Definition of datum",
    "text": "Definition of datum\nThe definition of datum can be much broader:\n\nDefinition of datum from the Oxford English Dictionary"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#not-tidy-active-duty-military",
    "href": "slides/2025-09-10-verbs.html#not-tidy-active-duty-military",
    "title": "Data Wrangling",
    "section": "Not tidy – Active Duty Military",
    "text": "Not tidy – Active Duty Military\nThe Active Duty data are not tidy! What are the cases? How are the data not tidy? What might the data look like in tidy form? Suppose that the case was “an individual in the armed forces.” What variables would you use to capture the information in the following table?"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#tidying-data",
    "href": "slides/2025-09-10-verbs.html#tidying-data",
    "title": "Data Wrangling",
    "section": "Tidying data",
    "text": "Tidying data\nHow would you wrangle each data example into a tidy format?\n\nthe emails in your inbox\n\nsocial media texts\n\nimages\n\nvideos\n\naudio files"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#tidy-packages-the-tidyverse",
    "href": "slides/2025-09-10-verbs.html#tidy-packages-the-tidyverse",
    "title": "Data Wrangling",
    "section": "Tidy packages: the tidyverse",
    "text": "Tidy packages: the tidyverse\n\nimage credit: https://www.tidyverse.org/."
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#some-basic-verbs",
    "href": "slides/2025-09-10-verbs.html#some-basic-verbs",
    "title": "Data Wrangling",
    "section": "Some Basic Verbs",
    "text": "Some Basic Verbs\n\nfilter()\narrange()\nselect()\nmutate()\nsummarize()\ngroup_by()"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#out-of-nyc-flights-data-2013",
    "href": "slides/2025-09-10-verbs.html#out-of-nyc-flights-data-2013",
    "title": "Data Wrangling",
    "section": "(out of) NYC, flights data (2013)",
    "text": "(out of) NYC, flights data (2013)\n\nlibrary(nycflights13)\nflights"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#filter",
    "href": "slides/2025-09-10-verbs.html#filter",
    "title": "Data Wrangling",
    "section": "filter()",
    "text": "filter()\nAllows you to select a subset of the rows of a data frame. The first argument is the name of the data frame, the following arguments are the filters that you’d like to apply\nFor all flights on January 1st:\n\nfilter(flights, month == 1, day == 1)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#constructing-filters",
    "href": "slides/2025-09-10-verbs.html#constructing-filters",
    "title": "Data Wrangling",
    "section": "Constructing filters",
    "text": "Constructing filters\nFilters are constructed of logical operators: &lt;, &gt;, &lt;=, &gt;=, ==, != (and some others).\nAdding them one by one to filter() is akin to saying “this AND that”. To say “this OR that OR both”, use |.\n\nfilter(flights, month == 1 | month == 2)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#practice",
    "href": "slides/2025-09-10-verbs.html#practice",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nConstruct filters to isolate:\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours."
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#solution",
    "href": "slides/2025-09-10-verbs.html#solution",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours.\n\n\nfilter(flights, month == 3, day == 17)\nfilter(flights, dest == \"ORD\")\nfilter(flights, dest == \"ORD\", carrier == \"UA\")\nfilter(flights, distance &gt; 2000 | air_time &gt; 5*60)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#arrange",
    "href": "slides/2025-09-10-verbs.html#arrange",
    "title": "Data Wrangling",
    "section": "arrange()",
    "text": "arrange()\narrange() reorders the rows: It takes a data frame, and a set of column names (or more complicated expressions) to order by. If you provide more than one column name, each additional column will be used to break ties in the values of preceding columns:\n\narrange(flights, year, month, day)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#select",
    "href": "slides/2025-09-10-verbs.html#select",
    "title": "Data Wrangling",
    "section": "select()",
    "text": "select()\nOften you work with large datasets with many columns where only a few are actually of interest to you. select() allows you to rapidly zoom in on a useful subset using operations that usually only work on numeric variable positions:\n\nselect(flights, year, month, day)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#distinct",
    "href": "slides/2025-09-10-verbs.html#distinct",
    "title": "Data Wrangling",
    "section": "distinct()",
    "text": "distinct()\nA common use of select() is to find out which values a set of variables takes. This is particularly useful in conjunction with the distinct() verb which only returns the unique values in a table.\nWhat do the following data correspond to?\n\ndistinct(select(flights, origin, dest))"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#mutate",
    "href": "slides/2025-09-10-verbs.html#mutate",
    "title": "Data Wrangling",
    "section": "mutate()",
    "text": "mutate()\nAs well as selecting from the set of existing columns, it’s often useful to add new columns that are functions of existing columns. This is the job of mutate():\n\nselect(mutate(flights, gain = dep_delay - arr_delay), \n       flight, dep_delay, arr_delay, gain)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#summarize-and-sample_n",
    "href": "slides/2025-09-10-verbs.html#summarize-and-sample_n",
    "title": "Data Wrangling",
    "section": "summarize() and sample_n()",
    "text": "summarize() and sample_n()\nsummarize() collapses a data frame to a single row based on some function. It’s not very useful yet, but it will be.\nsample_n() provides you with a random sample of rows.\n\nsummarize(flights, delay = mean(dep_delay, na.rm = TRUE))\n\n\n  \n\n\nsample_n(flights, 10)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#practice-1",
    "href": "slides/2025-09-10-verbs.html#practice-1",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object."
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#practice-2",
    "href": "slides/2025-09-10-verbs.html#practice-2",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object.\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\nspeed_data &lt;- select(flights2, tailnum, speed)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#group_by",
    "href": "slides/2025-09-10-verbs.html#group_by",
    "title": "Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nsummarize() is even more powerful when combined with the idea of “group by”, repeating the operation separately on groups of observations within the dataset.\nThe group_by() function describes how to break a dataset down into groups of rows.\ngroup_by() does not change anything about the data frame. Rather, it holds the rows of the data frame separately so that any future verbs applied to the data frame are done separately per group being held."
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#group_by-1",
    "href": "slides/2025-09-10-verbs.html#group_by-1",
    "title": "Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nFind the fastest airplanes in the bunch, measured as the average speed per airplane.\n\nby_tailnum &lt;- group_by(speed_data, tailnum)\navg_speed &lt;- summarize(by_tailnum, \n                       count = n(), \n                       avg_speed = mean(speed, na.rm = TRUE))\narrange(avg_speed, desc(avg_speed))"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#chaining",
    "href": "slides/2025-09-10-verbs.html#chaining",
    "title": "Data Wrangling",
    "section": "Chaining",
    "text": "Chaining\nInstead of applying each verb step-by-step, we can chain them into a single data pipeline, connected with the |&gt; operator. You start the pipeline with a data frame and then pass it to each function in turn.\nThe pipe syntax (|&gt;) takes a data frame and sends it to the argument of a function. The mapping goes to the first available argument in the function. For example:\nx |&gt;  f() is the same as f(x)\nx |&gt;  f(y) is the same as f(x, y)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#mornings",
    "href": "slides/2025-09-10-verbs.html#mornings",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\nme_step1 &lt;- dress(me, what = sports)  \nme_step2 &lt;- exercise(me_step1, how = running)  \nme_step3 &lt;- eat(me_step2, choice = cereal)  \nme_step4 &lt;- dress(me_step3, what = school)  \nme_step5 &lt;- commute(me_step4, transportation = bike)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#mornings-1",
    "href": "slides/2025-09-10-verbs.html#mornings-1",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\ncommute(dress(eat(exercise(dress(me, what = sports), how = running), choice = cereal), what = school), transportation = bike)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#morning",
    "href": "slides/2025-09-10-verbs.html#morning",
    "title": "Data Wrangling",
    "section": "Morning",
    "text": "Morning\n(better??)\n\ncommute(\n  dress(\n    eat(\n      exercise(\n        dress(me, \n              what = sports), \n        how = running), \n      choice = cereal), \n    what = school), \n  transportation = bike)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#mornings-2",
    "href": "slides/2025-09-10-verbs.html#mornings-2",
    "title": "Data Wrangling",
    "section": "Mornings",
    "text": "Mornings\n\nme |&gt; \n  dress(what = sports) |&gt; \n  exercise(how = running) |&gt; \n  eat(choice = cereal) |&gt; \n  dress(what = school) |&gt; \n  commute(transportation = bike)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#little-bunny-foo-foo",
    "href": "slides/2025-09-10-verbs.html#little-bunny-foo-foo",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nFrom Hadley Wickham, how to think about tidy data.\n\nLittle bunny Foo Foo\n\n\nWent hopping through the forest\n\n\nScooping up the field mice\n\n\nAnd bopping them on the head"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#little-bunny-foo-foo-1",
    "href": "slides/2025-09-10-verbs.html#little-bunny-foo-foo-1",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nThe nursery rhyme could be created by a series of steps where the output from each step is saved as an object along the way.\n\nfoo_foo &lt;- little_bunny()\nfoo_foo_1 &lt;- hop(foo_foo, through = forest)\nfoo_foo_2 &lt;- scoop(foo_foo_2, up = field_mice)\nfoo_foo_3 &lt;- bop(foo_foo_2, on = head)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#little-bunny-foo-foo-2",
    "href": "slides/2025-09-10-verbs.html#little-bunny-foo-foo-2",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nAnother approach is to concatenate the functions so that there is only one output.\n\nbop(\n   scoop(\n      hop(foo_foo, through = forest),\n      up = field_mice),\n   on = head)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#little-bunny-foo-foo-3",
    "href": "slides/2025-09-10-verbs.html#little-bunny-foo-foo-3",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nOr even worse, as one line:\n\nbop(scoop(hop(foo_foo, through = forest), up = field_mice), on = head)))"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#little-bunny-foo-foo-4",
    "href": "slides/2025-09-10-verbs.html#little-bunny-foo-foo-4",
    "title": "Data Wrangling",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nInstead, the code can be written using the pipe in the order in which the function is evaluated:\n\nfoo_foo |&gt; \n   hop(through = forest) |&gt; \n       scoop(up = field_mice) |&gt; \n           bop(on = head)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#flights",
    "href": "slides/2025-09-10-verbs.html#flights",
    "title": "Data Wrangling",
    "section": "Flights",
    "text": "Flights\n\nNo pipePipe\n\n\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\ntail_speed &lt;- select(flights2, tailnum, speed)\ntail_speed_grp &lt;- group_by(tail_speed, tailnum)\ntail_ave &lt;- summarize(tail_speed_grp, number = n(),\n                      avg_speed = mean(speed, na.rm = TRUE))\narrange(tail_ave, desc(avg_speed))\n\n\n  \n\n\n\n\n\n\nflights |&gt; \n  mutate(speed = distance / (air_time/60)) |&gt; \n  select(tailnum, speed) |&gt; \n  group_by(tailnum) |&gt;  \n  summarize(number = n(), \n            avg_speed = mean(speed, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_speed))"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#practice-3",
    "href": "slides/2025-09-10-verbs.html#practice-3",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#practice-4",
    "href": "slides/2025-09-10-verbs.html#practice-4",
    "title": "Data Wrangling",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?\n\nflights |&gt; \n  group_by(carrier) |&gt; \n  summarize(avg_delay = mean(dep_delay, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_delay))"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#practice-again",
    "href": "slides/2025-09-10-verbs.html#practice-again",
    "title": "Data Wrangling",
    "section": "Practice again",
    "text": "Practice again\nSay you’re curious about the relationship between the number of flights that each plane made in 2013, the mean distance that each of those planes flew, and the mean arrival delay. You also want to exclude the edge cases from your analysis, so focus on the planes that have logged more than 20 flights and flown an average distance of less than 2000 miles. Please form the chain that creates this dataset."
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#solution-1",
    "href": "slides/2025-09-10-verbs.html#solution-1",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\ndelay_data &lt;- flights |&gt; \n  group_by(tailnum) |&gt; \n  summarize(number = n(),\n            dist = mean(distance, na.rm = TRUE), \n            delay = mean(arr_delay, na.rm = TRUE)) |&gt; \n  filter(number &gt; 20, dist &lt; 2000)"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#visualizing-the-data",
    "href": "slides/2025-09-10-verbs.html#visualizing-the-data",
    "title": "Data Wrangling",
    "section": "Visualizing the data",
    "text": "Visualizing the data\n\nVizCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndelay_data |&gt; \n ggplot(aes(dist, delay)) +\n geom_point(aes(size = number), \n            alpha = 1/2) +\n geom_smooth() +\n scale_size_area()\n\nWhen scale_size_area is used, the default behavior is to scale the area of points to be proportional to the value."
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#arrange-1",
    "href": "slides/2025-09-10-verbs.html#arrange-1",
    "title": "Data Wrangling",
    "section": "arrange()",
    "text": "arrange()\nUse desc() to sort in descending order.\n\narrange(flights, desc(dep_delay))"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#select-1",
    "href": "slides/2025-09-10-verbs.html#select-1",
    "title": "Data Wrangling",
    "section": "select()",
    "text": "select()\nYou can exclude columns using - and specify a range using :.\n\nselect(flights, -(year:day))"
  },
  {
    "objectID": "slides/2025-09-10-verbs.html#summarize",
    "href": "slides/2025-09-10-verbs.html#summarize",
    "title": "Data Wrangling",
    "section": "summarize()",
    "text": "summarize()\nsummarize() collapses a data frame to a single row based on some function. It’s not very useful yet, but it will be.\n\nsummarize(flights, delay = mean(dep_delay, na.rm = TRUE))"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#data-exploration",
    "href": "slides/2025-09-15-pivotjoin.html#data-exploration",
    "title": "Pivoting and Joining",
    "section": "Data Exploration",
    "text": "Data Exploration\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#from-wide-to-long-and-long-to-wide",
    "href": "slides/2025-09-15-pivotjoin.html#from-wide-to-long-and-long-to-wide",
    "title": "Pivoting and Joining",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide\n\npivot_longer() makes the data frame “longer” – many columns into a few columns (more rows):\n\npivot_longer(data,cols,names_to=,value_to=)\n\npivot_wider() makes the data frame “wider” – a few columns into many columns (fewer rows):\n\npivot_wider(data,names_from=,values_from=)"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#from-wide-to-long-and-long-to-wide-1",
    "href": "slides/2025-09-15-pivotjoin.html#from-wide-to-long-and-long-to-wide-1",
    "title": "Pivoting and Joining",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#pivot_longer",
    "href": "slides/2025-09-15-pivotjoin.html#pivot_longer",
    "title": "Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\npivot_longer will be demonstrated using datasets from GapMinder.\nlitF represents country, year, and female literacy rate.\n\nlibrary(googlesheets4)\ngs4_deauth()\nlitF &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1hDinTIRHQIaZg1RUn6Z_6mo12PtKwEPFIz_mJVF6P5I/pub?gid=0\")\n\nlitF |&gt; \n  gt::gt()\n\n\n\n\n\n\n\nAdult (15+) literacy rate (%). Female\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n\n\n\n\nAfghanistan\nNA\nNA\nNA\nNA\n4.987460\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n13.00000\n\n\nAlbania\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.252274\nNA\nNA\nNA\nNA\nNA\nNA\n94.68181\nNA\nNA\n95.69148\n\n\nAlgeria\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n35.83992\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n60.07508\nNA\nNA\nNA\n63.91879\nNA\nNA\nNA\nNA\nNA\n\n\nAndorra\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAngola\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n54.194488\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n58.60846\n\n\nAnguilla\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.71493\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAntigua and Barbuda\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.420000\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.42000\n\n\nArgentina\nNA\nNA\nNA\nNA\nNA\n93.58089\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.041358\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.193411\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.89042\n\n\nArmenia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.15014\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.161066\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.45376\n\n\nAruba\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.07136\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.71978\nNA\n\n\nAustralia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAustria\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAzerbaijan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.17478\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.39788\nNA\n99.68215\nNA\nNA\n\n\nBahamas\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBahrain\nNA\nNA\nNA\nNA\nNA\nNA\n58.591092\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n76.932319\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n83.557418\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.61258\nNA\n\n\nBangladesh\nNA\nNA\nNA\nNA\nNA\nNA\n17.971629\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n25.838980\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n40.823350\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n53.41050\n\n\nBarbados\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBelarus\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.62822\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.41972\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.49399\nNA\nNA\n\n\nBelgium\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBelize\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.328394\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBenin\nNA\nNA\nNA\nNA\n9.539080\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n16.56524\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n23.30014\nNA\nNA\nNA\n18.44291\nNA\nNA\nNA\nNA\nNA\n\n\nBermuda\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBhutan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n38.68066\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBolivia\nNA\n51.374645\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n72.31322\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.654383\nNA\nNA\nNA\nNA\nNA\n85.98594\n86.83175\n86.82146\nNA\nNA\n\n\nBosnia and Herzegovina\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.35994\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.69526\n\n\nBotswana\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n71.299236\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n81.80795\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n85.56156\n\n\nBrazil\nNA\nNA\nNA\nNA\nNA\n72.85315\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.50005\nNA\nNA\nNA\n88.80613\nNA\n89.85559\n90.22801\n90.21955\n90.41122\n90.68170\nNA\n\n\nBritish Virgin Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBrunei\nNA\nNA\nNA\nNA\nNA\nNA\n68.982584\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n82.461356\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.161545\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.92081\n\n\nBulgaria\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.706486\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.98390\n\n\nBurkina Faso\n3.182766\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n8.225427\nNA\nNA\nNA\nNA\n8.05798\nNA\nNA\nNA\nNA\nNA\nNA\n15.18877\nNA\n16.62224\nNA\n21.57957\nNA\nNA\nNA\nNA\n\n\nBurundi\nNA\nNA\nNA\nNA\n11.983568\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n27.52930\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n52.23776\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n84.59147\nNA\nNA\nNA\n\n\nCambodia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n56.99250\nNA\nNA\nNA\nNA\nNA\n64.05099\nNA\nNA\nNA\n70.85820\n65.93125\nNA\nNA\n\n\nCameroon\nNA\n29.116129\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n58.72176\nNA\nNA\nNA\nNA\nNA\nNA\n63.02206\nNA\nNA\n64.79950\nNA\n\n\nCanada\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCape Verde\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n52.99862\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n74.06926\nNA\nNA\nNA\nNA\nNA\nNA\n80.25824\n\n\nCayman Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.02148\nNA\nNA\nNA\nNA\n\n\nCentral African Rep.\n8.399576\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n20.33688\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n35.29090\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n44.17747\n\n\nChad\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n4.591826\nNA\nNA\nNA\nNA\nNA\nNA\n12.79642\nNA\nNA\nNA\n17.98058\nNA\nNA\nNA\nNA\nNA\nNA\n25.39826\n\n\nChile\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.80012\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.03671\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.64093\nNA\nNA\nNA\nNA\nNA\n98.69557\n98.49128\nNA\nNA\n\n\nChina\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n51.13681\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n68.07208\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.52660\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.71123\nNA\n\n\nColombia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n81.235482\nNA\nNA\n91.31400\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.71463\n92.91125\n92.22060\n92.84562\n93.43537\n93.41513\n93.48679\n93.66714\n\n\nComoros\nNA\nNA\nNA\nNA\nNA\n40.31762\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n63.45902\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.57002\n\n\nCongo, Dem. Rep.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n54.060896\nNA\nNA\nNA\nNA\nNA\n46.10425\nNA\nNA\nNA\nNA\n\n\nCongo, Rep.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCook Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCosta Rica\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.57713\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.08079\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.47886\n\n\nCote d'Ivoire\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n23.43378\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n28.47667\nNA\n38.61451\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n47.58359\n\n\nCroatia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.817222\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.083898\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.31105\n\n\nCuba\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.79092\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.82679\n\n\nCyprus\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.00178\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.079665\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.11623\n\n\nCzech Rep.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nDenmark\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nDjibouti\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nDominica\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nDominican Rep.\nNA\nNA\nNA\nNA\nNA\nNA\n72.536085\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n87.17709\nNA\nNA\nNA\nNA\n88.27717\nNA\nNA\n89.69730\n90.22552\n\n\nEcuador\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.40523\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.19333\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n89.697087\nNA\nNA\nNA\nNA\nNA\n81.68059\nNA\n81.45120\n90.47011\n90.22082\n\n\nEgypt\nNA\n22.438008\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n31.40419\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n43.59531\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n59.35558\n57.81191\nNA\nNA\nNA\n63.51581\n64.63623\n\n\nEl Salvador\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n71.28053\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n78.35865\nNA\n81.00382\n79.66213\n81.35950\n81.81795\n82.30802\nNA\n\n\nEquatorial Guinea\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n81.62300\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.07868\n\n\nEritrea\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n40.22442\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n59.03992\n\n\nEstonia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.60148\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.76006\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.81971\n\n\nEthiopia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n18.51498\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n22.80000\n17.97720\nNA\n28.92164\nNA\nNA\nNA\nNA\n\n\nFiji\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFinland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFrance\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGabon\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n65.326310\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n79.30927\nNA\nNA\nNA\nNA\nNA\nNA\n85.63833\n\n\nGambia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n25.06155\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n41.88712\n\n\nGeorgia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.55285\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.68613\n\n\nGermany\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGhana\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n49.79196\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n65.29469\nNA\n\n\nGibraltar\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGreece\nNA\nNA\nNA\nNA\nNA\nNA\n85.319987\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n89.353296\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.239412\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.27898\n\n\nGrenada\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGuatemala\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n57.29266\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n63.34138\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n71.08082\n\n\nGuinea\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n9.74307\nNA\nNA\nNA\nNA\nNA\nNA\n18.23868\nNA\nNA\nNA\nNA\nNA\nNA\n12.19197\nNA\n\n\nGuinea-Bissau\nNA\nNA\nNA\nNA\n8.588262\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n27.49421\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n42.06704\n\n\nGuyana\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n87.25198\nNA\nNA\n\n\nHaiti\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n32.52496\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n54.86147\nNA\nNA\n44.59945\nNA\nNA\nNA\nNA\nNA\n\n\nHoly See\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nHonduras\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.223602\nNA\nNA\nNA\nNA\nNA\n83.45277\nNA\nNA\n84.72503\n84.93035\n\n\nHong Kong, China\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nHungary\nNA\nNA\nNA\nNA\nNA\n98.45413\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.71310\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.85411\nNA\nNA\nNA\nNA\nNA\nNA\n98.93870\n\n\nIceland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nIndia\nNA\nNA\nNA\nNA\nNA\nNA\n25.676252\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n33.729527\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n47.842099\nNA\nNA\nNA\nNA\n50.82376\nNA\nNA\nNA\nNA\nNA\n\n\nIndonesia\nNA\nNA\nNA\nNA\nNA\n57.69463\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n75.27012\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.79959\nNA\n88.78698\nNA\n89.10139\n89.67712\nNA\n90.06870\n\n\nIran\nNA\n24.423083\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n41.03395\nNA\nNA\nNA\nNA\n56.156417\nNA\nNA\nNA\nNA\n66.06776\nNA\nNA\nNA\nNA\nNA\n70.40000\nNA\nNA\n76.80264\n77.24002\nNA\n80.65532\nNA\nNA\nNA\n\n\nIraq\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n64.16950\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n71.20716\n\n\nIreland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nIsrael\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n88.67472\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nItaly\nNA\nNA\nNA\nNA\nNA\nNA\n95.536669\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.042153\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.74161\n\n\nJamaica\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n85.87208\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.76553\n\n\nJapan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nJordan\nNA\nNA\nNA\nNA\n52.110613\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n84.71392\nNA\n87.00581\nNA\n88.90331\nNA\nNA\n89.20774\n93.93346\n\n\nKazakhstan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.13877\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.28990\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.68429\nNA\nNA\n\n\nKenya\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n77.89298\nNA\nNA\nNA\nNA\nNA\nNA\n66.86312\nNA\nNA\nNA\nNA\n\n\nKiribati\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nKorea, Dem. Rep.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.99762\nNA\nNA\nNA\n\n\nKorea, Rep.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nKuwait\n48.015214\nNA\nNA\nNA\nNA\n59.11050\nNA\nNA\nNA\nNA\n68.84937\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n74.14872\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.04250\n90.82863\n91.50349\n91.79302\nNA\nNA\nNA\n\n\nKyrgyzstan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.13063\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.98121\nNA\nNA\n\n\nLaos\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n47.90236\nNA\nNA\nNA\nNA\n58.46070\n60.902520\nNA\nNA\nNA\n63.22699\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nLatvia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.20255\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.70973\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.79728\n\n\nLebanon\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n85.96778\nNA\nNA\nNA\nNA\n\n\nLesotho\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.04645\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n84.96396\nNA\nNA\n\n\nLiberia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n19.30279\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n32.01852\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n47.87633\nNA\nNA\n27.03491\nNA\nNA\nNA\nNA\n\n\nLibya\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n42.31355\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n64.95931\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n78.19782\nNA\nNA\nNA\nNA\nNA\nNA\n83.32303\n\n\nLiechtenstein\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nLithuania\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.78159\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.647943\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.72063\n\n\nLuxembourg\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMacao, China\nNA\nNA\nNA\nNA\nNA\nNA\n86.215884\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n87.774972\nNA\nNA\nNA\nNA\n90.72359\nNA\nNA\nNA\nNA\n93.73191\n\n\nMacedonia, FYR\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.92802\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.05607\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.04252\n\n\nMadagascar\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n65.27857\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n61.64141\nNA\nNA\n\n\nMalawi\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n33.52302\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n53.99712\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n51.25197\nNA\n\n\nMalaysia\nNA\nNA\nNA\nNA\nNA\n61.24850\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n77.283088\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n85.35422\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.74768\nNA\n\n\nMaldives\nNA\nNA\n82.17816\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.35901\nNA\nNA\nNA\nNA\n96.14601\nNA\nNA\nNA\nNA\n96.44298\nNA\nNA\nNA\nNA\n96.44298\nNA\nNA\nNA\nNA\nNA\n98.42985\nNA\nNA\nNA\nNA\nNA\n\n\nMali\nNA\n5.735281\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n11.89343\nNA\nNA\nNA\nNA\n15.90000\nNA\nNA\n18.19091\nNA\nNA\nNA\n20.28793\n24.56741\n\n\nMalta\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n88.29275\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n89.24264\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.50425\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMarshall Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMauritania\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n43.41736\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n51.97767\n\n\nMauritius\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n74.66089\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.50003\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.66407\n\n\nMexico\nNA\nNA\nNA\nNA\nNA\n79.89100\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n84.95591\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n88.68204\nNA\n88.72863\nNA\n89.63102\n90.21041\n89.83451\n91.35555\n91.45361\n92.11625\n91.85342\n92.33828\n\n\nMicronesia, Fed. Sts.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMoldova\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.44448\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.49230\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.48289\n\n\nMonaco\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMongolia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.52880\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.87714\n\n\nMontenegro\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.58914\n\n\nMontserrat\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMorocco\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n17.51487\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n28.72542\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n39.61956\nNA\nNA\nNA\n42.58785\n43.92108\nNA\n57.63999\n\n\nMozambique\nNA\nNA\nNA\nNA\nNA\n12.14632\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n24.96420\nNA\nNA\nNA\nNA\nNA\n33.19396\nNA\nNA\nNA\nNA\nNA\n36.45228\nNA\nNA\n\n\nMyanmar\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n71.63087\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.41518\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.37064\n\n\nNamibia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n73.986597\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n83.490088\nNA\nNA\nNA\nNA\nNA\n78.35098\nNA\nNA\nNA\nNA\n\n\nNauru\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNepal\nNA\nNA\nNA\nNA\nNA\nNA\n9.153116\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n17.381793\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n34.886764\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n46.70610\n\n\nNetherlands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNetherlands Antilles\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.01091\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.53381\n\n\nNew Zealand\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNicaragua\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n76.601656\nNA\nNA\nNA\n77.91604\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNiger\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n9.398724\nNA\nNA\nNA\n15.08414\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNigeria\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n43.729197\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n43.32205\nNA\nNA\nNA\nNA\n41.38676\nNA\nNA\nNA\n\n\nNiue\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNorway\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nOman\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n73.53171\nNA\nNA\nNA\nNA\n80.87226\nNA\n81.80323\nNA\n\n\nPakistan\nNA\nNA\nNA\nNA\nNA\nNA\n14.771552\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n29.04384\nNA\nNA\nNA\nNA\nNA\nNA\n35.36752\n39.61323\nNA\n40.08118\n40.31462\nNA\nNA\n\n\nPalau\nNA\nNA\nNA\nNA\nNA\n90.50324\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPanama\nNA\nNA\nNA\nNA\nNA\n88.04653\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n88.21485\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.24718\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.48526\nNA\n\n\nPapua New Guinea\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n50.91774\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n59.40146\n\n\nParaguay\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n75.85298\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n88.55871\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.45327\n92.49443\n93.14401\n92.92574\nNA\n\n\nPeru\nNA\nNA\nNA\nNA\nNA\nNA\n73.858337\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n81.658753\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n82.06262\n82.45437\n83.45487\n84.64688\nNA\nNA\nNA\nNA\n\n\nPhilippines\nNA\nNA\nNA\nNA\nNA\n82.76215\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.18072\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.65491\nNA\nNA\n93.56453\nNA\nNA\nNA\nNA\n95.82563\nNA\nNA\nNA\n\n\nPoland\nNA\nNA\nNA\n98.25198\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.11849\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.42229\nNA\nNA\nNA\nNA\nNA\nNA\n99.58486\n\n\nPortugal\nNA\nNA\nNA\nNA\nNA\nNA\n74.607990\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n84.658214\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.95712\n\n\nPuerto Rico\nNA\nNA\nNA\nNA\nNA\n85.85034\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n89.73096\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.95798\nNA\nNA\nNA\nNA\nNA\nNA\n90.91396\n\n\nQatar\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n72.45895\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.88868\nNA\nNA\nNA\nNA\nNA\nNA\n88.60922\nNA\nNA\n90.43612\n92.66382\n92.91018\n95.40186\nNA\n\n\nRomania\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n94.98269\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.26632\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.14531\n\n\nRussia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.75817\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.22836\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.64778\nNA\n\n\nRwanda\nNA\nNA\nNA\n26.57358\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n59.75034\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n61.54861\nNA\n\n\nSaint Kitts and Nevis\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSaint Lucia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSaint Vincent and the Grenadines\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSamoa\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.421739\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.24641\nNA\nNA\nNA\nNA\nNA\nNA\n98.61721\n\n\nSan Marino\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSao Tome and Principe\nNA\nNA\nNA\nNA\nNA\nNA\n42.363383\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n61.920478\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n77.949235\nNA\nNA\nNA\nNA\nNA\nNA\n60.08303\nNA\nNA\nNA\n\n\nSaudi Arabia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n57.27784\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n69.29119\nNA\nNA\nNA\n76.33516\nNA\nNA\nNA\nNA\nNA\nNA\n82.23673\n\n\nSenegal\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n17.86327\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n29.24734\nNA\nNA\nNA\n32.98758\nNA\nNA\n38.66625\nNA\nNA\n\n\nSerbia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.87049\n\n\nSeychelles\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n85.48930\nNA\nNA\nNA\nNA\nNA\nNA\n88.58660\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.25898\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.25898\n\n\nSierra Leone\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n24.15893\nNA\nNA\nNA\nNA\nNA\nNA\n32.62891\n\n\nSingapore\nNA\nNA\nNA\nNA\nNA\n73.96854\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n83.02685\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n88.64518\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n93.77481\nNA\n\n\nSlovak Republic\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSlovenia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.453752\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.61597\nNA\nNA\nNA\nNA\nNA\nNA\n99.67143\n\n\nSolomon Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSomalia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSouth Africa\nNA\nNA\nNA\nNA\nNA\n74.80719\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.92863\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n87.04310\nNA\nNA\nNA\n92.18371\n\n\nSpain\nNA\nNA\nNA\nNA\nNA\nNA\n89.936922\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.050996\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.92515\nNA\n97.26032\n96.88684\n96.92597\n97.00450\nNA\n\n\nSri Lanka\nNA\nNA\nNA\nNA\nNA\nNA\n82.021974\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n89.135764\nNA\nNA\nNA\nNA\n89.09135\nNA\n89.07347\nNA\n89.95868\nNA\n\n\nSudan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n52.14640\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n63.16023\n\n\nSuriname\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n87.19744\nNA\nNA\nNA\n93.76537\nNA\n94.00354\nNA\n\n\nSwaziland\nNA\n53.665959\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n65.22288\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.32875\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n87.32746\n\n\nSweden\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSwitzerland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSyria\nNA\nNA\nNA\nNA\nNA\nNA\n37.059159\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n74.24044\nNA\n73.62656\nNA\nNA\nNA\nNA\nNA\nNA\n77.74985\n\n\nTajikistan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n96.64180\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.22174\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.61533\n\n\nTanzania\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n48.08802\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n62.17232\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n60.75262\nNA\n\n\nThailand\nNA\nNA\nNA\nNA\nNA\n83.89335\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n90.51602\nNA\nNA\nNA\nNA\n91.52955\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nTimor-Leste\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n30.000000\nNA\nNA\nNA\nNA\nNA\n42.50000\nNA\nNA\n52.95900\nNA\n\n\nTogo\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n38.45329\nNA\nNA\nNA\nNA\nNA\n44.37663\nNA\nNA\n43.60690\nNA\n47.97739\n\n\nTokelau\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nTonga\nNA\n99.525535\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.97555\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.08251\nNA\nNA\nNA\nNA\nNA\n\n\nTrinidad and Tobago\nNA\nNA\nNA\nNA\nNA\n93.46417\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.66179\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.81030\nNA\nNA\nNA\nNA\nNA\nNA\n98.48690\n\n\nTunisia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n35.76757\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n48.24096\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n65.34786\nNA\nNA\n68.50938\n70.96418\nNA\n71.08821\nNA\n\n\nTurkey\n45.098921\nNA\nNA\nNA\nNA\n49.80641\nNA\nNA\nNA\nNA\n64.23172\nNA\nNA\nNA\nNA\n68.51966\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n79.58169\n80.54895\n80.38516\n81.26383\nNA\n85.34716\n88.07317\n90.31010\n\n\nTurkmenistan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.26177\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.49422\n\n\nTurks and Caicos Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nTuvalu\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nUganda\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n44.826692\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n58.90988\nNA\nNA\nNA\n62.07897\nNA\nNA\nNA\n64.59145\nNA\n\n\nUkraine\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.171572\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.66040\n\n\nUnited Arab Emirates\n38.124870\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n68.66128\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.47475\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nUnited Kingdom\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nUnited States\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nUruguay\n94.304522\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n95.88154\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n97.27096\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.08436\n98.24193\n98.46366\n98.60602\n98.49095\nNA\n\n\nUzbekistan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n98.13858\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n99.23196\n\n\nVanuatu\nNA\nNA\nNA\nNA\n47.782592\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n65.45371\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n76.04636\nNA\nNA\nNA\nNA\nNA\nNA\n81.55354\n\n\nVenezuela\nNA\nNA\nNA\nNA\nNA\nNA\n83.004664\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n89.00485\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n92.715979\nNA\nNA\nNA\nNA\nNA\n94.92964\nNA\n95.35040\nNA\nNA\n\n\nWest Bank and Gaza\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n79.72662\nNA\nNA\nNA\nNA\nNA\nNA\n87.95174\nNA\n89.75692\n90.46518\n90.90285\n91.70453\n92.17280\n92.61618\n\n\nVietnam\nNA\nNA\nNA\nNA\n78.140390\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n82.82939\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n86.92008\n86.61011\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n91.38346\n\n\nYemen, Rep.\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n17.05956\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n35.48549\nNA\nNA\nNA\nNA\nNA\nNA\n48.53905\n\n\nZambia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n57.35772\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n59.80285\nNA\nNA\n61.83928\nNA\nNA\nNA\nNA\n51.78697\nNA\nNA\nNA\nNA\n\n\nZimbabwe\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n71.85393\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n78.51702\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n80.06566\n\n\nAbkhazia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAkrotiri and Dhekelia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAmerican Samoa\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nChannel Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nChristmas Island\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCocos Island\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCzechoslovakia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nEast Germany\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nEritrea and Ethiopia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFaeroe Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFalkland Islands (Malvinas)\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFrench Guiana\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFrench Polynesia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGreenland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGuadeloupe\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGuam\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nGuernsey\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nIsle of Man\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nJersey\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nKorea, United\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nKosovo\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMartinique\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMayotte\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNew Caledonia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNgorno-Karabakh\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNorfolk Island\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNorthern Cyprus\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNorthern Mariana Islands\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPitcairn\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nReunion\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSaint Barthélemy\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSaint Helena\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSaint Martin\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSaint-Pierre-et-Miquelon\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSerbia and Montenegro\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSerbia excluding Kosovo\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSomaliland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSouth Ossetia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSouth Sudan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSvalbard\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nTaiwan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nTransnistria\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nUSSR\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nWallis et Futuna\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nWest Germany\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nWestern Sahara\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nVirgin Islands (U.S.)\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nYemen Arab Republic (Former)\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nYemen Democratic (Former)\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nYugoslavia\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nÅland\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#pivot_longer-1",
    "href": "slides/2025-09-15-pivotjoin.html#pivot_longer-1",
    "title": "Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\n\nlitF &lt;- litF |&gt; \n  rename(country = starts_with(\"Adult\")) |&gt; \n  pivot_longer(cols = -country,\n               names_to = \"year\", \n               values_to = \"litRateF\") |&gt; \n  filter(!is.na(litRateF))\n\nlitF |&gt; \n  gt::gt()\n\n\n\n\n\n\n\ncountry\nyear\nlitRateF\n\n\n\n\nAfghanistan\n1979\n4.987460\n\n\nAfghanistan\n2011\n13.000000\n\n\nAlbania\n2001\n98.252274\n\n\nAlbania\n2008\n94.681814\n\n\nAlbania\n2011\n95.691480\n\n\nAlgeria\n1987\n35.839915\n\n\nAlgeria\n2002\n60.075082\n\n\nAlgeria\n2006\n63.918785\n\n\nAngola\n2001\n54.194488\n\n\nAngola\n2011\n58.608460\n\n\nAnguilla\n1984\n95.714930\n\n\nAntigua and Barbuda\n2001\n99.420000\n\n\nAntigua and Barbuda\n2011\n99.420000\n\n\nArgentina\n1980\n93.580894\n\n\nArgentina\n1991\n96.041358\n\n\nArgentina\n2001\n97.193411\n\n\nArgentina\n2011\n97.890420\n\n\nArmenia\n1989\n98.150136\n\n\nArmenia\n2001\n99.161066\n\n\nArmenia\n2011\n99.453760\n\n\nAruba\n2000\n97.071360\n\n\nAruba\n2010\n96.719777\n\n\nAzerbaijan\n1999\n98.174785\n\n\nAzerbaijan\n2007\n99.397876\n\n\nAzerbaijan\n2009\n99.682152\n\n\nBahrain\n1981\n58.591092\n\n\nBahrain\n1991\n76.932319\n\n\nBahrain\n2001\n83.557418\n\n\nBahrain\n2010\n91.612576\n\n\nBangladesh\n1981\n17.971629\n\n\nBangladesh\n1991\n25.838980\n\n\nBangladesh\n2001\n40.823350\n\n\nBangladesh\n2011\n53.410500\n\n\nBelarus\n1989\n96.628221\n\n\nBelarus\n1999\n99.419719\n\n\nBelarus\n2009\n99.493993\n\n\nBelize\n1991\n70.328394\n\n\nBenin\n1979\n9.539080\n\n\nBenin\n1992\n16.565239\n\n\nBenin\n2002\n23.300138\n\n\nBenin\n2006\n18.442914\n\n\nBhutan\n2005\n38.680657\n\n\nBolivia\n1976\n51.374645\n\n\nBolivia\n1992\n72.313217\n\n\nBolivia\n2001\n80.654383\n\n\nBolivia\n2007\n85.985939\n\n\nBolivia\n2008\n86.831754\n\n\nBolivia\n2009\n86.821457\n\n\nBosnia and Herzegovina\n2000\n94.359945\n\n\nBosnia and Herzegovina\n2011\n96.695260\n\n\nBotswana\n1991\n71.299236\n\n\nBotswana\n2003\n81.807948\n\n\nBotswana\n2011\n85.561560\n\n\nBrazil\n1980\n72.853148\n\n\nBrazil\n2000\n86.500048\n\n\nBrazil\n2004\n88.806127\n\n\nBrazil\n2006\n89.855592\n\n\nBrazil\n2007\n90.228007\n\n\nBrazil\n2008\n90.219555\n\n\nBrazil\n2009\n90.411217\n\n\nBrazil\n2010\n90.681695\n\n\nBrunei\n1981\n68.982584\n\n\nBrunei\n1991\n82.461356\n\n\nBrunei\n2001\n90.161545\n\n\nBrunei\n2011\n93.920810\n\n\nBulgaria\n2001\n97.706486\n\n\nBulgaria\n2011\n97.983897\n\n\nBurkina Faso\n1975\n3.182766\n\n\nBurkina Faso\n1991\n8.225427\n\n\nBurkina Faso\n1996\n8.057980\n\n\nBurkina Faso\n2003\n15.188768\n\n\nBurkina Faso\n2005\n16.622242\n\n\nBurkina Faso\n2007\n21.579565\n\n\nBurundi\n1979\n11.983568\n\n\nBurundi\n1990\n27.529298\n\n\nBurundi\n2000\n52.237762\n\n\nBurundi\n2008\n84.591468\n\n\nCambodia\n1998\n56.992504\n\n\nCambodia\n2004\n64.050990\n\n\nCambodia\n2008\n70.858199\n\n\nCambodia\n2009\n65.931248\n\n\nCameroon\n1976\n29.116129\n\n\nCameroon\n2000\n58.721762\n\n\nCameroon\n2007\n63.022058\n\n\nCameroon\n2010\n64.799498\n\n\nCape Verde\n1990\n52.998616\n\n\nCape Verde\n2004\n74.069260\n\n\nCape Verde\n2011\n80.258240\n\n\nCayman Islands\n2007\n99.021477\n\n\nCentral African Rep.\n1975\n8.399576\n\n\nCentral African Rep.\n1988\n20.336880\n\n\nCentral African Rep.\n2000\n35.290904\n\n\nCentral African Rep.\n2011\n44.177470\n\n\nChad\n1993\n4.591826\n\n\nChad\n2000\n12.796419\n\n\nChad\n2004\n17.980583\n\n\nChad\n2011\n25.398260\n\n\nChile\n1982\n90.800121\n\n\nChile\n1992\n94.036714\n\n\nChile\n2002\n95.640927\n\n\nChile\n2008\n98.695573\n\n\nChile\n2009\n98.491277\n\n\nChina\n1982\n51.136808\n\n\nChina\n1990\n68.072077\n\n\nChina\n2000\n86.526595\n\n\nChina\n2010\n92.711235\n\n\nColombia\n1993\n81.235482\n\n\nColombia\n1996\n91.314000\n\n\nColombia\n2004\n92.714627\n\n\nColombia\n2005\n92.911248\n\n\nColombia\n2006\n92.220596\n\n\nColombia\n2007\n92.845624\n\n\nColombia\n2008\n93.435373\n\n\nColombia\n2009\n93.415130\n\n\nColombia\n2010\n93.486789\n\n\nColombia\n2011\n93.667138\n\n\nComoros\n1980\n40.317616\n\n\nComoros\n2000\n63.459016\n\n\nComoros\n2011\n70.570020\n\n\nCongo, Dem. Rep.\n2001\n54.060896\n\n\nCongo, Dem. Rep.\n2007\n46.104254\n\n\nCosta Rica\n1984\n92.577129\n\n\nCosta Rica\n2000\n95.080791\n\n\nCosta Rica\n2011\n96.478860\n\n\nCote d'Ivoire\n1988\n23.433782\n\n\nCote d'Ivoire\n1998\n28.476671\n\n\nCote d'Ivoire\n2000\n38.614513\n\n\nCote d'Ivoire\n2011\n47.583590\n\n\nCroatia\n1991\n94.817222\n\n\nCroatia\n2001\n97.083898\n\n\nCroatia\n2011\n98.311050\n\n\nCuba\n2002\n99.790922\n\n\nCuba\n2011\n99.826790\n\n\nCyprus\n1992\n91.001781\n\n\nCyprus\n2001\n95.079665\n\n\nCyprus\n2011\n98.116229\n\n\nDominican Rep.\n1981\n72.536085\n\n\nDominican Rep.\n2002\n87.177093\n\n\nDominican Rep.\n2007\n88.277171\n\n\nDominican Rep.\n2010\n89.697297\n\n\nDominican Rep.\n2011\n90.225520\n\n\nEcuador\n1982\n80.405227\n\n\nEcuador\n1990\n86.193333\n\n\nEcuador\n2001\n89.697087\n\n\nEcuador\n2007\n81.680587\n\n\nEcuador\n2009\n81.451195\n\n\nEcuador\n2010\n90.470106\n\n\nEcuador\n2011\n90.220825\n\n\nEgypt\n1976\n22.438008\n\n\nEgypt\n1986\n31.404191\n\n\nEgypt\n1996\n43.595306\n\n\nEgypt\n2005\n59.355576\n\n\nEgypt\n2006\n57.811914\n\n\nEgypt\n2010\n63.515813\n\n\nEgypt\n2011\n64.636235\n\n\nEl Salvador\n1992\n71.280532\n\n\nEl Salvador\n2004\n78.358650\n\n\nEl Salvador\n2006\n81.003825\n\n\nEl Salvador\n2007\n79.662128\n\n\nEl Salvador\n2008\n81.359502\n\n\nEl Salvador\n2009\n81.817946\n\n\nEl Salvador\n2010\n82.308023\n\n\nEquatorial Guinea\n2000\n81.622999\n\n\nEquatorial Guinea\n2011\n91.078680\n\n\nEritrea\n2002\n40.224423\n\n\nEritrea\n2011\n59.039920\n\n\nEstonia\n1989\n99.601483\n\n\nEstonia\n2000\n99.760061\n\n\nEstonia\n2011\n99.819710\n\n\nEthiopia\n1994\n18.514981\n\n\nEthiopia\n2004\n22.800000\n\n\nEthiopia\n2005\n17.977197\n\n\nEthiopia\n2007\n28.921636\n\n\nGabon\n1993\n65.326310\n\n\nGabon\n2004\n79.309270\n\n\nGabon\n2011\n85.638330\n\n\nGambia\n2000\n25.061546\n\n\nGambia\n2011\n41.887120\n\n\nGeorgia\n2002\n99.552854\n\n\nGeorgia\n2011\n99.686130\n\n\nGhana\n2000\n49.791962\n\n\nGhana\n2010\n65.294686\n\n\nGreece\n1981\n85.319987\n\n\nGreece\n1991\n89.353296\n\n\nGreece\n2001\n94.239412\n\n\nGreece\n2011\n96.278980\n\n\nGuatemala\n1994\n57.292661\n\n\nGuatemala\n2002\n63.341381\n\n\nGuatemala\n2011\n71.080820\n\n\nGuinea\n1996\n9.743070\n\n\nGuinea\n2003\n18.238683\n\n\nGuinea\n2010\n12.191970\n\n\nGuinea-Bissau\n1979\n8.588262\n\n\nGuinea-Bissau\n2000\n27.494212\n\n\nGuinea-Bissau\n2011\n42.067040\n\n\nGuyana\n2009\n87.251977\n\n\nHaiti\n1982\n32.524956\n\n\nHaiti\n2003\n54.861468\n\n\nHaiti\n2006\n44.599454\n\n\nHonduras\n2001\n80.223602\n\n\nHonduras\n2007\n83.452774\n\n\nHonduras\n2010\n84.725034\n\n\nHonduras\n2011\n84.930350\n\n\nHungary\n1980\n98.454130\n\n\nHungary\n1994\n98.713100\n\n\nHungary\n2004\n98.854110\n\n\nHungary\n2011\n98.938700\n\n\nIndia\n1981\n25.676252\n\n\nIndia\n1991\n33.729527\n\n\nIndia\n2001\n47.842099\n\n\nIndia\n2006\n50.823756\n\n\nIndonesia\n1980\n57.694628\n\n\nIndonesia\n1990\n75.270119\n\n\nIndonesia\n2004\n86.799589\n\n\nIndonesia\n2006\n88.786984\n\n\nIndonesia\n2008\n89.101391\n\n\nIndonesia\n2009\n89.677117\n\n\nIndonesia\n2011\n90.068697\n\n\nIran\n1976\n24.423083\n\n\nIran\n1986\n41.033950\n\n\nIran\n1991\n56.156417\n\n\nIran\n1996\n66.067764\n\n\nIran\n2002\n70.400000\n\n\nIran\n2005\n76.802638\n\n\nIran\n2006\n77.240018\n\n\nIran\n2008\n80.655322\n\n\nIraq\n2000\n64.169502\n\n\nIraq\n2011\n71.207160\n\n\nIsrael\n1983\n88.674717\n\n\nItaly\n1981\n95.536669\n\n\nItaly\n2001\n98.042153\n\n\nItaly\n2011\n98.741610\n\n\nJamaica\n1999\n85.872082\n\n\nJamaica\n2011\n91.765530\n\n\nJordan\n1979\n52.110613\n\n\nJordan\n2003\n84.713925\n\n\nJordan\n2005\n87.005809\n\n\nJordan\n2007\n88.903312\n\n\nJordan\n2010\n89.207744\n\n\nJordan\n2011\n93.933457\n\n\nKazakhstan\n1989\n96.138771\n\n\nKazakhstan\n1999\n99.289895\n\n\nKazakhstan\n2009\n99.684290\n\n\nKenya\n2000\n77.892980\n\n\nKenya\n2007\n66.863118\n\n\nKorea, Dem. Rep.\n2008\n99.997615\n\n\nKuwait\n1975\n48.015214\n\n\nKuwait\n1980\n59.110502\n\n\nKuwait\n1985\n68.849366\n\n\nKuwait\n1995\n74.148717\n\n\nKuwait\n2005\n91.042500\n\n\nKuwait\n2006\n90.828634\n\n\nKuwait\n2007\n91.503495\n\n\nKuwait\n2008\n91.793021\n\n\nKyrgyzstan\n1999\n98.130627\n\n\nKyrgyzstan\n2009\n98.981213\n\n\nLaos\n1995\n47.902362\n\n\nLaos\n2000\n58.460699\n\n\nLaos\n2001\n60.902520\n\n\nLaos\n2005\n63.226986\n\n\nLatvia\n1989\n99.202551\n\n\nLatvia\n2000\n99.709731\n\n\nLatvia\n2011\n99.797280\n\n\nLebanon\n2007\n85.967782\n\n\nLesotho\n2000\n92.046453\n\n\nLesotho\n2009\n84.963959\n\n\nLiberia\n1984\n19.302791\n\n\nLiberia\n1994\n32.018520\n\n\nLiberia\n2004\n47.876330\n\n\nLiberia\n2007\n27.034907\n\n\nLibya\n1984\n42.313554\n\n\nLibya\n1994\n64.959310\n\n\nLibya\n2004\n78.197820\n\n\nLibya\n2011\n83.323030\n\n\nLithuania\n1989\n97.781588\n\n\nLithuania\n2001\n99.647943\n\n\nLithuania\n2011\n99.720630\n\n\nMacao, China\n1981\n86.215884\n\n\nMacao, China\n2001\n87.774972\n\n\nMacao, China\n2006\n90.723589\n\n\nMacao, China\n2011\n93.731906\n\n\nMacedonia, FYR\n1994\n90.928024\n\n\nMacedonia, FYR\n2002\n94.056068\n\n\nMacedonia, FYR\n2011\n96.042520\n\n\nMadagascar\n2000\n65.278572\n\n\nMadagascar\n2009\n61.641406\n\n\nMalawi\n1987\n33.523022\n\n\nMalawi\n1998\n53.997116\n\n\nMalawi\n2010\n51.251965\n\n\nMalaysia\n1980\n61.248496\n\n\nMalaysia\n1991\n77.283088\n\n\nMalaysia\n2000\n85.354224\n\n\nMalaysia\n2010\n90.747682\n\n\nMaldives\n1977\n82.178163\n\n\nMaldives\n1985\n92.359012\n\n\nMaldives\n1990\n96.146011\n\n\nMaldives\n1995\n96.442981\n\n\nMaldives\n2000\n96.442981\n\n\nMaldives\n2006\n98.429847\n\n\nMali\n1976\n5.735281\n\n\nMali\n1998\n11.893428\n\n\nMali\n2003\n15.900000\n\n\nMali\n2006\n18.190913\n\n\nMali\n2010\n20.287932\n\n\nMali\n2011\n24.567414\n\n\nMalta\n1985\n88.292746\n\n\nMalta\n1995\n89.242644\n\n\nMalta\n2005\n93.504251\n\n\nMauritania\n2000\n43.417359\n\n\nMauritania\n2011\n51.977670\n\n\nMauritius\n1990\n74.660887\n\n\nMauritius\n2000\n80.500029\n\n\nMauritius\n2011\n86.664070\n\n\nMexico\n1980\n79.890999\n\n\nMexico\n1990\n84.955907\n\n\nMexico\n2000\n88.682040\n\n\nMexico\n2002\n88.728630\n\n\nMexico\n2004\n89.631020\n\n\nMexico\n2005\n90.210413\n\n\nMexico\n2006\n89.834511\n\n\nMexico\n2007\n91.355551\n\n\nMexico\n2008\n91.453608\n\n\nMexico\n2009\n92.116246\n\n\nMexico\n2010\n91.853422\n\n\nMexico\n2011\n92.338282\n\n\nMoldova\n1989\n94.444478\n\n\nMoldova\n2000\n95.492298\n\n\nMoldova\n2011\n98.482890\n\n\nMongolia\n2000\n97.528800\n\n\nMongolia\n2011\n97.877140\n\n\nMontenegro\n2011\n97.589140\n\n\nMorocco\n1982\n17.514867\n\n\nMorocco\n1994\n28.725419\n\n\nMorocco\n2004\n39.619556\n\n\nMorocco\n2008\n42.587848\n\n\nMorocco\n2009\n43.921080\n\n\nMorocco\n2011\n57.639991\n\n\nMozambique\n1980\n12.146315\n\n\nMozambique\n1997\n24.964204\n\n\nMozambique\n2003\n33.193959\n\n\nMozambique\n2009\n36.452282\n\n\nMyanmar\n1983\n71.630874\n\n\nMyanmar\n2000\n86.415182\n\n\nMyanmar\n2011\n90.370640\n\n\nNamibia\n1991\n73.986597\n\n\nNamibia\n2001\n83.490088\n\n\nNamibia\n2007\n78.350978\n\n\nNepal\n1981\n9.153116\n\n\nNepal\n1991\n17.381793\n\n\nNepal\n2001\n34.886764\n\n\nNepal\n2011\n46.706098\n\n\nNetherlands Antilles\n1992\n95.010912\n\n\nNetherlands Antilles\n2011\n96.533810\n\n\nNicaragua\n2001\n76.601656\n\n\nNicaragua\n2005\n77.916042\n\n\nNiger\n2001\n9.398724\n\n\nNiger\n2005\n15.084138\n\n\nNigeria\n1991\n43.729197\n\n\nNigeria\n2003\n43.322054\n\n\nNigeria\n2008\n41.386756\n\n\nOman\n2003\n73.531714\n\n\nOman\n2008\n80.872258\n\n\nOman\n2010\n81.803227\n\n\nPakistan\n1981\n14.771552\n\n\nPakistan\n1998\n29.043839\n\n\nPakistan\n2005\n35.367520\n\n\nPakistan\n2006\n39.613234\n\n\nPakistan\n2008\n40.081179\n\n\nPakistan\n2009\n40.314619\n\n\nPalau\n1980\n90.503238\n\n\nPanama\n1980\n88.046528\n\n\nPanama\n1990\n88.214846\n\n\nPanama\n2000\n91.247179\n\n\nPanama\n2010\n93.485262\n\n\nPapua New Guinea\n2000\n50.917736\n\n\nPapua New Guinea\n2011\n59.401460\n\n\nParaguay\n1982\n75.852982\n\n\nParaguay\n1992\n88.558712\n\n\nParaguay\n2007\n93.453270\n\n\nParaguay\n2008\n92.494428\n\n\nParaguay\n2009\n93.144014\n\n\nParaguay\n2010\n92.925745\n\n\nPeru\n1981\n73.858337\n\n\nPeru\n1993\n81.658753\n\n\nPeru\n2004\n82.062620\n\n\nPeru\n2005\n82.454367\n\n\nPeru\n2006\n83.454865\n\n\nPeru\n2007\n84.646878\n\n\nPhilippines\n1980\n82.762148\n\n\nPhilippines\n1990\n93.180725\n\n\nPhilippines\n2000\n92.654907\n\n\nPhilippines\n2003\n93.564533\n\n\nPhilippines\n2008\n95.825633\n\n\nPoland\n1978\n98.251980\n\n\nPoland\n1994\n99.118490\n\n\nPoland\n2004\n99.422290\n\n\nPoland\n2011\n99.584860\n\n\nPortugal\n1981\n74.607990\n\n\nPortugal\n1991\n84.658214\n\n\nPortugal\n2011\n93.957120\n\n\nPuerto Rico\n1980\n85.850339\n\n\nPuerto Rico\n1990\n89.730961\n\n\nPuerto Rico\n2004\n90.957980\n\n\nPuerto Rico\n2011\n90.913960\n\n\nQatar\n1986\n72.458947\n\n\nQatar\n1997\n80.888683\n\n\nQatar\n2004\n88.609219\n\n\nQatar\n2007\n90.436121\n\n\nQatar\n2008\n92.663825\n\n\nQatar\n2009\n92.910178\n\n\nQatar\n2010\n95.401856\n\n\nRomania\n1992\n94.982691\n\n\nRomania\n2002\n96.266316\n\n\nRomania\n2011\n97.145310\n\n\nRussia\n1989\n96.758170\n\n\nRussia\n2002\n99.228357\n\n\nRussia\n2010\n99.647776\n\n\nRwanda\n1978\n26.573577\n\n\nRwanda\n2000\n59.750337\n\n\nRwanda\n2010\n61.548613\n\n\nSamoa\n1991\n97.421739\n\n\nSamoa\n2004\n98.246410\n\n\nSamoa\n2011\n98.617210\n\n\nSao Tome and Principe\n1981\n42.363383\n\n\nSao Tome and Principe\n1991\n61.920478\n\n\nSao Tome and Principe\n2001\n77.949235\n\n\nSao Tome and Principe\n2008\n60.083026\n\n\nSaudi Arabia\n1992\n57.277841\n\n\nSaudi Arabia\n2000\n69.291193\n\n\nSaudi Arabia\n2004\n76.335155\n\n\nSaudi Arabia\n2011\n82.236730\n\n\nSenegal\n1988\n17.863266\n\n\nSenegal\n2002\n29.247343\n\n\nSenegal\n2006\n32.987585\n\n\nSenegal\n2009\n38.666249\n\n\nSerbia\n2011\n96.870490\n\n\nSeychelles\n1987\n85.489304\n\n\nSeychelles\n1994\n88.586598\n\n\nSeychelles\n2002\n92.258980\n\n\nSeychelles\n2011\n92.258980\n\n\nSierra Leone\n2004\n24.158927\n\n\nSierra Leone\n2011\n32.628910\n\n\nSingapore\n1980\n73.968537\n\n\nSingapore\n1990\n83.026848\n\n\nSingapore\n2000\n88.645175\n\n\nSingapore\n2010\n93.774814\n\n\nSlovenia\n1991\n99.453752\n\n\nSlovenia\n2004\n99.615970\n\n\nSlovenia\n2011\n99.671430\n\n\nSouth Africa\n1980\n74.807189\n\n\nSouth Africa\n1996\n80.928629\n\n\nSouth Africa\n2007\n87.043102\n\n\nSouth Africa\n2011\n92.183714\n\n\nSpain\n1981\n89.936922\n\n\nSpain\n1991\n95.050996\n\n\nSpain\n2005\n96.925155\n\n\nSpain\n2007\n97.260323\n\n\nSpain\n2008\n96.886839\n\n\nSpain\n2009\n96.925968\n\n\nSpain\n2010\n97.004504\n\n\nSri Lanka\n1981\n82.021974\n\n\nSri Lanka\n2001\n89.135764\n\n\nSri Lanka\n2006\n89.091352\n\n\nSri Lanka\n2008\n89.073472\n\n\nSri Lanka\n2010\n89.958678\n\n\nSudan\n2000\n52.146397\n\n\nSudan\n2011\n63.160230\n\n\nSuriname\n2004\n87.197436\n\n\nSuriname\n2008\n93.765371\n\n\nSuriname\n2010\n94.003541\n\n\nSwaziland\n1976\n53.665959\n\n\nSwaziland\n1986\n65.222882\n\n\nSwaziland\n2000\n80.328752\n\n\nSwaziland\n2011\n87.327460\n\n\nSyria\n1981\n37.059159\n\n\nSyria\n2002\n74.240440\n\n\nSyria\n2004\n73.626561\n\n\nSyria\n2011\n77.749850\n\n\nTajikistan\n1989\n96.641803\n\n\nTajikistan\n2000\n99.221736\n\n\nTajikistan\n2011\n99.615330\n\n\nTanzania\n1988\n48.088024\n\n\nTanzania\n2002\n62.172318\n\n\nTanzania\n2010\n60.752618\n\n\nThailand\n1980\n83.893354\n\n\nThailand\n2000\n90.516017\n\n\nThailand\n2005\n91.529549\n\n\nTimor-Leste\n2001\n30.000000\n\n\nTimor-Leste\n2007\n42.500000\n\n\nTimor-Leste\n2010\n52.959000\n\n\nTogo\n2000\n38.453292\n\n\nTogo\n2006\n44.376626\n\n\nTogo\n2009\n43.606898\n\n\nTogo\n2011\n47.977387\n\n\nTonga\n1976\n99.525535\n\n\nTonga\n1996\n98.975550\n\n\nTonga\n2006\n99.082511\n\n\nTrinidad and Tobago\n1980\n93.464165\n\n\nTrinidad and Tobago\n1990\n95.661794\n\n\nTrinidad and Tobago\n2004\n97.810300\n\n\nTrinidad and Tobago\n2011\n98.486900\n\n\nTunisia\n1984\n35.767567\n\n\nTunisia\n1994\n48.240960\n\n\nTunisia\n2004\n65.347859\n\n\nTunisia\n2007\n68.509379\n\n\nTunisia\n2008\n70.964177\n\n\nTunisia\n2010\n71.088212\n\n\nTurkey\n1975\n45.098921\n\n\nTurkey\n1980\n49.806407\n\n\nTurkey\n1985\n64.231724\n\n\nTurkey\n1990\n68.519655\n\n\nTurkey\n2004\n79.581693\n\n\nTurkey\n2005\n80.548953\n\n\nTurkey\n2006\n80.385161\n\n\nTurkey\n2007\n81.263827\n\n\nTurkey\n2009\n85.347157\n\n\nTurkey\n2010\n88.073171\n\n\nTurkey\n2011\n90.310105\n\n\nTurkmenistan\n1995\n98.261765\n\n\nTurkmenistan\n2011\n99.494220\n\n\nUganda\n1991\n44.826692\n\n\nUganda\n2002\n58.909883\n\n\nUganda\n2006\n62.078969\n\n\nUganda\n2010\n64.591451\n\n\nUkraine\n2001\n99.171572\n\n\nUkraine\n2011\n99.660400\n\n\nUnited Arab Emirates\n1975\n38.124870\n\n\nUnited Arab Emirates\n1985\n68.661283\n\n\nUnited Arab Emirates\n2005\n91.474749\n\n\nUruguay\n1975\n94.304522\n\n\nUruguay\n1985\n95.881538\n\n\nUruguay\n1996\n97.270960\n\n\nUruguay\n2006\n98.084359\n\n\nUruguay\n2007\n98.241933\n\n\nUruguay\n2008\n98.463660\n\n\nUruguay\n2009\n98.606016\n\n\nUruguay\n2010\n98.490953\n\n\nUzbekistan\n2000\n98.138584\n\n\nUzbekistan\n2011\n99.231960\n\n\nVanuatu\n1979\n47.782592\n\n\nVanuatu\n1994\n65.453710\n\n\nVanuatu\n2004\n76.046360\n\n\nVanuatu\n2011\n81.553540\n\n\nVenezuela\n1981\n83.004664\n\n\nVenezuela\n1990\n89.004855\n\n\nVenezuela\n2001\n92.715979\n\n\nVenezuela\n2007\n94.929643\n\n\nVenezuela\n2009\n95.350398\n\n\nWest Bank and Gaza\n1997\n79.726622\n\n\nWest Bank and Gaza\n2004\n87.951736\n\n\nWest Bank and Gaza\n2006\n89.756918\n\n\nWest Bank and Gaza\n2007\n90.465184\n\n\nWest Bank and Gaza\n2008\n90.902854\n\n\nWest Bank and Gaza\n2009\n91.704532\n\n\nWest Bank and Gaza\n2010\n92.172796\n\n\nWest Bank and Gaza\n2011\n92.616180\n\n\nVietnam\n1979\n78.140390\n\n\nVietnam\n1989\n82.829392\n\n\nVietnam\n1999\n86.920080\n\n\nVietnam\n2000\n86.610113\n\n\nVietnam\n2011\n91.383460\n\n\nYemen, Rep.\n1994\n17.059565\n\n\nYemen, Rep.\n2004\n35.485490\n\n\nYemen, Rep.\n2011\n48.539050\n\n\nZambia\n1990\n57.357722\n\n\nZambia\n1999\n59.802846\n\n\nZambia\n2002\n61.839278\n\n\nZambia\n2007\n51.786967\n\n\nZimbabwe\n1982\n71.853928\n\n\nZimbabwe\n1992\n78.517018\n\n\nZimbabwe\n2011\n80.065659"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#pivot_longer-2",
    "href": "slides/2025-09-15-pivotjoin.html#pivot_longer-2",
    "title": "Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\nGDP represents country, year, and gdp (in fixed 2000 US$).\n\nGDP &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1RctTQmKB0hzbm1E8rGcufYdMshRdhmYdeL29nXqmvsc/pub?gid=0\")\n\nGDP &lt;- GDP |&gt;  \n  rename(country = starts_with(\"Income\")) |&gt; \n  pivot_longer(cols = -country, \n               names_to = \"year\",\n               values_to = \"gdp\") |&gt; \n  filter(!is.na(gdp))\n\nGDP |&gt; \n  gt::gt()\n\n\n\n\n\n\n\ncountry\nyear\ngdp\n\n\n\n\nAlbania\n1980\n1060.68460\n\n\nAlbania\n1981\n1099.51270\n\n\nAlbania\n1982\n1110.51226\n\n\nAlbania\n1983\n1101.33565\n\n\nAlbania\n1984\n1065.23535\n\n\nAlbania\n1985\n1059.86574\n\n\nAlbania\n1986\n1091.56056\n\n\nAlbania\n1987\n1054.24780\n\n\nAlbania\n1988\n1013.62901\n\n\nAlbania\n1989\n1092.47457\n\n\nAlbania\n1990\n977.76553\n\n\nAlbania\n1991\n687.99187\n\n\nAlbania\n1992\n643.28585\n\n\nAlbania\n1993\n714.24143\n\n\nAlbania\n1994\n784.58315\n\n\nAlbania\n1995\n899.78294\n\n\nAlbania\n1996\n990.65320\n\n\nAlbania\n1997\n895.56097\n\n\nAlbania\n1998\n1013.51432\n\n\nAlbania\n1999\n1118.17151\n\n\nAlbania\n2000\n1200.13744\n\n\nAlbania\n2001\n1281.84280\n\n\nAlbania\n2002\n1313.72273\n\n\nAlbania\n2003\n1381.04083\n\n\nAlbania\n2004\n1454.02285\n\n\nAlbania\n2005\n1525.72359\n\n\nAlbania\n2006\n1594.49507\n\n\nAlbania\n2007\n1681.61391\n\n\nAlbania\n2008\n1804.41942\n\n\nAlbania\n2009\n1857.35295\n\n\nAlbania\n2010\n1915.42446\n\n\nAlbania\n2011\n1965.70723\n\n\nAlgeria\n1960\n1280.38483\n\n\nAlgeria\n1961\n1085.41461\n\n\nAlgeria\n1962\n855.94799\n\n\nAlgeria\n1963\n1128.41578\n\n\nAlgeria\n1964\n1170.32390\n\n\nAlgeria\n1965\n1215.01578\n\n\nAlgeria\n1966\n1127.61429\n\n\nAlgeria\n1967\n1200.55822\n\n\nAlgeria\n1968\n1291.86398\n\n\nAlgeria\n1969\n1359.49100\n\n\nAlgeria\n1970\n1436.12977\n\n\nAlgeria\n1971\n1235.66380\n\n\nAlgeria\n1972\n1527.64637\n\n\nAlgeria\n1973\n1538.30643\n\n\nAlgeria\n1974\n1603.34962\n\n\nAlgeria\n1975\n1632.29602\n\n\nAlgeria\n1976\n1714.07005\n\n\nAlgeria\n1977\n1747.66513\n\n\nAlgeria\n1978\n1848.43751\n\n\nAlgeria\n1979\n1923.29062\n\n\nAlgeria\n1980\n1876.07564\n\n\nAlgeria\n1981\n1869.62128\n\n\nAlgeria\n1982\n1924.61409\n\n\nAlgeria\n1983\n1963.36510\n\n\nAlgeria\n1984\n2008.47218\n\n\nAlgeria\n1985\n2020.08722\n\n\nAlgeria\n1986\n1969.76422\n\n\nAlgeria\n1987\n1902.06110\n\n\nAlgeria\n1988\n1833.15288\n\n\nAlgeria\n1989\n1864.71258\n\n\nAlgeria\n1990\n1832.74337\n\n\nAlgeria\n1991\n1766.66084\n\n\nAlgeria\n1992\n1755.97370\n\n\nAlgeria\n1993\n1680.37986\n\n\nAlgeria\n1994\n1630.38151\n\n\nAlgeria\n1995\n1660.00419\n\n\nAlgeria\n1996\n1698.33382\n\n\nAlgeria\n1997\n1690.23754\n\n\nAlgeria\n1998\n1750.65090\n\n\nAlgeria\n1999\n1781.14246\n\n\nAlgeria\n2000\n1794.40523\n\n\nAlgeria\n2001\n1814.41513\n\n\nAlgeria\n2002\n1871.92199\n\n\nAlgeria\n2003\n1971.51280\n\n\nAlgeria\n2004\n2043.13571\n\n\nAlgeria\n2005\n2115.18603\n\n\nAlgeria\n2006\n2124.95775\n\n\nAlgeria\n2007\n2155.48523\n\n\nAlgeria\n2008\n2173.78790\n\n\nAlgeria\n2009\n2192.70398\n\n\nAlgeria\n2010\n2231.98025\n\n\nAlgeria\n2011\n2255.22548\n\n\nAndorra\n1970\n18256.27007\n\n\nAndorra\n1971\n18142.98509\n\n\nAndorra\n1972\n18646.94486\n\n\nAndorra\n1973\n19135.29663\n\n\nAndorra\n1974\n19304.37348\n\n\nAndorra\n1975\n18607.40954\n\n\nAndorra\n1976\n18511.40113\n\n\nAndorra\n1977\n18394.46205\n\n\nAndorra\n1978\n18038.59978\n\n\nAndorra\n1979\n17379.32803\n\n\nAndorra\n1980\n17013.69849\n\n\nAndorra\n1981\n16169.02170\n\n\nAndorra\n1982\n15514.65763\n\n\nAndorra\n1983\n14976.59061\n\n\nAndorra\n1984\n14554.76284\n\n\nAndorra\n1985\n14354.90656\n\n\nAndorra\n1986\n14444.46206\n\n\nAndorra\n1987\n14983.63217\n\n\nAndorra\n1988\n15517.49469\n\n\nAndorra\n1989\n15947.49017\n\n\nAndorra\n1990\n16070.06577\n\n\nAndorra\n1991\n15813.10160\n\n\nAndorra\n1992\n15194.45922\n\n\nAndorra\n1993\n14318.18901\n\n\nAndorra\n1994\n14092.42408\n\n\nAndorra\n1995\n14125.59342\n\n\nAndorra\n1996\n14662.73640\n\n\nAndorra\n1997\n16071.64491\n\n\nAndorra\n1998\n16755.22069\n\n\nAndorra\n1999\n17513.17824\n\n\nAndorra\n2000\n17539.44200\n\n\nAndorra\n2001\n19085.36406\n\n\nAndorra\n2002\n19430.05478\n\n\nAndorra\n2003\n19834.63262\n\n\nAndorra\n2004\n20254.34629\n\n\nAndorra\n2005\n20737.94512\n\n\nAndorra\n2006\n21595.39548\n\n\nAndorra\n2007\n21495.80508\n\n\nAndorra\n2008\n21943.33990\n\n\nAngola\n1985\n362.47670\n\n\nAngola\n1986\n362.35414\n\n\nAngola\n1987\n381.15752\n\n\nAngola\n1988\n392.77281\n\n\nAngola\n1989\n384.42360\n\n\nAngola\n1990\n372.79451\n\n\nAngola\n1991\n357.31085\n\n\nAngola\n1992\n322.09297\n\n\nAngola\n1993\n234.66941\n\n\nAngola\n1994\n235.20500\n\n\nAngola\n1995\n251.89796\n\n\nAngola\n1996\n272.29119\n\n\nAngola\n1997\n286.00455\n\n\nAngola\n1998\n297.42128\n\n\nAngola\n1999\n298.57348\n\n\nAngola\n2000\n298.40584\n\n\nAngola\n2001\n297.90168\n\n\nAngola\n2002\n329.56559\n\n\nAngola\n2003\n328.77800\n\n\nAngola\n2004\n353.23147\n\n\nAngola\n2005\n404.27030\n\n\nAngola\n2006\n473.13634\n\n\nAngola\n2007\n562.98768\n\n\nAngola\n2008\n622.56688\n\n\nAngola\n2009\n619.81858\n\n\nAngola\n2010\n623.24527\n\n\nAngola\n2011\n629.95531\n\n\nAntigua and Barbuda\n1977\n3815.95369\n\n\nAntigua and Barbuda\n1978\n3962.54093\n\n\nAntigua and Barbuda\n1979\n4254.01537\n\n\nAntigua and Barbuda\n1980\n4639.18769\n\n\nAntigua and Barbuda\n1981\n4869.47943\n\n\nAntigua and Barbuda\n1982\n4936.89236\n\n\nAntigua and Barbuda\n1983\n5244.92903\n\n\nAntigua and Barbuda\n1984\n5850.65611\n\n\nAntigua and Barbuda\n1985\n6422.81186\n\n\nAntigua and Barbuda\n1986\n7360.34616\n\n\nAntigua and Barbuda\n1987\n8097.65208\n\n\nAntigua and Barbuda\n1988\n8651.25071\n\n\nAntigua and Barbuda\n1989\n9220.86108\n\n\nAntigua and Barbuda\n1990\n9454.02125\n\n\nAntigua and Barbuda\n1991\n9561.69317\n\n\nAntigua and Barbuda\n1992\n9484.40312\n\n\nAntigua and Barbuda\n1993\n9775.60140\n\n\nAntigua and Barbuda\n1994\n10136.69964\n\n\nAntigua and Barbuda\n1995\n9466.09534\n\n\nAntigua and Barbuda\n1996\n9844.76197\n\n\nAntigua and Barbuda\n1997\n10058.48732\n\n\nAntigua and Barbuda\n1998\n10237.41099\n\n\nAntigua and Barbuda\n1999\n9863.38799\n\n\nAntigua and Barbuda\n2000\n10143.36808\n\n\nAntigua and Barbuda\n2001\n9639.57767\n\n\nAntigua and Barbuda\n2002\n9753.30831\n\n\nAntigua and Barbuda\n2003\n10241.68484\n\n\nAntigua and Barbuda\n2004\n10599.28467\n\n\nAntigua and Barbuda\n2005\n11102.93216\n\n\nAntigua and Barbuda\n2006\n12452.28204\n\n\nAntigua and Barbuda\n2007\n13495.12747\n\n\nAntigua and Barbuda\n2008\n13352.16854\n\n\nAntigua and Barbuda\n2009\n11645.63491\n\n\nAntigua and Barbuda\n2010\n10614.79432\n\n\nAntigua and Barbuda\n2011\n9977.95707\n\n\nArgentina\n1960\n5251.87675\n\n\nArgentina\n1961\n5448.30363\n\n\nArgentina\n1962\n5316.57897\n\n\nArgentina\n1963\n4956.21652\n\n\nArgentina\n1964\n5375.46371\n\n\nArgentina\n1965\n5855.61156\n\n\nArgentina\n1966\n5733.31195\n\n\nArgentina\n1967\n5833.05231\n\n\nArgentina\n1968\n6028.12433\n\n\nArgentina\n1969\n6515.36426\n\n\nArgentina\n1970\n6611.23420\n\n\nArgentina\n1971\n6872.75834\n\n\nArgentina\n1972\n6867.51079\n\n\nArgentina\n1973\n6940.16863\n\n\nArgentina\n1974\n7200.90831\n\n\nArgentina\n1975\n7081.66069\n\n\nArgentina\n1976\n6830.30772\n\n\nArgentina\n1977\n7193.56503\n\n\nArgentina\n1978\n6767.81221\n\n\nArgentina\n1979\n7349.62394\n\n\nArgentina\n1980\n7540.68526\n\n\nArgentina\n1981\n7004.45874\n\n\nArgentina\n1982\n6556.34759\n\n\nArgentina\n1983\n6707.05686\n\n\nArgentina\n1984\n6751.82011\n\n\nArgentina\n1985\n6146.15545\n\n\nArgentina\n1986\n6531.92642\n\n\nArgentina\n1987\n6623.37451\n\n\nArgentina\n1988\n6360.58862\n\n\nArgentina\n1989\n5800.05698\n\n\nArgentina\n1990\n5581.96234\n\n\nArgentina\n1991\n6203.44566\n\n\nArgentina\n1992\n6851.75259\n\n\nArgentina\n1993\n7162.09342\n\n\nArgentina\n1994\n7483.56092\n\n\nArgentina\n1995\n7179.93883\n\n\nArgentina\n1996\n7484.00402\n\n\nArgentina\n1997\n7994.11555\n\n\nArgentina\n1998\n8205.47459\n\n\nArgentina\n1999\n7839.51494\n\n\nArgentina\n2000\n7695.59407\n\n\nArgentina\n2001\n7283.06292\n\n\nArgentina\n2002\n6428.39384\n\n\nArgentina\n2003\n6933.15559\n\n\nArgentina\n2004\n7492.24951\n\n\nArgentina\n2005\n8107.97536\n\n\nArgentina\n2006\n8717.17630\n\n\nArgentina\n2007\n9388.68852\n\n\nArgentina\n2008\n9935.83425\n\n\nArgentina\n2009\n9933.22902\n\n\nArgentina\n2010\n10749.31922\n\n\nArgentina\n2011\n11601.63022\n\n\nArmenia\n1990\n795.37891\n\n\nArmenia\n1991\n708.84754\n\n\nArmenia\n1992\n419.97658\n\n\nArmenia\n1993\n392.06086\n\n\nArmenia\n1994\n423.25774\n\n\nArmenia\n1995\n461.91936\n\n\nArmenia\n1996\n496.87291\n\n\nArmenia\n1997\n519.49089\n\n\nArmenia\n1998\n562.02761\n\n\nArmenia\n1999\n584.04544\n\n\nArmenia\n2000\n621.42483\n\n\nArmenia\n2001\n683.09678\n\n\nArmenia\n2002\n774.36998\n\n\nArmenia\n2003\n883.24570\n\n\nArmenia\n2004\n975.04682\n\n\nArmenia\n2005\n1109.03379\n\n\nArmenia\n2006\n1253.81330\n\n\nArmenia\n2007\n1424.19056\n\n\nArmenia\n2008\n1520.03393\n\n\nArmenia\n2009\n1302.45698\n\n\nArmenia\n2010\n1326.71086\n\n\nArmenia\n2011\n1384.08516\n\n\nAruba\n1987\n12995.83203\n\n\nAruba\n1988\n15394.32469\n\n\nAruba\n1989\n16791.73153\n\n\nAruba\n1990\n18467.96227\n\n\nAruba\n1991\n18465.43608\n\n\nAruba\n1992\n18178.83714\n\n\nAruba\n1993\n17789.11366\n\n\nAruba\n1994\n17827.54038\n\n\nAruba\n1995\n18952.47289\n\n\nAruba\n1996\n18550.77411\n\n\nAruba\n1997\n19503.05297\n\n\nAruba\n1998\n20408.19595\n\n\nAruba\n1999\n20269.25648\n\n\nAruba\n2000\n20589.77183\n\n\nAruba\n2001\n19983.97746\n\n\nAruba\n2002\n19009.17065\n\n\nAruba\n2003\n18853.12990\n\n\nAustralia\n1960\n9407.68508\n\n\nAustralia\n1961\n9451.54630\n\n\nAustralia\n1962\n9351.02327\n\n\nAustralia\n1963\n9749.12856\n\n\nAustralia\n1964\n10231.14447\n\n\nAustralia\n1965\n10633.09440\n\n\nAustralia\n1966\n10635.67791\n\n\nAustralia\n1967\n11165.70646\n\n\nAustralia\n1968\n11533.02832\n\n\nAustralia\n1969\n12091.75533\n\n\nAustralia\n1970\n12708.91935\n\n\nAustralia\n1971\n12777.83407\n\n\nAustralia\n1972\n13034.08135\n\n\nAustralia\n1973\n13176.58538\n\n\nAustralia\n1974\n13375.98120\n\n\nAustralia\n1975\n13375.55956\n\n\nAustralia\n1976\n13590.09440\n\n\nAustralia\n1977\n13918.04043\n\n\nAustralia\n1978\n13879.18525\n\n\nAustralia\n1979\n14297.38143\n\n\nAustralia\n1980\n14555.94770\n\n\nAustralia\n1981\n14814.07307\n\n\nAustralia\n1982\n15040.84822\n\n\nAustralia\n1983\n14510.14370\n\n\nAustralia\n1984\n15027.66949\n\n\nAustralia\n1985\n15574.44144\n\n\nAustralia\n1986\n16024.03402\n\n\nAustralia\n1987\n16195.46821\n\n\nAustralia\n1988\n16832.69865\n\n\nAustralia\n1989\n17199.91102\n\n\nAustralia\n1990\n17553.37684\n\n\nAustralia\n1991\n17270.32870\n\n\nAustralia\n1992\n17137.55850\n\n\nAustralia\n1993\n17669.31990\n\n\nAustralia\n1994\n18191.16457\n\n\nAustralia\n1995\n18690.43658\n\n\nAustralia\n1996\n19183.14039\n\n\nAustralia\n1997\n19709.66050\n\n\nAustralia\n1998\n20387.77284\n\n\nAustralia\n1999\n21154.75805\n\n\nAustralia\n2000\n21708.03726\n\n\nAustralia\n2001\n21824.08607\n\n\nAustralia\n2002\n22402.99102\n\n\nAustralia\n2003\n22825.57102\n\n\nAustralia\n2004\n23498.26199\n\n\nAustralia\n2005\n23929.16440\n\n\nAustralia\n2006\n24295.08138\n\n\nAustralia\n2007\n24765.54890\n\n\nAustralia\n2008\n25190.72063\n\n\nAustralia\n2009\n25007.69776\n\n\nAustralia\n2010\n25190.83986\n\n\nAustralia\n2011\n25306.82494\n\n\nAustria\n1960\n7434.18372\n\n\nAustria\n1961\n7802.97255\n\n\nAustria\n1962\n7960.70727\n\n\nAustria\n1963\n8237.06053\n\n\nAustria\n1964\n8683.45452\n\n\nAustria\n1965\n8927.46070\n\n\nAustria\n1966\n9365.30613\n\n\nAustria\n1967\n9575.18356\n\n\nAustria\n1968\n9951.60718\n\n\nAustria\n1969\n10539.69700\n\n\nAustria\n1970\n11085.10449\n\n\nAustria\n1971\n11600.22295\n\n\nAustria\n1972\n12248.95167\n\n\nAustria\n1973\n12776.99245\n\n\nAustria\n1974\n13258.09388\n\n\nAustria\n1975\n13244.96435\n\n\nAustria\n1976\n13875.87098\n\n\nAustria\n1977\n14575.16601\n\n\nAustria\n1978\n14556.24303\n\n\nAustria\n1979\n15362.14184\n\n\nAustria\n1980\n15628.11853\n\n\nAustria\n1981\n15565.82167\n\n\nAustria\n1982\n15867.50615\n\n\nAustria\n1983\n16365.68683\n\n\nAustria\n1984\n16375.10914\n\n\nAustria\n1985\n16776.39194\n\n\nAustria\n1986\n17151.57949\n\n\nAustria\n1987\n17373.35717\n\n\nAustria\n1988\n17920.57394\n\n\nAustria\n1989\n18533.47580\n\n\nAustria\n1990\n19192.07172\n\n\nAustria\n1991\n19655.36566\n\n\nAustria\n1992\n19847.22018\n\n\nAustria\n1993\n19787.92580\n\n\nAustria\n1994\n20185.41806\n\n\nAustria\n1995\n20692.25631\n\n\nAustria\n1996\n21174.05212\n\n\nAustria\n1997\n21638.40830\n\n\nAustria\n1998\n22432.91072\n\n\nAustria\n1999\n23181.69316\n\n\nAustria\n2000\n23974.18307\n\n\nAustria\n2001\n24087.35538\n\n\nAustria\n2002\n24375.11384\n\n\nAustria\n2003\n24466.70630\n\n\nAustria\n2004\n24945.04777\n\n\nAustria\n2005\n25370.46587\n\n\nAustria\n2006\n26171.69091\n\n\nAustria\n2007\n27036.48733\n\n\nAustria\n2008\n27305.92329\n\n\nAustria\n2009\n26183.99760\n\n\nAustria\n2010\n26642.99386\n\n\nAustria\n2011\n27266.40335\n\n\nAzerbaijan\n1990\n1250.74006\n\n\nAzerbaijan\n1991\n1222.85377\n\n\nAzerbaijan\n1992\n932.25687\n\n\nAzerbaijan\n1993\n706.09695\n\n\nAzerbaijan\n1994\n559.38316\n\n\nAzerbaijan\n1995\n487.72636\n\n\nAzerbaijan\n1996\n489.10259\n\n\nAzerbaijan\n1997\n512.50264\n\n\nAzerbaijan\n1998\n558.42742\n\n\nAzerbaijan\n1999\n594.51067\n\n\nAzerbaijan\n2000\n655.09743\n\n\nAzerbaijan\n2001\n714.39569\n\n\nAzerbaijan\n2002\n784.24789\n\n\nAzerbaijan\n2003\n865.50127\n\n\nAzerbaijan\n2004\n945.46917\n\n\nAzerbaijan\n2005\n1182.91845\n\n\nAzerbaijan\n2006\n1573.64218\n\n\nAzerbaijan\n2007\n1945.63755\n\n\nAzerbaijan\n2008\n2110.97043\n\n\nAzerbaijan\n2009\n2259.88174\n\n\nAzerbaijan\n2010\n2344.81093\n\n\nAzerbaijan\n2011\n2338.89656\n\n\nBahamas\n1960\n11926.46097\n\n\nBahamas\n1961\n12558.29581\n\n\nBahamas\n1962\n13186.10406\n\n\nBahamas\n1963\n13858.51689\n\n\nBahamas\n1964\n14584.42775\n\n\nBahamas\n1965\n15374.33583\n\n\nBahamas\n1966\n16045.52760\n\n\nBahamas\n1967\n16866.14700\n\n\nBahamas\n1968\n17592.54560\n\n\nBahamas\n1969\n18516.80315\n\n\nBahamas\n1970\n16944.17706\n\n\nBahamas\n1971\n16773.32431\n\n\nBahamas\n1972\n15825.01611\n\n\nBahamas\n1973\n16681.08272\n\n\nBahamas\n1974\n13616.13388\n\n\nBahamas\n1975\n11368.41198\n\n\nBahamas\n1976\n11708.97569\n\n\nBahamas\n1977\n12508.23765\n\n\nBahamas\n1978\n13971.07784\n\n\nBahamas\n1979\n17236.66283\n\n\nBahamas\n1980\n17954.41744\n\n\nBahamas\n1981\n15939.86648\n\n\nBahamas\n1982\n16632.42252\n\n\nBahamas\n1983\n16855.97410\n\n\nBahamas\n1984\n18841.51612\n\n\nBahamas\n1985\n19359.49950\n\n\nBahamas\n1986\n19341.59051\n\n\nBahamas\n1987\n19571.05278\n\n\nBahamas\n1988\n19685.36145\n\n\nBahamas\n1989\n20653.86580\n\n\nBahamas\n1990\n19970.50833\n\n\nBahamas\n1991\n18789.34949\n\n\nBahamas\n1992\n17736.28159\n\n\nBahamas\n1993\n17466.21081\n\n\nBahamas\n1994\n17707.13476\n\n\nBahamas\n1995\n18195.24765\n\n\nBahamas\n1996\n18702.81496\n\n\nBahamas\n1997\n18853.24266\n\n\nBahamas\n1998\n19514.56795\n\n\nBahamas\n1999\n20665.69366\n\n\nBahamas\n2000\n21258.29243\n\n\nBahamas\n2001\n21530.37380\n\n\nBahamas\n2002\n21809.34718\n\n\nBahamas\n2003\n21228.07569\n\n\nBahamas\n2004\n21106.72008\n\n\nBahamas\n2005\n21507.71526\n\n\nBahamas\n2006\n21728.70888\n\n\nBahamas\n2007\n21721.61841\n\n\nBahamas\n2008\n20911.59943\n\n\nBahamas\n2009\n19619.12136\n\n\nBahamas\n2010\n19395.15231\n\n\nBahamas\n2011\n19466.99052\n\n\nBahrain\n1980\n11127.86976\n\n\nBahrain\n1981\n10136.47546\n\n\nBahrain\n1982\n9084.60413\n\n\nBahrain\n1983\n9409.40677\n\n\nBahrain\n1984\n9619.93098\n\n\nBahrain\n1985\n8896.28641\n\n\nBahrain\n1986\n8710.78582\n\n\nBahrain\n1987\n9286.89317\n\n\nBahrain\n1988\n9592.07145\n\n\nBahrain\n1989\n9308.54802\n\n\nBahrain\n1990\n9427.85608\n\n\nBahrain\n1991\n10201.11682\n\n\nBahrain\n1992\n10611.09237\n\n\nBahrain\n1993\n11691.78916\n\n\nBahrain\n1994\n11385.24365\n\n\nBahrain\n1995\n11541.87605\n\n\nBahrain\n1996\n11685.07226\n\n\nBahrain\n1997\n11679.35936\n\n\nBahrain\n1998\n11873.36110\n\n\nBahrain\n1999\n12077.10624\n\n\nBahrain\n2000\n12489.46775\n\n\nBahrain\n2001\n12976.20687\n\n\nBahrain\n2002\n13668.11547\n\n\nBahrain\n2003\n14536.88826\n\n\nBahrain\n2004\n14788.89008\n\n\nBahrain\n2005\n14775.63326\n\n\nBahrain\n2006\n14082.91460\n\n\nBahrain\n2007\n13373.21994\n\n\nBahrain\n2008\n12505.21254\n\n\nBahrain\n2009\n11600.70738\n\n\nBahrain\n2010\n11236.40498\n\n\nBangladesh\n1960\n254.82508\n\n\nBangladesh\n1961\n262.76563\n\n\nBangladesh\n1962\n269.53207\n\n\nBangladesh\n1963\n260.92990\n\n\nBangladesh\n1964\n281.26439\n\n\nBangladesh\n1965\n277.27331\n\n\nBangladesh\n1966\n275.38706\n\n\nBangladesh\n1967\n261.36779\n\n\nBangladesh\n1968\n277.18326\n\n\nBangladesh\n1969\n272.97766\n\n\nBangladesh\n1970\n282.25452\n\n\nBangladesh\n1971\n262.98158\n\n\nBangladesh\n1972\n224.20911\n\n\nBangladesh\n1973\n230.08098\n\n\nBangladesh\n1974\n249.85177\n\n\nBangladesh\n1975\n236.19234\n\n\nBangladesh\n1976\n244.46651\n\n\nBangladesh\n1977\n244.67898\n\n\nBangladesh\n1978\n254.58003\n\n\nBangladesh\n1979\n259.05154\n\n\nBangladesh\n1980\n253.78228\n\n\nBangladesh\n1981\n256.25063\n\n\nBangladesh\n1982\n255.33861\n\n\nBangladesh\n1983\n258.59838\n\n\nBangladesh\n1984\n264.82342\n\n\nBangladesh\n1985\n266.08682\n\n\nBangladesh\n1986\n269.95592\n\n\nBangladesh\n1987\n272.54757\n\n\nBangladesh\n1988\n271.10577\n\n\nBangladesh\n1989\n271.09171\n\n\nBangladesh\n1990\n280.17368\n\n\nBangladesh\n1991\n282.77904\n\n\nBangladesh\n1992\n290.40821\n\n\nBangladesh\n1993\n297.16850\n\n\nBangladesh\n1994\n302.81872\n\n\nBangladesh\n1995\n311.16657\n\n\nBangladesh\n1996\n318.92047\n\n\nBangladesh\n1997\n329.39605\n\n\nBangladesh\n1998\n339.85832\n\n\nBangladesh\n1999\n349.65074\n\n\nBangladesh\n2000\n363.63993\n\n\nBangladesh\n2001\n375.99346\n\n\nBangladesh\n2002\n385.80604\n\n\nBangladesh\n2003\n399.39596\n\n\nBangladesh\n2004\n417.95368\n\n\nBangladesh\n2005\n436.68818\n\n\nBangladesh\n2006\n459.86251\n\n\nBangladesh\n2007\n483.97087\n\n\nBangladesh\n2008\n508.55577\n\n\nBangladesh\n2009\n532.07700\n\n\nBangladesh\n2010\n558.06238\n\n\nBangladesh\n2011\n588.36918\n\n\nBarbados\n1960\n3396.94571\n\n\nBarbados\n1961\n3646.65478\n\n\nBarbados\n1962\n3961.39989\n\n\nBarbados\n1963\n3744.02269\n\n\nBarbados\n1964\n3915.32559\n\n\nBarbados\n1965\n4347.90445\n\n\nBarbados\n1966\n4509.68050\n\n\nBarbados\n1967\n4978.13129\n\n\nBarbados\n1968\n5310.78177\n\n\nBarbados\n1969\n5693.65773\n\n\nBarbados\n1970\n6210.63034\n\n\nBarbados\n1971\n6420.05392\n\n\nBarbados\n1972\n6461.31486\n\n\nBarbados\n1973\n6504.71086\n\n\nBarbados\n1974\n6164.53240\n\n\nBarbados\n1975\n6379.77148\n\n\nBarbados\n1976\n6351.82920\n\n\nBarbados\n1977\n6613.62819\n\n\nBarbados\n1978\n7006.11526\n\n\nBarbados\n1979\n7527.67208\n\n\nBarbados\n1980\n7861.83475\n\n\nBarbados\n1981\n7581.70030\n\n\nBarbados\n1982\n7170.53953\n\n\nBarbados\n1983\n7148.99775\n\n\nBarbados\n1984\n7353.51925\n\n\nBarbados\n1985\n7356.83354\n\n\nBarbados\n1986\n8015.60127\n\n\nBarbados\n1987\n8063.65339\n\n\nBarbados\n1988\n8533.74312\n\n\nBarbados\n1989\n8930.25645\n\n\nBarbados\n1990\n8471.08863\n\n\nBarbados\n1991\n8197.55478\n\n\nBarbados\n1992\n7765.99957\n\n\nBarbados\n1993\n7820.32961\n\n\nBarbados\n1994\n8107.89161\n\n\nBarbados\n1995\n8204.37523\n\n\nBarbados\n1996\n8328.88574\n\n\nBarbados\n1997\n8833.04760\n\n\nBarbados\n1998\n9166.79771\n\n\nBarbados\n1999\n9375.65822\n\n\nBarbados\n2000\n9565.40123\n\n\nBarbados\n2001\n9058.90024\n\n\nBarbados\n2002\n8717.53464\n\n\nBarbados\n2003\n8873.56808\n\n\nBarbados\n2004\n9181.61603\n\n\nBarbados\n2005\n9454.34246\n\n\nBarbados\n2006\n9757.44343\n\n\nBarbados\n2007\n9783.98417\n\n\nBarbados\n2008\n9781.35691\n\n\nBarbados\n2009\n9243.58705\n\n\nBelarus\n1990\n1409.77836\n\n\nBelarus\n1991\n1392.17784\n\n\nBelarus\n1992\n1255.81855\n\n\nBelarus\n1993\n1157.76977\n\n\nBelarus\n1994\n1023.51025\n\n\nBelarus\n1995\n920.03390\n\n\nBelarus\n1996\n948.95992\n\n\nBelarus\n1997\n1061.63448\n\n\nBelarus\n1998\n1156.29782\n\n\nBelarus\n1999\n1199.66285\n\n\nBelarus\n2000\n1273.04912\n\n\nBelarus\n2001\n1337.84996\n\n\nBelarus\n2002\n1411.75674\n\n\nBelarus\n2003\n1518.99982\n\n\nBelarus\n2004\n1701.45091\n\n\nBelarus\n2005\n1871.39367\n\n\nBelarus\n2006\n2067.60942\n\n\nBelarus\n2007\n2253.46411\n\n\nBelarus\n2008\n2510.27848\n\n\nBelarus\n2009\n2539.50899\n\n\nBelarus\n2010\n2739.95064\n\n\nBelarus\n2011\n2890.34567\n\n\nBelgium\n1960\n7454.71654\n\n\nBelgium\n1961\n7799.88908\n\n\nBelgium\n1962\n8173.81846\n\n\nBelgium\n1963\n8465.97962\n\n\nBelgium\n1964\n8969.63255\n\n\nBelgium\n1965\n9205.03559\n\n\nBelgium\n1966\n9431.61409\n\n\nBelgium\n1967\n9742.06281\n\n\nBelgium\n1968\n10110.80421\n\n\nBelgium\n1969\n10750.64458\n\n\nBelgium\n1970\n11360.19747\n\n\nBelgium\n1971\n11791.48609\n\n\nBelgium\n1972\n12367.39264\n\n\nBelgium\n1973\n13115.30933\n\n\nBelgium\n1974\n13670.97581\n\n\nBelgium\n1975\n13363.53885\n\n\nBelgium\n1976\n14093.74132\n\n\nBelgium\n1977\n14164.48890\n\n\nBelgium\n1978\n14553.44433\n\n\nBelgium\n1979\n14880.76986\n\n\nBelgium\n1980\n15524.95964\n\n\nBelgium\n1981\n15482.00925\n\n\nBelgium\n1982\n15578.35832\n\n\nBelgium\n1983\n15628.17983\n\n\nBelgium\n1984\n16013.87103\n\n\nBelgium\n1985\n16273.53897\n\n\nBelgium\n1986\n16564.26086\n\n\nBelgium\n1987\n16931.90098\n\n\nBelgium\n1988\n17675.34605\n\n\nBelgium\n1989\n18222.22107\n\n\nBelgium\n1990\n18737.95878\n\n\nBelgium\n1991\n19010.66574\n\n\nBelgium\n1992\n19223.50264\n\n\nBelgium\n1993\n18964.36992\n\n\nBelgium\n1994\n19516.10388\n\n\nBelgium\n1995\n19939.71072\n\n\nBelgium\n1996\n20184.32950\n\n\nBelgium\n1997\n20887.61420\n\n\nBelgium\n1998\n21245.09101\n\n\nBelgium\n1999\n21946.74568\n\n\nBelgium\n2000\n22697.01230\n\n\nBelgium\n2001\n22801.77672\n\n\nBelgium\n2002\n23008.44994\n\n\nBelgium\n2003\n23097.21262\n\n\nBelgium\n2004\n23750.45981\n\n\nBelgium\n2005\n24033.78330\n\n\nBelgium\n2006\n24512.41314\n\n\nBelgium\n2007\n25034.66692\n\n\nBelgium\n2008\n25082.37413\n\n\nBelgium\n2009\n24190.59495\n\n\nBelgium\n2010\n24550.39655\n\n\nBelgium\n2011\n24733.62696\n\n\nBelize\n1960\n950.42401\n\n\nBelize\n1961\n963.11376\n\n\nBelize\n1962\n974.77072\n\n\nBelize\n1963\n987.47082\n\n\nBelize\n1964\n1003.12106\n\n\nBelize\n1965\n1021.89359\n\n\nBelize\n1966\n1042.51213\n\n\nBelize\n1967\n1067.77505\n\n\nBelize\n1968\n1122.14180\n\n\nBelize\n1969\n1157.37174\n\n\nBelize\n1970\n1193.02891\n\n\nBelize\n1971\n1222.44407\n\n\nBelize\n1972\n1331.03017\n\n\nBelize\n1973\n1385.88494\n\n\nBelize\n1974\n1552.02401\n\n\nBelize\n1975\n1579.64092\n\n\nBelize\n1976\n1546.19208\n\n\nBelize\n1977\n1606.72394\n\n\nBelize\n1978\n1688.09883\n\n\nBelize\n1979\n1765.48426\n\n\nBelize\n1980\n1979.79968\n\n\nBelize\n1981\n1953.27105\n\n\nBelize\n1982\n1897.66205\n\n\nBelize\n1983\n1820.56843\n\n\nBelize\n1984\n1798.95854\n\n\nBelize\n1985\n1772.01230\n\n\nBelize\n1986\n1807.39431\n\n\nBelize\n1987\n1955.03638\n\n\nBelize\n1988\n2080.99664\n\n\nBelize\n1989\n2309.73964\n\n\nBelize\n1990\n2476.81753\n\n\nBelize\n1991\n2666.27384\n\n\nBelize\n1992\n2912.12531\n\n\nBelize\n1993\n3004.32413\n\n\nBelize\n1994\n2923.50315\n\n\nBelize\n1995\n2867.58216\n\n\nBelize\n1996\n2836.49324\n\n\nBelize\n1997\n2834.89380\n\n\nBelize\n1998\n2836.13232\n\n\nBelize\n1999\n3026.77709\n\n\nBelize\n2000\n3329.66373\n\n\nBelize\n2001\n3392.85384\n\n\nBelize\n2002\n3459.62445\n\n\nBelize\n2003\n3664.65161\n\n\nBelize\n2004\n3713.23379\n\n\nBelize\n2005\n3705.05269\n\n\nBelize\n2006\n3754.12286\n\n\nBelize\n2007\n3680.91643\n\n\nBelize\n2008\n3684.07473\n\n\nBelize\n2009\n3561.34595\n\n\nBelize\n2010\n3542.36450\n\n\nBelize\n2011\n3490.23407\n\n\nBenin\n1960\n256.97877\n\n\nBenin\n1961\n261.64722\n\n\nBenin\n1962\n249.21253\n\n\nBenin\n1963\n257.20486\n\n\nBenin\n1964\n270.12294\n\n\nBenin\n1965\n279.89089\n\n\nBenin\n1966\n285.09899\n\n\nBenin\n1967\n283.21829\n\n\nBenin\n1968\n288.83758\n\n\nBenin\n1969\n291.59702\n\n\nBenin\n1970\n291.90122\n\n\nBenin\n1971\n281.67939\n\n\nBenin\n1972\n293.44537\n\n\nBenin\n1973\n297.66202\n\n\nBenin\n1974\n300.65561\n\n\nBenin\n1975\n279.29244\n\n\nBenin\n1976\n275.03898\n\n\nBenin\n1977\n281.68638\n\n\nBenin\n1978\n278.09338\n\n\nBenin\n1979\n288.71723\n\n\nBenin\n1980\n300.29990\n\n\nBenin\n1981\n321.45863\n\n\nBenin\n1982\n319.79204\n\n\nBenin\n1983\n297.56422\n\n\nBenin\n1984\n312.41003\n\n\nBenin\n1985\n326.80771\n\n\nBenin\n1986\n324.92907\n\n\nBenin\n1987\n311.49283\n\n\nBenin\n1988\n313.30092\n\n\nBenin\n1989\n295.61375\n\n\nBenin\n1990\n295.78329\n\n\nBenin\n1991\n299.64818\n\n\nBenin\n1992\n301.03238\n\n\nBenin\n1993\n300.89314\n\n\nBenin\n1994\n303.56893\n\n\nBenin\n1995\n307.54822\n\n\nBenin\n1996\n315.08363\n\n\nBenin\n1997\n325.17750\n\n\nBenin\n1998\n330.74035\n\n\nBenin\n1999\n336.71468\n\n\nBenin\n2000\n345.95036\n\n\nBenin\n2001\n352.24846\n\n\nBenin\n2002\n356.60523\n\n\nBenin\n2003\n358.77475\n\n\nBenin\n2004\n358.24640\n\n\nBenin\n2005\n357.25007\n\n\nBenin\n2006\n360.65541\n\n\nBenin\n2007\n366.04497\n\n\nBenin\n2008\n373.50669\n\n\nBenin\n2009\n376.62162\n\n\nBenin\n2010\n377.04430\n\n\nBenin\n2011\n378.05179\n\n\nBermuda\n1960\n19588.61270\n\n\nBermuda\n1961\n20009.62580\n\n\nBermuda\n1962\n20410.61269\n\n\nBermuda\n1963\n20153.28493\n\n\nBermuda\n1964\n21842.81022\n\n\nBermuda\n1965\n22334.44348\n\n\nBermuda\n1966\n25091.73205\n\n\nBermuda\n1967\n27876.07966\n\n\nBermuda\n1968\n27925.90781\n\n\nBermuda\n1969\n28350.64320\n\n\nBermuda\n1970\n29592.21471\n\n\nBermuda\n1971\n30833.69212\n\n\nBermuda\n1972\n31624.29080\n\n\nBermuda\n1973\n32332.10726\n\n\nBermuda\n1974\n32860.03476\n\n\nBermuda\n1975\n34355.58417\n\n\nBermuda\n1976\n37285.77335\n\n\nBermuda\n1977\n39336.79524\n\n\nBermuda\n1978\n39759.36263\n\n\nBermuda\n1979\n40462.40324\n\n\nBermuda\n1980\n43514.94072\n\n\nBermuda\n1981\n44223.42978\n\n\nBermuda\n1982\n41580.30169\n\n\nBermuda\n1983\n42108.26068\n\n\nBermuda\n1984\n42006.57456\n\n\nBermuda\n1985\n40870.94386\n\n\nBermuda\n1986\n42906.11095\n\n\nBermuda\n1987\n43821.94857\n\n\nBermuda\n1988\n44900.32535\n\n\nBermuda\n1989\n44418.57836\n\n\nBermuda\n1990\n43766.21300\n\n\nBermuda\n1991\n41873.28701\n\n\nBermuda\n1992\n41848.27310\n\n\nBermuda\n1993\n43107.30662\n\n\nBermuda\n1994\n43153.55311\n\n\nBermuda\n1995\n44759.87078\n\n\nBermuda\n1996\n45849.53008\n\n\nBermuda\n1997\n47881.13090\n\n\nBermuda\n1998\n49668.25550\n\n\nBermuda\n1999\n51348.35811\n\n\nBermuda\n2000\n56042.17391\n\n\nBermuda\n2001\n59314.22778\n\n\nBermuda\n2002\n58134.33624\n\n\nBermuda\n2003\n59963.42534\n\n\nBermuda\n2004\n61227.96747\n\n\nBermuda\n2005\n62143.33633\n\n\nBermuda\n2006\n65430.60131\n\n\nBermuda\n2007\n67138.52171\n\n\nBermuda\n2008\n67554.23287\n\n\nBermuda\n2009\n64094.35952\n\n\nBermuda\n2010\n63036.36061\n\n\nBhutan\n1980\n244.55798\n\n\nBhutan\n1981\n271.00907\n\n\nBhutan\n1982\n273.37805\n\n\nBhutan\n1983\n297.07309\n\n\nBhutan\n1984\n302.56742\n\n\nBhutan\n1985\n306.57235\n\n\nBhutan\n1986\n331.72310\n\n\nBhutan\n1987\n412.49015\n\n\nBhutan\n1988\n419.62406\n\n\nBhutan\n1989\n440.83857\n\n\nBhutan\n1990\n484.11002\n\n\nBhutan\n1991\n484.52381\n\n\nBhutan\n1992\n515.52759\n\n\nBhutan\n1993\n538.03918\n\n\nBhutan\n1994\n575.98423\n\n\nBhutan\n1995\n622.47771\n\n\nBhutan\n1996\n654.66429\n\n\nBhutan\n1997\n679.79803\n\n\nBhutan\n1998\n703.63682\n\n\nBhutan\n1999\n739.47124\n\n\nBhutan\n2000\n768.75100\n\n\nBhutan\n2001\n808.07037\n\n\nBhutan\n2002\n868.22132\n\n\nBhutan\n2003\n907.20967\n\n\nBhutan\n2004\n933.83000\n\n\nBhutan\n2005\n974.71093\n\n\nBhutan\n2006\n1017.71873\n\n\nBhutan\n2007\n1175.92639\n\n\nBhutan\n2008\n1208.40331\n\n\nBhutan\n2009\n1267.47634\n\n\nBhutan\n2010\n1392.68625\n\n\nBhutan\n2011\n1445.76000\n\n\nBolivia\n1960\n894.75697\n\n\nBolivia\n1961\n893.32654\n\n\nBolivia\n1962\n922.31606\n\n\nBolivia\n1963\n959.80837\n\n\nBolivia\n1964\n983.40937\n\n\nBolivia\n1965\n1015.38711\n\n\nBolivia\n1966\n1056.89838\n\n\nBolivia\n1967\n1104.19753\n\n\nBolivia\n1968\n947.55436\n\n\nBolivia\n1969\n954.18239\n\n\nBolivia\n1970\n927.09822\n\n\nBolivia\n1971\n950.81614\n\n\nBolivia\n1972\n1001.88265\n\n\nBolivia\n1973\n1033.80858\n\n\nBolivia\n1974\n1038.56496\n\n\nBolivia\n1975\n1087.83343\n\n\nBolivia\n1976\n1110.98164\n\n\nBolivia\n1977\n1138.68580\n\n\nBolivia\n1978\n1134.99732\n\n\nBolivia\n1979\n1110.59325\n\n\nBolivia\n1980\n1071.00132\n\n\nBolivia\n1981\n1050.71617\n\n\nBolivia\n1982\n987.98251\n\n\nBolivia\n1983\n928.22779\n\n\nBolivia\n1984\n906.94577\n\n\nBolivia\n1985\n872.80991\n\n\nBolivia\n1986\n832.05342\n\n\nBolivia\n1987\n834.02046\n\n\nBolivia\n1988\n839.41068\n\n\nBolivia\n1989\n851.82263\n\n\nBolivia\n1990\n871.22608\n\n\nBolivia\n1991\n896.19706\n\n\nBolivia\n1992\n890.01042\n\n\nBolivia\n1993\n906.68197\n\n\nBolivia\n1994\n927.42837\n\n\nBolivia\n1995\n949.15470\n\n\nBolivia\n1996\n968.93104\n\n\nBolivia\n1997\n995.21083\n\n\nBolivia\n1998\n1023.37750\n\n\nBolivia\n1999\n1006.58648\n\n\nBolivia\n2000\n1010.90737\n\n\nBolivia\n2001\n1007.37931\n\n\nBolivia\n2002\n1012.12621\n\n\nBolivia\n2003\n1019.61027\n\n\nBolivia\n2004\n1042.41443\n\n\nBolivia\n2005\n1069.01833\n\n\nBolivia\n2006\n1101.03846\n\n\nBolivia\n2007\n1132.21388\n\n\nBolivia\n2008\n1182.46464\n\n\nBolivia\n2009\n1202.78048\n\n\nBolivia\n2010\n1232.68873\n\n\nBolivia\n2011\n1276.12861\n\n\nBosnia and Herzegovina\n1994\n387.86986\n\n\nBosnia and Herzegovina\n1995\n486.81762\n\n\nBosnia and Herzegovina\n1996\n927.23285\n\n\nBosnia and Herzegovina\n1997\n1223.91028\n\n\nBosnia and Herzegovina\n1998\n1368.22385\n\n\nBosnia and Herzegovina\n1999\n1449.12744\n\n\nBosnia and Herzegovina\n2000\n1490.64283\n\n\nBosnia and Herzegovina\n2001\n1533.53265\n\n\nBosnia and Herzegovina\n2002\n1603.04355\n\n\nBosnia and Herzegovina\n2003\n1664.15333\n\n\nBosnia and Herzegovina\n2004\n1766.30126\n\n\nBosnia and Herzegovina\n2005\n1854.79143\n\n\nBosnia and Herzegovina\n2006\n1969.48274\n\n\nBosnia and Herzegovina\n2007\n2105.57803\n\n\nBosnia and Herzegovina\n2008\n2222.56455\n\n\nBosnia and Herzegovina\n2009\n2161.59983\n\n\nBosnia and Herzegovina\n2010\n2183.25835\n\n\nBosnia and Herzegovina\n2011\n2225.29015\n\n\nBotswana\n1960\n237.52222\n\n\nBotswana\n1961\n246.68401\n\n\nBotswana\n1962\n256.71205\n\n\nBotswana\n1963\n265.00969\n\n\nBotswana\n1964\n275.67015\n\n\nBotswana\n1965\n283.77505\n\n\nBotswana\n1966\n293.30599\n\n\nBotswana\n1967\n301.66469\n\n\nBotswana\n1968\n323.57155\n\n\nBotswana\n1969\n361.09075\n\n\nBotswana\n1970\n409.65970\n\n\nBotswana\n1971\n499.02922\n\n\nBotswana\n1972\n610.17575\n\n\nBotswana\n1973\n715.57310\n\n\nBotswana\n1974\n751.67632\n\n\nBotswana\n1975\n785.89810\n\n\nBotswana\n1976\n837.15449\n\n\nBotswana\n1977\n901.86015\n\n\nBotswana\n1978\n991.45338\n\n\nBotswana\n1979\n1069.78106\n\n\nBotswana\n1980\n1153.96808\n\n\nBotswana\n1981\n1213.88156\n\n\nBotswana\n1982\n1314.69360\n\n\nBotswana\n1983\n1437.67743\n\n\nBotswana\n1984\n1509.20752\n\n\nBotswana\n1985\n1564.30800\n\n\nBotswana\n1986\n1638.16139\n\n\nBotswana\n1987\n1775.48571\n\n\nBotswana\n1988\n2055.76377\n\n\nBotswana\n1989\n2254.25121\n\n\nBotswana\n1990\n2335.83437\n\n\nBotswana\n1991\n2437.41483\n\n\nBotswana\n1992\n2437.70191\n\n\nBotswana\n1993\n2416.58946\n\n\nBotswana\n1994\n2438.87482\n\n\nBotswana\n1995\n2483.29333\n\n\nBotswana\n1996\n2559.71767\n\n\nBotswana\n1997\n2757.47827\n\n\nBotswana\n1998\n2986.00911\n\n\nBotswana\n1999\n3078.10168\n\n\nBotswana\n2000\n3204.11548\n\n\nBotswana\n2001\n3268.35881\n\n\nBotswana\n2002\n3516.20792\n\n\nBotswana\n2003\n3691.88280\n\n\nBotswana\n2004\n3865.86164\n\n\nBotswana\n2005\n3880.26689\n\n\nBotswana\n2006\n4025.39536\n\n\nBotswana\n2007\n4160.66260\n\n\nBotswana\n2008\n4223.23415\n\n\nBotswana\n2009\n3965.18897\n\n\nBotswana\n2010\n4189.68670\n\n\nBotswana\n2011\n4377.55574\n\n\nBrazil\n1960\n1447.84381\n\n\nBrazil\n1961\n1549.41455\n\n\nBrazil\n1962\n1581.62542\n\n\nBrazil\n1963\n1548.13472\n\n\nBrazil\n1964\n1555.61576\n\n\nBrazil\n1965\n1558.14856\n\n\nBrazil\n1966\n1578.92025\n\n\nBrazil\n1967\n1613.13692\n\n\nBrazil\n1968\n1751.71552\n\n\nBrazil\n1969\n1874.41069\n\n\nBrazil\n1970\n1988.92152\n\n\nBrazil\n1971\n2160.35304\n\n\nBrazil\n1972\n2363.51120\n\n\nBrazil\n1973\n2630.91785\n\n\nBrazil\n1974\n2802.01627\n\n\nBrazil\n1975\n2879.31347\n\n\nBrazil\n1976\n3087.58287\n\n\nBrazil\n1977\n3154.72055\n\n\nBrazil\n1978\n3181.06143\n\n\nBrazil\n1979\n3317.53596\n\n\nBrazil\n1980\n3536.04587\n\n\nBrazil\n1981\n3302.63936\n\n\nBrazil\n1982\n3245.57315\n\n\nBrazil\n1983\n3064.15363\n\n\nBrazil\n1984\n3154.96563\n\n\nBrazil\n1985\n3333.99963\n\n\nBrazil\n1986\n3527.76124\n\n\nBrazil\n1987\n3584.07402\n\n\nBrazil\n1988\n3513.99949\n\n\nBrazil\n1989\n3564.63619\n\n\nBrazil\n1990\n3352.96540\n\n\nBrazil\n1991\n3347.81147\n\n\nBrazil\n1992\n3279.68640\n\n\nBrazil\n1993\n3380.12839\n\n\nBrazil\n1994\n3506.54411\n\n\nBrazil\n1995\n3606.00592\n\n\nBrazil\n1996\n3627.62700\n\n\nBrazil\n1997\n3693.27582\n\n\nBrazil\n1998\n3639.18167\n\n\nBrazil\n1999\n3594.86982\n\n\nBrazil\n2000\n3696.14677\n\n\nBrazil\n2001\n3692.84018\n\n\nBrazil\n2002\n3739.91939\n\n\nBrazil\n2003\n3733.99242\n\n\nBrazil\n2004\n3899.25536\n\n\nBrazil\n2005\n3976.61917\n\n\nBrazil\n2006\n4090.55580\n\n\nBrazil\n2007\n4297.82385\n\n\nBrazil\n2008\n4478.80919\n\n\nBrazil\n2009\n4424.75869\n\n\nBrazil\n2010\n4716.61413\n\n\nBrazil\n2011\n4803.39824\n\n\nBrunei\n1974\n23642.85481\n\n\nBrunei\n1975\n22733.54730\n\n\nBrunei\n1976\n26208.78718\n\n\nBrunei\n1977\n27930.67280\n\n\nBrunei\n1978\n28704.04441\n\n\nBrunei\n1979\n33931.08658\n\n\nBrunei\n1980\n30504.46158\n\n\nBrunei\n1981\n23693.67508\n\n\nBrunei\n1982\n23908.37276\n\n\nBrunei\n1983\n23352.96949\n\n\nBrunei\n1984\n22844.52382\n\n\nBrunei\n1985\n21882.63169\n\n\nBrunei\n1986\n20698.96047\n\n\nBrunei\n1987\n20530.50365\n\n\nBrunei\n1988\n20180.51870\n\n\nBrunei\n1989\n19409.33142\n\n\nBrunei\n1990\n19075.01748\n\n\nBrunei\n1991\n19126.47888\n\n\nBrunei\n1992\n19478.09789\n\n\nBrunei\n1993\n18997.87973\n\n\nBrunei\n1994\n19065.31927\n\n\nBrunei\n1995\n19395.52004\n\n\nBrunei\n1996\n19445.25163\n\n\nBrunei\n1997\n18685.23843\n\n\nBrunei\n1998\n18135.12818\n\n\nBrunei\n1999\n18253.77631\n\n\nBrunei\n2000\n18350.13062\n\n\nBrunei\n2001\n18441.34689\n\n\nBrunei\n2002\n18749.57707\n\n\nBrunei\n2003\n18896.52592\n\n\nBrunei\n2004\n18609.15264\n\n\nBrunei\n2005\n18311.88135\n\n\nBrunei\n2006\n18745.80477\n\n\nBrunei\n2007\n18416.90501\n\n\nBrunei\n2008\n17722.65838\n\n\nBrunei\n2009\n17092.46000\n\n\nBrunei\n2010\n17225.31562\n\n\nBrunei\n2011\n17301.33869\n\n\nBulgaria\n1980\n1294.03235\n\n\nBulgaria\n1981\n1352.92562\n\n\nBulgaria\n1982\n1380.42105\n\n\nBulgaria\n1983\n1424.21520\n\n\nBulgaria\n1984\n1469.14644\n\n\nBulgaria\n1985\n1508.59234\n\n\nBulgaria\n1986\n1572.48487\n\n\nBulgaria\n1987\n1665.23966\n\n\nBulgaria\n1988\n1845.42010\n\n\nBulgaria\n1989\n1805.71237\n\n\nBulgaria\n1990\n1670.94830\n\n\nBulgaria\n1991\n1545.05790\n\n\nBulgaria\n1992\n1448.16325\n\n\nBulgaria\n1993\n1438.15335\n\n\nBulgaria\n1994\n1469.28014\n\n\nBulgaria\n1995\n1518.05068\n\n\nBulgaria\n1996\n1388.11034\n\n\nBulgaria\n1997\n1373.60564\n\n\nBulgaria\n1998\n1450.02542\n\n\nBulgaria\n1999\n1486.81847\n\n\nBulgaria\n2000\n1579.34824\n\n\nBulgaria\n2001\n1676.43678\n\n\nBulgaria\n2002\n1789.09465\n\n\nBulgaria\n2003\n1898.32999\n\n\nBulgaria\n2004\n2036.55423\n\n\nBulgaria\n2005\n2178.44529\n\n\nBulgaria\n2006\n2332.36313\n\n\nBulgaria\n2007\n2494.35265\n\n\nBulgaria\n2008\n2661.64014\n\n\nBulgaria\n2009\n2527.93838\n\n\nBulgaria\n2010\n2555.17710\n\n\nBulgaria\n2011\n2618.87604\n\n\nBurkina Faso\n1960\n122.20784\n\n\nBurkina Faso\n1961\n125.22668\n\n\nBurkina Faso\n1962\n130.88493\n\n\nBurkina Faso\n1963\n127.22947\n\n\nBurkina Faso\n1964\n128.04963\n\n\nBurkina Faso\n1965\n130.64000\n\n\nBurkina Faso\n1966\n129.02976\n\n\nBurkina Faso\n1967\n137.84096\n\n\nBurkina Faso\n1968\n139.38933\n\n\nBurkina Faso\n1969\n139.47578\n\n\nBurkina Faso\n1970\n136.92041\n\n\nBurkina Faso\n1971\n136.12585\n\n\nBurkina Faso\n1972\n136.49921\n\n\nBurkina Faso\n1973\n134.33812\n\n\nBurkina Faso\n1974\n142.46540\n\n\nBurkina Faso\n1975\n143.63516\n\n\nBurkina Faso\n1976\n152.52331\n\n\nBurkina Faso\n1977\n149.70792\n\n\nBurkina Faso\n1978\n153.07652\n\n\nBurkina Faso\n1979\n155.03748\n\n\nBurkina Faso\n1980\n152.61017\n\n\nBurkina Faso\n1981\n155.30590\n\n\nBurkina Faso\n1982\n166.02399\n\n\nBurkina Faso\n1983\n162.48905\n\n\nBurkina Faso\n1984\n155.60798\n\n\nBurkina Faso\n1985\n164.58767\n\n\nBurkina Faso\n1986\n173.13362\n\n\nBurkina Faso\n1987\n168.25771\n\n\nBurkina Faso\n1988\n173.36240\n\n\nBurkina Faso\n1989\n172.42781\n\n\nBurkina Faso\n1990\n166.84128\n\n\nBurkina Faso\n1991\n177.11027\n\n\nBurkina Faso\n1992\n172.74586\n\n\nBurkina Faso\n1993\n173.89084\n\n\nBurkina Faso\n1994\n171.39425\n\n\nBurkina Faso\n1995\n176.25851\n\n\nBurkina Faso\n1996\n190.33202\n\n\nBurkina Faso\n1997\n196.81450\n\n\nBurkina Faso\n1998\n205.38979\n\n\nBurkina Faso\n1999\n214.49628\n\n\nBurkina Faso\n2000\n212.37539\n\n\nBurkina Faso\n2001\n220.14794\n\n\nBurkina Faso\n2002\n223.99523\n\n\nBurkina Faso\n2003\n235.14602\n\n\nBurkina Faso\n2004\n239.01195\n\n\nBurkina Faso\n2005\n252.21472\n\n\nBurkina Faso\n2006\n261.48051\n\n\nBurkina Faso\n2007\n263.01493\n\n\nBurkina Faso\n2008\n270.12486\n\n\nBurkina Faso\n2009\n269.97065\n\n\nBurkina Faso\n2010\n282.69694\n\n\nBurkina Faso\n2011\n285.80303\n\n\nBurundi\n1960\n116.00986\n\n\nBurundi\n1961\n98.31124\n\n\nBurundi\n1962\n105.37297\n\n\nBurundi\n1963\n107.83755\n\n\nBurundi\n1964\n112.58149\n\n\nBurundi\n1965\n114.92065\n\n\nBurundi\n1966\n117.92423\n\n\nBurundi\n1967\n131.57157\n\n\nBurundi\n1968\n128.66999\n\n\nBurundi\n1969\n124.65001\n\n\nBurundi\n1970\n149.15308\n\n\nBurundi\n1971\n151.68016\n\n\nBurundi\n1972\n140.88225\n\n\nBurundi\n1973\n149.54189\n\n\nBurundi\n1974\n147.14454\n\n\nBurundi\n1975\n146.31484\n\n\nBurundi\n1976\n155.31750\n\n\nBurundi\n1977\n169.65621\n\n\nBurundi\n1978\n164.14882\n\n\nBurundi\n1979\n162.55549\n\n\nBurundi\n1980\n159.56320\n\n\nBurundi\n1981\n173.61954\n\n\nBurundi\n1982\n166.38683\n\n\nBurundi\n1983\n166.98764\n\n\nBurundi\n1984\n161.81154\n\n\nBurundi\n1985\n175.07832\n\n\nBurundi\n1986\n175.08004\n\n\nBurundi\n1987\n179.05865\n\n\nBurundi\n1988\n182.59930\n\n\nBurundi\n1989\n180.11128\n\n\nBurundi\n1990\n181.94537\n\n\nBurundi\n1991\n186.95484\n\n\nBurundi\n1992\n185.24941\n\n\nBurundi\n1993\n170.81452\n\n\nBurundi\n1994\n161.98359\n\n\nBurundi\n1995\n147.44837\n\n\nBurundi\n1996\n134.47041\n\n\nBurundi\n1997\n131.44958\n\n\nBurundi\n1998\n136.76371\n\n\nBurundi\n1999\n134.08652\n\n\nBurundi\n2000\n131.04633\n\n\nBurundi\n2001\n131.16203\n\n\nBurundi\n2002\n133.77480\n\n\nBurundi\n2003\n128.60779\n\n\nBurundi\n2004\n130.97902\n\n\nBurundi\n2005\n128.29612\n\n\nBurundi\n2006\n131.17166\n\n\nBurundi\n2007\n133.28688\n\n\nBurundi\n2008\n135.86245\n\n\nBurundi\n2009\n136.66128\n\n\nBurundi\n2010\n138.24824\n\n\nBurundi\n2011\n140.81250\n\n\nCambodia\n1993\n209.79545\n\n\nCambodia\n1994\n222.08303\n\n\nCambodia\n1995\n229.89064\n\n\nCambodia\n1996\n236.20808\n\n\nCambodia\n1997\n243.69098\n\n\nCambodia\n1998\n250.45468\n\n\nCambodia\n1999\n274.81977\n\n\nCambodia\n2000\n293.56847\n\n\nCambodia\n2001\n311.98549\n\n\nCambodia\n2002\n327.88750\n\n\nCambodia\n2003\n350.88899\n\n\nCambodia\n2004\n382.19033\n\n\nCambodia\n2005\n427.52925\n\n\nCambodia\n2006\n468.03183\n\n\nCambodia\n2007\n510.01977\n\n\nCambodia\n2008\n538.13346\n\n\nCambodia\n2009\n532.61752\n\n\nCambodia\n2010\n557.97691\n\n\nCambodia\n2011\n590.45211\n\n\nCameroon\n1960\n469.20043\n\n\nCameroon\n1961\n464.75325\n\n\nCameroon\n1962\n468.52386\n\n\nCameroon\n1963\n475.28233\n\n\nCameroon\n1964\n481.00877\n\n\nCameroon\n1965\n479.45590\n\n\nCameroon\n1966\n489.82997\n\n\nCameroon\n1967\n425.96217\n\n\nCameroon\n1968\n441.97647\n\n\nCameroon\n1969\n452.14527\n\n\nCameroon\n1970\n454.34435\n\n\nCameroon\n1971\n458.07844\n\n\nCameroon\n1972\n458.05383\n\n\nCameroon\n1973\n469.72044\n\n\nCameroon\n1974\n505.88219\n\n\nCameroon\n1975\n546.87455\n\n\nCameroon\n1976\n501.78142\n\n\nCameroon\n1977\n553.73157\n\n\nCameroon\n1978\n655.26765\n\n\nCameroon\n1979\n674.07476\n\n\nCameroon\n1980\n641.43183\n\n\nCameroon\n1981\n729.43560\n\n\nCameroon\n1982\n762.12340\n\n\nCameroon\n1983\n791.63233\n\n\nCameroon\n1984\n826.80773\n\n\nCameroon\n1985\n867.92123\n\n\nCameroon\n1986\n899.82756\n\n\nCameroon\n1987\n854.81232\n\n\nCameroon\n1988\n764.95797\n\n\nCameroon\n1989\n729.36700\n\n\nCameroon\n1990\n665.41064\n\n\nCameroon\n1991\n622.23543\n\n\nCameroon\n1992\n586.44311\n\n\nCameroon\n1993\n552.49208\n\n\nCameroon\n1994\n524.68227\n\n\nCameroon\n1995\n528.36405\n\n\nCameroon\n1996\n541.30291\n\n\nCameroon\n1997\n555.51731\n\n\nCameroon\n1998\n570.09673\n\n\nCameroon\n1999\n581.63608\n\n\nCameroon\n2000\n592.37200\n\n\nCameroon\n2001\n605.16108\n\n\nCameroon\n2002\n615.29224\n\n\nCameroon\n2003\n625.78193\n\n\nCameroon\n2004\n634.50937\n\n\nCameroon\n2005\n634.72281\n\n\nCameroon\n2006\n640.76282\n\n\nCameroon\n2007\n647.94454\n\n\nCameroon\n2008\n650.03610\n\n\nCameroon\n2009\n648.48566\n\n\nCameroon\n2010\n653.02869\n\n\nCameroon\n2011\n665.79823\n\n\nCanada\n1960\n9374.88282\n\n\nCanada\n1961\n9479.82403\n\n\nCanada\n1962\n9967.36564\n\n\nCanada\n1963\n10290.36200\n\n\nCanada\n1964\n10774.65331\n\n\nCanada\n1965\n11283.60611\n\n\nCanada\n1966\n11804.66776\n\n\nCanada\n1967\n11932.16501\n\n\nCanada\n1968\n12362.93157\n\n\nCanada\n1969\n12837.46788\n\n\nCanada\n1970\n12986.31241\n\n\nCanada\n1971\n13320.19496\n\n\nCanada\n1972\n13823.29238\n\n\nCanada\n1973\n14537.58953\n\n\nCanada\n1974\n14806.31259\n\n\nCanada\n1975\n14793.71474\n\n\nCanada\n1976\n15358.40595\n\n\nCanada\n1977\n15703.90339\n\n\nCanada\n1978\n16161.76834\n\n\nCanada\n1979\n16610.16721\n\n\nCanada\n1980\n16751.33878\n\n\nCanada\n1981\n17124.39055\n\n\nCanada\n1982\n16435.46551\n\n\nCanada\n1983\n16713.69949\n\n\nCanada\n1984\n17516.23999\n\n\nCanada\n1985\n18183.73352\n\n\nCanada\n1986\n18437.71141\n\n\nCanada\n1987\n18971.40746\n\n\nCanada\n1988\n19659.67026\n\n\nCanada\n1989\n19817.99342\n\n\nCanada\n1990\n19561.87934\n\n\nCanada\n1991\n18893.80497\n\n\nCanada\n1992\n18826.65615\n\n\nCanada\n1993\n19057.23091\n\n\nCanada\n1994\n19781.71278\n\n\nCanada\n1995\n20169.53897\n\n\nCanada\n1996\n20276.45211\n\n\nCanada\n1997\n20911.11206\n\n\nCanada\n1998\n21580.31775\n\n\nCanada\n1999\n22586.44127\n\n\nCanada\n2000\n23559.50369\n\n\nCanada\n2001\n23738.89538\n\n\nCanada\n2002\n24214.92928\n\n\nCanada\n2003\n24425.87539\n\n\nCanada\n2004\n24936.82539\n\n\nCanada\n2005\n25437.65134\n\n\nCanada\n2006\n25943.73602\n\n\nCanada\n2007\n26229.74308\n\n\nCanada\n2008\n26101.76407\n\n\nCanada\n2009\n25069.86915\n\n\nCanada\n2010\n25575.21698\n\n\nCanada\n2011\n25933.28833\n\n\nCape Verde\n1980\n559.92066\n\n\nCape Verde\n1981\n601.84699\n\n\nCape Verde\n1982\n607.82077\n\n\nCape Verde\n1983\n650.53608\n\n\nCape Verde\n1984\n660.18202\n\n\nCape Verde\n1985\n704.30707\n\n\nCape Verde\n1986\n715.18187\n\n\nCape Verde\n1987\n738.91402\n\n\nCape Verde\n1988\n776.54343\n\n\nCape Verde\n1989\n811.71413\n\n\nCape Verde\n1990\n804.37650\n\n\nCape Verde\n1991\n798.49331\n\n\nCape Verde\n1992\n802.33643\n\n\nCape Verde\n1993\n837.80683\n\n\nCape Verde\n1994\n871.94614\n\n\nCape Verde\n1995\n913.90446\n\n\nCape Verde\n1996\n952.83525\n\n\nCape Verde\n1997\n1003.94853\n\n\nCape Verde\n1998\n1066.93709\n\n\nCape Verde\n1999\n1171.02752\n\n\nCape Verde\n2000\n1233.25752\n\n\nCape Verde\n2001\n1285.84111\n\n\nCape Verde\n2002\n1330.90878\n\n\nCape Verde\n2003\n1371.15693\n\n\nCape Verde\n2004\n1409.15681\n\n\nCape Verde\n2005\n1481.68668\n\n\nCape Verde\n2006\n1613.58441\n\n\nCape Verde\n2007\n1735.88389\n\n\nCape Verde\n2008\n1827.02130\n\n\nCape Verde\n2009\n1878.47131\n\n\nCape Verde\n2010\n1958.88846\n\n\nCape Verde\n2011\n2038.88010\n\n\nCentral African Republic\n1960\n355.82276\n\n\nCentral African Republic\n1961\n367.16535\n\n\nCentral African Republic\n1962\n347.30105\n\n\nCentral African Republic\n1963\n338.51469\n\n\nCentral African Republic\n1964\n338.98373\n\n\nCentral African Republic\n1965\n335.48947\n\n\nCentral African Republic\n1966\n330.82318\n\n\nCentral African Republic\n1967\n339.10456\n\n\nCentral African Republic\n1968\n336.67689\n\n\nCentral African Republic\n1969\n353.13052\n\n\nCentral African Republic\n1970\n354.14397\n\n\nCentral African Republic\n1971\n351.22153\n\n\nCentral African Republic\n1972\n344.57421\n\n\nCentral African Republic\n1973\n344.43429\n\n\nCentral African Republic\n1974\n359.11820\n\n\nCentral African Republic\n1975\n353.17714\n\n\nCentral African Republic\n1976\n364.39676\n\n\nCentral African Republic\n1977\n369.87580\n\n\nCentral African Republic\n1978\n365.62249\n\n\nCentral African Republic\n1979\n347.75760\n\n\nCentral African Republic\n1980\n323.39662\n\n\nCentral African Republic\n1981\n309.40269\n\n\nCentral African Republic\n1982\n323.40402\n\n\nCentral African Republic\n1983\n288.28196\n\n\nCentral African Republic\n1984\n306.64638\n\n\nCentral African Republic\n1985\n310.33812\n\n\nCentral African Republic\n1986\n313.84129\n\n\nCentral African Republic\n1987\n291.89007\n\n\nCentral African Republic\n1988\n290.74252\n\n\nCentral African Republic\n1989\n290.21257\n\n\nCentral African Republic\n1990\n277.56808\n\n\nCentral African Republic\n1991\n269.37376\n\n\nCentral African Republic\n1992\n245.72741\n\n\nCentral African Republic\n1993\n240.24979\n\n\nCentral African Republic\n1994\n245.69038\n\n\nCentral African Republic\n1995\n257.02819\n\n\nCentral African Republic\n1996\n241.04344\n\n\nCentral African Republic\n1997\n248.16717\n\n\nCentral African Republic\n1998\n254.31432\n\n\nCentral African Republic\n1999\n258.19754\n\n\nCentral African Republic\n2000\n247.02818\n\n\nCentral African Republic\n2001\n244.19195\n\n\nCentral African Republic\n2002\n238.78620\n\n\nCentral African Republic\n2003\n218.36314\n\n\nCentral African Republic\n2004\n217.07553\n\n\nCentral African Republic\n2005\n218.65614\n\n\nCentral African Republic\n2006\n223.09745\n\n\nCentral African Republic\n2007\n227.27062\n\n\nCentral African Republic\n2008\n227.60299\n\n\nCentral African Republic\n2009\n227.17491\n\n\nCentral African Republic\n2010\n229.58140\n\n\nCentral African Republic\n2011\n232.62325\n\n\nChad\n1960\n253.94417\n\n\nChad\n1961\n252.09369\n\n\nChad\n1962\n259.94716\n\n\nChad\n1963\n250.30506\n\n\nChad\n1964\n238.81615\n\n\nChad\n1965\n235.20168\n\n\nChad\n1966\n226.17652\n\n\nChad\n1967\n223.26321\n\n\nChad\n1968\n217.68329\n\n\nChad\n1969\n227.74357\n\n\nChad\n1970\n226.86246\n\n\nChad\n1971\n216.62758\n\n\nChad\n1972\n213.86118\n\n\nChad\n1973\n191.21214\n\n\nChad\n1974\n196.01272\n\n\nChad\n1975\n208.95842\n\n\nChad\n1976\n210.73175\n\n\nChad\n1977\n211.18477\n\n\nChad\n1978\n206.11363\n\n\nChad\n1979\n158.70652\n\n\nChad\n1980\n145.99746\n\n\nChad\n1981\n144.28757\n\n\nChad\n1982\n148.52370\n\n\nChad\n1983\n167.66706\n\n\nChad\n1984\n166.72076\n\n\nChad\n1985\n197.53153\n\n\nChad\n1986\n183.99861\n\n\nChad\n1987\n174.16213\n\n\nChad\n1988\n194.87451\n\n\nChad\n1989\n198.03532\n\n\nChad\n1990\n183.94412\n\n\nChad\n1991\n193.63507\n\n\nChad\n1992\n202.90541\n\n\nChad\n1993\n165.95738\n\n\nChad\n1994\n177.31876\n\n\nChad\n1995\n174.06647\n\n\nChad\n1996\n172.47504\n\n\nChad\n1997\n176.61103\n\n\nChad\n1998\n182.96235\n\n\nChad\n1999\n175.83318\n\n\nChad\n2000\n168.45000\n\n\nChad\n2001\n181.56049\n\n\nChad\n2002\n189.99011\n\n\nChad\n2003\n210.27628\n\n\nChad\n2004\n271.47408\n\n\nChad\n2005\n308.40090\n\n\nChad\n2006\n299.88009\n\n\nChad\n2007\n292.14346\n\n\nChad\n2008\n283.27503\n\n\nChad\n2009\n272.62550\n\n\nChad\n2010\n300.10615\n\n\nChad\n2011\n301.40171\n\n\nChannel Islands\n1998\n40765.90844\n\n\nChannel Islands\n1999\n42080.56260\n\n\nChannel Islands\n2000\n44310.90232\n\n\nChannel Islands\n2001\n43441.71524\n\n\nChannel Islands\n2002\n42548.75816\n\n\nChannel Islands\n2003\n41008.40348\n\n\nChannel Islands\n2004\n40905.62335\n\n\nChannel Islands\n2005\n41246.18599\n\n\nChannel Islands\n2006\n42994.34591\n\n\nChannel Islands\n2007\n45226.03170\n\n\nChile\n1960\n1841.08015\n\n\nChile\n1961\n1867.60909\n\n\nChile\n1962\n1915.33270\n\n\nChile\n1963\n1982.23041\n\n\nChile\n1964\n1986.32701\n\n\nChile\n1965\n1948.83184\n\n\nChile\n1966\n2096.92315\n\n\nChile\n1967\n2128.05403\n\n\nChile\n1968\n2163.99492\n\n\nChile\n1969\n2196.26654\n\n\nChile\n1970\n2201.35147\n\n\nChile\n1971\n2356.71427\n\n\nChile\n1972\n2296.66910\n\n\nChile\n1973\n2146.52576\n\n\nChile\n1974\n2164.77405\n\n\nChile\n1975\n1889.54033\n\n\nChile\n1976\n1925.67926\n\n\nChile\n1977\n2064.23574\n\n\nChile\n1978\n2188.19888\n\n\nChile\n1979\n2345.43174\n\n\nChile\n1980\n2500.26773\n\n\nChile\n1981\n2579.57132\n\n\nChile\n1982\n2277.38844\n\n\nChile\n1983\n2156.14423\n\n\nChile\n1984\n2290.18327\n\n\nChile\n1985\n2412.89698\n\n\nChile\n1986\n2505.82515\n\n\nChile\n1987\n2626.62901\n\n\nChile\n1988\n2771.19008\n\n\nChile\n1989\n3011.17796\n\n\nChile\n1990\n3067.65058\n\n\nChile\n1991\n3252.58105\n\n\nChile\n1992\n3585.43576\n\n\nChile\n1993\n3766.79863\n\n\nChile\n1994\n3912.84956\n\n\nChile\n1995\n4258.23739\n\n\nChile\n1996\n4504.72132\n\n\nChile\n1997\n4734.56415\n\n\nChile\n1998\n4822.81946\n\n\nChile\n1999\n4984.10180\n\n\nChile\n2000\n5144.58925\n\n\nChile\n2001\n5254.01534\n\n\nChile\n2002\n5306.72122\n\n\nChile\n2003\n5455.92675\n\n\nChile\n2004\n5723.69014\n\n\nChile\n2005\n5979.06803\n\n\nChile\n2006\n6190.10940\n\n\nChile\n2007\n6410.80673\n\n\nChile\n2008\n6581.35795\n\n\nChile\n2009\n6451.63113\n\n\nChile\n2010\n6781.69648\n\n\nChile\n2011\n7122.93846\n\n\nChina\n1960\n105.45899\n\n\nChina\n1961\n77.66231\n\n\nChina\n1962\n72.32493\n\n\nChina\n1963\n77.86737\n\n\nChina\n1964\n88.13005\n\n\nChina\n1965\n100.13752\n\n\nChina\n1966\n107.80508\n\n\nChina\n1967\n99.08012\n\n\nChina\n1968\n92.56912\n\n\nChina\n1969\n105.28851\n\n\nChina\n1970\n122.29015\n\n\nChina\n1971\n127.30503\n\n\nChina\n1972\n128.93498\n\n\nChina\n1973\n135.98016\n\n\nChina\n1974\n136.26328\n\n\nChina\n1975\n145.52481\n\n\nChina\n1976\n140.99774\n\n\nChina\n1977\n149.66007\n\n\nChina\n1978\n164.94815\n\n\nChina\n1979\n175.13242\n\n\nChina\n1980\n186.43966\n\n\nChina\n1981\n193.63816\n\n\nChina\n1982\n208.17086\n\n\nChina\n1983\n227.54964\n\n\nChina\n1984\n258.72023\n\n\nChina\n1985\n289.67597\n\n\nChina\n1986\n310.51435\n\n\nChina\n1987\n341.02129\n\n\nChina\n1988\n373.49450\n\n\nChina\n1989\n382.89216\n\n\nChina\n1990\n391.65295\n\n\nChina\n1991\n421.88917\n\n\nChina\n1992\n475.92887\n\n\nChina\n1993\n536.35726\n\n\nChina\n1994\n599.80228\n\n\nChina\n1995\n657.99260\n\n\nChina\n1996\n716.24512\n\n\nChina\n1997\n774.88463\n\n\nChina\n1998\n827.34860\n\n\nChina\n1999\n882.55232\n\n\nChina\n2000\n949.17806\n\n\nChina\n2001\n1020.51999\n\n\nChina\n2002\n1105.95256\n\n\nChina\n2003\n1208.99396\n\n\nChina\n2004\n1323.21993\n\n\nChina\n2005\n1464.10763\n\n\nChina\n2006\n1640.86152\n\n\nChina\n2007\n1864.10270\n\n\nChina\n2008\n2032.61498\n\n\nChina\n2009\n2208.40395\n\n\nChina\n2010\n2426.33247\n\n\nChina\n2011\n2639.54156\n\n\nColombia\n1960\n1188.25353\n\n\nColombia\n1961\n1214.20110\n\n\nColombia\n1962\n1243.08390\n\n\nColombia\n1963\n1241.81301\n\n\nColombia\n1964\n1285.29718\n\n\nColombia\n1965\n1285.78509\n\n\nColombia\n1966\n1315.35296\n\n\nColombia\n1967\n1331.51277\n\n\nColombia\n1968\n1377.66313\n\n\nColombia\n1969\n1428.12821\n\n\nColombia\n1970\n1488.34837\n\n\nColombia\n1971\n1538.55798\n\n\nColombia\n1972\n1618.11493\n\n\nColombia\n1973\n1688.03791\n\n\nColombia\n1974\n1745.07709\n\n\nColombia\n1975\n1744.17169\n\n\nColombia\n1976\n1786.67989\n\n\nColombia\n1977\n1818.35346\n\n\nColombia\n1978\n1927.24670\n\n\nColombia\n1979\n1984.90918\n\n\nColombia\n1980\n2019.85473\n\n\nColombia\n1981\n2019.66847\n\n\nColombia\n1982\n1993.95000\n\n\nColombia\n1983\n1981.46856\n\n\nColombia\n1984\n2003.99201\n\n\nColombia\n1985\n2022.21197\n\n\nColombia\n1986\n2095.75024\n\n\nColombia\n1987\n2163.12114\n\n\nColombia\n1988\n2205.62890\n\n\nColombia\n1989\n2235.86653\n\n\nColombia\n1990\n2324.84363\n\n\nColombia\n1991\n2332.36188\n\n\nColombia\n1992\n2403.77231\n\n\nColombia\n1993\n2415.20667\n\n\nColombia\n1994\n2509.61573\n\n\nColombia\n1995\n2592.71082\n\n\nColombia\n1996\n2599.00831\n\n\nColombia\n1997\n2641.02163\n\n\nColombia\n1998\n2610.18549\n\n\nColombia\n1999\n2458.02136\n\n\nColombia\n2000\n2511.97467\n\n\nColombia\n2001\n2512.51974\n\n\nColombia\n2002\n2534.33310\n\n\nColombia\n2003\n2592.37627\n\n\nColombia\n2004\n2688.50843\n\n\nColombia\n2005\n2772.21473\n\n\nColombia\n2006\n2913.47983\n\n\nColombia\n2007\n3068.47727\n\n\nColombia\n2008\n3131.17767\n\n\nColombia\n2009\n3137.69533\n\n\nColombia\n2010\n3218.07170\n\n\nColombia\n2011\n3362.46560\n\n\nComoros\n1980\n412.36506\n\n\nComoros\n1981\n413.32491\n\n\nComoros\n1982\n425.18926\n\n\nComoros\n1983\n431.78999\n\n\nComoros\n1984\n436.23453\n\n\nComoros\n1985\n433.58823\n\n\nComoros\n1986\n429.81622\n\n\nComoros\n1987\n425.68059\n\n\nComoros\n1988\n426.34785\n\n\nComoros\n1989\n402.82459\n\n\nComoros\n1990\n413.19815\n\n\nComoros\n1991\n381.57931\n\n\nComoros\n1992\n404.27293\n\n\nComoros\n1993\n406.47369\n\n\nComoros\n1994\n375.73817\n\n\nComoros\n1995\n379.78843\n\n\nComoros\n1996\n365.58509\n\n\nComoros\n1997\n370.74912\n\n\nComoros\n1998\n365.93465\n\n\nComoros\n1999\n363.36985\n\n\nComoros\n2000\n358.95291\n\n\nComoros\n2001\n361.20628\n\n\nComoros\n2002\n366.29992\n\n\nComoros\n2003\n365.44482\n\n\nComoros\n2004\n354.89570\n\n\nComoros\n2005\n360.07079\n\n\nComoros\n2006\n354.83876\n\n\nComoros\n2007\n347.10003\n\n\nComoros\n2008\n341.21599\n\n\nComoros\n2009\n338.29790\n\n\nComoros\n2010\n336.48164\n\n\nComoros\n2011\n335.21924\n\n\nCongo, Dem. Rep.\n1960\n324.90317\n\n\nCongo, Dem. Rep.\n1961\n282.30170\n\n\nCongo, Dem. Rep.\n1962\n333.40127\n\n\nCongo, Dem. Rep.\n1963\n341.68033\n\n\nCongo, Dem. Rep.\n1964\n324.49323\n\n\nCongo, Dem. Rep.\n1965\n318.80163\n\n\nCongo, Dem. Rep.\n1966\n330.87698\n\n\nCongo, Dem. Rep.\n1967\n318.25775\n\n\nCongo, Dem. Rep.\n1968\n322.48030\n\n\nCongo, Dem. Rep.\n1969\n342.46212\n\n\nCongo, Dem. Rep.\n1970\n331.97206\n\n\nCongo, Dem. Rep.\n1971\n342.14796\n\n\nCongo, Dem. Rep.\n1972\n333.29148\n\n\nCongo, Dem. Rep.\n1973\n350.57570\n\n\nCongo, Dem. Rep.\n1974\n351.55841\n\n\nCongo, Dem. Rep.\n1975\n324.62015\n\n\nCongo, Dem. Rep.\n1976\n298.49291\n\n\nCongo, Dem. Rep.\n1977\n291.90244\n\n\nCongo, Dem. Rep.\n1978\n268.13840\n\n\nCongo, Dem. Rep.\n1979\n261.47156\n\n\nCongo, Dem. Rep.\n1980\n259.66613\n\n\nCongo, Dem. Rep.\n1981\n258.47654\n\n\nCongo, Dem. Rep.\n1982\n250.35264\n\n\nCongo, Dem. Rep.\n1983\n247.05086\n\n\nCongo, Dem. Rep.\n1984\n253.59842\n\n\nCongo, Dem. Rep.\n1985\n247.59070\n\n\nCongo, Dem. Rep.\n1986\n251.81074\n\n\nCongo, Dem. Rep.\n1987\n250.98229\n\n\nCongo, Dem. Rep.\n1988\n244.45555\n\n\nCongo, Dem. Rep.\n1989\n233.44093\n\n\nCongo, Dem. Rep.\n1990\n210.38885\n\n\nCongo, Dem. Rep.\n1991\n185.29209\n\n\nCongo, Dem. Rep.\n1992\n159.16152\n\n\nCongo, Dem. Rep.\n1993\n132.23284\n\n\nCongo, Dem. Rep.\n1994\n122.40252\n\n\nCongo, Dem. Rep.\n1995\n119.29555\n\n\nCongo, Dem. Rep.\n1996\n114.87467\n\n\nCongo, Dem. Rep.\n1997\n105.91015\n\n\nCongo, Dem. Rep.\n1998\n101.98132\n\n\nCongo, Dem. Rep.\n1999\n95.49728\n\n\nCongo, Dem. Rep.\n2000\n86.75451\n\n\nCongo, Dem. Rep.\n2001\n82.66194\n\n\nCongo, Dem. Rep.\n2002\n83.08186\n\n\nCongo, Dem. Rep.\n2003\n85.28262\n\n\nCongo, Dem. Rep.\n2004\n88.24305\n\n\nCongo, Dem. Rep.\n2005\n92.36726\n\n\nCongo, Dem. Rep.\n2006\n94.76974\n\n\nCongo, Dem. Rep.\n2007\n97.91018\n\n\nCongo, Dem. Rep.\n2008\n101.10385\n\n\nCongo, Dem. Rep.\n2009\n101.16901\n\n\nCongo, Dem. Rep.\n2010\n105.53174\n\n\nCongo, Dem. Rep.\n2011\n109.80930\n\n\nCongo, Rep.\n1960\n617.73755\n\n\nCongo, Rep.\n1961\n652.34485\n\n\nCongo, Rep.\n1962\n668.51663\n\n\nCongo, Rep.\n1963\n624.67986\n\n\nCongo, Rep.\n1964\n631.19313\n\n\nCongo, Rep.\n1965\n636.69744\n\n\nCongo, Rep.\n1966\n627.73252\n\n\nCongo, Rep.\n1967\n623.35331\n\n\nCongo, Rep.\n1968\n652.17803\n\n\nCongo, Rep.\n1969\n681.42745\n\n\nCongo, Rep.\n1970\n703.66925\n\n\nCongo, Rep.\n1971\n735.68796\n\n\nCongo, Rep.\n1972\n774.95921\n\n\nCongo, Rep.\n1973\n813.29391\n\n\nCongo, Rep.\n1974\n850.99671\n\n\nCongo, Rep.\n1975\n889.59861\n\n\nCongo, Rep.\n1976\n871.61641\n\n\nCongo, Rep.\n1977\n770.82809\n\n\nCongo, Rep.\n1978\n796.53882\n\n\nCongo, Rep.\n1979\n849.78903\n\n\nCongo, Rep.\n1980\n970.97363\n\n\nCongo, Rep.\n1981\n1108.99900\n\n\nCongo, Rep.\n1982\n1330.85475\n\n\nCongo, Rep.\n1983\n1367.90597\n\n\nCongo, Rep.\n1984\n1421.33251\n\n\nCongo, Rep.\n1985\n1364.79265\n\n\nCongo, Rep.\n1986\n1235.79496\n\n\nCongo, Rep.\n1987\n1204.15414\n\n\nCongo, Rep.\n1988\n1192.17118\n\n\nCongo, Rep.\n1989\n1190.26164\n\n\nCongo, Rep.\n1990\n1170.02459\n\n\nCongo, Rep.\n1991\n1166.29938\n\n\nCongo, Rep.\n1992\n1165.29866\n\n\nCongo, Rep.\n1993\n1123.53420\n\n\nCongo, Rep.\n1994\n1033.59324\n\n\nCongo, Rep.\n1995\n1045.77594\n\n\nCongo, Rep.\n1996\n1060.60012\n\n\nCongo, Rep.\n1997\n1024.54252\n\n\nCongo, Rep.\n1998\n1033.34947\n\n\nCongo, Rep.\n1999\n979.61444\n\n\nCongo, Rep.\n2000\n1026.83156\n\n\nCongo, Rep.\n2001\n1040.15182\n\n\nCongo, Rep.\n2002\n1062.80787\n\n\nCongo, Rep.\n2003\n1047.17437\n\n\nCongo, Rep.\n2004\n1058.23658\n\n\nCongo, Rep.\n2005\n1112.09918\n\n\nCongo, Rep.\n2006\n1150.39288\n\n\nCongo, Rep.\n2007\n1101.21998\n\n\nCongo, Rep.\n2008\n1130.54284\n\n\nCongo, Rep.\n2009\n1182.57925\n\n\nCongo, Rep.\n2010\n1253.80415\n\n\nCongo, Rep.\n2011\n1266.35606\n\n\nCosta Rica\n1960\n1797.96646\n\n\nCosta Rica\n1961\n1719.66280\n\n\nCosta Rica\n1962\n1795.49299\n\n\nCosta Rica\n1963\n1817.02628\n\n\nCosta Rica\n1964\n1829.66675\n\n\nCosta Rica\n1965\n1945.90154\n\n\nCosta Rica\n1966\n2035.71387\n\n\nCosta Rica\n1967\n2088.61059\n\n\nCosta Rica\n1968\n2201.29531\n\n\nCosta Rica\n1969\n2262.92864\n\n\nCosta Rica\n1970\n2371.55976\n\n\nCosta Rica\n1971\n2471.67753\n\n\nCosta Rica\n1972\n2612.35817\n\n\nCosta Rica\n1973\n2749.96618\n\n\nCosta Rica\n1974\n2835.31801\n\n\nCosta Rica\n1975\n2825.08616\n\n\nCosta Rica\n1976\n2905.86229\n\n\nCosta Rica\n1977\n3082.03920\n\n\nCosta Rica\n1978\n3187.50085\n\n\nCosta Rica\n1979\n3254.09065\n\n\nCosta Rica\n1980\n3189.03983\n\n\nCosta Rica\n1981\n3031.48171\n\n\nCosta Rica\n1982\n2733.29332\n\n\nCosta Rica\n1983\n2734.28688\n\n\nCosta Rica\n1984\n2824.58088\n\n\nCosta Rica\n1985\n2776.89398\n\n\nCosta Rica\n1986\n2859.06550\n\n\nCosta Rica\n1987\n2974.95965\n\n\nCosta Rica\n1988\n3008.20212\n\n\nCosta Rica\n1989\n3079.73407\n\n\nCosta Rica\n1990\n3119.63256\n\n\nCosta Rica\n1991\n3121.37006\n\n\nCosta Rica\n1992\n3325.26772\n\n\nCosta Rica\n1993\n3486.84692\n\n\nCosta Rica\n1994\n3564.27160\n\n\nCosta Rica\n1995\n3613.88100\n\n\nCosta Rica\n1996\n3555.54250\n\n\nCosta Rica\n1997\n3660.07007\n\n\nCosta Rica\n1998\n3869.52339\n\n\nCosta Rica\n1999\n4088.30441\n\n\nCosta Rica\n2000\n4068.82135\n\n\nCosta Rica\n2001\n4026.55724\n\n\nCosta Rica\n2002\n4061.98073\n\n\nCosta Rica\n2003\n4241.88777\n\n\nCosta Rica\n2004\n4344.08420\n\n\nCosta Rica\n2005\n4521.01195\n\n\nCosta Rica\n2006\n4836.67431\n\n\nCosta Rica\n2007\n5137.48526\n\n\nCosta Rica\n2008\n5196.68914\n\n\nCosta Rica\n2009\n5066.96600\n\n\nCosta Rica\n2010\n5226.56618\n\n\nCosta Rica\n2011\n5367.79988\n\n\nCote d'Ivoire\n1960\n550.69035\n\n\nCote d'Ivoire\n1961\n583.08655\n\n\nCote d'Ivoire\n1962\n567.79027\n\n\nCote d'Ivoire\n1963\n624.84493\n\n\nCote d'Ivoire\n1964\n706.21508\n\n\nCote d'Ivoire\n1965\n657.58915\n\n\nCote d'Ivoire\n1966\n705.24053\n\n\nCote d'Ivoire\n1967\n708.99337\n\n\nCote d'Ivoire\n1968\n766.60510\n\n\nCote d'Ivoire\n1969\n806.01062\n\n\nCote d'Ivoire\n1970\n852.92559\n\n\nCote d'Ivoire\n1971\n894.12280\n\n\nCote d'Ivoire\n1972\n891.88588\n\n\nCote d'Ivoire\n1973\n903.55321\n\n\nCote d'Ivoire\n1974\n900.93669\n\n\nCote d'Ivoire\n1975\n931.75050\n\n\nCote d'Ivoire\n1976\n1004.89384\n\n\nCote d'Ivoire\n1977\n1029.96438\n\n\nCote d'Ivoire\n1978\n1091.20033\n\n\nCote d'Ivoire\n1979\n1067.71347\n\n\nCote d'Ivoire\n1980\n909.00707\n\n\nCote d'Ivoire\n1981\n900.07380\n\n\nCote d'Ivoire\n1982\n863.43116\n\n\nCote d'Ivoire\n1983\n795.23653\n\n\nCote d'Ivoire\n1984\n742.65929\n\n\nCote d'Ivoire\n1985\n746.14948\n\n\nCote d'Ivoire\n1986\n742.08335\n\n\nCote d'Ivoire\n1987\n713.40161\n\n\nCote d'Ivoire\n1988\n696.85952\n\n\nCote d'Ivoire\n1989\n693.30783\n\n\nCote d'Ivoire\n1990\n662.86753\n\n\nCote d'Ivoire\n1991\n641.20729\n\n\nCote d'Ivoire\n1992\n618.80257\n\n\nCote d'Ivoire\n1993\n598.01850\n\n\nCote d'Ivoire\n1994\n584.52539\n\n\nCote d'Ivoire\n1995\n608.12003\n\n\nCote d'Ivoire\n1996\n637.20587\n\n\nCote d'Ivoire\n1997\n656.15843\n\n\nCote d'Ivoire\n1998\n670.61471\n\n\nCote d'Ivoire\n1999\n665.97289\n\n\nCote d'Ivoire\n2000\n628.22811\n\n\nCote d'Ivoire\n2001\n616.52358\n\n\nCote d'Ivoire\n2002\n597.52298\n\n\nCote d'Ivoire\n2003\n578.96713\n\n\nCote d'Ivoire\n2004\n580.16829\n\n\nCote d'Ivoire\n2005\n578.03061\n\n\nCote d'Ivoire\n2006\n572.29713\n\n\nCote d'Ivoire\n2007\n572.09627\n\n\nCote d'Ivoire\n2008\n574.93510\n\n\nCote d'Ivoire\n2009\n585.30449\n\n\nCote d'Ivoire\n2010\n587.54454\n\n\nCote d'Ivoire\n2011\n548.23144\n\n\nCroatia\n1995\n3900.57775\n\n\nCroatia\n1996\n4292.38737\n\n\nCroatia\n1997\n4495.24426\n\n\nCroatia\n1998\n4656.41563\n\n\nCroatia\n1999\n4554.22835\n\n\nCroatia\n2000\n4861.67751\n\n\nCroatia\n2001\n5023.53028\n\n\nCroatia\n2002\n5268.59143\n\n\nCroatia\n2003\n5551.57104\n\n\nCroatia\n2004\n5782.06643\n\n\nCroatia\n2005\n6025.45548\n\n\nCroatia\n2006\n6325.67427\n\n\nCroatia\n2007\n6651.74148\n\n\nCroatia\n2008\n6793.44909\n\n\nCroatia\n2009\n6328.63075\n\n\nCroatia\n2010\n6255.23989\n\n\nCroatia\n2011\n6270.03572\n\n\nCuba\n1970\n1777.65568\n\n\nCuba\n1971\n1896.65892\n\n\nCuba\n1972\n1954.09254\n\n\nCuba\n1973\n1988.12112\n\n\nCuba\n1974\n1977.82050\n\n\nCuba\n1975\n2137.22258\n\n\nCuba\n1976\n2228.53067\n\n\nCuba\n1977\n2400.24332\n\n\nCuba\n1978\n2538.68939\n\n\nCuba\n1979\n2549.20884\n\n\nCuba\n1980\n2411.27844\n\n\nCuba\n1981\n2871.36985\n\n\nCuba\n1982\n3113.77633\n\n\nCuba\n1983\n3267.93662\n\n\nCuba\n1984\n3508.54396\n\n\nCuba\n1985\n3540.63523\n\n\nCuba\n1986\n3514.02316\n\n\nCuba\n1987\n3395.64315\n\n\nCuba\n1988\n3484.16929\n\n\nCuba\n1989\n3471.96065\n\n\nCuba\n1990\n3338.78508\n\n\nCuba\n1991\n2958.32767\n\n\nCuba\n1992\n2597.94293\n\n\nCuba\n1993\n2198.38268\n\n\nCuba\n1994\n2202.47748\n\n\nCuba\n1995\n2245.63487\n\n\nCuba\n1996\n2410.95738\n\n\nCuba\n1997\n2468.38978\n\n\nCuba\n1998\n2463.46221\n\n\nCuba\n1999\n2607.24643\n\n\nCuba\n2000\n2752.55209\n\n\nCuba\n2001\n2831.00354\n\n\nCuba\n2002\n2862.38565\n\n\nCuba\n2003\n2962.26918\n\n\nCuba\n2004\n3125.70481\n\n\nCuba\n2005\n3469.88520\n\n\nCuba\n2006\n3884.79851\n\n\nCuba\n2007\n4165.60038\n\n\nCuba\n2008\n4337.77695\n\n\nCuba\n2009\n4402.30755\n\n\nCuba\n2010\n4495.05465\n\n\nCyprus\n1975\n3846.25139\n\n\nCyprus\n1976\n4663.38247\n\n\nCyprus\n1977\n5425.75116\n\n\nCyprus\n1978\n5826.08204\n\n\nCyprus\n1979\n6353.59573\n\n\nCyprus\n1980\n6646.53721\n\n\nCyprus\n1981\n6701.62542\n\n\nCyprus\n1982\n7021.59548\n\n\nCyprus\n1983\n7352.66680\n\n\nCyprus\n1984\n7893.65797\n\n\nCyprus\n1985\n8179.03238\n\n\nCyprus\n1986\n8385.25910\n\n\nCyprus\n1987\n8880.59908\n\n\nCyprus\n1988\n9546.71385\n\n\nCyprus\n1989\n10159.56615\n\n\nCyprus\n1990\n10681.76480\n\n\nCyprus\n1991\n10485.78175\n\n\nCyprus\n1992\n11170.27638\n\n\nCyprus\n1993\n10980.08812\n\n\nCyprus\n1994\n11389.88722\n\n\nCyprus\n1995\n11867.54710\n\n\nCyprus\n1996\n11895.83673\n\n\nCyprus\n1997\n12003.84645\n\n\nCyprus\n1998\n12455.57131\n\n\nCyprus\n1999\n12913.95440\n\n\nCyprus\n2000\n13421.65542\n\n\nCyprus\n2001\n13812.27004\n\n\nCyprus\n2002\n13926.54510\n\n\nCyprus\n2003\n13952.06534\n\n\nCyprus\n2004\n14206.95908\n\n\nCyprus\n2005\n14411.32418\n\n\nCyprus\n2006\n14719.25766\n\n\nCyprus\n2007\n15248.86529\n\n\nCyprus\n2008\n15620.66611\n\n\nCyprus\n2009\n15227.17046\n\n\nCyprus\n2010\n15328.33481\n\n\nCyprus\n2011\n15378.16704\n\n\nCzech Republic\n1990\n5401.37932\n\n\nCzech Republic\n1991\n4785.47199\n\n\nCzech Republic\n1992\n4756.37974\n\n\nCzech Republic\n1993\n4754.38496\n\n\nCzech Republic\n1994\n4890.93740\n\n\nCzech Republic\n1995\n5198.40146\n\n\nCzech Republic\n1996\n5440.70912\n\n\nCzech Republic\n1997\n5400.15979\n\n\nCzech Republic\n1998\n5392.51005\n\n\nCzech Republic\n1999\n5488.68228\n\n\nCzech Republic\n2000\n5724.83747\n\n\nCzech Republic\n2001\n5922.82176\n\n\nCzech Republic\n2002\n6068.85978\n\n\nCzech Republic\n2003\n6295.88499\n\n\nCzech Republic\n2004\n6588.89579\n\n\nCzech Republic\n2005\n7020.19041\n\n\nCzech Republic\n2006\n7488.66902\n\n\nCzech Republic\n2007\n7868.31627\n\n\nCzech Republic\n2008\n8041.97453\n\n\nCzech Republic\n2009\n7633.49348\n\n\nCzech Republic\n2010\n7799.50951\n\n\nCzech Republic\n2011\n7926.93819\n\n\nDenmark\n1960\n11390.66975\n\n\nDenmark\n1961\n12032.96040\n\n\nDenmark\n1962\n12616.25178\n\n\nDenmark\n1963\n12596.99811\n\n\nDenmark\n1964\n13655.16097\n\n\nDenmark\n1965\n14166.36717\n\n\nDenmark\n1966\n14438.24780\n\n\nDenmark\n1967\n14815.00155\n\n\nDenmark\n1968\n15310.39116\n\n\nDenmark\n1969\n16188.61838\n\n\nDenmark\n1970\n16392.96976\n\n\nDenmark\n1971\n16768.14070\n\n\nDenmark\n1972\n17368.57872\n\n\nDenmark\n1973\n17912.89592\n\n\nDenmark\n1974\n17684.20628\n\n\nDenmark\n1975\n17417.91937\n\n\nDenmark\n1976\n18432.89087\n\n\nDenmark\n1977\n18739.19748\n\n\nDenmark\n1978\n19105.99455\n\n\nDenmark\n1979\n19811.98194\n\n\nDenmark\n1980\n19691.43009\n\n\nDenmark\n1981\n19522.33061\n\n\nDenmark\n1982\n20262.27005\n\n\nDenmark\n1983\n20813.88373\n\n\nDenmark\n1984\n21692.26082\n\n\nDenmark\n1985\n22556.10850\n\n\nDenmark\n1986\n23640.82914\n\n\nDenmark\n1987\n23679.36030\n\n\nDenmark\n1988\n23634.09096\n\n\nDenmark\n1989\n23755.23628\n\n\nDenmark\n1990\n24097.90792\n\n\nDenmark\n1991\n24348.01403\n\n\nDenmark\n1992\n24747.03263\n\n\nDenmark\n1993\n24642.62019\n\n\nDenmark\n1994\n25916.55271\n\n\nDenmark\n1995\n26572.14846\n\n\nDenmark\n1996\n27171.14342\n\n\nDenmark\n1997\n27923.91653\n\n\nDenmark\n1998\n28423.78832\n\n\nDenmark\n1999\n29055.26650\n\n\nDenmark\n2000\n29980.15547\n\n\nDenmark\n2001\n30083.47866\n\n\nDenmark\n2002\n30127.21553\n\n\nDenmark\n2003\n30160.70124\n\n\nDenmark\n2004\n30773.70579\n\n\nDenmark\n2005\n31439.43910\n\n\nDenmark\n2006\n32400.06061\n\n\nDenmark\n2007\n32767.40349\n\n\nDenmark\n2008\n32320.10054\n\n\nDenmark\n2009\n30326.03845\n\n\nDenmark\n2010\n30667.82486\n\n\nDenmark\n2011\n30860.12808\n\n\nDjibouti\n1990\n1173.82654\n\n\nDjibouti\n1991\n1086.23245\n\n\nDjibouti\n1992\n1062.65898\n\n\nDjibouti\n1993\n977.34474\n\n\nDjibouti\n1994\n952.89246\n\n\nDjibouti\n1995\n900.10446\n\n\nDjibouti\n1996\n839.09204\n\n\nDjibouti\n1997\n806.16175\n\n\nDjibouti\n1998\n779.80606\n\n\nDjibouti\n1999\n771.45433\n\n\nDjibouti\n2000\n753.11965\n\n\nDjibouti\n2001\n750.42125\n\n\nDjibouti\n2002\n754.29439\n\n\nDjibouti\n2003\n764.09676\n\n\nDjibouti\n2004\n779.24390\n\n\nDjibouti\n2005\n789.39389\n\n\nDjibouti\n2006\n811.90176\n\n\nDjibouti\n2007\n837.27793\n\n\nDjibouti\n2008\n869.08548\n\n\nDjibouti\n2009\n895.31834\n\n\nDominica\n1977\n2202.69071\n\n\nDominica\n1978\n2434.54366\n\n\nDominica\n1979\n1967.43867\n\n\nDominica\n1980\n2236.36766\n\n\nDominica\n1981\n2504.55691\n\n\nDominica\n1982\n2615.32287\n\n\nDominica\n1983\n2700.77461\n\n\nDominica\n1984\n2867.85606\n\n\nDominica\n1985\n2927.37680\n\n\nDominica\n1986\n3160.96840\n\n\nDominica\n1987\n3429.48791\n\n\nDominica\n1988\n3755.45373\n\n\nDominica\n1989\n3772.61538\n\n\nDominica\n1990\n3988.44216\n\n\nDominica\n1991\n4017.44667\n\n\nDominica\n1992\n4092.76559\n\n\nDominica\n1993\n4148.75917\n\n\nDominica\n1994\n4198.17366\n\n\nDominica\n1995\n4280.23592\n\n\nDominica\n1996\n4404.41973\n\n\nDominica\n1997\n4491.40814\n\n\nDominica\n1998\n4743.58451\n\n\nDominica\n1999\n4679.63835\n\n\nDominica\n2000\n4657.01908\n\n\nDominica\n2001\n4669.03216\n\n\nDominica\n2002\n4579.13804\n\n\nDominica\n2003\n4924.82000\n\n\nDominica\n2004\n5082.32232\n\n\nDominica\n2005\n5052.62409\n\n\nDominica\n2006\n5290.61360\n\n\nDominica\n2007\n5596.62404\n\n\nDominica\n2008\n6071.02325\n\n\nDominica\n2009\n6451.44155\n\n\nDominica\n2010\n6529.52963\n\n\nDominica\n2011\n6518.65988\n\n\nDominican Republic\n1960\n912.46954\n\n\nDominican Republic\n1961\n862.06720\n\n\nDominican Republic\n1962\n976.18870\n\n\nDominican Republic\n1963\n1006.28234\n\n\nDominican Republic\n1964\n1040.43390\n\n\nDominican Republic\n1965\n882.37635\n\n\nDominican Republic\n1966\n970.82119\n\n\nDominican Republic\n1967\n973.36131\n\n\nDominican Republic\n1968\n947.36422\n\n\nDominican Republic\n1969\n1020.71437\n\n\nDominican Republic\n1970\n1173.23560\n\n\nDominican Republic\n1971\n1265.42842\n\n\nDominican Republic\n1972\n1359.81141\n\n\nDominican Republic\n1973\n1495.25444\n\n\nDominican Republic\n1974\n1544.73310\n\n\nDominican Republic\n1975\n1584.62429\n\n\nDominican Republic\n1976\n1650.24638\n\n\nDominican Republic\n1977\n1691.38331\n\n\nDominican Republic\n1978\n1687.35000\n\n\nDominican Republic\n1979\n1723.21894\n\n\nDominican Republic\n1980\n1818.07186\n\n\nDominican Republic\n1981\n1852.91685\n\n\nDominican Republic\n1982\n1842.04440\n\n\nDominican Republic\n1983\n1884.42152\n\n\nDominican Republic\n1984\n1866.13618\n\n\nDominican Republic\n1985\n1787.02097\n\n\nDominican Republic\n1986\n1810.59187\n\n\nDominican Republic\n1987\n1952.02580\n\n\nDominican Republic\n1988\n1952.99360\n\n\nDominican Republic\n1989\n1997.49216\n\n\nDominican Republic\n1990\n1850.69501\n\n\nDominican Republic\n1991\n1831.22132\n\n\nDominican Republic\n1992\n1984.32573\n\n\nDominican Republic\n1993\n2087.09071\n\n\nDominican Republic\n1994\n2095.65584\n\n\nDominican Republic\n1995\n2171.30113\n\n\nDominican Republic\n1996\n2286.15887\n\n\nDominican Republic\n1997\n2428.19528\n\n\nDominican Republic\n1998\n2556.58142\n\n\nDominican Republic\n1999\n2685.20833\n\n\nDominican Republic\n2000\n2792.91770\n\n\nDominican Republic\n2001\n2799.68995\n\n\nDominican Republic\n2002\n2916.78335\n\n\nDominican Republic\n2003\n2865.84728\n\n\nDominican Republic\n2004\n2860.65197\n\n\nDominican Republic\n2005\n3080.31550\n\n\nDominican Republic\n2006\n3360.40866\n\n\nDominican Republic\n2007\n3594.07325\n\n\nDominican Republic\n2008\n3730.90985\n\n\nDominican Republic\n2009\n3807.80979\n\n\nDominican Republic\n2010\n4049.03911\n\n\nDominican Republic\n2011\n4176.34438\n\n\nEcuador\n1960\n820.31111\n\n\nEcuador\n1961\n809.10239\n\n\nEcuador\n1962\n821.46868\n\n\nEcuador\n1963\n828.36767\n\n\nEcuador\n1964\n866.85674\n\n\nEcuador\n1965\n868.04891\n\n\nEcuador\n1966\n841.74306\n\n\nEcuador\n1967\n874.10498\n\n\nEcuador\n1968\n868.15102\n\n\nEcuador\n1969\n888.62555\n\n\nEcuador\n1970\n928.38972\n\n\nEcuador\n1971\n959.72216\n\n\nEcuador\n1972\n974.89988\n\n\nEcuador\n1973\n1099.97189\n\n\nEcuador\n1974\n1157.88392\n\n\nEcuador\n1975\n1218.66367\n\n\nEcuador\n1976\n1274.63529\n\n\nEcuador\n1977\n1267.45608\n\n\nEcuador\n1978\n1315.91146\n\n\nEcuador\n1979\n1346.16997\n\n\nEcuador\n1980\n1367.51729\n\n\nEcuador\n1981\n1375.31471\n\n\nEcuador\n1982\n1331.01871\n\n\nEcuador\n1983\n1263.22899\n\n\nEcuador\n1984\n1277.74053\n\n\nEcuador\n1985\n1281.52585\n\n\nEcuador\n1986\n1300.34287\n\n\nEcuador\n1987\n1241.26048\n\n\nEcuador\n1988\n1312.86439\n\n\nEcuador\n1989\n1294.73961\n\n\nEcuador\n1990\n1299.21120\n\n\nEcuador\n1991\n1336.35283\n\n\nEcuador\n1992\n1327.24929\n\n\nEcuador\n1993\n1303.46989\n\n\nEcuador\n1994\n1337.83342\n\n\nEcuador\n1995\n1336.07995\n\n\nEcuador\n1996\n1344.58676\n\n\nEcuador\n1997\n1376.51619\n\n\nEcuador\n1998\n1383.78763\n\n\nEcuador\n1999\n1276.48647\n\n\nEcuador\n2000\n1291.34161\n\n\nEcuador\n2001\n1337.82290\n\n\nEcuador\n2002\n1382.48460\n\n\nEcuador\n2003\n1403.49299\n\n\nEcuador\n2004\n1501.79690\n\n\nEcuador\n2005\n1562.32686\n\n\nEcuador\n2006\n1610.96734\n\n\nEcuador\n2007\n1618.86800\n\n\nEcuador\n2008\n1710.53306\n\n\nEcuador\n2009\n1692.06720\n\n\nEcuador\n2010\n1728.05216\n\n\nEcuador\n2011\n1837.00858\n\n\nEgypt\n1960\n430.36453\n\n\nEgypt\n1961\n437.60678\n\n\nEgypt\n1962\n455.52968\n\n\nEgypt\n1963\n484.04531\n\n\nEgypt\n1964\n510.14502\n\n\nEgypt\n1965\n543.15551\n\n\nEgypt\n1966\n535.15452\n\n\nEgypt\n1967\n525.14531\n\n\nEgypt\n1968\n526.25958\n\n\nEgypt\n1969\n548.69908\n\n\nEgypt\n1970\n565.97607\n\n\nEgypt\n1971\n572.26259\n\n\nEgypt\n1972\n571.03752\n\n\nEgypt\n1973\n562.60741\n\n\nEgypt\n1974\n564.12457\n\n\nEgypt\n1975\n601.16731\n\n\nEgypt\n1976\n673.96677\n\n\nEgypt\n1977\n743.65936\n\n\nEgypt\n1978\n769.04962\n\n\nEgypt\n1979\n796.99755\n\n\nEgypt\n1980\n856.60079\n\n\nEgypt\n1981\n868.05886\n\n\nEgypt\n1982\n931.62613\n\n\nEgypt\n1983\n976.88754\n\n\nEgypt\n1984\n1011.73856\n\n\nEgypt\n1985\n1052.84637\n\n\nEgypt\n1986\n1054.88802\n\n\nEgypt\n1987\n1055.69772\n\n\nEgypt\n1988\n1085.77768\n\n\nEgypt\n1989\n1114.51320\n\n\nEgypt\n1990\n1153.68451\n\n\nEgypt\n1991\n1143.81312\n\n\nEgypt\n1992\n1173.21007\n\n\nEgypt\n1993\n1186.80573\n\n\nEgypt\n1994\n1213.50565\n\n\nEgypt\n1995\n1248.73270\n\n\nEgypt\n1996\n1289.08093\n\n\nEgypt\n1997\n1337.00894\n\n\nEgypt\n1998\n1367.34265\n\n\nEgypt\n1999\n1425.76465\n\n\nEgypt\n2000\n1475.84441\n\n\nEgypt\n2001\n1500.52274\n\n\nEgypt\n2002\n1507.92935\n\n\nEgypt\n2003\n1527.27426\n\n\nEgypt\n2004\n1560.38394\n\n\nEgypt\n2005\n1600.32184\n\n\nEgypt\n2006\n1678.95480\n\n\nEgypt\n2007\n1765.86943\n\n\nEgypt\n2008\n1858.85845\n\n\nEgypt\n2009\n1911.96450\n\n\nEgypt\n2010\n1975.55003\n\n\nEgypt\n2011\n1976.61483\n\n\nEl Salvador\n1960\n1448.82952\n\n\nEl Salvador\n1961\n1454.72942\n\n\nEl Salvador\n1962\n1577.79676\n\n\nEl Salvador\n1963\n1593.71042\n\n\nEl Salvador\n1964\n1687.87540\n\n\nEl Salvador\n1965\n1724.39112\n\n\nEl Salvador\n1966\n1793.60479\n\n\nEl Salvador\n1967\n1837.39495\n\n\nEl Salvador\n1968\n1844.49917\n\n\nEl Salvador\n1969\n1857.14550\n\n\nEl Salvador\n1970\n1861.49408\n\n\nEl Salvador\n1971\n1882.63898\n\n\nEl Salvador\n1972\n1946.63242\n\n\nEl Salvador\n1973\n1990.62900\n\n\nEl Salvador\n1974\n2047.06660\n\n\nEl Salvador\n1975\n2059.49806\n\n\nEl Salvador\n1976\n2117.43672\n\n\nEl Salvador\n1977\n2215.46804\n\n\nEl Salvador\n1978\n2289.13826\n\n\nEl Salvador\n1979\n2154.45931\n\n\nEl Salvador\n1980\n1869.27772\n\n\nEl Salvador\n1981\n1648.01129\n\n\nEl Salvador\n1982\n1521.74468\n\n\nEl Salvador\n1983\n1523.92489\n\n\nEl Salvador\n1984\n1523.85351\n\n\nEl Salvador\n1985\n1513.30242\n\n\nEl Salvador\n1986\n1496.86732\n\n\nEl Salvador\n1987\n1515.34718\n\n\nEl Salvador\n1988\n1524.36423\n\n\nEl Salvador\n1989\n1518.81152\n\n\nEl Salvador\n1990\n1570.04653\n\n\nEl Salvador\n1991\n1602.01894\n\n\nEl Salvador\n1992\n1696.18596\n\n\nEl Salvador\n1993\n1793.28802\n\n\nEl Salvador\n1994\n1875.00008\n\n\nEl Salvador\n1995\n1970.70036\n\n\nEl Salvador\n1996\n1984.25094\n\n\nEl Salvador\n1997\n2051.60425\n\n\nEl Salvador\n1998\n2114.40797\n\n\nEl Salvador\n1999\n2175.12098\n\n\nEl Salvador\n2000\n2211.02246\n\n\nEl Salvador\n2001\n2239.11865\n\n\nEl Salvador\n2002\n2283.02065\n\n\nEl Salvador\n2003\n2327.64422\n\n\nEl Salvador\n2004\n2362.74767\n\n\nEl Salvador\n2005\n2438.14365\n\n\nEl Salvador\n2006\n2523.52360\n\n\nEl Salvador\n2007\n2609.08992\n\n\nEl Salvador\n2008\n2629.93790\n\n\nEl Salvador\n2009\n2534.80597\n\n\nEl Salvador\n2010\n2555.88768\n\n\nEl Salvador\n2011\n2579.11561\n\n\nEquatorial Guinea\n1985\n621.47673\n\n\nEquatorial Guinea\n1986\n578.34691\n\n\nEquatorial Guinea\n1987\n581.48919\n\n\nEquatorial Guinea\n1988\n578.48133\n\n\nEquatorial Guinea\n1989\n554.60614\n\n\nEquatorial Guinea\n1990\n554.98286\n\n\nEquatorial Guinea\n1991\n530.71920\n\n\nEquatorial Guinea\n1992\n567.93029\n\n\nEquatorial Guinea\n1993\n583.42537\n\n\nEquatorial Guinea\n1994\n592.81714\n\n\nEquatorial Guinea\n1995\n655.13963\n\n\nEquatorial Guinea\n1996\n818.69000\n\n\nEquatorial Guinea\n1997\n1356.51614\n\n\nEquatorial Guinea\n1998\n1601.03901\n\n\nEquatorial Guinea\n1999\n2192.89131\n\n\nEquatorial Guinea\n2000\n2388.34862\n\n\nEquatorial Guinea\n2001\n3779.94009\n\n\nEquatorial Guinea\n2002\n4375.25886\n\n\nEquatorial Guinea\n2003\n4832.68804\n\n\nEquatorial Guinea\n2004\n6467.83244\n\n\nEquatorial Guinea\n2005\n6888.76703\n\n\nEquatorial Guinea\n2006\n6774.47815\n\n\nEquatorial Guinea\n2007\n7994.38639\n\n\nEquatorial Guinea\n2008\n8603.11169\n\n\nEquatorial Guinea\n2009\n8750.17737\n\n\nEquatorial Guinea\n2010\n8465.56906\n\n\nEquatorial Guinea\n2011\n8875.13821\n\n\nEritrea\n1992\n134.92036\n\n\nEritrea\n1993\n153.24096\n\n\nEritrea\n1994\n185.43890\n\n\nEritrea\n1995\n189.16959\n\n\nEritrea\n1996\n203.48493\n\n\nEritrea\n1997\n214.82834\n\n\nEritrea\n1998\n212.69848\n\n\nEritrea\n1999\n206.01936\n\n\nEritrea\n2000\n172.75716\n\n\nEritrea\n2001\n201.49933\n\n\nEritrea\n2002\n199.12032\n\n\nEritrea\n2003\n185.81250\n\n\nEritrea\n2004\n180.97370\n\n\nEritrea\n2005\n178.67382\n\n\nEritrea\n2006\n170.87774\n\n\nEritrea\n2007\n167.79922\n\n\nEritrea\n2008\n146.80840\n\n\nEritrea\n2009\n147.99800\n\n\nEritrea\n2010\n146.77663\n\n\nEritrea\n2011\n154.80966\n\n\nEstonia\n1995\n2857.30984\n\n\nEstonia\n1996\n3070.57377\n\n\nEstonia\n1997\n3470.31618\n\n\nEstonia\n1998\n3742.41023\n\n\nEstonia\n1999\n3760.74839\n\n\nEstonia\n2000\n4143.92719\n\n\nEstonia\n2001\n4421.71260\n\n\nEstonia\n2002\n4730.72459\n\n\nEstonia\n2003\n5117.24162\n\n\nEstonia\n2004\n5459.03869\n\n\nEstonia\n2005\n5956.41926\n\n\nEstonia\n2006\n6570.33014\n\n\nEstonia\n2007\n7072.43586\n\n\nEstonia\n2008\n6783.90338\n\n\nEstonia\n2009\n5831.01055\n\n\nEstonia\n2010\n6025.71339\n\n\nEstonia\n2011\n6525.54127\n\n\nEthiopia\n1981\n140.66849\n\n\nEthiopia\n1982\n138.01335\n\n\nEthiopia\n1983\n144.79477\n\n\nEthiopia\n1984\n136.18842\n\n\nEthiopia\n1985\n117.15367\n\n\nEthiopia\n1986\n124.41276\n\n\nEthiopia\n1987\n137.17809\n\n\nEthiopia\n1988\n133.48689\n\n\nEthiopia\n1989\n128.71665\n\n\nEthiopia\n1990\n127.88813\n\n\nEthiopia\n1991\n114.80418\n\n\nEthiopia\n1992\n101.33816\n\n\nEthiopia\n1993\n110.85959\n\n\nEthiopia\n1994\n110.71517\n\n\nEthiopia\n1995\n113.87153\n\n\nEthiopia\n1996\n124.24812\n\n\nEthiopia\n1997\n124.52476\n\n\nEthiopia\n1998\n116.94601\n\n\nEthiopia\n1999\n119.72011\n\n\nEthiopia\n2000\n123.68092\n\n\nEthiopia\n2001\n130.51344\n\n\nEthiopia\n2002\n129.15713\n\n\nEthiopia\n2003\n123.25367\n\n\nEthiopia\n2004\n136.61873\n\n\nEthiopia\n2005\n149.19187\n\n\nEthiopia\n2006\n161.59290\n\n\nEthiopia\n2007\n176.10740\n\n\nEthiopia\n2008\n190.86322\n\n\nEthiopia\n2009\n203.20990\n\n\nEthiopia\n2010\n218.65864\n\n\nEthiopia\n2011\n229.67695\n\n\nFaeroe Islands\n2000\n23224.09863\n\n\nFiji\n1960\n1111.12730\n\n\nFiji\n1961\n1111.30736\n\n\nFiji\n1962\n1111.98162\n\n\nFiji\n1963\n1143.00663\n\n\nFiji\n1964\n1160.83667\n\n\nFiji\n1965\n1096.77145\n\n\nFiji\n1966\n1068.10730\n\n\nFiji\n1967\n1181.96497\n\n\nFiji\n1968\n1247.45711\n\n\nFiji\n1969\n1252.78439\n\n\nFiji\n1970\n1382.42519\n\n\nFiji\n1971\n1446.87472\n\n\nFiji\n1972\n1523.04791\n\n\nFiji\n1973\n1665.25019\n\n\nFiji\n1974\n1674.48376\n\n\nFiji\n1975\n1650.64261\n\n\nFiji\n1976\n1664.25825\n\n\nFiji\n1977\n1730.89808\n\n\nFiji\n1978\n1731.06766\n\n\nFiji\n1979\n1904.58261\n\n\nFiji\n1980\n1833.57711\n\n\nFiji\n1981\n1902.59685\n\n\nFiji\n1982\n1742.66609\n\n\nFiji\n1983\n1631.65320\n\n\nFiji\n1984\n1730.79138\n\n\nFiji\n1985\n1624.80094\n\n\nFiji\n1986\n1734.07522\n\n\nFiji\n1987\n1612.40488\n\n\nFiji\n1988\n1625.30203\n\n\nFiji\n1989\n1742.22247\n\n\nFiji\n1990\n1833.18436\n\n\nFiji\n1991\n1767.01745\n\n\nFiji\n1992\n1851.80099\n\n\nFiji\n1993\n1864.72927\n\n\nFiji\n1994\n1932.33180\n\n\nFiji\n1995\n1955.29386\n\n\nFiji\n1996\n2025.48405\n\n\nFiji\n1997\n1959.81460\n\n\nFiji\n1998\n1966.64641\n\n\nFiji\n1999\n2123.15951\n\n\nFiji\n2000\n2074.74732\n\n\nFiji\n2001\n2108.28928\n\n\nFiji\n2002\n2171.60738\n\n\nFiji\n2003\n2190.63191\n\n\nFiji\n2004\n2301.77048\n\n\nFiji\n2005\n2308.15826\n\n\nFiji\n2006\n2335.32125\n\n\nFiji\n2007\n2295.43830\n\n\nFiji\n2008\n2296.09836\n\n\nFiji\n2009\n2243.81904\n\n\nFiji\n2010\n2218.14696\n\n\nFiji\n2011\n2242.68926\n\n\nFinland\n1960\n7306.04115\n\n\nFinland\n1961\n7806.35631\n\n\nFinland\n1962\n7984.65728\n\n\nFinland\n1963\n8188.86268\n\n\nFinland\n1964\n8570.04219\n\n\nFinland\n1965\n8994.46402\n\n\nFinland\n1966\n9173.44009\n\n\nFinland\n1967\n9321.77727\n\n\nFinland\n1968\n9493.76464\n\n\nFinland\n1969\n10410.56839\n\n\nFinland\n1970\n11007.46695\n\n\nFinland\n1971\n11252.69389\n\n\nFinland\n1972\n12051.20233\n\n\nFinland\n1973\n12819.82547\n\n\nFinland\n1974\n13165.63493\n\n\nFinland\n1975\n13343.90089\n\n\nFinland\n1976\n13349.55224\n\n\nFinland\n1977\n13344.14487\n\n\nFinland\n1978\n13694.37881\n\n\nFinland\n1979\n14632.23762\n\n\nFinland\n1980\n15372.87969\n\n\nFinland\n1981\n15504.38506\n\n\nFinland\n1982\n15887.87324\n\n\nFinland\n1983\n16271.03092\n\n\nFinland\n1984\n16687.27239\n\n\nFinland\n1985\n17166.60394\n\n\nFinland\n1986\n17562.96619\n\n\nFinland\n1987\n18124.43227\n\n\nFinland\n1988\n19015.40367\n\n\nFinland\n1989\n19908.95772\n\n\nFinland\n1990\n19921.02316\n\n\nFinland\n1991\n18623.78039\n\n\nFinland\n1992\n17874.02535\n\n\nFinland\n1993\n17643.54519\n\n\nFinland\n1994\n18209.53220\n\n\nFinland\n1995\n18858.96271\n\n\nFinland\n1996\n19468.15567\n\n\nFinland\n1997\n20614.91289\n\n\nFinland\n1998\n21594.65366\n\n\nFinland\n1999\n22386.62957\n\n\nFinland\n2000\n23529.53846\n\n\nFinland\n2001\n24012.15877\n\n\nFinland\n2002\n24393.37625\n\n\nFinland\n2003\n24825.00902\n\n\nFinland\n2004\n25774.06477\n\n\nFinland\n2005\n26435.02344\n\n\nFinland\n2006\n27495.24136\n\n\nFinland\n2007\n28839.22241\n\n\nFinland\n2008\n28789.54385\n\n\nFinland\n2009\n26205.68832\n\n\nFinland\n2010\n26953.22055\n\n\nFinland\n2011\n27570.48520\n\n\nFrance\n1960\n7499.89477\n\n\nFrance\n1961\n7809.49052\n\n\nFrance\n1962\n8215.26494\n\n\nFrance\n1963\n8534.02848\n\n\nFrance\n1964\n8970.91838\n\n\nFrance\n1965\n9289.06636\n\n\nFrance\n1966\n9674.39936\n\n\nFrance\n1967\n10039.63302\n\n\nFrance\n1968\n10386.01969\n\n\nFrance\n1969\n11029.23720\n\n\nFrance\n1970\n11572.96622\n\n\nFrance\n1971\n12093.53183\n\n\nFrance\n1972\n12540.90377\n\n\nFrance\n1973\n13265.17128\n\n\nFrance\n1974\n13787.34561\n\n\nFrance\n1975\n13546.39505\n\n\nFrance\n1976\n14065.37599\n\n\nFrance\n1977\n14502.01334\n\n\nFrance\n1978\n15005.48142\n\n\nFrance\n1979\n15459.34685\n\n\nFrance\n1980\n15641.97106\n\n\nFrance\n1981\n15716.90473\n\n\nFrance\n1982\n16011.14006\n\n\nFrance\n1983\n16117.64077\n\n\nFrance\n1984\n16265.14010\n\n\nFrance\n1985\n16432.99036\n\n\nFrance\n1986\n16708.21534\n\n\nFrance\n1987\n17009.83132\n\n\nFrance\n1988\n17704.04983\n\n\nFrance\n1989\n18346.29154\n\n\nFrance\n1990\n18731.66202\n\n\nFrance\n1991\n18836.73334\n\n\nFrance\n1992\n19029.93463\n\n\nFrance\n1993\n18822.69755\n\n\nFrance\n1994\n19166.19677\n\n\nFrance\n1995\n19478.17581\n\n\nFrance\n1996\n19606.05309\n\n\nFrance\n1997\n19952.90591\n\n\nFrance\n1998\n20539.07007\n\n\nFrance\n1999\n21146.39522\n\n\nFrance\n2000\n21774.99299\n\n\nFrance\n2001\n22014.02474\n\n\nFrance\n2002\n22057.63515\n\n\nFrance\n2003\n22098.99175\n\n\nFrance\n2004\n22495.24481\n\n\nFrance\n2005\n22734.23332\n\n\nFrance\n2006\n23133.35113\n\n\nFrance\n2007\n23516.22317\n\n\nFrance\n2008\n23366.40262\n\n\nFrance\n2009\n22508.76261\n\n\nFrance\n2010\n22758.15413\n\n\nFrance\n2011\n23016.84778\n\n\nFrench Polynesia\n1965\n8675.78182\n\n\nFrench Polynesia\n1966\n9178.65682\n\n\nFrench Polynesia\n1967\n8434.02201\n\n\nFrench Polynesia\n1968\n9348.35593\n\n\nFrench Polynesia\n1969\n8779.49851\n\n\nFrench Polynesia\n1970\n8621.10135\n\n\nFrench Polynesia\n1971\n9342.46512\n\n\nFrench Polynesia\n1972\n8624.45308\n\n\nFrench Polynesia\n1973\n9012.61134\n\n\nFrench Polynesia\n1974\n10312.11243\n\n\nFrench Polynesia\n1975\n9508.80002\n\n\nFrench Polynesia\n1976\n9976.66012\n\n\nFrench Polynesia\n1977\n9876.98847\n\n\nFrench Polynesia\n1978\n10528.88795\n\n\nFrench Polynesia\n1979\n10616.85167\n\n\nFrench Polynesia\n1980\n10354.35076\n\n\nFrench Polynesia\n1981\n10907.30370\n\n\nFrench Polynesia\n1982\n11649.57828\n\n\nFrench Polynesia\n1983\n11933.70736\n\n\nFrench Polynesia\n1984\n12236.91491\n\n\nFrench Polynesia\n1985\n12563.19400\n\n\nFrench Polynesia\n1986\n13280.73025\n\n\nFrench Polynesia\n1987\n13886.10086\n\n\nFrench Polynesia\n1988\n13895.81956\n\n\nFrench Polynesia\n1989\n13998.87896\n\n\nFrench Polynesia\n1990\n14003.26486\n\n\nFrench Polynesia\n1991\n14388.88115\n\n\nFrench Polynesia\n1992\n14231.76756\n\n\nFrench Polynesia\n1993\n13970.47762\n\n\nFrench Polynesia\n1994\n13810.09188\n\n\nFrench Polynesia\n1995\n13608.05196\n\n\nFrench Polynesia\n1996\n13377.72367\n\n\nFrench Polynesia\n1997\n13359.16224\n\n\nFrench Polynesia\n1998\n13908.59784\n\n\nFrench Polynesia\n1999\n14194.82261\n\n\nFrench Polynesia\n2000\n14507.54146\n\n\nGabon\n1960\n1826.70651\n\n\nGabon\n1961\n2085.02665\n\n\nGabon\n1962\n2226.70799\n\n\nGabon\n1963\n2346.71394\n\n\nGabon\n1964\n2436.36034\n\n\nGabon\n1965\n2619.83744\n\n\nGabon\n1966\n2716.90853\n\n\nGabon\n1967\n2805.37257\n\n\nGabon\n1968\n2847.88768\n\n\nGabon\n1969\n3040.43483\n\n\nGabon\n1970\n3253.23642\n\n\nGabon\n1971\n3519.17574\n\n\nGabon\n1972\n3832.34811\n\n\nGabon\n1973\n4120.78893\n\n\nGabon\n1974\n5602.70920\n\n\nGabon\n1975\n6506.09955\n\n\nGabon\n1976\n8594.75191\n\n\nGabon\n1977\n7315.26476\n\n\nGabon\n1978\n5406.89662\n\n\nGabon\n1979\n5283.28437\n\n\nGabon\n1980\n5265.34312\n\n\nGabon\n1981\n5373.96344\n\n\nGabon\n1982\n5054.61203\n\n\nGabon\n1983\n5179.04357\n\n\nGabon\n1984\n5400.01266\n\n\nGabon\n1985\n5113.41563\n\n\nGabon\n1986\n4917.13728\n\n\nGabon\n1987\n3949.07869\n\n\nGabon\n1988\n4318.82822\n\n\nGabon\n1989\n4541.66439\n\n\nGabon\n1990\n4626.78153\n\n\nGabon\n1991\n4753.10675\n\n\nGabon\n1992\n4459.12340\n\n\nGabon\n1993\n4489.09584\n\n\nGabon\n1994\n4513.86584\n\n\nGabon\n1995\n4600.58429\n\n\nGabon\n1996\n4635.67094\n\n\nGabon\n1997\n4772.77850\n\n\nGabon\n1998\n4814.99840\n\n\nGabon\n1999\n4279.79590\n\n\nGabon\n2000\n4102.62460\n\n\nGabon\n2001\n4097.56142\n\n\nGabon\n2002\n3999.95393\n\n\nGabon\n2003\n4015.10733\n\n\nGabon\n2004\n3988.36289\n\n\nGabon\n2005\n4029.26527\n\n\nGabon\n2006\n3999.64222\n\n\nGabon\n2007\n4143.33458\n\n\nGabon\n2008\n4161.43160\n\n\nGabon\n2009\n4027.56735\n\n\nGabon\n2010\n4213.88156\n\n\nGabon\n2011\n4333.81104\n\n\nGambia\n1966\n495.25177\n\n\nGambia\n1967\n485.18991\n\n\nGambia\n1968\n519.88553\n\n\nGambia\n1969\n519.61690\n\n\nGambia\n1970\n536.95153\n\n\nGambia\n1971\n520.95869\n\n\nGambia\n1972\n505.77592\n\n\nGambia\n1973\n534.50681\n\n\nGambia\n1974\n547.55789\n\n\nGambia\n1975\n596.06365\n\n\nGambia\n1976\n620.50910\n\n\nGambia\n1977\n622.79366\n\n\nGambia\n1978\n642.27721\n\n\nGambia\n1979\n613.84961\n\n\nGambia\n1980\n630.47667\n\n\nGambia\n1981\n628.43870\n\n\nGambia\n1982\n600.74921\n\n\nGambia\n1983\n640.41741\n\n\nGambia\n1984\n635.85016\n\n\nGambia\n1985\n603.27026\n\n\nGambia\n1986\n599.08158\n\n\nGambia\n1987\n584.64258\n\n\nGambia\n1988\n582.18858\n\n\nGambia\n1989\n589.46346\n\n\nGambia\n1990\n586.29705\n\n\nGambia\n1991\n583.32104\n\n\nGambia\n1992\n584.07333\n\n\nGambia\n1993\n584.27279\n\n\nGambia\n1994\n568.90047\n\n\nGambia\n1995\n558.01280\n\n\nGambia\n1996\n554.60019\n\n\nGambia\n1997\n565.73269\n\n\nGambia\n1998\n569.33543\n\n\nGambia\n1999\n588.83477\n\n\nGambia\n2000\n603.59535\n\n\nGambia\n2001\n620.15347\n\n\nGambia\n2002\n582.39970\n\n\nGambia\n2003\n604.06816\n\n\nGambia\n2004\n627.75998\n\n\nGambia\n2005\n603.98929\n\n\nGambia\n2006\n593.57518\n\n\nGambia\n2007\n598.08227\n\n\nGambia\n2008\n615.08359\n\n\nGambia\n2009\n636.99051\n\n\nGambia\n2010\n660.24383\n\n\nGambia\n2011\n614.91209\n\n\nGeorgia\n1965\n859.81664\n\n\nGeorgia\n1966\n914.09677\n\n\nGeorgia\n1967\n961.74780\n\n\nGeorgia\n1968\n995.53540\n\n\nGeorgia\n1969\n1033.38911\n\n\nGeorgia\n1970\n1190.76557\n\n\nGeorgia\n1971\n1207.52841\n\n\nGeorgia\n1972\n1183.93709\n\n\nGeorgia\n1973\n1249.63467\n\n\nGeorgia\n1974\n1347.95030\n\n\nGeorgia\n1975\n1436.79883\n\n\nGeorgia\n1976\n1513.45573\n\n\nGeorgia\n1977\n1606.84192\n\n\nGeorgia\n1978\n1716.16756\n\n\nGeorgia\n1979\n1829.13731\n\n\nGeorgia\n1980\n1896.78790\n\n\nGeorgia\n1981\n1980.38749\n\n\nGeorgia\n1982\n2002.99503\n\n\nGeorgia\n1983\n2070.88162\n\n\nGeorgia\n1984\n2164.70366\n\n\nGeorgia\n1985\n2251.84760\n\n\nGeorgia\n1986\n2049.46853\n\n\nGeorgia\n1987\n2058.67731\n\n\nGeorgia\n1988\n2151.63853\n\n\nGeorgia\n1989\n1991.58573\n\n\nGeorgia\n1990\n1697.52496\n\n\nGeorgia\n1991\n1329.95827\n\n\nGeorgia\n1992\n727.15326\n\n\nGeorgia\n1993\n510.16135\n\n\nGeorgia\n1994\n461.75876\n\n\nGeorgia\n1995\n486.53430\n\n\nGeorgia\n1996\n554.84452\n\n\nGeorgia\n1997\n624.64324\n\n\nGeorgia\n1998\n650.39596\n\n\nGeorgia\n1999\n674.28673\n\n\nGeorgia\n2000\n691.99771\n\n\nGeorgia\n2001\n730.52570\n\n\nGeorgia\n2002\n775.71274\n\n\nGeorgia\n2003\n867.08400\n\n\nGeorgia\n2004\n920.12505\n\n\nGeorgia\n2005\n998.53385\n\n\nGeorgia\n2006\n1083.08988\n\n\nGeorgia\n2007\n1219.44832\n\n\nGeorgia\n2008\n1249.00462\n\n\nGeorgia\n2009\n1194.46088\n\n\nGeorgia\n2010\n1257.17988\n\n\nGeorgia\n2011\n1334.64677\n\n\nGermany\n1970\n11895.36571\n\n\nGermany\n1971\n12245.52367\n\n\nGermany\n1972\n12711.15676\n\n\nGermany\n1973\n13276.55120\n\n\nGermany\n1974\n13389.50283\n\n\nGermany\n1975\n13323.03275\n\n\nGermany\n1976\n14042.50478\n\n\nGermany\n1977\n14545.42826\n\n\nGermany\n1978\n14996.07205\n\n\nGermany\n1979\n15611.56053\n\n\nGermany\n1980\n15798.69536\n\n\nGermany\n1981\n15858.13677\n\n\nGermany\n1982\n15810.55319\n\n\nGermany\n1983\n16101.31467\n\n\nGermany\n1984\n16613.17340\n\n\nGermany\n1985\n17037.95290\n\n\nGermany\n1986\n17419.69421\n\n\nGermany\n1987\n17636.83063\n\n\nGermany\n1988\n18219.35112\n\n\nGermany\n1989\n18783.45503\n\n\nGermany\n1990\n19600.84319\n\n\nGermany\n1991\n20452.54296\n\n\nGermany\n1992\n20685.68998\n\n\nGermany\n1993\n20344.21755\n\n\nGermany\n1994\n20774.89183\n\n\nGermany\n1995\n21061.29653\n\n\nGermany\n1996\n21166.48499\n\n\nGermany\n1997\n21502.72144\n\n\nGermany\n1998\n21899.75290\n\n\nGermany\n1999\n22295.09966\n\n\nGermany\n2000\n22945.70885\n\n\nGermany\n2001\n23254.03991\n\n\nGermany\n2002\n23217.33203\n\n\nGermany\n2003\n23117.36188\n\n\nGermany\n2004\n23390.86265\n\n\nGermany\n2005\n23564.38517\n\n\nGermany\n2006\n24463.84647\n\n\nGermany\n2007\n25297.38539\n\n\nGermany\n2008\n25620.07539\n\n\nGermany\n2009\n24368.19561\n\n\nGermany\n2010\n25420.27572\n\n\nGermany\n2011\n26206.54827\n\n\nGhana\n1960\n282.10844\n\n\nGhana\n1961\n282.71558\n\n\nGhana\n1962\n285.26400\n\n\nGhana\n1963\n288.97372\n\n\nGhana\n1964\n287.16674\n\n\nGhana\n1965\n283.74987\n\n\nGhana\n1966\n265.58514\n\n\nGhana\n1967\n268.25398\n\n\nGhana\n1968\n264.04845\n\n\nGhana\n1969\n274.18598\n\n\nGhana\n1970\n293.99635\n\n\nGhana\n1971\n301.36603\n\n\nGhana\n1972\n285.64613\n\n\nGhana\n1973\n285.54328\n\n\nGhana\n1974\n297.03484\n\n\nGhana\n1975\n254.06721\n\n\nGhana\n1976\n240.34167\n\n\nGhana\n1977\n241.70664\n\n\nGhana\n1978\n257.91616\n\n\nGhana\n1979\n246.64448\n\n\nGhana\n1980\n241.94624\n\n\nGhana\n1981\n226.75891\n\n\nGhana\n1982\n204.18288\n\n\nGhana\n1983\n188.14867\n\n\nGhana\n1984\n197.48677\n\n\nGhana\n1985\n200.93645\n\n\nGhana\n1986\n205.16777\n\n\nGhana\n1987\n209.06568\n\n\nGhana\n1988\n214.96518\n\n\nGhana\n1989\n219.90760\n\n\nGhana\n1990\n221.07167\n\n\nGhana\n1991\n226.28233\n\n\nGhana\n1992\n228.45880\n\n\nGhana\n1993\n232.85128\n\n\nGhana\n1994\n234.00645\n\n\nGhana\n1995\n237.29359\n\n\nGhana\n1996\n242.05830\n\n\nGhana\n1997\n246.19785\n\n\nGhana\n1998\n251.76529\n\n\nGhana\n1999\n256.73995\n\n\nGhana\n2000\n259.99069\n\n\nGhana\n2001\n263.96155\n\n\nGhana\n2002\n269.22856\n\n\nGhana\n2003\n276.40520\n\n\nGhana\n2004\n284.84915\n\n\nGhana\n2005\n294.40802\n\n\nGhana\n2006\n305.75111\n\n\nGhana\n2007\n317.73636\n\n\nGhana\n2008\n336.35184\n\n\nGhana\n2009\n341.55229\n\n\nGhana\n2010\n360.32406\n\n\nGhana\n2011\n402.69533\n\n\nGreece\n1960\n3385.66018\n\n\nGreece\n1961\n3733.42555\n\n\nGreece\n1962\n3768.16149\n\n\nGreece\n1963\n4134.74052\n\n\nGreece\n1964\n4459.99959\n\n\nGreece\n1965\n4856.14257\n\n\nGreece\n1966\n5114.43718\n\n\nGreece\n1967\n5351.02454\n\n\nGreece\n1968\n5670.61321\n\n\nGreece\n1969\n6209.25720\n\n\nGreece\n1970\n6687.94287\n\n\nGreece\n1971\n7181.13365\n\n\nGreece\n1972\n7859.49166\n\n\nGreece\n1973\n8457.01802\n\n\nGreece\n1974\n7883.45579\n\n\nGreece\n1975\n8307.03835\n\n\nGreece\n1976\n8739.42653\n\n\nGreece\n1977\n8880.15771\n\n\nGreece\n1978\n9401.00312\n\n\nGreece\n1979\n9589.25422\n\n\nGreece\n1980\n9559.82487\n\n\nGreece\n1981\n9327.28585\n\n\nGreece\n1982\n9164.96753\n\n\nGreece\n1983\n9013.52541\n\n\nGreece\n1984\n9149.05924\n\n\nGreece\n1985\n9342.31436\n\n\nGreece\n1986\n9359.66659\n\n\nGreece\n1987\n9117.70764\n\n\nGreece\n1988\n9474.18970\n\n\nGreece\n1989\n9783.02267\n\n\nGreece\n1990\n9718.09984\n\n\nGreece\n1991\n9922.26695\n\n\nGreece\n1992\n9882.29036\n\n\nGreece\n1993\n9635.28819\n\n\nGreece\n1994\n9746.49908\n\n\nGreece\n1995\n9875.02481\n\n\nGreece\n1996\n10037.32849\n\n\nGreece\n1997\n10337.45326\n\n\nGreece\n1998\n10627.60307\n\n\nGreece\n1999\n10942.82720\n\n\nGreece\n2000\n11396.23262\n\n\nGreece\n2001\n11839.32069\n\n\nGreece\n2002\n12204.59990\n\n\nGreece\n2003\n12887.77317\n\n\nGreece\n2004\n13404.22954\n\n\nGreece\n2005\n13657.70934\n\n\nGreece\n2006\n14352.83954\n\n\nGreece\n2007\n14801.55423\n\n\nGreece\n2008\n14711.61049\n\n\nGreece\n2009\n14192.63181\n\n\nGreece\n2010\n13452.02377\n\n\nGreece\n2011\n12509.01415\n\n\nGreenland\n1970\n9242.24634\n\n\nGreenland\n1971\n10272.25482\n\n\nGreenland\n1972\n10658.40503\n\n\nGreenland\n1973\n11221.19102\n\n\nGreenland\n1974\n11741.68746\n\n\nGreenland\n1975\n11793.74113\n\n\nGreenland\n1976\n12471.41091\n\n\nGreenland\n1977\n13654.09712\n\n\nGreenland\n1978\n14534.46952\n\n\nGreenland\n1979\n15118.02102\n\n\nGreenland\n1980\n16233.29089\n\n\nGreenland\n1981\n16084.95391\n\n\nGreenland\n1982\n15224.79077\n\n\nGreenland\n1983\n15569.74967\n\n\nGreenland\n1984\n14595.21340\n\n\nGreenland\n1985\n14986.68235\n\n\nGreenland\n1986\n15960.33365\n\n\nGreenland\n1987\n16653.91254\n\n\nGreenland\n1988\n17362.47976\n\n\nGreenland\n1989\n18351.30287\n\n\nGreenland\n1990\n16113.20256\n\n\nGreenland\n1991\n16123.91966\n\n\nGreenland\n1992\n15355.04674\n\n\nGreenland\n1993\n14609.42377\n\n\nGreenland\n1994\n15391.29173\n\n\nGreenland\n1995\n15879.34929\n\n\nGreenland\n1996\n16093.40442\n\n\nGreenland\n1997\n16300.64434\n\n\nGreenland\n1998\n17533.93458\n\n\nGreenland\n1999\n17775.53203\n\n\nGreenland\n2000\n19004.00345\n\n\nGreenland\n2001\n19193.94163\n\n\nGreenland\n2002\n18920.57019\n\n\nGreenland\n2003\n18796.94306\n\n\nGreenland\n2004\n19248.84588\n\n\nGreenland\n2005\n19621.61859\n\n\nGreenland\n2006\n20556.63474\n\n\nGreenland\n2007\n21773.92503\n\n\nGreenland\n2008\n21937.29475\n\n\nGreenland\n2009\n20751.89342\n\n\nGrenada\n1977\n2012.46449\n\n\nGrenada\n1978\n2148.19880\n\n\nGrenada\n1979\n2290.28826\n\n\nGrenada\n1980\n2269.10822\n\n\nGrenada\n1981\n2248.79984\n\n\nGrenada\n1982\n2295.86551\n\n\nGrenada\n1983\n2291.88460\n\n\nGrenada\n1984\n2341.57931\n\n\nGrenada\n1985\n2493.67152\n\n\nGrenada\n1986\n2692.96841\n\n\nGrenada\n1987\n3016.31959\n\n\nGrenada\n1988\n3161.69190\n\n\nGrenada\n1989\n3395.00971\n\n\nGrenada\n1990\n3593.24314\n\n\nGrenada\n1991\n3669.36860\n\n\nGrenada\n1992\n3630.42557\n\n\nGrenada\n1993\n3495.04211\n\n\nGrenada\n1994\n3551.46143\n\n\nGrenada\n1995\n3609.49488\n\n\nGrenada\n1996\n3735.65786\n\n\nGrenada\n1997\n3894.98827\n\n\nGrenada\n1998\n4142.41516\n\n\nGrenada\n1999\n5036.58312\n\n\nGrenada\n2000\n5154.11788\n\n\nGrenada\n2001\n5035.77310\n\n\nGrenada\n2002\n5208.03530\n\n\nGrenada\n2003\n5696.61986\n\n\nGrenada\n2004\n5623.71877\n\n\nGrenada\n2005\n6366.45500\n\n\nGrenada\n2006\n6102.63913\n\n\nGrenada\n2007\n6443.53633\n\n\nGrenada\n2008\n6487.66739\n\n\nGrenada\n2009\n6036.87577\n\n\nGrenada\n2010\n6011.84562\n\n\nGrenada\n2011\n6047.20080\n\n\nGuatemala\n1960\n959.15654\n\n\nGuatemala\n1961\n973.55303\n\n\nGuatemala\n1962\n980.96078\n\n\nGuatemala\n1963\n1045.78023\n\n\nGuatemala\n1964\n1064.99125\n\n\nGuatemala\n1965\n1081.82205\n\n\nGuatemala\n1966\n1111.15886\n\n\nGuatemala\n1967\n1126.26681\n\n\nGuatemala\n1968\n1192.63245\n\n\nGuatemala\n1969\n1216.01816\n\n\nGuatemala\n1970\n1251.19352\n\n\nGuatemala\n1971\n1285.64438\n\n\nGuatemala\n1972\n1342.82430\n\n\nGuatemala\n1973\n1395.61655\n\n\nGuatemala\n1974\n1445.68288\n\n\nGuatemala\n1975\n1436.25422\n\n\nGuatemala\n1976\n1504.15297\n\n\nGuatemala\n1977\n1582.46071\n\n\nGuatemala\n1978\n1621.99216\n\n\nGuatemala\n1979\n1658.01772\n\n\nGuatemala\n1980\n1679.02244\n\n\nGuatemala\n1981\n1648.77140\n\n\nGuatemala\n1982\n1551.58619\n\n\nGuatemala\n1983\n1474.67823\n\n\nGuatemala\n1984\n1446.19155\n\n\nGuatemala\n1985\n1403.33784\n\n\nGuatemala\n1986\n1372.78324\n\n\nGuatemala\n1987\n1389.06604\n\n\nGuatemala\n1988\n1410.61769\n\n\nGuatemala\n1989\n1433.24470\n\n\nGuatemala\n1990\n1444.30924\n\n\nGuatemala\n1991\n1463.04875\n\n\nGuatemala\n1992\n1498.70484\n\n\nGuatemala\n1993\n1521.82566\n\n\nGuatemala\n1994\n1547.02757\n\n\nGuatemala\n1995\n1586.72193\n\n\nGuatemala\n1996\n1596.86309\n\n\nGuatemala\n1997\n1629.17316\n\n\nGuatemala\n1998\n1671.98083\n\n\nGuatemala\n1999\n1696.56565\n\n\nGuatemala\n2000\n1716.68534\n\n\nGuatemala\n2001\n1714.68340\n\n\nGuatemala\n2002\n1737.56038\n\n\nGuatemala\n2003\n1737.62110\n\n\nGuatemala\n2004\n1748.14967\n\n\nGuatemala\n2005\n1760.79986\n\n\nGuatemala\n2006\n1810.29533\n\n\nGuatemala\n2007\n1877.75147\n\n\nGuatemala\n2008\n1892.33261\n\n\nGuatemala\n2009\n1855.82285\n\n\nGuatemala\n2010\n1862.66726\n\n\nGuatemala\n2011\n1886.42362\n\n\nGuinea\n1986\n339.60206\n\n\nGuinea\n1987\n342.37193\n\n\nGuinea\n1988\n354.03570\n\n\nGuinea\n1989\n355.42049\n\n\nGuinea\n1990\n354.50492\n\n\nGuinea\n1991\n344.37146\n\n\nGuinea\n1992\n334.59155\n\n\nGuinea\n1993\n330.74904\n\n\nGuinea\n1994\n325.94825\n\n\nGuinea\n1995\n326.73925\n\n\nGuinea\n1996\n330.80076\n\n\nGuinea\n1997\n340.25141\n\n\nGuinea\n1998\n346.97806\n\n\nGuinea\n1999\n355.23549\n\n\nGuinea\n2000\n358.96291\n\n\nGuinea\n2001\n366.47986\n\n\nGuinea\n2002\n379.46822\n\n\nGuinea\n2003\n378.09786\n\n\nGuinea\n2004\n380.61808\n\n\nGuinea\n2005\n385.43020\n\n\nGuinea\n2006\n388.16313\n\n\nGuinea\n2007\n387.75163\n\n\nGuinea\n2008\n398.99903\n\n\nGuinea\n2009\n389.64290\n\n\nGuinea\n2010\n388.41815\n\n\nGuinea\n2011\n394.11566\n\n\nGuinea-Bissau\n1970\n172.55893\n\n\nGuinea-Bissau\n1971\n162.85756\n\n\nGuinea-Bissau\n1972\n169.09563\n\n\nGuinea-Bissau\n1973\n166.00639\n\n\nGuinea-Bissau\n1974\n167.88480\n\n\nGuinea-Bissau\n1975\n174.67684\n\n\nGuinea-Bissau\n1976\n176.42215\n\n\nGuinea-Bissau\n1977\n157.35064\n\n\nGuinea-Bissau\n1978\n171.14949\n\n\nGuinea-Bissau\n1979\n168.41454\n\n\nGuinea-Bissau\n1980\n137.24187\n\n\nGuinea-Bissau\n1981\n158.09662\n\n\nGuinea-Bissau\n1982\n161.32117\n\n\nGuinea-Bissau\n1983\n153.05855\n\n\nGuinea-Bissau\n1984\n164.15587\n\n\nGuinea-Bissau\n1985\n167.97036\n\n\nGuinea-Bissau\n1986\n163.53576\n\n\nGuinea-Bissau\n1987\n165.05976\n\n\nGuinea-Bissau\n1988\n169.27406\n\n\nGuinea-Bissau\n1989\n176.04606\n\n\nGuinea-Bissau\n1990\n183.07837\n\n\nGuinea-Bissau\n1991\n188.56940\n\n\nGuinea-Bissau\n1992\n186.78916\n\n\nGuinea-Bissau\n1993\n186.84232\n\n\nGuinea-Bissau\n1994\n188.93409\n\n\nGuinea-Bissau\n1995\n193.32308\n\n\nGuinea-Bissau\n1996\n211.51669\n\n\nGuinea-Bissau\n1997\n220.89494\n\n\nGuinea-Bissau\n1998\n155.76755\n\n\nGuinea-Bissau\n1999\n164.69996\n\n\nGuinea-Bissau\n2000\n173.66269\n\n\nGuinea-Bissau\n2001\n170.68075\n\n\nGuinea-Bissau\n2002\n155.52883\n\n\nGuinea-Bissau\n2003\n151.57980\n\n\nGuinea-Bissau\n2004\n151.93370\n\n\nGuinea-Bissau\n2005\n154.10613\n\n\nGuinea-Bissau\n2006\n154.26317\n\n\nGuinea-Bissau\n2007\n155.99480\n\n\nGuinea-Bissau\n2008\n157.74551\n\n\nGuinea-Bissau\n2009\n159.14723\n\n\nGuinea-Bissau\n2010\n161.29329\n\n\nGuinea-Bissau\n2011\n166.34665\n\n\nGuyana\n1960\n688.85617\n\n\nGuyana\n1961\n701.52525\n\n\nGuyana\n1962\n690.46299\n\n\nGuyana\n1963\n589.85985\n\n\nGuyana\n1964\n639.73311\n\n\nGuyana\n1965\n688.66920\n\n\nGuyana\n1966\n705.49989\n\n\nGuyana\n1967\n716.50294\n\n\nGuyana\n1968\n705.83453\n\n\nGuyana\n1969\n738.88108\n\n\nGuyana\n1970\n757.00448\n\n\nGuyana\n1971\n770.88072\n\n\nGuyana\n1972\n739.20076\n\n\nGuyana\n1973\n744.20749\n\n\nGuyana\n1974\n797.28205\n\n\nGuyana\n1975\n859.26282\n\n\nGuyana\n1976\n865.11532\n\n\nGuyana\n1977\n834.21589\n\n\nGuyana\n1978\n811.60268\n\n\nGuyana\n1979\n791.37938\n\n\nGuyana\n1980\n802.91638\n\n\nGuyana\n1981\n816.26061\n\n\nGuyana\n1982\n712.33095\n\n\nGuyana\n1983\n669.22661\n\n\nGuyana\n1984\n641.38404\n\n\nGuyana\n1985\n662.77197\n\n\nGuyana\n1986\n662.64009\n\n\nGuyana\n1987\n674.41692\n\n\nGuyana\n1988\n654.63275\n\n\nGuyana\n1989\n626.24652\n\n\nGuyana\n1990\n609.91442\n\n\nGuyana\n1991\n647.74051\n\n\nGuyana\n1992\n698.30677\n\n\nGuyana\n1993\n754.31565\n\n\nGuyana\n1994\n816.75714\n\n\nGuyana\n1995\n855.80235\n\n\nGuyana\n1996\n921.98881\n\n\nGuyana\n1997\n978.38996\n\n\nGuyana\n1998\n960.73219\n\n\nGuyana\n1999\n987.86102\n\n\nGuyana\n2000\n972.12789\n\n\nGuyana\n2001\n990.99169\n\n\nGuyana\n2002\n997.76510\n\n\nGuyana\n2003\n983.85033\n\n\nGuyana\n2004\n1012.40708\n\n\nGuyana\n2005\n989.28047\n\n\nGuyana\n2006\n1037.12754\n\n\nGuyana\n2007\n1107.35197\n\n\nGuyana\n2008\n1126.97164\n\n\nGuyana\n2009\n1162.15268\n\n\nGuyana\n2010\n1210.56956\n\n\nHaiti\n1991\n513.43824\n\n\nHaiti\n1992\n476.39300\n\n\nHaiti\n1993\n441.60211\n\n\nHaiti\n1994\n381.20050\n\n\nHaiti\n1995\n410.80048\n\n\nHaiti\n1996\n419.57460\n\n\nHaiti\n1997\n422.75528\n\n\nHaiti\n1998\n424.02606\n\n\nHaiti\n1999\n427.61105\n\n\nHaiti\n2000\n423.86889\n\n\nHaiti\n2001\n412.45708\n\n\nHaiti\n2002\n404.78002\n\n\nHaiti\n2003\n399.97359\n\n\nHaiti\n2004\n380.18023\n\n\nHaiti\n2005\n381.41805\n\n\nHaiti\n2006\n384.58552\n\n\nHaiti\n2007\n392.09423\n\n\nHaiti\n2008\n390.20998\n\n\nHaiti\n2009\n396.23361\n\n\nHaiti\n2010\n369.93547\n\n\nHaiti\n2011\n385.57938\n\n\nHonduras\n1960\n751.19580\n\n\nHonduras\n1961\n740.48339\n\n\nHonduras\n1962\n757.50587\n\n\nHonduras\n1963\n759.08839\n\n\nHonduras\n1964\n775.07184\n\n\nHonduras\n1965\n819.97723\n\n\nHonduras\n1966\n839.86008\n\n\nHonduras\n1967\n866.36014\n\n\nHonduras\n1968\n899.62280\n\n\nHonduras\n1969\n882.05586\n\n\nHonduras\n1970\n889.83917\n\n\nHonduras\n1971\n900.29907\n\n\nHonduras\n1972\n925.87733\n\n\nHonduras\n1973\n970.56128\n\n\nHonduras\n1974\n930.97012\n\n\nHonduras\n1975\n922.73472\n\n\nHonduras\n1976\n988.84657\n\n\nHonduras\n1977\n1057.96072\n\n\nHonduras\n1978\n1127.67001\n\n\nHonduras\n1979\n1143.61071\n\n\nHonduras\n1980\n1115.74206\n\n\nHonduras\n1981\n1109.06402\n\n\nHonduras\n1982\n1060.54257\n\n\nHonduras\n1983\n1019.20493\n\n\nHonduras\n1984\n1031.76548\n\n\nHonduras\n1985\n1043.06673\n\n\nHonduras\n1986\n1019.63004\n\n\nHonduras\n1987\n1049.57353\n\n\nHonduras\n1988\n1066.31510\n\n\nHonduras\n1989\n1080.87805\n\n\nHonduras\n1990\n1051.78592\n\n\nHonduras\n1991\n1056.27818\n\n\nHonduras\n1992\n1085.76335\n\n\nHonduras\n1993\n1123.30526\n\n\nHonduras\n1994\n1080.77062\n\n\nHonduras\n1995\n1097.56752\n\n\nHonduras\n1996\n1110.82555\n\n\nHonduras\n1997\n1140.51488\n\n\nHonduras\n1998\n1148.53349\n\n\nHonduras\n1999\n1103.30454\n\n\nHonduras\n2000\n1142.70966\n\n\nHonduras\n2001\n1149.94924\n\n\nHonduras\n2002\n1169.13051\n\n\nHonduras\n2003\n1197.91477\n\n\nHonduras\n2004\n1247.32345\n\n\nHonduras\n2005\n1296.62418\n\n\nHonduras\n2006\n1354.49704\n\n\nHonduras\n2007\n1409.97905\n\n\nHonduras\n2008\n1440.68005\n\n\nHonduras\n2009\n1382.13161\n\n\nHonduras\n2010\n1392.31583\n\n\nHonduras\n2011\n1414.07249\n\n\nHong Kong, China\n1965\n5488.82577\n\n\nHong Kong, China\n1966\n5538.07529\n\n\nHong Kong, China\n1967\n5486.45405\n\n\nHong Kong, China\n1968\n5553.63991\n\n\nHong Kong, China\n1969\n6085.69033\n\n\nHong Kong, China\n1970\n6486.33845\n\n\nHong Kong, China\n1971\n6810.92813\n\n\nHong Kong, China\n1972\n7390.65015\n\n\nHong Kong, China\n1973\n8067.34282\n\n\nHong Kong, China\n1974\n8085.66235\n\n\nHong Kong, China\n1975\n7893.43148\n\n\nHong Kong, China\n1976\n9054.88509\n\n\nHong Kong, China\n1977\n9971.62331\n\n\nHong Kong, China\n1978\n10601.53900\n\n\nHong Kong, China\n1979\n11197.68583\n\n\nHong Kong, China\n1980\n12004.70252\n\n\nHong Kong, China\n1981\n12812.02973\n\n\nHong Kong, China\n1982\n12986.75898\n\n\nHong Kong, China\n1983\n13555.44286\n\n\nHong Kong, China\n1984\n14761.60321\n\n\nHong Kong, China\n1985\n14714.44717\n\n\nHong Kong, China\n1986\n16138.98215\n\n\nHong Kong, China\n1987\n18085.62401\n\n\nHong Kong, China\n1988\n19495.63699\n\n\nHong Kong, China\n1989\n19734.06034\n\n\nHong Kong, China\n1990\n20424.27245\n\n\nHong Kong, China\n1991\n21410.58959\n\n\nHong Kong, China\n1992\n22555.35372\n\n\nHong Kong, China\n1993\n23546.10108\n\n\nHong Kong, China\n1994\n24411.37474\n\n\nHong Kong, China\n1995\n24500.83898\n\n\nHong Kong, China\n1996\n24435.19094\n\n\nHong Kong, China\n1997\n25468.41275\n\n\nHong Kong, China\n1998\n23770.93183\n\n\nHong Kong, China\n1999\n24135.16510\n\n\nHong Kong, China\n2000\n25756.66378\n\n\nHong Kong, China\n2001\n25710.93403\n\n\nHong Kong, China\n2002\n26021.38854\n\n\nHong Kong, China\n2003\n26869.67462\n\n\nHong Kong, China\n2004\n28980.43778\n\n\nHong Kong, China\n2005\n30985.89814\n\n\nHong Kong, China\n2006\n32952.71213\n\n\nHong Kong, China\n2007\n34734.54725\n\n\nHong Kong, China\n2008\n35210.31049\n\n\nHong Kong, China\n2009\n34216.93042\n\n\nHong Kong, China\n2010\n36207.70622\n\n\nHong Kong, China\n2011\n37958.23146\n\n\nHungary\n1960\n1050.36996\n\n\nHungary\n1961\n1094.76419\n\n\nHungary\n1962\n1157.80299\n\n\nHungary\n1963\n1220.61778\n\n\nHungary\n1964\n1273.95983\n\n\nHungary\n1965\n1809.22774\n\n\nHungary\n1966\n1937.24651\n\n\nHungary\n1967\n2074.80412\n\n\nHungary\n1968\n2168.14824\n\n\nHungary\n1969\n2308.09392\n\n\nHungary\n1970\n2407.41404\n\n\nHungary\n1971\n2549.36758\n\n\nHungary\n1972\n2696.82770\n\n\nHungary\n1973\n2873.63281\n\n\nHungary\n1974\n3029.62494\n\n\nHungary\n1975\n3198.59590\n\n\nHungary\n1976\n3295.56375\n\n\nHungary\n1977\n3529.59064\n\n\nHungary\n1978\n3672.20445\n\n\nHungary\n1979\n3764.54351\n\n\nHungary\n1980\n3769.61801\n\n\nHungary\n1981\n3877.42053\n\n\nHungary\n1982\n3989.93294\n\n\nHungary\n1983\n4024.82118\n\n\nHungary\n1984\n4140.07877\n\n\nHungary\n1985\n4137.11797\n\n\nHungary\n1986\n4207.79211\n\n\nHungary\n1987\n4385.61226\n\n\nHungary\n1988\n4389.47280\n\n\nHungary\n1989\n4470.21377\n\n\nHungary\n1990\n4358.70432\n\n\nHungary\n1991\n3840.58311\n\n\nHungary\n1992\n3724.35802\n\n\nHungary\n1993\n3707.12671\n\n\nHungary\n1994\n3821.60902\n\n\nHungary\n1995\n3883.93632\n\n\nHungary\n1996\n3896.87281\n\n\nHungary\n1997\n4026.83941\n\n\nHungary\n1998\n4200.63373\n\n\nHungary\n1999\n4347.25384\n\n\nHungary\n2000\n4542.72072\n\n\nHungary\n2001\n4722.17501\n\n\nHungary\n2002\n4949.03373\n\n\nHungary\n2003\n5154.33510\n\n\nHungary\n2004\n5413.57266\n\n\nHungary\n2005\n5639.39460\n\n\nHungary\n2006\n5868.30170\n\n\nHungary\n2007\n5884.14096\n\n\nHungary\n2008\n5947.15831\n\n\nHungary\n2009\n5551.42634\n\n\nHungary\n2010\n5633.99099\n\n\nHungary\n2011\n5745.98153\n\n\nIceland\n1960\n10109.90857\n\n\nIceland\n1961\n9906.40793\n\n\nIceland\n1962\n10532.96370\n\n\nIceland\n1963\n11411.19546\n\n\nIceland\n1964\n12321.77975\n\n\nIceland\n1965\n13002.84732\n\n\nIceland\n1966\n13901.35006\n\n\nIceland\n1967\n13505.51266\n\n\nIceland\n1968\n12592.68463\n\n\nIceland\n1969\n12772.47105\n\n\nIceland\n1970\n13653.09117\n\n\nIceland\n1971\n15311.96879\n\n\nIceland\n1972\n16021.59528\n\n\nIceland\n1973\n16855.72945\n\n\nIceland\n1974\n17578.13238\n\n\nIceland\n1975\n17466.89433\n\n\nIceland\n1976\n18324.96380\n\n\nIceland\n1977\n19793.74323\n\n\nIceland\n1978\n20821.52042\n\n\nIceland\n1979\n21620.97236\n\n\nIceland\n1980\n22622.90280\n\n\nIceland\n1981\n23320.26153\n\n\nIceland\n1982\n23506.41371\n\n\nIceland\n1983\n22698.21981\n\n\nIceland\n1984\n23385.39562\n\n\nIceland\n1985\n23965.92239\n\n\nIceland\n1986\n25282.81640\n\n\nIceland\n1987\n27144.43317\n\n\nIceland\n1988\n26698.62716\n\n\nIceland\n1989\n26438.18194\n\n\nIceland\n1990\n26540.14492\n\n\nIceland\n1991\n26175.64080\n\n\nIceland\n1992\n24976.65735\n\n\nIceland\n1993\n25048.71550\n\n\nIceland\n1994\n25728.69306\n\n\nIceland\n1995\n25619.33420\n\n\nIceland\n1996\n26700.68499\n\n\nIceland\n1997\n27783.99974\n\n\nIceland\n1998\n29224.42406\n\n\nIceland\n1999\n30055.27261\n\n\nIceland\n2000\n30928.67564\n\n\nIceland\n2001\n31717.14596\n\n\nIceland\n2002\n31478.98220\n\n\nIceland\n2003\n32022.78398\n\n\nIceland\n2004\n34230.18336\n\n\nIceland\n2005\n36128.59244\n\n\nIceland\n2006\n36952.19207\n\n\nIceland\n2007\n38185.33368\n\n\nIceland\n2008\n37927.11904\n\n\nIceland\n2009\n35310.97441\n\n\nIceland\n2010\n33943.11853\n\n\nIceland\n2011\n34706.19047\n\n\nIndia\n1960\n180.96173\n\n\nIndia\n1961\n183.95821\n\n\nIndia\n1962\n185.53869\n\n\nIndia\n1963\n192.65807\n\n\nIndia\n1964\n202.75164\n\n\nIndia\n1965\n193.28706\n\n\nIndia\n1966\n189.09834\n\n\nIndia\n1967\n199.53856\n\n\nIndia\n1968\n201.83291\n\n\nIndia\n1969\n210.31243\n\n\nIndia\n1970\n216.23572\n\n\nIndia\n1971\n214.83225\n\n\nIndia\n1972\n208.77304\n\n\nIndia\n1973\n210.69156\n\n\nIndia\n1974\n208.24879\n\n\nIndia\n1975\n222.00893\n\n\nIndia\n1976\n220.42320\n\n\nIndia\n1977\n230.87382\n\n\nIndia\n1978\n238.34826\n\n\nIndia\n1979\n220.59855\n\n\nIndia\n1980\n230.00854\n\n\nIndia\n1981\n238.23057\n\n\nIndia\n1982\n240.90968\n\n\nIndia\n1983\n252.65169\n\n\nIndia\n1984\n256.45344\n\n\nIndia\n1985\n263.96052\n\n\nIndia\n1986\n270.51328\n\n\nIndia\n1987\n275.15139\n\n\nIndia\n1988\n295.19700\n\n\nIndia\n1989\n306.17173\n\n\nIndia\n1990\n316.42858\n\n\nIndia\n1991\n313.27451\n\n\nIndia\n1992\n323.85750\n\n\nIndia\n1993\n332.60568\n\n\nIndia\n1994\n347.95104\n\n\nIndia\n1995\n367.27716\n\n\nIndia\n1996\n387.74152\n\n\nIndia\n1997\n396.18444\n\n\nIndia\n1998\n413.28705\n\n\nIndia\n1999\n440.56931\n\n\nIndia\n2000\n450.41511\n\n\nIndia\n2001\n464.97426\n\n\nIndia\n2002\n475.45706\n\n\nIndia\n2003\n505.24894\n\n\nIndia\n2004\n536.60488\n\n\nIndia\n2005\n577.65673\n\n\nIndia\n2006\n621.89941\n\n\nIndia\n2007\n673.00469\n\n\nIndia\n2008\n689.27320\n\n\nIndia\n2009\n735.63185\n\n\nIndia\n2010\n794.80126\n\n\nIndia\n2011\n837.74640\n\n\nIndonesia\n1960\n200.64815\n\n\nIndonesia\n1961\n207.74792\n\n\nIndonesia\n1962\n206.54965\n\n\nIndonesia\n1963\n196.92908\n\n\nIndonesia\n1964\n198.66879\n\n\nIndonesia\n1965\n195.52844\n\n\nIndonesia\n1966\n196.03265\n\n\nIndonesia\n1967\n193.22307\n\n\nIndonesia\n1968\n210.99328\n\n\nIndonesia\n1969\n221.03481\n\n\nIndonesia\n1970\n233.02971\n\n\nIndonesia\n1971\n243.08404\n\n\nIndonesia\n1972\n255.71202\n\n\nIndonesia\n1973\n273.77445\n\n\nIndonesia\n1974\n289.12970\n\n\nIndonesia\n1975\n299.58483\n\n\nIndonesia\n1976\n309.95241\n\n\nIndonesia\n1977\n328.80885\n\n\nIndonesia\n1978\n350.75380\n\n\nIndonesia\n1979\n367.02587\n\n\nIndonesia\n1980\n390.00965\n\n\nIndonesia\n1981\n412.34137\n\n\nIndonesia\n1982\n407.68969\n\n\nIndonesia\n1983\n432.57700\n\n\nIndonesia\n1984\n453.85971\n\n\nIndonesia\n1985\n460.11058\n\n\nIndonesia\n1986\n478.01985\n\n\nIndonesia\n1987\n493.86475\n\n\nIndonesia\n1988\n515.69450\n\n\nIndonesia\n1989\n552.63690\n\n\nIndonesia\n1990\n592.09607\n\n\nIndonesia\n1991\n634.27100\n\n\nIndonesia\n1992\n669.14304\n\n\nIndonesia\n1993\n706.50880\n\n\nIndonesia\n1994\n748.32351\n\n\nIndonesia\n1995\n799.30993\n\n\nIndonesia\n1996\n848.24711\n\n\nIndonesia\n1997\n875.95922\n\n\nIndonesia\n1998\n750.81120\n\n\nIndonesia\n1999\n746.79278\n\n\nIndonesia\n2000\n773.31097\n\n\nIndonesia\n2001\n791.07645\n\n\nIndonesia\n2002\n816.01641\n\n\nIndonesia\n2003\n844.18349\n\n\nIndonesia\n2004\n875.72916\n\n\nIndonesia\n2005\n914.59990\n\n\nIndonesia\n2006\n953.93553\n\n\nIndonesia\n2007\n1003.36443\n\n\nIndonesia\n2008\n1052.43339\n\n\nIndonesia\n2009\n1089.72401\n\n\nIndonesia\n2010\n1145.38543\n\n\nIndonesia\n2011\n1206.99107\n\n\nIran\n1965\n965.05949\n\n\nIran\n1966\n1037.55296\n\n\nIran\n1967\n1117.21827\n\n\nIran\n1968\n1223.33695\n\n\nIran\n1969\n1344.65712\n\n\nIran\n1970\n1438.30640\n\n\nIran\n1971\n1583.05701\n\n\nIran\n1972\n1793.57466\n\n\nIran\n1973\n1843.46797\n\n\nIran\n1974\n1962.05068\n\n\nIran\n1975\n2016.28961\n\n\nIran\n1976\n2303.84456\n\n\nIran\n1977\n2204.42046\n\n\nIran\n1978\n1974.66660\n\n\nIran\n1979\n1772.98158\n\n\nIran\n1980\n1485.01407\n\n\nIran\n1981\n1357.30301\n\n\nIran\n1982\n1477.01185\n\n\nIran\n1983\n1601.64439\n\n\nIran\n1984\n1518.00697\n\n\nIran\n1985\n1492.49274\n\n\nIran\n1986\n1306.17612\n\n\nIran\n1987\n1241.64750\n\n\nIran\n1988\n1123.95475\n\n\nIran\n1989\n1157.05691\n\n\nIran\n1990\n1281.08281\n\n\nIran\n1991\n1411.53250\n\n\nIran\n1992\n1445.85246\n\n\nIran\n1993\n1401.63214\n\n\nIran\n1994\n1376.09847\n\n\nIran\n1995\n1390.18136\n\n\nIran\n1996\n1462.97841\n\n\nIran\n1997\n1484.66602\n\n\nIran\n1998\n1496.90982\n\n\nIran\n1999\n1498.67052\n\n\nIran\n2000\n1550.09061\n\n\nIran\n2001\n1583.43797\n\n\nIran\n2002\n1679.66440\n\n\nIran\n2003\n1776.72849\n\n\nIran\n2004\n1844.52057\n\n\nIran\n2005\n1906.59005\n\n\nIran\n2006\n1994.64719\n\n\nIran\n2007\n2125.03025\n\n\nIran\n2008\n2148.23042\n\n\nIran\n2009\n2161.54651\n\n\nIraq\n1997\n723.23844\n\n\nIraq\n1998\n945.90763\n\n\nIraq\n1999\n1145.35643\n\n\nIraq\n2000\n1063.48147\n\n\nIraq\n2001\n968.43376\n\n\nIraq\n2002\n870.55042\n\n\nIraq\n2003\n498.22457\n\n\nIraq\n2004\n711.63264\n\n\nIraq\n2005\n688.96667\n\n\nIraq\n2006\n710.20872\n\n\nIraq\n2007\n699.70556\n\n\nIraq\n2008\n743.69134\n\n\nIraq\n2009\n752.18335\n\n\nIraq\n2010\n736.27212\n\n\nIraq\n2011\n786.32719\n\n\nIreland\n1970\n7377.49545\n\n\nIreland\n1971\n7544.70255\n\n\nIreland\n1972\n7915.81568\n\n\nIreland\n1973\n8157.66161\n\n\nIreland\n1974\n8365.45395\n\n\nIreland\n1975\n8694.42071\n\n\nIreland\n1976\n8683.64843\n\n\nIreland\n1977\n9270.29079\n\n\nIreland\n1978\n9796.53680\n\n\nIreland\n1979\n9963.95108\n\n\nIreland\n1980\n10153.25351\n\n\nIreland\n1981\n10368.73585\n\n\nIreland\n1982\n10505.70907\n\n\nIreland\n1983\n10406.00913\n\n\nIreland\n1984\n10792.03880\n\n\nIreland\n1985\n11107.24557\n\n\nIreland\n1986\n11054.64570\n\n\nIreland\n1987\n11568.93441\n\n\nIreland\n1988\n12224.70535\n\n\nIreland\n1989\n12986.79835\n\n\nIreland\n1990\n14074.44359\n\n\nIreland\n1991\n14263.78695\n\n\nIreland\n1992\n14640.43757\n\n\nIreland\n1993\n14959.68558\n\n\nIreland\n1994\n15758.49856\n\n\nIreland\n1995\n17188.38855\n\n\nIreland\n1996\n18664.80744\n\n\nIreland\n1997\n20495.91046\n\n\nIreland\n1998\n21865.41711\n\n\nIreland\n1999\n23764.16285\n\n\nIreland\n2000\n25629.65010\n\n\nIreland\n2001\n26433.75372\n\n\nIreland\n2002\n27518.57409\n\n\nIreland\n2003\n28200.07667\n\n\nIreland\n2004\n28937.33143\n\n\nIreland\n2005\n29825.53296\n\n\nIreland\n2006\n30669.37259\n\n\nIreland\n2007\n31543.60253\n\n\nIreland\n2008\n30130.64042\n\n\nIreland\n2009\n27814.12448\n\n\nIreland\n2010\n27599.29658\n\n\nIreland\n2011\n27715.52837\n\n\nIsle of Man\n1984\n8217.08211\n\n\nIsle of Man\n1985\n8220.90535\n\n\nIsle of Man\n1986\n9674.76228\n\n\nIsle of Man\n1987\n10436.36643\n\n\nIsle of Man\n1988\n11421.01685\n\n\nIsle of Man\n1989\n11963.03467\n\n\nIsle of Man\n1990\n12278.15208\n\n\nIsle of Man\n1991\n12360.94567\n\n\nIsle of Man\n1992\n12398.50938\n\n\nIsle of Man\n1993\n12685.09339\n\n\nIsle of Man\n1994\n13148.81622\n\n\nIsle of Man\n1995\n13624.51345\n\n\nIsle of Man\n1996\n14529.84389\n\n\nIsle of Man\n1997\n15579.28241\n\n\nIsle of Man\n1998\n17438.75745\n\n\nIsle of Man\n1999\n19559.68807\n\n\nIsle of Man\n2000\n20359.46252\n\n\nIsle of Man\n2001\n21239.97037\n\n\nIsle of Man\n2002\n22294.27994\n\n\nIsle of Man\n2003\n23526.41327\n\n\nIsle of Man\n2004\n24572.13434\n\n\nIsle of Man\n2005\n25831.91622\n\n\nIsle of Man\n2006\n27612.48388\n\n\nIsle of Man\n2007\n29462.26492\n\n\nIsrael\n1960\n5824.52441\n\n\nIsrael\n1961\n6266.68815\n\n\nIsrael\n1962\n6578.00333\n\n\nIsrael\n1963\n7018.34162\n\n\nIsrael\n1964\n7281.56713\n\n\nIsrael\n1965\n7671.00356\n\n\nIsrael\n1966\n7472.46988\n\n\nIsrael\n1967\n7371.03778\n\n\nIsrael\n1968\n8390.94358\n\n\nIsrael\n1969\n9284.13041\n\n\nIsrael\n1970\n9637.61375\n\n\nIsrael\n1971\n10387.55200\n\n\nIsrael\n1972\n11510.28914\n\n\nIsrael\n1973\n11423.28869\n\n\nIsrael\n1974\n11846.87948\n\n\nIsrael\n1975\n11963.66968\n\n\nIsrael\n1976\n11853.48997\n\n\nIsrael\n1977\n11590.10340\n\n\nIsrael\n1978\n11895.40780\n\n\nIsrael\n1979\n12322.42677\n\n\nIsrael\n1980\n12856.71785\n\n\nIsrael\n1981\n13252.01950\n\n\nIsrael\n1982\n13240.70242\n\n\nIsrael\n1983\n13458.49244\n\n\nIsrael\n1984\n13403.80135\n\n\nIsrael\n1985\n13623.54055\n\n\nIsrael\n1986\n14057.12776\n\n\nIsrael\n1987\n14826.09890\n\n\nIsrael\n1988\n14877.61551\n\n\nIsrael\n1989\n14754.48205\n\n\nIsrael\n1990\n15282.68784\n\n\nIsrael\n1991\n15498.20512\n\n\nIsrael\n1992\n15814.39991\n\n\nIsrael\n1993\n16255.31103\n\n\nIsrael\n1994\n16937.80936\n\n\nIsrael\n1995\n17568.40398\n\n\nIsrael\n1996\n18054.29086\n\n\nIsrael\n1997\n18202.49628\n\n\nIsrael\n1998\n18523.47738\n\n\nIsrael\n1999\n18663.73882\n\n\nIsrael\n2000\n19859.30215\n\n\nIsrael\n2001\n19353.34454\n\n\nIsrael\n2002\n18858.29173\n\n\nIsrael\n2003\n18800.92652\n\n\nIsrael\n2004\n19366.33583\n\n\nIsrael\n2005\n19967.98088\n\n\nIsrael\n2006\n20715.56805\n\n\nIsrael\n2007\n21469.53451\n\n\nIsrael\n2008\n21941.10572\n\n\nIsrael\n2009\n21602.21001\n\n\nIsrael\n2010\n22239.05126\n\n\nIsrael\n2011\n22859.67589\n\n\nItaly\n1960\n5847.45818\n\n\nItaly\n1961\n6285.22339\n\n\nItaly\n1962\n6630.12362\n\n\nItaly\n1963\n6951.15769\n\n\nItaly\n1964\n7087.08985\n\n\nItaly\n1965\n7257.32502\n\n\nItaly\n1966\n7632.10514\n\n\nItaly\n1967\n8120.99318\n\n\nItaly\n1968\n8597.98740\n\n\nItaly\n1969\n9070.80616\n\n\nItaly\n1970\n9502.12387\n\n\nItaly\n1971\n9629.85906\n\n\nItaly\n1972\n9928.72074\n\n\nItaly\n1973\n10564.33818\n\n\nItaly\n1974\n11072.69559\n\n\nItaly\n1975\n10776.70208\n\n\nItaly\n1976\n11487.13673\n\n\nItaly\n1977\n11731.33344\n\n\nItaly\n1978\n12068.36719\n\n\nItaly\n1979\n12750.61902\n\n\nItaly\n1980\n13160.82813\n\n\nItaly\n1981\n13256.01150\n\n\nItaly\n1982\n13300.97920\n\n\nItaly\n1983\n13451.61161\n\n\nItaly\n1984\n13882.43755\n\n\nItaly\n1985\n14266.75637\n\n\nItaly\n1986\n14673.98195\n\n\nItaly\n1987\n15140.82445\n\n\nItaly\n1988\n15768.26659\n\n\nItaly\n1989\n16290.33214\n\n\nItaly\n1990\n16599.92009\n\n\nItaly\n1991\n16843.63607\n\n\nItaly\n1992\n16972.62591\n\n\nItaly\n1993\n16817.59766\n\n\nItaly\n1994\n17175.84873\n\n\nItaly\n1995\n17671.40672\n\n\nItaly\n1996\n17866.89937\n\n\nItaly\n1997\n18190.67114\n\n\nItaly\n1998\n18448.79289\n\n\nItaly\n1999\n18713.35397\n\n\nItaly\n2000\n19388.27875\n\n\nItaly\n2001\n19737.24069\n\n\nItaly\n2002\n19763.83911\n\n\nItaly\n2003\n19601.25524\n\n\nItaly\n2004\n19744.88756\n\n\nItaly\n2005\n19781.95853\n\n\nItaly\n2006\n20102.23023\n\n\nItaly\n2007\n20291.22664\n\n\nItaly\n2008\n19903.45694\n\n\nItaly\n2009\n18697.21979\n\n\nItaly\n2010\n18944.41381\n\n\nItaly\n2011\n18937.24998\n\n\nJamaica\n1966\n2761.25853\n\n\nJamaica\n1967\n2778.83718\n\n\nJamaica\n1968\n2906.53118\n\n\nJamaica\n1969\n3033.24969\n\n\nJamaica\n1970\n3355.42759\n\n\nJamaica\n1971\n3389.61227\n\n\nJamaica\n1972\n3938.66896\n\n\nJamaica\n1973\n3663.77398\n\n\nJamaica\n1974\n3456.21781\n\n\nJamaica\n1975\n3400.87517\n\n\nJamaica\n1976\n3134.72376\n\n\nJamaica\n1977\n3021.14993\n\n\nJamaica\n1978\n2989.17998\n\n\nJamaica\n1979\n2923.99391\n\n\nJamaica\n1980\n2719.61139\n\n\nJamaica\n1981\n2753.56965\n\n\nJamaica\n1982\n2762.25927\n\n\nJamaica\n1983\n2763.86380\n\n\nJamaica\n1984\n2674.56662\n\n\nJamaica\n1985\n2560.79316\n\n\nJamaica\n1986\n2581.41336\n\n\nJamaica\n1987\n2766.53426\n\n\nJamaica\n1988\n2869.40456\n\n\nJamaica\n1989\n3051.28021\n\n\nJamaica\n1990\n3159.36257\n\n\nJamaica\n1991\n3290.13625\n\n\nJamaica\n1992\n3330.93912\n\n\nJamaica\n1993\n3617.77163\n\n\nJamaica\n1994\n3639.52304\n\n\nJamaica\n1995\n3695.01263\n\n\nJamaica\n1996\n3646.80824\n\n\nJamaica\n1997\n3570.86642\n\n\nJamaica\n1998\n3456.52383\n\n\nJamaica\n1999\n3468.98069\n\n\nJamaica\n2000\n3479.05675\n\n\nJamaica\n2001\n3505.00205\n\n\nJapan\n1960\n7774.71022\n\n\nJapan\n1961\n8486.96647\n\n\nJapan\n1962\n9157.32331\n\n\nJapan\n1963\n9832.73038\n\n\nJapan\n1964\n10867.04914\n\n\nJapan\n1965\n11376.55711\n\n\nJapan\n1966\n12472.45608\n\n\nJapan\n1967\n13726.06266\n\n\nJapan\n1968\n15442.80396\n\n\nJapan\n1969\n17014.33887\n\n\nJapan\n1970\n16650.83844\n\n\nJapan\n1971\n17210.26629\n\n\nJapan\n1972\n18398.72118\n\n\nJapan\n1973\n19712.75463\n\n\nJapan\n1974\n19103.05411\n\n\nJapan\n1975\n19380.83543\n\n\nJapan\n1976\n20002.72790\n\n\nJapan\n1977\n20680.65741\n\n\nJapan\n1978\n21574.81726\n\n\nJapan\n1979\n22567.07906\n\n\nJapan\n1980\n23021.72563\n\n\nJapan\n1981\n23806.76747\n\n\nJapan\n1982\n24444.20174\n\n\nJapan\n1983\n25021.26962\n\n\nJapan\n1984\n25972.89455\n\n\nJapan\n1985\n27449.51885\n\n\nJapan\n1986\n28055.17380\n\n\nJapan\n1987\n29064.22236\n\n\nJapan\n1988\n31008.77531\n\n\nJapan\n1989\n32540.50169\n\n\nJapan\n1990\n34236.71426\n\n\nJapan\n1991\n35265.24153\n\n\nJapan\n1992\n35465.92544\n\n\nJapan\n1993\n35439.01601\n\n\nJapan\n1994\n35623.48851\n\n\nJapan\n1995\n36177.03484\n\n\nJapan\n1996\n37026.22945\n\n\nJapan\n1997\n37518.58086\n\n\nJapan\n1998\n36674.24535\n\n\nJapan\n1999\n36531.78124\n\n\nJapan\n2000\n37291.70616\n\n\nJapan\n2001\n37342.14473\n\n\nJapan\n2002\n37363.28744\n\n\nJapan\n2003\n37911.68993\n\n\nJapan\n2004\n38793.62160\n\n\nJapan\n2005\n39295.30620\n\n\nJapan\n2006\n39965.85551\n\n\nJapan\n2007\n40837.26664\n\n\nJapan\n2008\n40433.00131\n\n\nJapan\n2009\n38242.02429\n\n\nJapan\n2010\n39971.78745\n\n\nJapan\n2011\n39578.07441\n\n\nJordan\n1975\n1118.72464\n\n\nJordan\n1976\n1341.56023\n\n\nJordan\n1977\n1377.25071\n\n\nJordan\n1978\n1605.11933\n\n\nJordan\n1979\n1686.25907\n\n\nJordan\n1980\n1931.68134\n\n\nJordan\n1981\n1945.67496\n\n\nJordan\n1982\n2007.45480\n\n\nJordan\n1983\n1967.26114\n\n\nJordan\n1984\n2057.32384\n\n\nJordan\n1985\n2053.80971\n\n\nJordan\n1986\n2117.76995\n\n\nJordan\n1987\n2100.99395\n\n\nJordan\n1988\n1990.73395\n\n\nJordan\n1989\n1662.04898\n\n\nJordan\n1990\n1617.88033\n\n\nJordan\n1991\n1473.12345\n\n\nJordan\n1992\n1660.04344\n\n\nJordan\n1993\n1660.01853\n\n\nJordan\n1994\n1676.30520\n\n\nJordan\n1995\n1723.08955\n\n\nJordan\n1996\n1706.16772\n\n\nJordan\n1997\n1709.60361\n\n\nJordan\n1998\n1708.13311\n\n\nJordan\n1999\n1734.70048\n\n\nJordan\n2000\n1764.22989\n\n\nJordan\n2001\n1811.87199\n\n\nJordan\n2002\n1870.85907\n\n\nJordan\n2003\n1901.46936\n\n\nJordan\n2004\n2015.04863\n\n\nJordan\n2005\n2129.78042\n\n\nJordan\n2006\n2250.27421\n\n\nJordan\n2007\n2380.50934\n\n\nJordan\n2008\n2497.53932\n\n\nJordan\n2009\n2577.48041\n\n\nJordan\n2010\n2579.38245\n\n\nJordan\n2011\n2588.66896\n\n\nKazakhstan\n1990\n1611.71255\n\n\nKazakhstan\n1991\n1425.48654\n\n\nKazakhstan\n1992\n1350.87229\n\n\nKazakhstan\n1993\n1234.75480\n\n\nKazakhstan\n1994\n1094.94709\n\n\nKazakhstan\n1995\n1022.92965\n\n\nKazakhstan\n1996\n1043.73314\n\n\nKazakhstan\n1997\n1078.38076\n\n\nKazakhstan\n1998\n1076.31023\n\n\nKazakhstan\n1999\n1115.94969\n\n\nKazakhstan\n2000\n1229.00096\n\n\nKazakhstan\n2001\n1397.29043\n\n\nKazakhstan\n2002\n1534.16160\n\n\nKazakhstan\n2003\n1671.20707\n\n\nKazakhstan\n2004\n1818.95882\n\n\nKazakhstan\n2005\n1977.73937\n\n\nKazakhstan\n2006\n2166.32330\n\n\nKazakhstan\n2007\n2332.29493\n\n\nKazakhstan\n2008\n2380.08530\n\n\nKazakhstan\n2009\n2345.86415\n\n\nKazakhstan\n2010\n2481.67528\n\n\nKazakhstan\n2011\n2629.91141\n\n\nKenya\n1960\n261.11918\n\n\nKenya\n1961\n233.44524\n\n\nKenya\n1962\n247.60109\n\n\nKenya\n1963\n260.88779\n\n\nKenya\n1964\n265.15652\n\n\nKenya\n1965\n261.81747\n\n\nKenya\n1966\n290.66128\n\n\nKenya\n1967\n290.60951\n\n\nKenya\n1968\n303.41731\n\n\nKenya\n1969\n316.55161\n\n\nKenya\n1970\n291.49500\n\n\nKenya\n1971\n343.75795\n\n\nKenya\n1972\n388.30131\n\n\nKenya\n1973\n396.54018\n\n\nKenya\n1974\n397.81409\n\n\nKenya\n1975\n386.77652\n\n\nKenya\n1976\n380.71400\n\n\nKenya\n1977\n401.46291\n\n\nKenya\n1978\n413.43267\n\n\nKenya\n1979\n428.44917\n\n\nKenya\n1980\n435.55579\n\n\nKenya\n1981\n435.07806\n\n\nKenya\n1982\n425.09376\n\n\nKenya\n1983\n414.59269\n\n\nKenya\n1984\n406.27312\n\n\nKenya\n1985\n408.28258\n\n\nKenya\n1986\n421.86523\n\n\nKenya\n1987\n431.12191\n\n\nKenya\n1988\n441.97938\n\n\nKenya\n1989\n446.96137\n\n\nKenya\n1990\n450.17182\n\n\nKenya\n1991\n441.70924\n\n\nKenya\n1992\n424.14093\n\n\nKenya\n1993\n412.39697\n\n\nKenya\n1994\n410.60191\n\n\nKenya\n1995\n416.45738\n\n\nKenya\n1996\n421.94420\n\n\nKenya\n1997\n412.91631\n\n\nKenya\n1998\n415.70717\n\n\nKenya\n1999\n414.60006\n\n\nKenya\n2000\n406.52306\n\n\nKenya\n2001\n411.07133\n\n\nKenya\n2002\n402.62883\n\n\nKenya\n2003\n403.67889\n\n\nKenya\n2004\n413.31828\n\n\nKenya\n2005\n426.51749\n\n\nKenya\n2006\n442.02131\n\n\nKenya\n2007\n461.01937\n\n\nKenya\n2008\n456.25049\n\n\nKenya\n2009\n456.77154\n\n\nKenya\n2010\n470.57709\n\n\nKenya\n2011\n478.21949\n\n\nKiribati\n1970\n1217.66403\n\n\nKiribati\n1971\n1169.53517\n\n\nKiribati\n1972\n1289.63145\n\n\nKiribati\n1973\n1534.59882\n\n\nKiribati\n1974\n2194.07868\n\n\nKiribati\n1975\n2272.75618\n\n\nKiribati\n1976\n1641.06943\n\n\nKiribati\n1977\n1539.29706\n\n\nKiribati\n1978\n1526.75006\n\n\nKiribati\n1979\n1323.24884\n\n\nKiribati\n1980\n720.26996\n\n\nKiribati\n1981\n680.61068\n\n\nKiribati\n1982\n710.62612\n\n\nKiribati\n1983\n756.82170\n\n\nKiribati\n1984\n730.58503\n\n\nKiribati\n1985\n681.46624\n\n\nKiribati\n1986\n676.98424\n\n\nKiribati\n1987\n642.15260\n\n\nKiribati\n1988\n743.23786\n\n\nKiribati\n1989\n665.46726\n\n\nKiribati\n1990\n670.26385\n\n\nKiribati\n1991\n629.77095\n\n\nKiribati\n1992\n640.19124\n\n\nKiribati\n1993\n653.95427\n\n\nKiribati\n1994\n677.31916\n\n\nKiribati\n1995\n661.54344\n\n\nKiribati\n1996\n691.41758\n\n\nKiribati\n1997\n718.19455\n\n\nKiribati\n1998\n783.57625\n\n\nKiribati\n1999\n771.06436\n\n\nKiribati\n2000\n812.28208\n\n\nKiribati\n2001\n773.13886\n\n\nKiribati\n2002\n805.95392\n\n\nKiribati\n2003\n826.78676\n\n\nKiribati\n2004\n819.33797\n\n\nKiribati\n2005\n785.37368\n\n\nKiribati\n2006\n769.21944\n\n\nKiribati\n2007\n773.01880\n\n\nKiribati\n2008\n743.14371\n\n\nKiribati\n2009\n714.61506\n\n\nKiribati\n2010\n713.56250\n\n\nKiribati\n2011\n715.29061\n\n\nSouth Korea\n1960\n1153.70996\n\n\nSouth Korea\n1961\n1180.01013\n\n\nSouth Korea\n1962\n1176.47829\n\n\nSouth Korea\n1963\n1255.23713\n\n\nSouth Korea\n1964\n1316.34885\n\n\nSouth Korea\n1965\n1351.03061\n\n\nSouth Korea\n1966\n1486.77180\n\n\nSouth Korea\n1967\n1541.54643\n\n\nSouth Korea\n1968\n1683.82096\n\n\nSouth Korea\n1969\n1879.80003\n\n\nSouth Korea\n1970\n1993.64830\n\n\nSouth Korea\n1971\n2113.43658\n\n\nSouth Korea\n1972\n2163.40861\n\n\nSouth Korea\n1973\n2375.96155\n\n\nSouth Korea\n1974\n2497.22858\n\n\nSouth Korea\n1975\n2595.12526\n\n\nSouth Korea\n1976\n2824.02731\n\n\nSouth Korea\n1977\n3058.24926\n\n\nSouth Korea\n1978\n3292.15977\n\n\nSouth Korea\n1979\n3462.54924\n\n\nSouth Korea\n1980\n3358.22902\n\n\nSouth Korea\n1981\n3510.04774\n\n\nSouth Korea\n1982\n3709.39755\n\n\nSouth Korea\n1983\n4048.95323\n\n\nSouth Korea\n1984\n4323.28207\n\n\nSouth Korea\n1985\n4572.11299\n\n\nSouth Korea\n1986\n5011.19808\n\n\nSouth Korea\n1987\n5515.28572\n\n\nSouth Korea\n1988\n6044.02873\n\n\nSouth Korea\n1989\n6390.01258\n\n\nSouth Korea\n1990\n6895.46706\n\n\nSouth Korea\n1991\n7473.61103\n\n\nSouth Korea\n1992\n7841.15440\n\n\nSouth Korea\n1993\n8247.87679\n\n\nSouth Korea\n1994\n8872.01007\n\n\nSouth Korea\n1995\n9548.01484\n\n\nSouth Korea\n1996\n10119.29924\n\n\nSouth Korea\n1997\n10491.08182\n\n\nSouth Korea\n1998\n9701.67292\n\n\nSouth Korea\n1999\n10546.81217\n\n\nSouth Korea\n2000\n11346.66499\n\n\nSouth Korea\n2001\n11710.57982\n\n\nSouth Korea\n2002\n12478.06366\n\n\nSouth Korea\n2003\n12764.27199\n\n\nSouth Korea\n2004\n13303.82000\n\n\nSouth Korea\n2005\n13801.82945\n\n\nSouth Korea\n2006\n14446.35860\n\n\nSouth Korea\n2007\n15113.35278\n\n\nSouth Korea\n2008\n15349.84987\n\n\nSouth Korea\n2009\n15325.94024\n\n\nSouth Korea\n2010\n16219.38807\n\n\nSouth Korea\n2011\n16684.21278\n\n\nKosovo\n2000\n1087.76240\n\n\nKosovo\n2001\n1380.23758\n\n\nKosovo\n2002\n1369.63208\n\n\nKosovo\n2003\n1442.88692\n\n\nKosovo\n2004\n1479.57288\n\n\nKosovo\n2005\n1535.40890\n\n\nKosovo\n2006\n1614.51344\n\n\nKosovo\n2007\n1702.49720\n\n\nKosovo\n2008\n1805.40982\n\n\nKosovo\n2009\n1842.90541\n\n\nKosovo\n2010\n1899.45989\n\n\nKosovo\n2011\n1973.73274\n\n\nKuwait\n1995\n21085.45971\n\n\nKuwait\n1996\n21210.33041\n\n\nKuwait\n1997\n21078.64108\n\n\nKuwait\n1998\n20798.95413\n\n\nKuwait\n1999\n19398.22222\n\n\nKuwait\n2000\n19434.40002\n\n\nKuwait\n2001\n18905.85819\n\n\nKuwait\n2002\n18906.40295\n\n\nKuwait\n2003\n21586.83197\n\n\nKuwait\n2004\n23107.46608\n\n\nKuwait\n2005\n24715.55216\n\n\nKuwait\n2006\n25034.04790\n\n\nKuwait\n2007\n25100.02810\n\n\nKuwait\n2008\n25308.08492\n\n\nKuwait\n2009\n23116.34061\n\n\nKuwait\n2010\n23114.58667\n\n\nKuwait\n2011\n24286.11580\n\n\nKyrgyz Republic\n1986\n398.05844\n\n\nKyrgyz Republic\n1987\n403.44579\n\n\nKyrgyz Republic\n1988\n448.71087\n\n\nKyrgyz Republic\n1989\n451.68834\n\n\nKyrgyz Republic\n1990\n468.34666\n\n\nKyrgyz Republic\n1991\n424.57624\n\n\nKyrgyz Republic\n1992\n361.41388\n\n\nKyrgyz Republic\n1993\n305.45380\n\n\nKyrgyz Republic\n1994\n244.18942\n\n\nKyrgyz Republic\n1995\n228.65096\n\n\nKyrgyz Republic\n1996\n241.25244\n\n\nKyrgyz Republic\n1997\n261.33354\n\n\nKyrgyz Republic\n1998\n262.81583\n\n\nKyrgyz Republic\n1999\n268.40534\n\n\nKyrgyz Republic\n2000\n279.62027\n\n\nKyrgyz Republic\n2001\n291.71933\n\n\nKyrgyz Republic\n2002\n289.00373\n\n\nKyrgyz Republic\n2003\n306.09543\n\n\nKyrgyz Republic\n2004\n323.66386\n\n\nKyrgyz Republic\n2005\n319.47206\n\n\nKyrgyz Republic\n2006\n325.86287\n\n\nKyrgyz Republic\n2007\n350.34411\n\n\nKyrgyz Republic\n2008\n376.18703\n\n\nKyrgyz Republic\n2009\n382.40033\n\n\nKyrgyz Republic\n2010\n376.08402\n\n\nKyrgyz Republic\n2011\n393.19147\n\n\nLao\n1984\n206.45976\n\n\nLao\n1985\n211.15367\n\n\nLao\n1986\n215.51510\n\n\nLao\n1987\n206.64970\n\n\nLao\n1988\n196.91988\n\n\nLao\n1989\n218.62681\n\n\nLao\n1990\n226.79406\n\n\nLao\n1991\n229.95986\n\n\nLao\n1992\n236.05495\n\n\nLao\n1993\n243.28339\n\n\nLao\n1994\n256.33999\n\n\nLao\n1995\n267.66197\n\n\nLao\n1996\n279.62576\n\n\nLao\n1997\n292.37154\n\n\nLao\n1998\n297.78233\n\n\nLao\n1999\n313.41447\n\n\nLao\n2000\n325.59310\n\n\nLao\n2001\n338.47220\n\n\nLao\n2002\n352.77982\n\n\nLao\n2003\n368.46312\n\n\nLao\n2004\n386.00909\n\n\nLao\n2005\n407.24429\n\n\nLao\n2006\n435.66458\n\n\nLao\n2007\n461.66329\n\n\nLao\n2008\n490.29753\n\n\nLao\n2009\n519.30519\n\n\nLao\n2010\n555.51946\n\n\nLao\n2011\n591.85818\n\n\nLatvia\n1965\n1558.05442\n\n\nLatvia\n1966\n1610.39436\n\n\nLatvia\n1967\n1784.94003\n\n\nLatvia\n1968\n1889.23071\n\n\nLatvia\n1969\n1959.06276\n\n\nLatvia\n1970\n2101.86367\n\n\nLatvia\n1971\n2248.10606\n\n\nLatvia\n1972\n2344.53443\n\n\nLatvia\n1973\n2459.54537\n\n\nLatvia\n1974\n2556.61291\n\n\nLatvia\n1975\n2711.31016\n\n\nLatvia\n1976\n2846.47275\n\n\nLatvia\n1977\n2920.94926\n\n\nLatvia\n1978\n3001.37065\n\n\nLatvia\n1979\n3082.81262\n\n\nLatvia\n1980\n3201.32506\n\n\nLatvia\n1981\n3326.56721\n\n\nLatvia\n1982\n3389.06660\n\n\nLatvia\n1983\n3545.04571\n\n\nLatvia\n1984\n3725.55725\n\n\nLatvia\n1985\n3687.35301\n\n\nLatvia\n1986\n3829.75208\n\n\nLatvia\n1987\n3879.47223\n\n\nLatvia\n1988\n4035.93316\n\n\nLatvia\n1989\n4243.77151\n\n\nLatvia\n1990\n3912.24540\n\n\nLatvia\n1991\n3435.70585\n\n\nLatvia\n1992\n2364.53801\n\n\nLatvia\n1993\n2291.45693\n\n\nLatvia\n1994\n2381.16268\n\n\nLatvia\n1995\n2392.53741\n\n\nLatvia\n1996\n2511.36488\n\n\nLatvia\n1997\n2746.61723\n\n\nLatvia\n1998\n2903.58361\n\n\nLatvia\n1999\n3064.87117\n\n\nLatvia\n2000\n3300.93466\n\n\nLatvia\n2001\n3593.66525\n\n\nLatvia\n2002\n3853.07711\n\n\nLatvia\n2003\n4153.93409\n\n\nLatvia\n2004\n4538.84778\n\n\nLatvia\n2005\n5046.86247\n\n\nLatvia\n2006\n5695.36145\n\n\nLatvia\n2007\n6296.22712\n\n\nLatvia\n2008\n6055.66481\n\n\nLatvia\n2009\n4993.18119\n\n\nLatvia\n2010\n5011.20155\n\n\nLatvia\n2011\n5330.56799\n\n\nLebanon\n1988\n4304.22284\n\n\nLebanon\n1989\n2461.62753\n\n\nLebanon\n1990\n3066.72932\n\n\nLebanon\n1991\n4129.43197\n\n\nLebanon\n1992\n4170.90961\n\n\nLebanon\n1993\n4299.35241\n\n\nLebanon\n1994\n4484.61287\n\n\nLebanon\n1995\n4642.36002\n\n\nLebanon\n1996\n4775.77882\n\n\nLebanon\n1997\n4591.05170\n\n\nLebanon\n1998\n4694.88593\n\n\nLebanon\n1999\n4615.52805\n\n\nLebanon\n2000\n4612.19867\n\n\nLebanon\n2001\n4718.17350\n\n\nLebanon\n2002\n4794.64997\n\n\nLebanon\n2003\n4865.70502\n\n\nLebanon\n2004\n5147.69067\n\n\nLebanon\n2005\n5129.40177\n\n\nLebanon\n2006\n5103.49018\n\n\nLebanon\n2007\n5436.65189\n\n\nLebanon\n2008\n5895.08221\n\n\nLebanon\n2009\n6350.33024\n\n\nLebanon\n2010\n6745.65991\n\n\nLebanon\n2011\n6896.23091\n\n\nLesotho\n1960\n132.22583\n\n\nLesotho\n1961\n132.37928\n\n\nLesotho\n1962\n149.95927\n\n\nLesotho\n1963\n162.83666\n\n\nLesotho\n1964\n172.96520\n\n\nLesotho\n1965\n173.31416\n\n\nLesotho\n1966\n169.24498\n\n\nLesotho\n1967\n183.97632\n\n\nLesotho\n1968\n179.60375\n\n\nLesotho\n1969\n178.68700\n\n\nLesotho\n1970\n178.87327\n\n\nLesotho\n1971\n184.22385\n\n\nLesotho\n1972\n180.13154\n\n\nLesotho\n1973\n222.98118\n\n\nLesotho\n1974\n242.08653\n\n\nLesotho\n1975\n204.54011\n\n\nLesotho\n1976\n221.59830\n\n\nLesotho\n1977\n263.06546\n\n\nLesotho\n1978\n303.12069\n\n\nLesotho\n1979\n303.65270\n\n\nLesotho\n1980\n287.52699\n\n\nLesotho\n1981\n281.90267\n\n\nLesotho\n1982\n281.54766\n\n\nLesotho\n1983\n265.60327\n\n\nLesotho\n1984\n286.08787\n\n\nLesotho\n1985\n293.51408\n\n\nLesotho\n1986\n288.87526\n\n\nLesotho\n1987\n262.90870\n\n\nLesotho\n1988\n280.72990\n\n\nLesotho\n1989\n294.33157\n\n\nLesotho\n1990\n307.69188\n\n\nLesotho\n1991\n309.26571\n\n\nLesotho\n1992\n326.15647\n\n\nLesotho\n1993\n330.93878\n\n\nLesotho\n1994\n343.42387\n\n\nLesotho\n1995\n343.10633\n\n\nLesotho\n1996\n352.32711\n\n\nLesotho\n1997\n357.40441\n\n\nLesotho\n1998\n369.93401\n\n\nLesotho\n1999\n364.91955\n\n\nLesotho\n2000\n379.77562\n\n\nLesotho\n2001\n390.60060\n\n\nLesotho\n2002\n390.59985\n\n\nLesotho\n2003\n403.81579\n\n\nLesotho\n2004\n409.28153\n\n\nLesotho\n2005\n416.53601\n\n\nLesotho\n2006\n430.35133\n\n\nLesotho\n2007\n446.32042\n\n\nLesotho\n2008\n465.69375\n\n\nLesotho\n2009\n474.16772\n\n\nLesotho\n2010\n495.66164\n\n\nLesotho\n2011\n518.98413\n\n\nLiberia\n1960\n608.02543\n\n\nLiberia\n1961\n608.15676\n\n\nLiberia\n1962\n601.59572\n\n\nLiberia\n1963\n600.36736\n\n\nLiberia\n1964\n615.77118\n\n\nLiberia\n1965\n629.16893\n\n\nLiberia\n1966\n660.45328\n\n\nLiberia\n1967\n686.88983\n\n\nLiberia\n1968\n700.89646\n\n\nLiberia\n1969\n732.10591\n\n\nLiberia\n1970\n759.95076\n\n\nLiberia\n1971\n775.59301\n\n\nLiberia\n1972\n785.55236\n\n\nLiberia\n1973\n746.49914\n\n\nLiberia\n1974\n759.92274\n\n\nLiberia\n1975\n712.54925\n\n\nLiberia\n1976\n729.03475\n\n\nLiberia\n1977\n719.82686\n\n\nLiberia\n1978\n733.05698\n\n\nLiberia\n1979\n734.50051\n\n\nLiberia\n1980\n682.40032\n\n\nLiberia\n1981\n645.52583\n\n\nLiberia\n1982\n608.24472\n\n\nLiberia\n1983\n577.91413\n\n\nLiberia\n1984\n551.97404\n\n\nLiberia\n1985\n539.39013\n\n\nLiberia\n1986\n527.98645\n\n\nLiberia\n1987\n524.74390\n\n\nLiberia\n1988\n519.39496\n\n\nLiberia\n1989\n386.27218\n\n\nLiberia\n1990\n192.01454\n\n\nLiberia\n1991\n167.51493\n\n\nLiberia\n1992\n110.70914\n\n\nLiberia\n1993\n75.06433\n\n\nLiberia\n1994\n58.45993\n\n\nLiberia\n1995\n54.50519\n\n\nLiberia\n1996\n58.08325\n\n\nLiberia\n1997\n111.86020\n\n\nLiberia\n1998\n134.78610\n\n\nLiberia\n1999\n155.25653\n\n\nLiberia\n2000\n185.81340\n\n\nLiberia\n2001\n219.76895\n\n\nLiberia\n2002\n284.36511\n\n\nLiberia\n2003\n188.40308\n\n\nLiberia\n2004\n175.57891\n\n\nLiberia\n2005\n186.80108\n\n\nLiberia\n2006\n196.95099\n\n\nLiberia\n2007\n217.13653\n\n\nLiberia\n2008\n228.11231\n\n\nLiberia\n2009\n247.49826\n\n\nLiberia\n2010\n263.70560\n\n\nLiberia\n2011\n279.22041\n\n\nLibya\n1999\n6366.40293\n\n\nLibya\n2000\n6479.71252\n\n\nLibya\n2001\n6084.62853\n\n\nLibya\n2002\n5891.72123\n\n\nLibya\n2003\n6529.36090\n\n\nLibya\n2004\n6681.91263\n\n\nLibya\n2005\n7194.62173\n\n\nLibya\n2006\n7458.76645\n\n\nLibya\n2007\n7736.54427\n\n\nLibya\n2008\n7865.25438\n\n\nLibya\n2009\n7885.46804\n\n\nLiechtenstein\n1970\n32622.11206\n\n\nLiechtenstein\n1971\n32495.67745\n\n\nLiechtenstein\n1972\n32447.18017\n\n\nLiechtenstein\n1973\n32452.21485\n\n\nLiechtenstein\n1974\n32477.17062\n\n\nLiechtenstein\n1975\n32500.34807\n\n\nLiechtenstein\n1976\n33504.54266\n\n\nLiechtenstein\n1977\n34539.91287\n\n\nLiechtenstein\n1978\n35609.02501\n\n\nLiechtenstein\n1979\n36719.00802\n\n\nLiechtenstein\n1980\n37874.39217\n\n\nLiechtenstein\n1981\n39097.85229\n\n\nLiechtenstein\n1982\n37898.79060\n\n\nLiechtenstein\n1983\n37543.87223\n\n\nLiechtenstein\n1984\n38591.08105\n\n\nLiechtenstein\n1985\n40723.64189\n\n\nLiechtenstein\n1986\n41781.44111\n\n\nLiechtenstein\n1987\n45037.38546\n\n\nLiechtenstein\n1988\n46959.86859\n\n\nLiechtenstein\n1989\n48438.15950\n\n\nLiechtenstein\n1990\n48888.63365\n\n\nLiechtenstein\n1991\n49118.48924\n\n\nLiechtenstein\n1992\n50223.91280\n\n\nLiechtenstein\n1993\n51714.99560\n\n\nLiechtenstein\n1994\n54551.23254\n\n\nLiechtenstein\n1995\n57024.68607\n\n\nLiechtenstein\n1996\n60209.33431\n\n\nLiechtenstein\n1997\n63781.81195\n\n\nLiechtenstein\n1998\n67918.18130\n\n\nLiechtenstein\n1999\n74111.48558\n\n\nLiechtenstein\n2000\n75606.20320\n\n\nLiechtenstein\n2001\n74180.37242\n\n\nLiechtenstein\n2002\n72597.82664\n\n\nLiechtenstein\n2003\n70395.67093\n\n\nLiechtenstein\n2004\n71777.36546\n\n\nLiechtenstein\n2005\n74525.01466\n\n\nLiechtenstein\n2006\n80275.88488\n\n\nLiechtenstein\n2007\n82308.43696\n\n\nLiechtenstein\n2008\n83186.91152\n\n\nLiechtenstein\n2009\n81647.10003\n\n\nLithuania\n1990\n4290.78013\n\n\nLithuania\n1991\n4040.37071\n\n\nLithuania\n1992\n3184.88596\n\n\nLithuania\n1993\n2680.75850\n\n\nLithuania\n1994\n2435.80025\n\n\nLithuania\n1995\n2535.38065\n\n\nLithuania\n1996\n2687.13504\n\n\nLithuania\n1997\n2909.22705\n\n\nLithuania\n1998\n3153.93232\n\n\nLithuania\n1999\n3142.29863\n\n\nLithuania\n2000\n3267.34744\n\n\nLithuania\n2001\n3505.70277\n\n\nLithuania\n2002\n3759.51624\n\n\nLithuania\n2003\n4162.57865\n\n\nLithuania\n2004\n4492.77140\n\n\nLithuania\n2005\n4873.50423\n\n\nLithuania\n2006\n5287.13655\n\n\nLithuania\n2007\n5839.14560\n\n\nLithuania\n2008\n6041.40902\n\n\nLithuania\n2009\n5179.58164\n\n\nLithuania\n2010\n5332.53061\n\n\nLithuania\n2011\n5793.28978\n\n\nLuxembourg\n1960\n13702.91200\n\n\nLuxembourg\n1961\n14098.63110\n\n\nLuxembourg\n1962\n14116.20888\n\n\nLuxembourg\n1963\n14450.75305\n\n\nLuxembourg\n1964\n15413.83461\n\n\nLuxembourg\n1965\n15127.46998\n\n\nLuxembourg\n1966\n15185.05726\n\n\nLuxembourg\n1967\n15167.99777\n\n\nLuxembourg\n1968\n15762.37749\n\n\nLuxembourg\n1969\n17249.59136\n\n\nLuxembourg\n1970\n17466.69322\n\n\nLuxembourg\n1971\n17762.36885\n\n\nLuxembourg\n1972\n18706.07015\n\n\nLuxembourg\n1973\n20038.46000\n\n\nLuxembourg\n1974\n20612.02061\n\n\nLuxembourg\n1975\n19048.29480\n\n\nLuxembourg\n1976\n19434.61321\n\n\nLuxembourg\n1977\n19705.44245\n\n\nLuxembourg\n1978\n20471.66642\n\n\nLuxembourg\n1979\n20902.82908\n\n\nLuxembourg\n1980\n21003.69501\n\n\nLuxembourg\n1981\n20826.49357\n\n\nLuxembourg\n1982\n21044.81661\n\n\nLuxembourg\n1983\n21668.11224\n\n\nLuxembourg\n1984\n22985.06770\n\n\nLuxembourg\n1985\n23581.12705\n\n\nLuxembourg\n1986\n25819.34721\n\n\nLuxembourg\n1987\n26666.08424\n\n\nLuxembourg\n1988\n28713.80110\n\n\nLuxembourg\n1989\n31222.04114\n\n\nLuxembourg\n1990\n32473.98605\n\n\nLuxembourg\n1991\n34811.59628\n\n\nLuxembourg\n1992\n34977.32639\n\n\nLuxembourg\n1993\n35960.61550\n\n\nLuxembourg\n1994\n36829.65055\n\n\nLuxembourg\n1995\n36836.02214\n\n\nLuxembourg\n1996\n36888.60393\n\n\nLuxembourg\n1997\n38592.16632\n\n\nLuxembourg\n1998\n40589.27007\n\n\nLuxembourg\n1999\n43416.66048\n\n\nLuxembourg\n2000\n46453.24578\n\n\nLuxembourg\n2001\n47059.30298\n\n\nLuxembourg\n2002\n48473.59546\n\n\nLuxembourg\n2003\n48685.68121\n\n\nLuxembourg\n2004\n50096.42191\n\n\nLuxembourg\n2005\n51927.36096\n\n\nLuxembourg\n2006\n53628.23455\n\n\nLuxembourg\n2007\n56285.27685\n\n\nLuxembourg\n2008\n54881.98403\n\n\nLuxembourg\n2009\n51678.20312\n\n\nLuxembourg\n2010\n52222.57667\n\n\nLuxembourg\n2011\n52056.01781\n\n\nMacao, China\n1982\n10028.38084\n\n\nMacao, China\n1983\n10594.62361\n\n\nMacao, China\n1984\n11008.99817\n\n\nMacao, China\n1985\n10616.43523\n\n\nMacao, China\n1986\n10851.41843\n\n\nMacao, China\n1987\n11887.07245\n\n\nMacao, China\n1988\n12307.15750\n\n\nMacao, China\n1989\n12458.48966\n\n\nMacao, China\n1990\n13033.75616\n\n\nMacao, China\n1991\n13158.10771\n\n\nMacao, China\n1992\n14577.02034\n\n\nMacao, China\n1993\n15044.12439\n\n\nMacao, China\n1994\n15422.24854\n\n\nMacao, China\n1995\n15670.47860\n\n\nMacao, China\n1996\n15361.73198\n\n\nMacao, China\n1997\n15083.07103\n\n\nMacao, China\n1998\n14169.15475\n\n\nMacao, China\n1999\n13605.60248\n\n\nMacao, China\n2000\n14128.87518\n\n\nMacao, China\n2001\n14261.29034\n\n\nMacao, China\n2002\n15212.88810\n\n\nMacao, China\n2003\n16755.03051\n\n\nMacao, China\n2004\n20776.99739\n\n\nMacao, China\n2005\n22024.05015\n\n\nMacao, China\n2006\n24595.65317\n\n\nMacao, China\n2007\n27440.57214\n\n\nMacao, China\n2008\n27656.90664\n\n\nMacao, China\n2009\n27459.57241\n\n\nMacao, China\n2010\n34083.96421\n\n\nMacao, China\n2011\n40258.80862\n\n\nMacedonia, FYR\n1990\n2059.41859\n\n\nMacedonia, FYR\n1991\n1918.85110\n\n\nMacedonia, FYR\n1992\n1782.22755\n\n\nMacedonia, FYR\n1993\n1640.55537\n\n\nMacedonia, FYR\n1994\n1603.85184\n\n\nMacedonia, FYR\n1995\n1578.21368\n\n\nMacedonia, FYR\n1996\n1588.98254\n\n\nMacedonia, FYR\n1997\n1603.97280\n\n\nMacedonia, FYR\n1998\n1650.33584\n\n\nMacedonia, FYR\n1999\n1714.39767\n\n\nMacedonia, FYR\n2000\n1785.32679\n\n\nMacedonia, FYR\n2001\n1698.62995\n\n\nMacedonia, FYR\n2002\n1707.89228\n\n\nMacedonia, FYR\n2003\n1751.17665\n\n\nMacedonia, FYR\n2004\n1827.50444\n\n\nMacedonia, FYR\n2005\n1902.29652\n\n\nMacedonia, FYR\n2006\n1993.12215\n\n\nMacedonia, FYR\n2007\n2110.68574\n\n\nMacedonia, FYR\n2008\n2210.19828\n\n\nMacedonia, FYR\n2009\n2185.33885\n\n\nMacedonia, FYR\n2010\n2220.04388\n\n\nMacedonia, FYR\n2011\n2283.79802\n\n\nMadagascar\n1960\n409.11683\n\n\nMadagascar\n1961\n407.65200\n\n\nMadagascar\n1962\n406.97214\n\n\nMadagascar\n1963\n393.48474\n\n\nMadagascar\n1964\n399.14386\n\n\nMadagascar\n1965\n387.61135\n\n\nMadagascar\n1966\n385.85946\n\n\nMadagascar\n1967\n397.07401\n\n\nMadagascar\n1968\n413.53477\n\n\nMadagascar\n1969\n417.99266\n\n\nMadagascar\n1970\n428.65089\n\n\nMadagascar\n1971\n433.78699\n\n\nMadagascar\n1972\n416.87956\n\n\nMadagascar\n1973\n395.05993\n\n\nMadagascar\n1974\n392.07467\n\n\nMadagascar\n1975\n386.19361\n\n\nMadagascar\n1976\n364.05953\n\n\nMadagascar\n1977\n362.37136\n\n\nMadagascar\n1978\n343.03601\n\n\nMadagascar\n1979\n366.68587\n\n\nMadagascar\n1980\n359.94369\n\n\nMadagascar\n1981\n316.75814\n\n\nMadagascar\n1982\n303.27623\n\n\nMadagascar\n1983\n298.42518\n\n\nMadagascar\n1984\n295.85896\n\n\nMadagascar\n1985\n291.49859\n\n\nMadagascar\n1986\n289.22871\n\n\nMadagascar\n1987\n284.56443\n\n\nMadagascar\n1988\n285.95089\n\n\nMadagascar\n1989\n289.08688\n\n\nMadagascar\n1990\n289.49411\n\n\nMadagascar\n1991\n263.29058\n\n\nMadagascar\n1992\n258.53769\n\n\nMadagascar\n1993\n256.07212\n\n\nMadagascar\n1994\n248.15625\n\n\nMadagascar\n1995\n244.69400\n\n\nMadagascar\n1996\n242.23920\n\n\nMadagascar\n1997\n243.38220\n\n\nMadagascar\n1998\n245.08112\n\n\nMadagascar\n1999\n248.55211\n\n\nMadagascar\n2000\n252.38252\n\n\nMadagascar\n2001\n259.42940\n\n\nMadagascar\n2002\n219.72028\n\n\nMadagascar\n2003\n234.00829\n\n\nMadagascar\n2004\n238.99611\n\n\nMadagascar\n2005\n242.61607\n\n\nMadagascar\n2006\n247.32223\n\n\nMadagascar\n2007\n255.09415\n\n\nMadagascar\n2008\n265.36636\n\n\nMadagascar\n2009\n245.94615\n\n\nMadagascar\n2010\n242.68582\n\n\nMadagascar\n2011\n238.17275\n\n\nMalawi\n1960\n98.63485\n\n\nMalawi\n1961\n103.74616\n\n\nMalawi\n1962\n101.99653\n\n\nMalawi\n1963\n98.18028\n\n\nMalawi\n1964\n98.36037\n\n\nMalawi\n1965\n109.03000\n\n\nMalawi\n1966\n120.44609\n\n\nMalawi\n1967\n126.00861\n\n\nMalawi\n1968\n120.43640\n\n\nMalawi\n1969\n124.13126\n\n\nMalawi\n1970\n121.24227\n\n\nMalawi\n1971\n136.78232\n\n\nMalawi\n1972\n140.89335\n\n\nMalawi\n1973\n139.63598\n\n\nMalawi\n1974\n144.90554\n\n\nMalawi\n1975\n148.80315\n\n\nMalawi\n1976\n151.13140\n\n\nMalawi\n1977\n153.27531\n\n\nMalawi\n1978\n162.65466\n\n\nMalawi\n1979\n164.44572\n\n\nMalawi\n1980\n160.22321\n\n\nMalawi\n1981\n147.74079\n\n\nMalawi\n1982\n147.79103\n\n\nMalawi\n1983\n149.33219\n\n\nMalawi\n1984\n152.23020\n\n\nMalawi\n1985\n152.59902\n\n\nMalawi\n1986\n144.46486\n\n\nMalawi\n1987\n138.37188\n\n\nMalawi\n1988\n134.67835\n\n\nMalawi\n1989\n129.93539\n\n\nMalawi\n1990\n132.50554\n\n\nMalawi\n1991\n141.02478\n\n\nMalawi\n1992\n129.36024\n\n\nMalawi\n1993\n141.31536\n\n\nMalawi\n1994\n126.18834\n\n\nMalawi\n1995\n145.64107\n\n\nMalawi\n1996\n153.39094\n\n\nMalawi\n1997\n155.37389\n\n\nMalawi\n1998\n156.96576\n\n\nMalawi\n1999\n157.15180\n\n\nMalawi\n2000\n155.27154\n\n\nMalawi\n2001\n143.70015\n\n\nMalawi\n2002\n142.39145\n\n\nMalawi\n2003\n146.36574\n\n\nMalawi\n2004\n149.43297\n\n\nMalawi\n2005\n149.48433\n\n\nMalawi\n2006\n148.25700\n\n\nMalawi\n2007\n157.62137\n\n\nMalawi\n2008\n165.69651\n\n\nMalawi\n2009\n175.19962\n\n\nMalawi\n2010\n180.90230\n\n\nMalawi\n2011\n182.87548\n\n\nMalaysia\n1960\n812.61583\n\n\nMalaysia\n1961\n846.51271\n\n\nMalaysia\n1962\n871.76348\n\n\nMalaysia\n1963\n905.71982\n\n\nMalaysia\n1964\n924.62791\n\n\nMalaysia\n1965\n966.28844\n\n\nMalaysia\n1966\n1012.76615\n\n\nMalaysia\n1967\n1023.95197\n\n\nMalaysia\n1968\n1077.49423\n\n\nMalaysia\n1969\n1102.05699\n\n\nMalaysia\n1970\n1139.28777\n\n\nMalaysia\n1971\n1175.35719\n\n\nMalaysia\n1972\n1254.42727\n\n\nMalaysia\n1973\n1367.73717\n\n\nMalaysia\n1974\n1446.40236\n\n\nMalaysia\n1975\n1424.16739\n\n\nMalaysia\n1976\n1552.59590\n\n\nMalaysia\n1977\n1635.18009\n\n\nMalaysia\n1978\n1704.36180\n\n\nMalaysia\n1979\n1820.60731\n\n\nMalaysia\n1980\n1909.61807\n\n\nMalaysia\n1981\n1992.32596\n\n\nMalaysia\n1982\n2057.94124\n\n\nMalaysia\n1983\n2130.40189\n\n\nMalaysia\n1984\n2234.91007\n\n\nMalaysia\n1985\n2149.41736\n\n\nMalaysia\n1986\n2112.89028\n\n\nMalaysia\n1987\n2162.54071\n\n\nMalaysia\n1988\n2308.56839\n\n\nMalaysia\n1989\n2445.90929\n\n\nMalaysia\n1990\n2592.51705\n\n\nMalaysia\n1991\n2764.20061\n\n\nMalaysia\n1992\n2932.01729\n\n\nMalaysia\n1993\n3140.82577\n\n\nMalaysia\n1994\n3344.56780\n\n\nMalaysia\n1995\n3581.94630\n\n\nMalaysia\n1996\n3842.63776\n\n\nMalaysia\n1997\n4022.84360\n\n\nMalaysia\n1998\n3636.47310\n\n\nMalaysia\n1999\n3767.63701\n\n\nMalaysia\n2000\n4005.55632\n\n\nMalaysia\n2001\n3933.93508\n\n\nMalaysia\n2002\n4052.87875\n\n\nMalaysia\n2003\n4194.26080\n\n\nMalaysia\n2004\n4385.96954\n\n\nMalaysia\n2005\n4529.60125\n\n\nMalaysia\n2006\n4695.22973\n\n\nMalaysia\n2007\n4905.12137\n\n\nMalaysia\n2008\n5057.82666\n\n\nMalaysia\n2009\n4901.54710\n\n\nMalaysia\n2010\n5168.68602\n\n\nMalaysia\n2011\n5345.21341\n\n\nMaldives\n1995\n1689.96559\n\n\nMaldives\n1996\n1805.37114\n\n\nMaldives\n1997\n1954.40206\n\n\nMaldives\n1998\n2106.19630\n\n\nMaldives\n1999\n2218.61732\n\n\nMaldives\n2000\n2284.97396\n\n\nMaldives\n2001\n2325.14865\n\n\nMaldives\n2002\n2427.82451\n\n\nMaldives\n2003\n2728.91492\n\n\nMaldives\n2004\n3023.91117\n\n\nMaldives\n2005\n2721.81492\n\n\nMaldives\n2006\n3209.46932\n\n\nMaldives\n2007\n3500.11103\n\n\nMaldives\n2008\n3874.82554\n\n\nMaldives\n2009\n3642.54375\n\n\nMaldives\n2010\n3800.48829\n\n\nMaldives\n2011\n4030.63587\n\n\nMali\n1967\n163.49993\n\n\nMali\n1968\n167.05343\n\n\nMali\n1969\n164.84780\n\n\nMali\n1970\n172.12686\n\n\nMali\n1971\n173.54595\n\n\nMali\n1972\n180.43484\n\n\nMali\n1973\n174.57820\n\n\nMali\n1974\n168.75900\n\n\nMali\n1975\n184.93483\n\n\nMali\n1976\n206.33283\n\n\nMali\n1977\n215.49885\n\n\nMali\n1978\n208.51169\n\n\nMali\n1979\n225.91843\n\n\nMali\n1980\n211.98857\n\n\nMali\n1981\n198.54995\n\n\nMali\n1982\n185.39056\n\n\nMali\n1983\n190.25356\n\n\nMali\n1984\n194.67512\n\n\nMali\n1985\n169.48341\n\n\nMali\n1986\n180.86000\n\n\nMali\n1987\n177.31713\n\n\nMali\n1988\n177.36564\n\n\nMali\n1989\n195.09480\n\n\nMali\n1990\n187.95819\n\n\nMali\n1991\n186.93295\n\n\nMali\n1992\n197.71571\n\n\nMali\n1993\n188.56646\n\n\nMali\n1994\n185.28893\n\n\nMali\n1995\n191.57991\n\n\nMali\n1996\n192.49009\n\n\nMali\n1997\n199.98446\n\n\nMali\n1998\n206.25896\n\n\nMali\n1999\n213.98479\n\n\nMali\n2000\n214.46659\n\n\nMali\n2001\n233.30203\n\n\nMali\n2002\n235.66090\n\n\nMali\n2003\n245.46208\n\n\nMali\n2004\n243.12532\n\n\nMali\n2005\n249.99193\n\n\nMali\n2006\n255.18216\n\n\nMali\n2007\n258.03051\n\n\nMali\n2008\n262.70281\n\n\nMali\n2009\n266.24215\n\n\nMali\n2010\n273.25380\n\n\nMali\n2011\n272.30938\n\n\nMalta\n1970\n2074.14353\n\n\nMalta\n1971\n2124.69174\n\n\nMalta\n1972\n2250.59689\n\n\nMalta\n1973\n2345.84917\n\n\nMalta\n1974\n2583.03144\n\n\nMalta\n1975\n3065.67784\n\n\nMalta\n1976\n3569.15857\n\n\nMalta\n1977\n3988.43050\n\n\nMalta\n1978\n4387.67494\n\n\nMalta\n1979\n4799.08483\n\n\nMalta\n1980\n5083.81709\n\n\nMalta\n1981\n5213.70129\n\n\nMalta\n1982\n5219.63633\n\n\nMalta\n1983\n5115.06527\n\n\nMalta\n1984\n5162.19047\n\n\nMalta\n1985\n5203.42866\n\n\nMalta\n1986\n5316.02045\n\n\nMalta\n1987\n5496.55581\n\n\nMalta\n1988\n5910.32335\n\n\nMalta\n1989\n6331.80686\n\n\nMalta\n1990\n6664.64446\n\n\nMalta\n1991\n7011.20238\n\n\nMalta\n1992\n7268.30976\n\n\nMalta\n1993\n7522.27224\n\n\nMalta\n1994\n7877.44601\n\n\nMalta\n1995\n8320.71784\n\n\nMalta\n1996\n8582.79497\n\n\nMalta\n1997\n8972.62225\n\n\nMalta\n1998\n9375.55574\n\n\nMalta\n1999\n9770.35550\n\n\nMalta\n2000\n10377.03732\n\n\nMalta\n2001\n9912.98969\n\n\nMalta\n2002\n10116.00482\n\n\nMalta\n2003\n10062.96130\n\n\nMalta\n2004\n9945.30172\n\n\nMalta\n2005\n10244.27105\n\n\nMalta\n2006\n10405.84596\n\n\nMalta\n2007\n10781.04969\n\n\nMalta\n2008\n11172.28154\n\n\nMalta\n2009\n10822.30802\n\n\nMalta\n2010\n11062.23272\n\n\nMalta\n2011\n11213.53700\n\n\nMarshall Islands\n1981\n1814.21051\n\n\nMarshall Islands\n1982\n1819.74774\n\n\nMarshall Islands\n1983\n2007.97010\n\n\nMarshall Islands\n1984\n1990.22451\n\n\nMarshall Islands\n1985\n1779.77158\n\n\nMarshall Islands\n1986\n2113.50800\n\n\nMarshall Islands\n1987\n2204.78313\n\n\nMarshall Islands\n1988\n2273.26177\n\n\nMarshall Islands\n1989\n2149.51777\n\n\nMarshall Islands\n1990\n2137.68973\n\n\nMarshall Islands\n1991\n2087.43527\n\n\nMarshall Islands\n1992\n2195.72249\n\n\nMarshall Islands\n1993\n2296.39194\n\n\nMarshall Islands\n1994\n2406.12400\n\n\nMarshall Islands\n1995\n2581.13041\n\n\nMarshall Islands\n1996\n2298.03340\n\n\nMarshall Islands\n1997\n2137.10206\n\n\nMarshall Islands\n1998\n2067.00117\n\n\nMarshall Islands\n1999\n2011.64145\n\n\nMarshall Islands\n2000\n2127.48546\n\n\nMarshall Islands\n2001\n2242.19258\n\n\nMarshall Islands\n2002\n2303.71857\n\n\nMarshall Islands\n2003\n2310.92084\n\n\nMarshall Islands\n2004\n2310.70694\n\n\nMarshall Islands\n2005\n2368.14883\n\n\nMarshall Islands\n2006\n2404.73643\n\n\nMarshall Islands\n2007\n2464.99065\n\n\nMarshall Islands\n2008\n2399.43828\n\n\nMarshall Islands\n2009\n2344.61500\n\n\nMarshall Islands\n2010\n2437.28245\n\n\nMarshall Islands\n2011\n2522.82476\n\n\nMauritania\n1960\n373.87685\n\n\nMauritania\n1961\n419.93304\n\n\nMauritania\n1962\n411.19768\n\n\nMauritania\n1963\n391.79900\n\n\nMauritania\n1964\n486.34274\n\n\nMauritania\n1965\n549.09641\n\n\nMauritania\n1966\n535.06656\n\n\nMauritania\n1967\n538.77001\n\n\nMauritania\n1968\n577.18333\n\n\nMauritania\n1969\n568.01018\n\n\nMauritania\n1970\n618.08851\n\n\nMauritania\n1971\n611.49164\n\n\nMauritania\n1972\n589.53975\n\n\nMauritania\n1973\n546.24345\n\n\nMauritania\n1974\n594.93353\n\n\nMauritania\n1975\n548.05022\n\n\nMauritania\n1976\n577.70097\n\n\nMauritania\n1977\n550.51262\n\n\nMauritania\n1978\n532.00077\n\n\nMauritania\n1979\n541.53316\n\n\nMauritania\n1980\n543.84932\n\n\nMauritania\n1981\n546.64910\n\n\nMauritania\n1982\n518.77790\n\n\nMauritania\n1983\n523.10129\n\n\nMauritania\n1984\n492.28482\n\n\nMauritania\n1985\n493.33511\n\n\nMauritania\n1986\n507.72295\n\n\nMauritania\n1987\n503.89700\n\n\nMauritania\n1988\n499.30014\n\n\nMauritania\n1989\n509.53737\n\n\nMauritania\n1990\n487.30704\n\n\nMauritania\n1991\n482.73786\n\n\nMauritania\n1992\n478.45333\n\n\nMauritania\n1993\n492.68014\n\n\nMauritania\n1994\n464.41881\n\n\nMauritania\n1995\n495.87165\n\n\nMauritania\n1996\n510.12004\n\n\nMauritania\n1997\n475.82487\n\n\nMauritania\n1998\n483.39066\n\n\nMauritania\n1999\n505.98776\n\n\nMauritania\n2000\n489.51164\n\n\nMauritania\n2001\n485.09644\n\n\nMauritania\n2002\n474.37678\n\n\nMauritania\n2003\n488.49191\n\n\nMauritania\n2004\n502.18703\n\n\nMauritania\n2005\n532.37466\n\n\nMauritania\n2006\n616.10635\n\n\nMauritania\n2007\n609.93440\n\n\nMauritania\n2008\n615.56273\n\n\nMauritania\n2009\n593.22210\n\n\nMauritania\n2010\n609.17117\n\n\nMauritania\n2011\n623.37438\n\n\nMauritius\n1976\n1627.27019\n\n\nMauritius\n1977\n1705.83205\n\n\nMauritius\n1978\n1742.70216\n\n\nMauritius\n1979\n1775.57359\n\n\nMauritius\n1980\n1572.82451\n\n\nMauritius\n1981\n1643.00645\n\n\nMauritius\n1982\n1712.99361\n\n\nMauritius\n1983\n1702.29976\n\n\nMauritius\n1984\n1767.39385\n\n\nMauritius\n1985\n1877.71749\n\n\nMauritius\n1986\n2043.18976\n\n\nMauritius\n1987\n2207.44402\n\n\nMauritius\n1988\n2339.05764\n\n\nMauritius\n1989\n2424.67662\n\n\nMauritius\n1990\n2574.74349\n\n\nMauritius\n1991\n2660.07477\n\n\nMauritius\n1992\n2796.28242\n\n\nMauritius\n1993\n2903.76111\n\n\nMauritius\n1994\n2981.82375\n\n\nMauritius\n1995\n3083.05000\n\n\nMauritius\n1996\n3222.20138\n\n\nMauritius\n1997\n3363.08947\n\n\nMauritius\n1998\n3529.93977\n\n\nMauritius\n1999\n3576.34429\n\n\nMauritius\n2000\n3861.03854\n\n\nMauritius\n2001\n3917.47004\n\n\nMauritius\n2002\n3966.16260\n\n\nMauritius\n2003\n4068.78671\n\n\nMauritius\n2004\n4265.67969\n\n\nMauritius\n2005\n4284.35874\n\n\nMauritius\n2006\n4419.91226\n\n\nMauritius\n2007\n4650.98538\n\n\nMauritius\n2008\n4875.99274\n\n\nMauritius\n2009\n4998.39006\n\n\nMauritius\n2010\n5180.96787\n\n\nMauritius\n2011\n5370.83161\n\n\nMexico\n1960\n2455.95246\n\n\nMexico\n1961\n2496.59806\n\n\nMexico\n1962\n2531.23803\n\n\nMexico\n1963\n2652.43898\n\n\nMexico\n1964\n2878.95550\n\n\nMexico\n1965\n2977.54133\n\n\nMexico\n1966\n3068.06785\n\n\nMexico\n1967\n3156.06777\n\n\nMexico\n1968\n3356.69012\n\n\nMexico\n1969\n3373.13602\n\n\nMexico\n1970\n3488.71502\n\n\nMexico\n1971\n3513.38590\n\n\nMexico\n1972\n3689.33052\n\n\nMexico\n1973\n3860.86448\n\n\nMexico\n1974\n3963.77578\n\n\nMexico\n1975\n4070.89802\n\n\nMexico\n1976\n4131.04749\n\n\nMexico\n1977\n4153.55317\n\n\nMexico\n1978\n4405.42267\n\n\nMexico\n1979\n4710.96832\n\n\nMexico\n1980\n5024.44480\n\n\nMexico\n1981\n5345.37535\n\n\nMexico\n1982\n5203.01489\n\n\nMexico\n1983\n4887.02255\n\n\nMexico\n1984\n4965.13390\n\n\nMexico\n1985\n4993.46835\n\n\nMexico\n1986\n4709.20889\n\n\nMexico\n1987\n4698.82476\n\n\nMexico\n1988\n4660.37178\n\n\nMexico\n1989\n4758.72902\n\n\nMexico\n1990\n4902.64499\n\n\nMexico\n1991\n5013.47679\n\n\nMexico\n1992\n5100.45046\n\n\nMexico\n1993\n5107.36417\n\n\nMexico\n1994\n5242.02183\n\n\nMexico\n1995\n4831.81940\n\n\nMexico\n1996\n4994.34330\n\n\nMexico\n1997\n5244.28972\n\n\nMexico\n1998\n5413.09119\n\n\nMexico\n1999\n5536.46920\n\n\nMexico\n2000\n5816.61448\n\n\nMexico\n2001\n5728.96766\n\n\nMexico\n2002\n5702.90371\n\n\nMexico\n2003\n5709.41956\n\n\nMexico\n2004\n5868.91974\n\n\nMexico\n2005\n5982.65384\n\n\nMexico\n2006\n6211.92723\n\n\nMexico\n2007\n6333.08239\n\n\nMexico\n2008\n6327.01318\n\n\nMexico\n2009\n5875.62000\n\n\nMexico\n2010\n6124.70957\n\n\nMexico\n2011\n6288.25324\n\n\nMicronesia, Fed. Sts.\n1986\n1861.10197\n\n\nMicronesia, Fed. Sts.\n1987\n1839.77401\n\n\nMicronesia, Fed. Sts.\n1988\n1845.60988\n\n\nMicronesia, Fed. Sts.\n1989\n1868.75901\n\n\nMicronesia, Fed. Sts.\n1990\n1894.10546\n\n\nMicronesia, Fed. Sts.\n1991\n1984.71542\n\n\nMicronesia, Fed. Sts.\n1992\n2012.00150\n\n\nMicronesia, Fed. Sts.\n1993\n2124.09087\n\n\nMicronesia, Fed. Sts.\n1994\n2071.90987\n\n\nMicronesia, Fed. Sts.\n1995\n2189.55200\n\n\nMicronesia, Fed. Sts.\n1996\n2108.23109\n\n\nMicronesia, Fed. Sts.\n1997\n1979.56213\n\n\nMicronesia, Fed. Sts.\n1998\n2044.55055\n\n\nMicronesia, Fed. Sts.\n1999\n2079.95493\n\n\nMicronesia, Fed. Sts.\n2000\n2177.58908\n\n\nMicronesia, Fed. Sts.\n2001\n2211.77391\n\n\nMicronesia, Fed. Sts.\n2002\n2215.99611\n\n\nMicronesia, Fed. Sts.\n2003\n2244.02122\n\n\nMicronesia, Fed. Sts.\n2004\n2159.52961\n\n\nMicronesia, Fed. Sts.\n2005\n2196.24720\n\n\nMicronesia, Fed. Sts.\n2006\n2185.26907\n\n\nMicronesia, Fed. Sts.\n2007\n2134.36883\n\n\nMicronesia, Fed. Sts.\n2008\n2074.55499\n\n\nMicronesia, Fed. Sts.\n2009\n2088.66359\n\n\nMicronesia, Fed. Sts.\n2010\n2134.03716\n\n\nMicronesia, Fed. Sts.\n2011\n2168.46476\n\n\nMoldova\n1980\n825.60420\n\n\nMoldova\n1981\n812.08274\n\n\nMoldova\n1982\n898.17968\n\n\nMoldova\n1983\n927.67394\n\n\nMoldova\n1984\n949.05658\n\n\nMoldova\n1985\n890.28276\n\n\nMoldova\n1986\n952.15682\n\n\nMoldova\n1987\n955.64446\n\n\nMoldova\n1988\n964.64729\n\n\nMoldova\n1989\n1007.13559\n\n\nMoldova\n1990\n978.97504\n\n\nMoldova\n1991\n820.12009\n\n\nMoldova\n1992\n580.99483\n\n\nMoldova\n1993\n574.64262\n\n\nMoldova\n1994\n398.26047\n\n\nMoldova\n1995\n394.70440\n\n\nMoldova\n1996\n374.92971\n\n\nMoldova\n1997\n381.77098\n\n\nMoldova\n1998\n357.62858\n\n\nMoldova\n1999\n346.01597\n\n\nMoldova\n2000\n354.00167\n\n\nMoldova\n2001\n376.43644\n\n\nMoldova\n2002\n406.73943\n\n\nMoldova\n2003\n434.80714\n\n\nMoldova\n2004\n468.18449\n\n\nMoldova\n2005\n504.53007\n\n\nMoldova\n2006\n530.09471\n\n\nMoldova\n2007\n547.67377\n\n\nMoldova\n2008\n591.32346\n\n\nMoldova\n2009\n556.60788\n\n\nMoldova\n2010\n596.68661\n\n\nMoldova\n2011\n635.50647\n\n\nMonaco\n1970\n50458.24756\n\n\nMonaco\n1971\n52478.16721\n\n\nMonaco\n1972\n54207.35513\n\n\nMonaco\n1973\n57001.73469\n\n\nMonaco\n1974\n58842.07457\n\n\nMonaco\n1975\n57688.28475\n\n\nMonaco\n1976\n59786.41863\n\n\nMonaco\n1977\n61568.19927\n\n\nMonaco\n1978\n63665.04130\n\n\nMonaco\n1979\n65442.48397\n\n\nMonaco\n1980\n65841.19610\n\n\nMonaco\n1981\n65491.66675\n\n\nMonaco\n1982\n65911.38231\n\n\nMonaco\n1983\n65414.04368\n\n\nMonaco\n1984\n65093.17090\n\n\nMonaco\n1985\n64977.97348\n\n\nMonaco\n1986\n65418.23129\n\n\nMonaco\n1987\n65942.13769\n\n\nMonaco\n1988\n67895.89206\n\n\nMonaco\n1989\n69661.31777\n\n\nMonaco\n1990\n70463.65961\n\n\nMonaco\n1991\n70192.94813\n\n\nMonaco\n1992\n70222.06249\n\n\nMonaco\n1993\n68695.22837\n\n\nMonaco\n1994\n69311.89485\n\n\nMonaco\n1995\n69836.00825\n\n\nMonaco\n1996\n69618.47390\n\n\nMonaco\n1997\n70151.54957\n\n\nMonaco\n1998\n71618.37019\n\n\nMonaco\n1999\n73141.26468\n\n\nMonaco\n2000\n75382.44663\n\n\nMonaco\n2001\n76677.97416\n\n\nMonaco\n2002\n77348.89874\n\n\nMonaco\n2003\n78229.93981\n\n\nMonaco\n2004\n80255.75389\n\n\nMonaco\n2005\n81827.95612\n\n\nMonaco\n2006\n85942.67113\n\n\nMonaco\n2007\n98397.08986\n\n\nMonaco\n2008\n108111.21279\n\n\nMonaco\n2009\n105147.43770\n\n\nMongolia\n1981\n425.98445\n\n\nMongolia\n1982\n450.06330\n\n\nMongolia\n1983\n464.45491\n\n\nMongolia\n1984\n479.40096\n\n\nMongolia\n1985\n493.30891\n\n\nMongolia\n1986\n524.53201\n\n\nMongolia\n1987\n527.22969\n\n\nMongolia\n1988\n538.97626\n\n\nMongolia\n1989\n547.85663\n\n\nMongolia\n1990\n519.83797\n\n\nMongolia\n1991\n467.41530\n\n\nMongolia\n1992\n419.36646\n\n\nMongolia\n1993\n402.61352\n\n\nMongolia\n1994\n408.12796\n\n\nMongolia\n1995\n430.80825\n\n\nMongolia\n1996\n436.79344\n\n\nMongolia\n1997\n449.89640\n\n\nMongolia\n1998\n460.74327\n\n\nMongolia\n1999\n470.52289\n\n\nMongolia\n2000\n471.47333\n\n\nMongolia\n2001\n480.77971\n\n\nMongolia\n2002\n498.55087\n\n\nMongolia\n2003\n527.82177\n\n\nMongolia\n2004\n577.10446\n\n\nMongolia\n2005\n610.97706\n\n\nMongolia\n2006\n653.80747\n\n\nMongolia\n2007\n709.72342\n\n\nMongolia\n2008\n760.44246\n\n\nMongolia\n2009\n738.56169\n\n\nMongolia\n2010\n772.93306\n\n\nMongolia\n2011\n893.99245\n\n\nMontenegro\n1997\n1563.36611\n\n\nMontenegro\n1998\n1648.24133\n\n\nMontenegro\n1999\n1501.81045\n\n\nMontenegro\n2000\n1555.91252\n\n\nMontenegro\n2001\n1578.78510\n\n\nMontenegro\n2002\n1613.14569\n\n\nMontenegro\n2003\n1656.35704\n\n\nMontenegro\n2004\n1730.85865\n\n\nMontenegro\n2005\n1804.05255\n\n\nMontenegro\n2006\n1958.15441\n\n\nMontenegro\n2007\n2164.61163\n\n\nMontenegro\n2008\n2309.47197\n\n\nMontenegro\n2009\n2173.51396\n\n\nMontenegro\n2010\n2224.12984\n\n\nMontenegro\n2011\n2292.50303\n\n\nMorocco\n1960\n646.07105\n\n\nMorocco\n1961\n613.32397\n\n\nMorocco\n1962\n671.57839\n\n\nMorocco\n1963\n685.35613\n\n\nMorocco\n1964\n675.36048\n\n\nMorocco\n1965\n669.29133\n\n\nMorocco\n1966\n640.82868\n\n\nMorocco\n1967\n685.10393\n\n\nMorocco\n1968\n731.66285\n\n\nMorocco\n1969\n771.12553\n\n\nMorocco\n1970\n786.25758\n\n\nMorocco\n1971\n809.44516\n\n\nMorocco\n1972\n809.16248\n\n\nMorocco\n1973\n818.18921\n\n\nMorocco\n1974\n843.59570\n\n\nMorocco\n1975\n885.63547\n\n\nMorocco\n1976\n957.58492\n\n\nMorocco\n1977\n990.74526\n\n\nMorocco\n1978\n987.72749\n\n\nMorocco\n1979\n1008.90780\n\n\nMorocco\n1980\n1018.71660\n\n\nMorocco\n1981\n964.54737\n\n\nMorocco\n1982\n1029.26439\n\n\nMorocco\n1983\n996.55203\n\n\nMorocco\n1984\n1013.15360\n\n\nMorocco\n1985\n1050.89703\n\n\nMorocco\n1986\n1111.68876\n\n\nMorocco\n1987\n1059.47755\n\n\nMorocco\n1988\n1145.25761\n\n\nMorocco\n1989\n1148.89678\n\n\nMorocco\n1990\n1172.39561\n\n\nMorocco\n1991\n1230.42382\n\n\nMorocco\n1992\n1160.35428\n\n\nMorocco\n1993\n1129.62298\n\n\nMorocco\n1994\n1226.90646\n\n\nMorocco\n1995\n1128.76708\n\n\nMorocco\n1996\n1248.15535\n\n\nMorocco\n1997\n1203.19265\n\n\nMorocco\n1998\n1277.77879\n\n\nMorocco\n1999\n1267.80105\n\n\nMorocco\n2000\n1271.81109\n\n\nMorocco\n2001\n1351.26722\n\n\nMorocco\n2002\n1379.68584\n\n\nMorocco\n2003\n1450.12272\n\n\nMorocco\n2004\n1502.88317\n\n\nMorocco\n2005\n1530.85072\n\n\nMorocco\n2006\n1632.13420\n\n\nMorocco\n2007\n1658.85540\n\n\nMorocco\n2008\n1733.53386\n\n\nMorocco\n2009\n1797.40725\n\n\nMorocco\n2010\n1844.35103\n\n\nMorocco\n2011\n1908.30442\n\n\nMozambique\n1980\n202.72136\n\n\nMozambique\n1981\n207.79089\n\n\nMozambique\n1982\n189.05298\n\n\nMozambique\n1983\n156.16127\n\n\nMozambique\n1984\n143.72872\n\n\nMozambique\n1985\n143.68861\n\n\nMozambique\n1986\n139.86526\n\n\nMozambique\n1987\n160.65601\n\n\nMozambique\n1988\n174.20758\n\n\nMozambique\n1989\n184.95024\n\n\nMozambique\n1990\n184.46973\n\n\nMozambique\n1991\n189.03857\n\n\nMozambique\n1992\n173.74141\n\n\nMozambique\n1993\n181.96110\n\n\nMozambique\n1994\n187.27721\n\n\nMozambique\n1995\n186.00901\n\n\nMozambique\n1996\n193.93804\n\n\nMozambique\n1997\n208.09550\n\n\nMozambique\n1998\n224.75936\n\n\nMozambique\n1999\n236.96983\n\n\nMozambique\n2000\n233.43927\n\n\nMozambique\n2001\n254.35695\n\n\nMozambique\n2002\n269.45221\n\n\nMozambique\n2003\n278.13612\n\n\nMozambique\n2004\n292.27871\n\n\nMozambique\n2005\n312.16193\n\n\nMozambique\n2006\n323.77370\n\n\nMozambique\n2007\n339.06381\n\n\nMozambique\n2008\n353.76110\n\n\nMozambique\n2009\n367.52176\n\n\nMozambique\n2010\n383.58326\n\n\nMozambique\n2011\n401.56527\n\n\nNamibia\n1980\n2263.39622\n\n\nNamibia\n1981\n2235.44420\n\n\nNamibia\n1982\n2179.84856\n\n\nNamibia\n1983\n2091.40519\n\n\nNamibia\n1984\n2029.25935\n\n\nNamibia\n1985\n1974.08163\n\n\nNamibia\n1986\n1988.73810\n\n\nNamibia\n1987\n1972.39001\n\n\nNamibia\n1988\n1903.36817\n\n\nNamibia\n1989\n1857.54930\n\n\nNamibia\n1990\n1831.05893\n\n\nNamibia\n1991\n1912.61801\n\n\nNamibia\n1992\n1986.00354\n\n\nNamibia\n1993\n1889.24115\n\n\nNamibia\n1994\n1969.55321\n\n\nNamibia\n1995\n1991.60186\n\n\nNamibia\n1996\n1995.28225\n\n\nNamibia\n1997\n2019.01987\n\n\nNamibia\n1998\n2026.84204\n\n\nNamibia\n1999\n2040.34680\n\n\nNamibia\n2000\n2061.62097\n\n\nNamibia\n2001\n2042.26309\n\n\nNamibia\n2002\n2099.89412\n\n\nNamibia\n2003\n2150.84065\n\n\nNamibia\n2004\n2373.42847\n\n\nNamibia\n2005\n2390.59879\n\n\nNamibia\n2006\n2512.92720\n\n\nNamibia\n2007\n2598.51265\n\n\nNamibia\n2008\n2635.61212\n\n\nNamibia\n2009\n2575.44391\n\n\nNamibia\n2010\n2695.87833\n\n\nNamibia\n2011\n2749.27448\n\n\nNepal\n1960\n139.08101\n\n\nNepal\n1961\n139.20229\n\n\nNepal\n1962\n139.27243\n\n\nNepal\n1963\n139.25920\n\n\nNepal\n1964\n146.87409\n\n\nNepal\n1965\n142.24279\n\n\nNepal\n1966\n149.16985\n\n\nNepal\n1967\n143.77333\n\n\nNepal\n1968\n141.66850\n\n\nNepal\n1969\n144.78732\n\n\nNepal\n1970\n145.24973\n\n\nNepal\n1971\n140.31003\n\n\nNepal\n1972\n141.41284\n\n\nNepal\n1973\n137.52417\n\n\nNepal\n1974\n142.87073\n\n\nNepal\n1975\n141.60206\n\n\nNepal\n1976\n144.40238\n\n\nNepal\n1977\n145.29906\n\n\nNepal\n1978\n148.16497\n\n\nNepal\n1979\n148.13518\n\n\nNepal\n1980\n141.31974\n\n\nNepal\n1981\n149.52944\n\n\nNepal\n1982\n151.54996\n\n\nNepal\n1983\n143.59615\n\n\nNepal\n1984\n153.81190\n\n\nNepal\n1985\n159.44293\n\n\nNepal\n1986\n162.82495\n\n\nNepal\n1987\n161.71486\n\n\nNepal\n1988\n170.07429\n\n\nNepal\n1989\n173.23705\n\n\nNepal\n1990\n176.92641\n\n\nNepal\n1991\n183.64008\n\n\nNepal\n1992\n186.52016\n\n\nNepal\n1993\n188.95291\n\n\nNepal\n1994\n199.45169\n\n\nNepal\n1995\n201.29778\n\n\nNepal\n1996\n206.82379\n\n\nNepal\n1997\n211.96113\n\n\nNepal\n1998\n213.06596\n\n\nNepal\n1999\n217.14228\n\n\nNepal\n2000\n225.16868\n\n\nNepal\n2001\n230.50176\n\n\nNepal\n2002\n225.52014\n\n\nNepal\n2003\n229.20834\n\n\nNepal\n2004\n234.78333\n\n\nNepal\n2005\n237.10985\n\n\nNepal\n2006\n241.04698\n\n\nNepal\n2007\n244.53726\n\n\nNepal\n2008\n254.69425\n\n\nNepal\n2009\n261.46918\n\n\nNepal\n2010\n269.24519\n\n\nNepal\n2011\n274.87286\n\n\nNetherlands\n1960\n8562.93611\n\n\nNetherlands\n1961\n8476.02252\n\n\nNetherlands\n1962\n8927.99259\n\n\nNetherlands\n1963\n9127.67887\n\n\nNetherlands\n1964\n9751.65322\n\n\nNetherlands\n1965\n10450.06487\n\n\nNetherlands\n1966\n10597.29274\n\n\nNetherlands\n1967\n11031.12197\n\n\nNetherlands\n1968\n11617.61050\n\n\nNetherlands\n1969\n12222.20686\n\n\nNetherlands\n1970\n12759.17567\n\n\nNetherlands\n1971\n13154.39029\n\n\nNetherlands\n1972\n13348.44830\n\n\nNetherlands\n1973\n14004.21649\n\n\nNetherlands\n1974\n14486.25445\n\n\nNetherlands\n1975\n14375.36205\n\n\nNetherlands\n1976\n14945.81912\n\n\nNetherlands\n1977\n15142.65945\n\n\nNetherlands\n1978\n15400.55054\n\n\nNetherlands\n1979\n15603.85386\n\n\nNetherlands\n1980\n15984.14637\n\n\nNetherlands\n1981\n15750.46568\n\n\nNetherlands\n1982\n15483.87483\n\n\nNetherlands\n1983\n15744.56424\n\n\nNetherlands\n1984\n16162.33112\n\n\nNetherlands\n1985\n16502.21441\n\n\nNetherlands\n1986\n16868.25522\n\n\nNetherlands\n1987\n17085.26786\n\n\nNetherlands\n1988\n17559.44573\n\n\nNetherlands\n1989\n18225.89395\n\n\nNetherlands\n1990\n18858.00124\n\n\nNetherlands\n1991\n19166.32186\n\n\nNetherlands\n1992\n19346.48928\n\n\nNetherlands\n1993\n19453.72947\n\n\nNetherlands\n1994\n19909.36695\n\n\nNetherlands\n1995\n20428.58654\n\n\nNetherlands\n1996\n21027.24752\n\n\nNetherlands\n1997\n21814.30431\n\n\nNetherlands\n1998\n22530.81727\n\n\nNetherlands\n1999\n23429.80294\n\n\nNetherlands\n2000\n24179.73141\n\n\nNetherlands\n2001\n24460.06539\n\n\nNetherlands\n2002\n24322.98355\n\n\nNetherlands\n2003\n24289.73919\n\n\nNetherlands\n2004\n24746.84398\n\n\nNetherlands\n2005\n25194.34122\n\n\nNetherlands\n2006\n26007.67914\n\n\nNetherlands\n2007\n26968.61770\n\n\nNetherlands\n2008\n27348.47436\n\n\nNetherlands\n2009\n26210.30536\n\n\nNetherlands\n2010\n26501.04582\n\n\nNetherlands\n2011\n26634.86005\n\n\nNew Caledonia\n1965\n7553.99485\n\n\nNew Caledonia\n1966\n7083.41631\n\n\nNew Caledonia\n1967\n7258.53731\n\n\nNew Caledonia\n1968\n8032.85003\n\n\nNew Caledonia\n1969\n8968.04824\n\n\nNew Caledonia\n1970\n11295.56088\n\n\nNew Caledonia\n1971\n11489.35347\n\n\nNew Caledonia\n1972\n11328.59581\n\n\nNew Caledonia\n1973\n9639.77285\n\n\nNew Caledonia\n1974\n10471.32014\n\n\nNew Caledonia\n1975\n10816.00204\n\n\nNew Caledonia\n1976\n10804.56668\n\n\nNew Caledonia\n1977\n10831.77420\n\n\nNew Caledonia\n1978\n11760.26152\n\n\nNew Caledonia\n1979\n10059.84158\n\n\nNew Caledonia\n1980\n9908.47626\n\n\nNew Caledonia\n1981\n9150.89074\n\n\nNew Caledonia\n1982\n9338.08751\n\n\nNew Caledonia\n1983\n9094.68092\n\n\nNew Caledonia\n1984\n8937.75691\n\n\nNew Caledonia\n1985\n9194.42363\n\n\nNew Caledonia\n1986\n9043.37206\n\n\nNew Caledonia\n1987\n9391.08558\n\n\nNew Caledonia\n1988\n12406.20836\n\n\nNew Caledonia\n1989\n13394.33030\n\n\nNew Caledonia\n1990\n13562.65255\n\n\nNew Caledonia\n1991\n13882.88130\n\n\nNew Caledonia\n1992\n13595.22649\n\n\nNew Caledonia\n1993\n13293.25724\n\n\nNew Caledonia\n1994\n13242.90540\n\n\nNew Caledonia\n1995\n13601.45546\n\n\nNew Caledonia\n1996\n13385.23144\n\n\nNew Caledonia\n1997\n13339.56718\n\n\nNew Caledonia\n1998\n12701.14853\n\n\nNew Caledonia\n1999\n12557.35066\n\n\nNew Caledonia\n2000\n12579.59511\n\n\nNew Zealand\n1977\n10108.80510\n\n\nNew Zealand\n1978\n10128.74119\n\n\nNew Zealand\n1979\n10365.82802\n\n\nNew Zealand\n1980\n10426.73034\n\n\nNew Zealand\n1981\n10855.63354\n\n\nNew Zealand\n1982\n10811.46864\n\n\nNew Zealand\n1983\n10966.71981\n\n\nNew Zealand\n1984\n11418.25346\n\n\nNew Zealand\n1985\n11436.54888\n\n\nNew Zealand\n1986\n11697.77172\n\n\nNew Zealand\n1987\n11773.48133\n\n\nNew Zealand\n1988\n11723.58094\n\n\nNew Zealand\n1989\n11730.75238\n\n\nNew Zealand\n1990\n11627.10652\n\n\nNew Zealand\n1991\n10933.83710\n\n\nNew Zealand\n1992\n10941.83261\n\n\nNew Zealand\n1993\n11507.24613\n\n\nNew Zealand\n1994\n11955.70046\n\n\nNew Zealand\n1995\n12291.83756\n\n\nNew Zealand\n1996\n12534.37977\n\n\nNew Zealand\n1997\n12589.61470\n\n\nNew Zealand\n1998\n12531.64223\n\n\nNew Zealand\n1999\n13111.00320\n\n\nNew Zealand\n2000\n13375.78052\n\n\nNew Zealand\n2001\n13774.32360\n\n\nNew Zealand\n2002\n14202.16315\n\n\nNew Zealand\n2003\n14529.66965\n\n\nNew Zealand\n2004\n14853.26600\n\n\nNew Zealand\n2005\n15171.59429\n\n\nNew Zealand\n2006\n15103.23038\n\n\nNew Zealand\n2007\n15392.50271\n\n\nNew Zealand\n2008\n15011.18385\n\n\nNew Zealand\n2009\n14778.16393\n\n\nNew Zealand\n2010\n14629.21810\n\n\nNew Zealand\n2011\n14646.42094\n\n\nNicaragua\n1960\n1186.47894\n\n\nNicaragua\n1961\n1235.36090\n\n\nNicaragua\n1962\n1338.59829\n\n\nNicaragua\n1963\n1428.32408\n\n\nNicaragua\n1964\n1540.42045\n\n\nNicaragua\n1965\n1629.62647\n\n\nNicaragua\n1966\n1633.60660\n\n\nNicaragua\n1967\n1695.64800\n\n\nNicaragua\n1968\n1667.31120\n\n\nNicaragua\n1969\n1718.42260\n\n\nNicaragua\n1970\n1689.46972\n\n\nNicaragua\n1971\n1692.84346\n\n\nNicaragua\n1972\n1678.36525\n\n\nNicaragua\n1973\n1732.27905\n\n\nNicaragua\n1974\n1918.53458\n\n\nNicaragua\n1975\n1857.93639\n\n\nNicaragua\n1976\n1896.03491\n\n\nNicaragua\n1977\n1993.38383\n\n\nNicaragua\n1978\n1782.94776\n\n\nNicaragua\n1979\n1272.90488\n\n\nNicaragua\n1980\n1293.98905\n\n\nNicaragua\n1981\n1325.73099\n\n\nNicaragua\n1982\n1279.41649\n\n\nNicaragua\n1983\n1303.46725\n\n\nNicaragua\n1984\n1250.98904\n\n\nNicaragua\n1985\n1171.44022\n\n\nNicaragua\n1986\n1133.63958\n\n\nNicaragua\n1987\n1101.83738\n\n\nNicaragua\n1988\n944.70852\n\n\nNicaragua\n1989\n909.03405\n\n\nNicaragua\n1990\n888.06897\n\n\nNicaragua\n1991\n865.70760\n\n\nNicaragua\n1992\n848.12147\n\n\nNicaragua\n1993\n824.41545\n\n\nNicaragua\n1994\n832.09330\n\n\nNicaragua\n1995\n862.04525\n\n\nNicaragua\n1996\n898.11808\n\n\nNicaragua\n1997\n916.00917\n\n\nNicaragua\n1998\n933.16500\n\n\nNicaragua\n1999\n982.25547\n\n\nNicaragua\n2000\n1006.62731\n\n\nNicaragua\n2001\n1021.34819\n\n\nNicaragua\n2002\n1015.03361\n\n\nNicaragua\n2003\n1027.13129\n\n\nNicaragua\n2004\n1068.01336\n\n\nNicaragua\n2005\n1099.72135\n\n\nNicaragua\n2006\n1130.95644\n\n\nNicaragua\n2007\n1172.86014\n\n\nNicaragua\n2008\n1191.47858\n\n\nNicaragua\n2009\n1158.87831\n\n\nNicaragua\n2010\n1179.18334\n\n\nNicaragua\n2011\n1221.49197\n\n\nNiger\n1960\n313.91018\n\n\nNiger\n1961\n318.89543\n\n\nNiger\n1962\n341.53923\n\n\nNiger\n1963\n362.82856\n\n\nNiger\n1964\n352.62946\n\n\nNiger\n1965\n365.93423\n\n\nNiger\n1966\n353.79762\n\n\nNiger\n1967\n343.78561\n\n\nNiger\n1968\n334.92598\n\n\nNiger\n1969\n307.22564\n\n\nNiger\n1970\n307.30221\n\n\nNiger\n1971\n315.23496\n\n\nNiger\n1972\n290.21733\n\n\nNiger\n1973\n233.72587\n\n\nNiger\n1974\n246.82733\n\n\nNiger\n1975\n232.93696\n\n\nNiger\n1976\n227.66381\n\n\nNiger\n1977\n238.16976\n\n\nNiger\n1978\n262.40468\n\n\nNiger\n1979\n273.09974\n\n\nNiger\n1980\n259.48515\n\n\nNiger\n1981\n253.83628\n\n\nNiger\n1982\n250.89676\n\n\nNiger\n1983\n232.48240\n\n\nNiger\n1984\n188.11707\n\n\nNiger\n1985\n197.11902\n\n\nNiger\n1986\n203.90978\n\n\nNiger\n1987\n198.42291\n\n\nNiger\n1988\n206.14660\n\n\nNiger\n1989\n202.05472\n\n\nNiger\n1990\n193.49796\n\n\nNiger\n1991\n192.21917\n\n\nNiger\n1992\n173.98791\n\n\nNiger\n1993\n170.77584\n\n\nNiger\n1994\n171.74687\n\n\nNiger\n1995\n170.32906\n\n\nNiger\n1996\n170.19472\n\n\nNiger\n1997\n168.90684\n\n\nNiger\n1998\n180.10440\n\n\nNiger\n1999\n172.92736\n\n\nNiger\n2000\n164.64895\n\n\nNiger\n2001\n170.33112\n\n\nNiger\n2002\n169.47404\n\n\nNiger\n2003\n172.38694\n\n\nNiger\n2004\n166.66443\n\n\nNiger\n2005\n168.17375\n\n\nNiger\n2006\n171.76448\n\n\nNiger\n2007\n171.42110\n\n\nNiger\n2008\n179.83114\n\n\nNiger\n2009\n171.99639\n\n\nNiger\n2010\n179.29323\n\n\nNiger\n2011\n177.05872\n\n\nNigeria\n1960\n279.50050\n\n\nNigeria\n1961\n274.14743\n\n\nNigeria\n1962\n279.30473\n\n\nNigeria\n1963\n296.72265\n\n\nNigeria\n1964\n304.65191\n\n\nNigeria\n1965\n312.57016\n\n\nNigeria\n1966\n292.73008\n\n\nNigeria\n1967\n241.19666\n\n\nNigeria\n1968\n232.85887\n\n\nNigeria\n1969\n282.62251\n\n\nNigeria\n1970\n345.08309\n\n\nNigeria\n1971\n384.89924\n\n\nNigeria\n1972\n388.28998\n\n\nNigeria\n1973\n399.09302\n\n\nNigeria\n1974\n432.12804\n\n\nNigeria\n1975\n398.36370\n\n\nNigeria\n1976\n421.90791\n\n\nNigeria\n1977\n433.99602\n\n\nNigeria\n1978\n396.68531\n\n\nNigeria\n1979\n411.06796\n\n\nNigeria\n1980\n416.34006\n\n\nNigeria\n1981\n352.07893\n\n\nNigeria\n1982\n342.34386\n\n\nNigeria\n1983\n316.22817\n\n\nNigeria\n1984\n293.59686\n\n\nNigeria\n1985\n314.06970\n\n\nNigeria\n1986\n313.81501\n\n\nNigeria\n1987\n303.66352\n\n\nNigeria\n1988\n325.20482\n\n\nNigeria\n1989\n339.81767\n\n\nNigeria\n1990\n358.55374\n\n\nNigeria\n1991\n366.46131\n\n\nNigeria\n1992\n368.10390\n\n\nNigeria\n1993\n367.28467\n\n\nNigeria\n1994\n359.02605\n\n\nNigeria\n1995\n359.43155\n\n\nNigeria\n1996\n366.22011\n\n\nNigeria\n1997\n367.46008\n\n\nNigeria\n1998\n365.75256\n\n\nNigeria\n1999\n361.20193\n\n\nNigeria\n2000\n371.76808\n\n\nNigeria\n2001\n374.16866\n\n\nNigeria\n2002\n370.81073\n\n\nNigeria\n2003\n399.06199\n\n\nNigeria\n2004\n430.57974\n\n\nNigeria\n2005\n442.71793\n\n\nNigeria\n2006\n458.63492\n\n\nNigeria\n2007\n476.21417\n\n\nNigeria\n2008\n492.26699\n\n\nNigeria\n2009\n513.50034\n\n\nNigeria\n2010\n540.68521\n\n\nNigeria\n2011\n565.99480\n\n\nNorway\n1960\n10695.36321\n\n\nNorway\n1961\n11276.38808\n\n\nNorway\n1962\n11500.92865\n\n\nNorway\n1963\n11846.33136\n\n\nNorway\n1964\n12346.17472\n\n\nNorway\n1965\n12898.09416\n\n\nNorway\n1966\n13280.03272\n\n\nNorway\n1967\n13993.29207\n\n\nNorway\n1968\n14189.74105\n\n\nNorway\n1969\n14708.60907\n\n\nNorway\n1970\n14893.97936\n\n\nNorway\n1971\n15620.75384\n\n\nNorway\n1972\n16318.38020\n\n\nNorway\n1973\n16930.39991\n\n\nNorway\n1974\n17468.19256\n\n\nNorway\n1975\n18245.06453\n\n\nNorway\n1976\n19211.61650\n\n\nNorway\n1977\n19922.43342\n\n\nNorway\n1978\n20611.39113\n\n\nNorway\n1979\n21436.45188\n\n\nNorway\n1980\n22330.13757\n\n\nNorway\n1981\n22597.81785\n\n\nNorway\n1982\n22543.11642\n\n\nNorway\n1983\n23337.44563\n\n\nNorway\n1984\n24643.33056\n\n\nNorway\n1985\n25885.10626\n\n\nNorway\n1986\n26834.34480\n\n\nNorway\n1987\n27184.47301\n\n\nNorway\n1988\n26991.89658\n\n\nNorway\n1989\n27148.84541\n\n\nNorway\n1990\n27576.87467\n\n\nNorway\n1991\n28298.09714\n\n\nNorway\n1992\n29126.48798\n\n\nNorway\n1993\n29760.45012\n\n\nNorway\n1994\n31086.28675\n\n\nNorway\n1995\n32219.95618\n\n\nNorway\n1996\n33691.88676\n\n\nNorway\n1997\n35316.75083\n\n\nNorway\n1998\n36048.93156\n\n\nNorway\n1999\n36528.21443\n\n\nNorway\n2000\n37472.67167\n\n\nNorway\n2001\n38025.49900\n\n\nNorway\n2002\n38389.08411\n\n\nNorway\n2003\n38539.90181\n\n\nNorway\n2004\n39830.41204\n\n\nNorway\n2005\n40584.24403\n\n\nNorway\n2006\n41245.80863\n\n\nNorway\n2007\n41904.21021\n\n\nNorway\n2008\n41399.70903\n\n\nNorway\n2009\n40199.34622\n\n\nNorway\n2010\n39970.29253\n\n\nNorway\n2011\n40034.85063\n\n\nOman\n1960\n966.52432\n\n\nOman\n1961\n955.11437\n\n\nOman\n1962\n1120.73458\n\n\nOman\n1963\n1142.95120\n\n\nOman\n1964\n1115.21728\n\n\nOman\n1965\n1091.50003\n\n\nOman\n1966\n1117.94479\n\n\nOman\n1967\n1807.05952\n\n\nOman\n1968\n3191.59813\n\n\nOman\n1969\n3887.36959\n\n\nOman\n1970\n4282.05764\n\n\nOman\n1971\n4170.29997\n\n\nOman\n1972\n4411.61028\n\n\nOman\n1973\n3633.40638\n\n\nOman\n1974\n3876.82731\n\n\nOman\n1975\n4598.21829\n\n\nOman\n1976\n5264.92393\n\n\nOman\n1977\n5038.65022\n\n\nOman\n1978\n4589.88649\n\n\nOman\n1979\n4525.90811\n\n\nOman\n1980\n4535.62801\n\n\nOman\n1981\n5017.77450\n\n\nOman\n1982\n5294.22211\n\n\nOman\n1983\n5851.68917\n\n\nOman\n1984\n6490.81047\n\n\nOman\n1985\n7059.81007\n\n\nOman\n1986\n6901.13437\n\n\nOman\n1987\n6411.02800\n\n\nOman\n1988\n6548.38233\n\n\nOman\n1989\n7050.86476\n\n\nOman\n1990\n6773.15452\n\n\nOman\n1991\n6893.10015\n\n\nOman\n1992\n7162.82398\n\n\nOman\n1993\n7300.88253\n\n\nOman\n1994\n7343.32919\n\n\nOman\n1995\n7539.61864\n\n\nOman\n1996\n7677.39060\n\n\nOman\n1997\n8112.81030\n\n\nOman\n1998\n8340.05733\n\n\nOman\n1999\n8342.81346\n\n\nOman\n2000\n8774.93385\n\n\nOman\n2001\n9369.33441\n\n\nOman\n2002\n9511.05587\n\n\nOman\n2003\n9404.44431\n\n\nOman\n2004\n9550.96319\n\n\nOman\n2005\n9723.21689\n\n\nOman\n2006\n10006.30307\n\n\nOman\n2007\n10392.28594\n\n\nOman\n2008\n11385.63980\n\n\nOman\n2009\n11191.81101\n\n\nOman\n2010\n11345.42955\n\n\nOman\n2011\n11701.49655\n\n\nPakistan\n1960\n187.46512\n\n\nPakistan\n1961\n193.98647\n\n\nPakistan\n1962\n197.78402\n\n\nPakistan\n1963\n209.68072\n\n\nPakistan\n1964\n219.92298\n\n\nPakistan\n1965\n236.70004\n\n\nPakistan\n1966\n243.99391\n\n\nPakistan\n1967\n250.49859\n\n\nPakistan\n1968\n261.56482\n\n\nPakistan\n1969\n268.64978\n\n\nPakistan\n1970\n291.13186\n\n\nPakistan\n1971\n284.58277\n\n\nPakistan\n1972\n279.04511\n\n\nPakistan\n1973\n290.42396\n\n\nPakistan\n1974\n292.08560\n\n\nPakistan\n1975\n295.38334\n\n\nPakistan\n1976\n301.16069\n\n\nPakistan\n1977\n303.29289\n\n\nPakistan\n1978\n317.26300\n\n\nPakistan\n1979\n318.48898\n\n\nPakistan\n1980\n339.42588\n\n\nPakistan\n1981\n354.05019\n\n\nPakistan\n1982\n364.47333\n\n\nPakistan\n1983\n376.03405\n\n\nPakistan\n1984\n381.81057\n\n\nPakistan\n1985\n397.15748\n\n\nPakistan\n1986\n405.25215\n\n\nPakistan\n1987\n417.44098\n\n\nPakistan\n1988\n435.10886\n\n\nPakistan\n1989\n442.86104\n\n\nPakistan\n1990\n449.27459\n\n\nPakistan\n1991\n459.18336\n\n\nPakistan\n1992\n481.82643\n\n\nPakistan\n1993\n478.06319\n\n\nPakistan\n1994\n483.57666\n\n\nPakistan\n1995\n494.72099\n\n\nPakistan\n1996\n505.24592\n\n\nPakistan\n1997\n496.99506\n\n\nPakistan\n1998\n496.53189\n\n\nPakistan\n1999\n502.12466\n\n\nPakistan\n2000\n511.70256\n\n\nPakistan\n2001\n511.11100\n\n\nPakistan\n2002\n517.59665\n\n\nPakistan\n2003\n532.99736\n\n\nPakistan\n2004\n562.28399\n\n\nPakistan\n2005\n594.76686\n\n\nPakistan\n2006\n620.29564\n\n\nPakistan\n2007\n643.85852\n\n\nPakistan\n2008\n642.42754\n\n\nPakistan\n2009\n653.61118\n\n\nPakistan\n2010\n664.71127\n\n\nPakistan\n2011\n672.15475\n\n\nPalau\n1991\n7256.43148\n\n\nPalau\n1992\n6611.25829\n\n\nPalau\n1993\n5638.08997\n\n\nPalau\n1994\n5884.42424\n\n\nPalau\n1995\n6355.62700\n\n\nPalau\n1996\n6842.12880\n\n\nPalau\n1997\n6834.18559\n\n\nPalau\n1998\n6820.32695\n\n\nPalau\n1999\n6331.02811\n\n\nPalau\n2000\n6251.98206\n\n\nPalau\n2001\n6258.18055\n\n\nPalau\n2002\n5986.38310\n\n\nPalau\n2003\n5871.06545\n\n\nPalau\n2004\n6126.09257\n\n\nPalau\n2005\n6429.58590\n\n\nPalau\n2006\n6587.72460\n\n\nPalau\n2007\n6519.92356\n\n\nPalau\n2008\n6088.91561\n\n\nPalau\n2009\n5775.13625\n\n\nPalau\n2010\n5756.81052\n\n\nPalau\n2011\n6050.21707\n\n\nPanama\n1960\n1710.51135\n\n\nPanama\n1961\n1840.06282\n\n\nPanama\n1962\n1936.78273\n\n\nPanama\n1963\n2039.60817\n\n\nPanama\n1964\n2070.57724\n\n\nPanama\n1965\n2194.36096\n\n\nPanama\n1966\n2290.93200\n\n\nPanama\n1967\n2415.08787\n\n\nPanama\n1968\n2508.04470\n\n\nPanama\n1969\n2644.52555\n\n\nPanama\n1970\n2734.76995\n\n\nPanama\n1971\n2916.33737\n\n\nPanama\n1972\n2967.85380\n\n\nPanama\n1973\n3045.61050\n\n\nPanama\n1974\n3038.79136\n\n\nPanama\n1975\n3007.97544\n\n\nPanama\n1976\n2980.11813\n\n\nPanama\n1977\n2939.52293\n\n\nPanama\n1978\n3147.06312\n\n\nPanama\n1979\n3210.47824\n\n\nPanama\n1980\n3170.32151\n\n\nPanama\n1981\n3383.83755\n\n\nPanama\n1982\n3486.05106\n\n\nPanama\n1983\n3257.46191\n\n\nPanama\n1984\n3274.60871\n\n\nPanama\n1985\n3364.43207\n\n\nPanama\n1986\n3412.43430\n\n\nPanama\n1987\n3282.27991\n\n\nPanama\n1988\n2785.48705\n\n\nPanama\n1989\n2771.75463\n\n\nPanama\n1990\n2935.47757\n\n\nPanama\n1991\n3146.64300\n\n\nPanama\n1992\n3335.37392\n\n\nPanama\n1993\n3445.73370\n\n\nPanama\n1994\n3472.01900\n\n\nPanama\n1995\n3461.54148\n\n\nPanama\n1996\n3487.45030\n\n\nPanama\n1997\n3638.82977\n\n\nPanama\n1998\n3828.97810\n\n\nPanama\n1999\n3901.62820\n\n\nPanama\n2000\n3930.98941\n\n\nPanama\n2001\n3879.40570\n\n\nPanama\n2002\n3892.88036\n\n\nPanama\n2003\n3983.35080\n\n\nPanama\n2004\n4207.06095\n\n\nPanama\n2005\n4431.12809\n\n\nPanama\n2006\n4726.88015\n\n\nPanama\n2007\n5210.71908\n\n\nPanama\n2008\n5643.89579\n\n\nPanama\n2009\n5767.71064\n\n\nPanama\n2010\n6109.58737\n\n\nPanama\n2011\n6654.39491\n\n\nPapua New Guinea\n1960\n425.55779\n\n\nPapua New Guinea\n1961\n444.16450\n\n\nPapua New Guinea\n1962\n464.10036\n\n\nPapua New Guinea\n1963\n474.05054\n\n\nPapua New Guinea\n1964\n504.66150\n\n\nPapua New Guinea\n1965\n545.08445\n\n\nPapua New Guinea\n1966\n564.41798\n\n\nPapua New Guinea\n1967\n574.27361\n\n\nPapua New Guinea\n1968\n585.28384\n\n\nPapua New Guinea\n1969\n618.07754\n\n\nPapua New Guinea\n1970\n667.30204\n\n\nPapua New Guinea\n1971\n689.95182\n\n\nPapua New Guinea\n1972\n708.23102\n\n\nPapua New Guinea\n1973\n732.71807\n\n\nPapua New Guinea\n1974\n730.29769\n\n\nPapua New Guinea\n1975\n703.56322\n\n\nPapua New Guinea\n1976\n661.17758\n\n\nPapua New Guinea\n1977\n648.92545\n\n\nPapua New Guinea\n1978\n685.88522\n\n\nPapua New Guinea\n1979\n680.07773\n\n\nPapua New Guinea\n1980\n646.77629\n\n\nPapua New Guinea\n1981\n627.68431\n\n\nPapua New Guinea\n1982\n612.90763\n\n\nPapua New Guinea\n1983\n615.69228\n\n\nPapua New Guinea\n1984\n597.36488\n\n\nPapua New Guinea\n1985\n605.35821\n\n\nPapua New Guinea\n1986\n618.01752\n\n\nPapua New Guinea\n1987\n619.71892\n\n\nPapua New Guinea\n1988\n622.47190\n\n\nPapua New Guinea\n1989\n598.94332\n\n\nPapua New Guinea\n1990\n566.87074\n\n\nPapua New Guinea\n1991\n605.85153\n\n\nPapua New Guinea\n1992\n672.81917\n\n\nPapua New Guinea\n1993\n775.55722\n\n\nPapua New Guinea\n1994\n800.99025\n\n\nPapua New Guinea\n1995\n754.72466\n\n\nPapua New Guinea\n1996\n792.08372\n\n\nPapua New Guinea\n1997\n741.28296\n\n\nPapua New Guinea\n1998\n694.66109\n\n\nPapua New Guinea\n1999\n689.13400\n\n\nPapua New Guinea\n2000\n654.66878\n\n\nPapua New Guinea\n2001\n637.31491\n\n\nPapua New Guinea\n2002\n620.41025\n\n\nPapua New Guinea\n2003\n618.20830\n\n\nPapua New Guinea\n2004\n619.53912\n\n\nPapua New Guinea\n2005\n626.30825\n\n\nPapua New Guinea\n2006\n627.11635\n\n\nPapua New Guinea\n2007\n656.35714\n\n\nPapua New Guinea\n2008\n683.97648\n\n\nPapua New Guinea\n2009\n705.00757\n\n\nPapua New Guinea\n2010\n744.21055\n\n\nPapua New Guinea\n2011\n793.19774\n\n\nParaguay\n1960\n662.85616\n\n\nParaguay\n1961\n691.17137\n\n\nParaguay\n1962\n682.18583\n\n\nParaguay\n1963\n690.03906\n\n\nParaguay\n1964\n698.01941\n\n\nParaguay\n1965\n716.09395\n\n\nParaguay\n1966\n705.26489\n\n\nParaguay\n1967\n745.05185\n\n\nParaguay\n1968\n748.32098\n\n\nParaguay\n1969\n759.11656\n\n\nParaguay\n1970\n776.23019\n\n\nParaguay\n1971\n798.57481\n\n\nParaguay\n1972\n829.79400\n\n\nParaguay\n1973\n868.52503\n\n\nParaguay\n1974\n917.74078\n\n\nParaguay\n1975\n952.10433\n\n\nParaguay\n1976\n993.77032\n\n\nParaguay\n1977\n1074.74443\n\n\nParaguay\n1978\n1165.95173\n\n\nParaguay\n1979\n1263.93680\n\n\nParaguay\n1980\n1411.48672\n\n\nParaguay\n1981\n1488.68149\n\n\nParaguay\n1982\n1391.88576\n\n\nParaguay\n1983\n1310.30571\n\n\nParaguay\n1984\n1311.28245\n\n\nParaguay\n1985\n1324.27410\n\n\nParaguay\n1986\n1286.92119\n\n\nParaguay\n1987\n1305.47053\n\n\nParaguay\n1988\n1350.70504\n\n\nParaguay\n1989\n1391.02563\n\n\nParaguay\n1990\n1396.74287\n\n\nParaguay\n1991\n1394.92492\n\n\nParaguay\n1992\n1406.98297\n\n\nParaguay\n1993\n1426.76089\n\n\nParaguay\n1994\n1445.12895\n\n\nParaguay\n1995\n1488.94991\n\n\nParaguay\n1996\n1461.48459\n\n\nParaguay\n1997\n1472.34382\n\n\nParaguay\n1998\n1449.25722\n\n\nParaguay\n1999\n1397.89236\n\n\nParaguay\n2000\n1323.48193\n\n\nParaguay\n2001\n1323.46342\n\n\nParaguay\n2002\n1243.33828\n\n\nParaguay\n2003\n1244.50462\n\n\nParaguay\n2004\n1263.91988\n\n\nParaguay\n2005\n1331.10708\n\n\nParaguay\n2006\n1352.97565\n\n\nParaguay\n2007\n1450.18457\n\n\nParaguay\n2008\n1483.73907\n\n\nParaguay\n2009\n1406.36170\n\n\nParaguay\n2010\n1578.63634\n\n\nParaguay\n2011\n1657.58323\n\n\nPeru\n1960\n1647.25127\n\n\nPeru\n1961\n1718.65103\n\n\nPeru\n1962\n1808.99949\n\n\nPeru\n1963\n1822.61804\n\n\nPeru\n1964\n1887.52524\n\n\nPeru\n1965\n1924.81995\n\n\nPeru\n1966\n2028.18568\n\n\nPeru\n1967\n2046.60050\n\n\nPeru\n1968\n1997.48508\n\n\nPeru\n1969\n2016.45426\n\n\nPeru\n1970\n2075.55762\n\n\nPeru\n1971\n2102.92786\n\n\nPeru\n1972\n2103.96671\n\n\nPeru\n1973\n2156.47744\n\n\nPeru\n1974\n2291.86295\n\n\nPeru\n1975\n2305.76197\n\n\nPeru\n1976\n2287.83479\n\n\nPeru\n1977\n2235.88411\n\n\nPeru\n1978\n2183.31242\n\n\nPeru\n1979\n2250.40492\n\n\nPeru\n1980\n2261.39665\n\n\nPeru\n1981\n2364.52631\n\n\nPeru\n1982\n2294.36208\n\n\nPeru\n1983\n1976.50188\n\n\nPeru\n1984\n2031.67584\n\n\nPeru\n1985\n2041.39382\n\n\nPeru\n1986\n2195.47287\n\n\nPeru\n1987\n2319.07281\n\n\nPeru\n1988\n2071.75363\n\n\nPeru\n1989\n1790.97643\n\n\nPeru\n1990\n1664.24831\n\n\nPeru\n1991\n1666.74286\n\n\nPeru\n1992\n1627.86557\n\n\nPeru\n1993\n1673.75113\n\n\nPeru\n1994\n1854.11625\n\n\nPeru\n1995\n1978.01637\n\n\nPeru\n1996\n1992.57802\n\n\nPeru\n1997\n2093.20782\n\n\nPeru\n1998\n2045.29282\n\n\nPeru\n1999\n2031.63123\n\n\nPeru\n2000\n2060.57626\n\n\nPeru\n2001\n2036.15795\n\n\nPeru\n2002\n2110.13962\n\n\nPeru\n2003\n2167.73416\n\n\nPeru\n2004\n2248.41043\n\n\nPeru\n2005\n2374.29708\n\n\nPeru\n2006\n2529.84073\n\n\nPeru\n2007\n2725.81524\n\n\nPeru\n2008\n2961.78798\n\n\nPeru\n2009\n2955.18622\n\n\nPeru\n2010\n3180.37461\n\n\nPeru\n2011\n3359.51740\n\n\nPhilippines\n1960\n691.68121\n\n\nPhilippines\n1961\n706.55140\n\n\nPhilippines\n1962\n716.10745\n\n\nPhilippines\n1963\n741.94218\n\n\nPhilippines\n1964\n743.27244\n\n\nPhilippines\n1965\n758.33088\n\n\nPhilippines\n1966\n768.17800\n\n\nPhilippines\n1967\n785.40971\n\n\nPhilippines\n1968\n800.55644\n\n\nPhilippines\n1969\n813.96799\n\n\nPhilippines\n1970\n820.63350\n\n\nPhilippines\n1971\n840.67014\n\n\nPhilippines\n1972\n861.42014\n\n\nPhilippines\n1973\n911.83953\n\n\nPhilippines\n1974\n917.78066\n\n\nPhilippines\n1975\n941.76081\n\n\nPhilippines\n1976\n996.15703\n\n\nPhilippines\n1977\n1022.76316\n\n\nPhilippines\n1978\n1045.87629\n\n\nPhilippines\n1979\n1074.30200\n\n\nPhilippines\n1980\n1098.39830\n\n\nPhilippines\n1981\n1104.66050\n\n\nPhilippines\n1982\n1113.17459\n\n\nPhilippines\n1983\n1103.01991\n\n\nPhilippines\n1984\n994.45845\n\n\nPhilippines\n1985\n896.95766\n\n\nPhilippines\n1986\n902.81399\n\n\nPhilippines\n1987\n916.82212\n\n\nPhilippines\n1988\n953.23935\n\n\nPhilippines\n1989\n986.61758\n\n\nPhilippines\n1990\n991.40033\n\n\nPhilippines\n1991\n961.96884\n\n\nPhilippines\n1992\n942.64052\n\n\nPhilippines\n1993\n940.55704\n\n\nPhilippines\n1994\n959.64909\n\n\nPhilippines\n1995\n982.03156\n\n\nPhilippines\n1996\n1016.31184\n\n\nPhilippines\n1997\n1045.45889\n\n\nPhilippines\n1998\n1016.77530\n\n\nPhilippines\n1999\n1025.55151\n\n\nPhilippines\n2000\n1048.07051\n\n\nPhilippines\n2001\n1055.80744\n\n\nPhilippines\n2002\n1071.69009\n\n\nPhilippines\n2003\n1102.21597\n\n\nPhilippines\n2004\n1153.02238\n\n\nPhilippines\n2005\n1185.37688\n\n\nPhilippines\n2006\n1225.04504\n\n\nPhilippines\n2007\n1283.46737\n\n\nPhilippines\n2008\n1314.22597\n\n\nPhilippines\n2009\n1307.13963\n\n\nPhilippines\n2010\n1383.40487\n\n\nPhilippines\n2011\n1413.36630\n\n\nPoland\n1990\n3100.70685\n\n\nPoland\n1991\n2872.96641\n\n\nPoland\n1992\n2936.20230\n\n\nPoland\n1993\n3038.22601\n\n\nPoland\n1994\n3192.29006\n\n\nPoland\n1995\n3409.58283\n\n\nPoland\n1996\n3619.54927\n\n\nPoland\n1997\n3873.50444\n\n\nPoland\n1998\n4065.01462\n\n\nPoland\n1999\n4249.27674\n\n\nPoland\n2000\n4454.08022\n\n\nPoland\n2001\n4532.00606\n\n\nPoland\n2002\n4599.55550\n\n\nPoland\n2003\n4780.65315\n\n\nPoland\n2004\n5039.11715\n\n\nPoland\n2005\n5223.67978\n\n\nPoland\n2006\n5552.50127\n\n\nPoland\n2007\n5932.47441\n\n\nPoland\n2008\n6235.75517\n\n\nPoland\n2009\n6332.96048\n\n\nPoland\n2010\n6574.29612\n\n\nPoland\n2011\n6854.46254\n\n\nPortugal\n1960\n2368.67214\n\n\nPortugal\n1961\n2479.73132\n\n\nPortugal\n1962\n2624.74262\n\n\nPortugal\n1963\n2767.72004\n\n\nPortugal\n1964\n2940.75234\n\n\nPortugal\n1965\n3173.31079\n\n\nPortugal\n1966\n3327.71612\n\n\nPortugal\n1967\n3601.54741\n\n\nPortugal\n1968\n3938.00764\n\n\nPortugal\n1969\n4057.77399\n\n\nPortugal\n1970\n4610.25400\n\n\nPortugal\n1971\n4936.84830\n\n\nPortugal\n1972\n5340.80493\n\n\nPortugal\n1973\n5937.17414\n\n\nPortugal\n1974\n5921.84643\n\n\nPortugal\n1975\n5453.15550\n\n\nPortugal\n1976\n5665.97653\n\n\nPortugal\n1977\n5920.22520\n\n\nPortugal\n1978\n6021.61437\n\n\nPortugal\n1979\n6293.34230\n\n\nPortugal\n1980\n6511.36705\n\n\nPortugal\n1981\n6559.60335\n\n\nPortugal\n1982\n6658.84317\n\n\nPortugal\n1983\n6616.54606\n\n\nPortugal\n1984\n6467.23850\n\n\nPortugal\n1985\n6630.64011\n\n\nPortugal\n1986\n6898.93428\n\n\nPortugal\n1987\n7341.16029\n\n\nPortugal\n1988\n7899.15478\n\n\nPortugal\n1989\n8420.18864\n\n\nPortugal\n1990\n8771.92762\n\n\nPortugal\n1991\n9169.19272\n\n\nPortugal\n1992\n9267.15978\n\n\nPortugal\n1993\n9066.31349\n\n\nPortugal\n1994\n9134.12529\n\n\nPortugal\n1995\n9500.34884\n\n\nPortugal\n1996\n9823.83426\n\n\nPortugal\n1997\n10222.96148\n\n\nPortugal\n1998\n10707.74758\n\n\nPortugal\n1999\n11097.15537\n\n\nPortugal\n2000\n11470.89792\n\n\nPortugal\n2001\n11621.11519\n\n\nPortugal\n2002\n11624.76812\n\n\nPortugal\n2003\n11438.67936\n\n\nPortugal\n2004\n11549.79944\n\n\nPortugal\n2005\n11586.96254\n\n\nPortugal\n2006\n11716.00896\n\n\nPortugal\n2007\n11965.99661\n\n\nPortugal\n2008\n11949.11464\n\n\nPortugal\n2009\n11590.61176\n\n\nPortugal\n2010\n11747.58549\n\n\nPortugal\n2011\n11551.91534\n\n\nPuerto Rico\n1960\n3767.41475\n\n\nPuerto Rico\n1961\n4055.06881\n\n\nPuerto Rico\n1962\n4270.35157\n\n\nPuerto Rico\n1963\n4612.41220\n\n\nPuerto Rico\n1964\n4844.56505\n\n\nPuerto Rico\n1965\n5203.11826\n\n\nPuerto Rico\n1966\n5504.70693\n\n\nPuerto Rico\n1967\n5804.75222\n\n\nPuerto Rico\n1968\n6043.08340\n\n\nPuerto Rico\n1969\n6524.04661\n\n\nPuerto Rico\n1970\n7002.48479\n\n\nPuerto Rico\n1971\n7327.09048\n\n\nPuerto Rico\n1972\n7714.15582\n\n\nPuerto Rico\n1973\n7999.26027\n\n\nPuerto Rico\n1974\n7839.00583\n\n\nPuerto Rico\n1975\n7499.96700\n\n\nPuerto Rico\n1976\n7766.22305\n\n\nPuerto Rico\n1977\n8154.24092\n\n\nPuerto Rico\n1978\n8580.01097\n\n\nPuerto Rico\n1979\n8993.06210\n\n\nPuerto Rico\n1980\n9022.36903\n\n\nPuerto Rico\n1981\n9016.13818\n\n\nPuerto Rico\n1982\n8648.30028\n\n\nPuerto Rico\n1983\n8600.22955\n\n\nPuerto Rico\n1984\n9138.37866\n\n\nPuerto Rico\n1985\n9235.88044\n\n\nPuerto Rico\n1986\n9894.64637\n\n\nPuerto Rico\n1987\n10283.97871\n\n\nPuerto Rico\n1988\n10852.03190\n\n\nPuerto Rico\n1989\n11284.83591\n\n\nPuerto Rico\n1990\n11607.88682\n\n\nPuerto Rico\n1991\n11791.66561\n\n\nPuerto Rico\n1992\n12250.47182\n\n\nPuerto Rico\n1993\n12712.00828\n\n\nPuerto Rico\n1994\n13121.58962\n\n\nPuerto Rico\n1995\n13592.41549\n\n\nPuerto Rico\n1996\n13751.69946\n\n\nPuerto Rico\n1997\n14289.41974\n\n\nPuerto Rico\n1998\n14993.24588\n\n\nPuerto Rico\n1999\n15722.53514\n\n\nPuerto Rico\n2000\n16192.12697\n\n\nPuerto Rico\n2001\n17177.49890\n\n\nPuerto Rico\n2002\n17312.68028\n\n\nPuerto Rico\n2003\n17311.04343\n\n\nPuerto Rico\n2004\n17831.02487\n\n\nPuerto Rico\n2005\n18004.27601\n\n\nPuerto Rico\n2006\n18053.78721\n\n\nPuerto Rico\n2007\n17717.88366\n\n\nPuerto Rico\n2008\n17487.72122\n\n\nPuerto Rico\n2009\n17183.31975\n\n\nPuerto Rico\n2010\n16910.46054\n\n\nQatar\n2000\n30052.76120\n\n\nQatar\n2001\n30179.55458\n\n\nQatar\n2002\n31497.58565\n\n\nQatar\n2003\n31134.03018\n\n\nQatar\n2004\n34380.19284\n\n\nQatar\n2005\n32224.00693\n\n\nQatar\n2006\n32070.95910\n\n\nQatar\n2007\n31424.32229\n\n\nQatar\n2008\n31214.35526\n\n\nQatar\n2009\n30546.64881\n\n\nQatar\n2010\n32356.40757\n\n\nQatar\n2011\n36152.66676\n\n\nRomania\n1980\n1840.84260\n\n\nRomania\n1981\n1840.66215\n\n\nRomania\n1982\n1905.77768\n\n\nRomania\n1983\n2015.45961\n\n\nRomania\n1984\n2128.04562\n\n\nRomania\n1985\n2116.63889\n\n\nRomania\n1986\n2157.60871\n\n\nRomania\n1987\n2166.34192\n\n\nRomania\n1988\n2145.41074\n\n\nRomania\n1989\n2011.92649\n\n\nRomania\n1990\n1895.95336\n\n\nRomania\n1991\n1665.78319\n\n\nRomania\n1992\n1532.30255\n\n\nRomania\n1993\n1557.57934\n\n\nRomania\n1994\n1621.77474\n\n\nRomania\n1995\n1741.41191\n\n\nRomania\n1996\n1816.44960\n\n\nRomania\n1997\n1710.51323\n\n\nRomania\n1998\n1631.97007\n\n\nRomania\n1999\n1614.91945\n\n\nRomania\n2000\n1650.96842\n\n\nRomania\n2001\n1769.59564\n\n\nRomania\n2002\n1887.89573\n\n\nRomania\n2003\n1991.64904\n\n\nRomania\n2004\n2164.63456\n\n\nRomania\n2005\n2260.21514\n\n\nRomania\n2006\n2444.04843\n\n\nRomania\n2007\n2595.59609\n\n\nRomania\n2008\n2844.64167\n\n\nRomania\n2009\n2606.87262\n\n\nRomania\n2010\n2636.78768\n\n\nRomania\n2011\n2633.02281\n\n\nRussia\n1989\n2693.09790\n\n\nRussia\n1990\n2602.24637\n\n\nRussia\n1991\n2465.39298\n\n\nRussia\n1992\n2106.22376\n\n\nRussia\n1993\n1925.83381\n\n\nRussia\n1994\n1685.84978\n\n\nRussia\n1995\n1618.12327\n\n\nRussia\n1996\n1564.11527\n\n\nRussia\n1997\n1590.69650\n\n\nRussia\n1998\n1510.54270\n\n\nRussia\n1999\n1613.69863\n\n\nRussia\n2000\n1775.14129\n\n\nRussia\n2001\n1870.04862\n\n\nRussia\n2002\n1967.51860\n\n\nRussia\n2003\n2121.28903\n\n\nRussia\n2004\n2285.36323\n\n\nRussia\n2005\n2442.96297\n\n\nRussia\n2006\n2654.20019\n\n\nRussia\n2007\n2888.84735\n\n\nRussia\n2008\n3043.66560\n\n\nRussia\n2009\n2806.41483\n\n\nRussia\n2010\n2928.00503\n\n\nRussia\n2011\n3054.72774\n\n\nRwanda\n1960\n224.96366\n\n\nRwanda\n1961\n208.91206\n\n\nRwanda\n1962\n225.69670\n\n\nRwanda\n1963\n197.50318\n\n\nRwanda\n1964\n167.76369\n\n\nRwanda\n1965\n174.20255\n\n\nRwanda\n1966\n180.88266\n\n\nRwanda\n1967\n187.64536\n\n\nRwanda\n1968\n194.81550\n\n\nRwanda\n1969\n209.76688\n\n\nRwanda\n1970\n215.62679\n\n\nRwanda\n1971\n211.57826\n\n\nRwanda\n1972\n205.62578\n\n\nRwanda\n1973\n206.10486\n\n\nRwanda\n1974\n202.44915\n\n\nRwanda\n1975\n191.86034\n\n\nRwanda\n1976\n221.87995\n\n\nRwanda\n1977\n218.92316\n\n\nRwanda\n1978\n231.13132\n\n\nRwanda\n1979\n250.12766\n\n\nRwanda\n1980\n263.69743\n\n\nRwanda\n1981\n269.48821\n\n\nRwanda\n1982\n266.42010\n\n\nRwanda\n1983\n274.06056\n\n\nRwanda\n1984\n253.91710\n\n\nRwanda\n1985\n255.43419\n\n\nRwanda\n1986\n257.74220\n\n\nRwanda\n1987\n245.48029\n\n\nRwanda\n1988\n245.92797\n\n\nRwanda\n1989\n240.13558\n\n\nRwanda\n1990\n234.87946\n\n\nRwanda\n1991\n236.91628\n\n\nRwanda\n1992\n267.09786\n\n\nRwanda\n1993\n264.64357\n\n\nRwanda\n1994\n139.50098\n\n\nRwanda\n1995\n191.28382\n\n\nRwanda\n1996\n206.98305\n\n\nRwanda\n1997\n217.16874\n\n\nRwanda\n1998\n214.40140\n\n\nRwanda\n1999\n211.22604\n\n\nRwanda\n2000\n214.23370\n\n\nRwanda\n2001\n222.93323\n\n\nRwanda\n2002\n246.08619\n\n\nRwanda\n2003\n245.10640\n\n\nRwanda\n2004\n257.71600\n\n\nRwanda\n2005\n275.11176\n\n\nRwanda\n2006\n291.05803\n\n\nRwanda\n2007\n304.59300\n\n\nRwanda\n2008\n328.65378\n\n\nRwanda\n2009\n338.77269\n\n\nRwanda\n2010\n352.53562\n\n\nRwanda\n2011\n370.59286\n\n\nSt. Kitts and Nevis\n1977\n2712.81147\n\n\nSt. Kitts and Nevis\n1978\n2908.73579\n\n\nSt. Kitts and Nevis\n1979\n3184.41849\n\n\nSt. Kitts and Nevis\n1980\n3390.80659\n\n\nSt. Kitts and Nevis\n1981\n3401.64673\n\n\nSt. Kitts and Nevis\n1982\n3322.58145\n\n\nSt. Kitts and Nevis\n1983\n3319.44612\n\n\nSt. Kitts and Nevis\n1984\n3749.87664\n\n\nSt. Kitts and Nevis\n1985\n4075.74323\n\n\nSt. Kitts and Nevis\n1986\n4567.66914\n\n\nSt. Kitts and Nevis\n1987\n4982.34479\n\n\nSt. Kitts and Nevis\n1988\n5452.71702\n\n\nSt. Kitts and Nevis\n1989\n5888.13955\n\n\nSt. Kitts and Nevis\n1990\n6042.37131\n\n\nSt. Kitts and Nevis\n1991\n6098.78100\n\n\nSt. Kitts and Nevis\n1992\n6333.15738\n\n\nSt. Kitts and Nevis\n1993\n6788.24086\n\n\nSt. Kitts and Nevis\n1994\n7168.51578\n\n\nSt. Kitts and Nevis\n1995\n7465.02664\n\n\nSt. Kitts and Nevis\n1996\n7978.79159\n\n\nSt. Kitts and Nevis\n1997\n8546.15306\n\n\nSt. Kitts and Nevis\n1998\n8775.28149\n\n\nSt. Kitts and Nevis\n1999\n8767.18812\n\n\nSt. Kitts and Nevis\n2000\n9406.28990\n\n\nSt. Kitts and Nevis\n2001\n9507.07285\n\n\nSt. Kitts and Nevis\n2002\n9564.65589\n\n\nSt. Kitts and Nevis\n2003\n9426.08823\n\n\nSt. Kitts and Nevis\n2004\n9465.43609\n\n\nSt. Kitts and Nevis\n2005\n10265.82187\n\n\nSt. Kitts and Nevis\n2006\n10607.87740\n\n\nSt. Kitts and Nevis\n2007\n10761.45073\n\n\nSt. Kitts and Nevis\n2008\n11123.62489\n\n\nSt. Kitts and Nevis\n2009\n10226.39010\n\n\nSt. Kitts and Nevis\n2010\n9856.21286\n\n\nSt. Kitts and Nevis\n2011\n9944.17262\n\n\nSt. Lucia\n1980\n2316.17563\n\n\nSt. Lucia\n1981\n2358.67786\n\n\nSt. Lucia\n1982\n2068.19742\n\n\nSt. Lucia\n1983\n2125.84673\n\n\nSt. Lucia\n1984\n2587.01236\n\n\nSt. Lucia\n1985\n2399.66771\n\n\nSt. Lucia\n1986\n2715.33241\n\n\nSt. Lucia\n1987\n2729.10342\n\n\nSt. Lucia\n1988\n3016.57107\n\n\nSt. Lucia\n1989\n3245.18934\n\n\nSt. Lucia\n1990\n3952.46030\n\n\nSt. Lucia\n1991\n4001.60799\n\n\nSt. Lucia\n1992\n4246.64921\n\n\nSt. Lucia\n1993\n4270.07701\n\n\nSt. Lucia\n1994\n4246.35633\n\n\nSt. Lucia\n1995\n4303.09797\n\n\nSt. Lucia\n1996\n4486.08289\n\n\nSt. Lucia\n1997\n4425.82381\n\n\nSt. Lucia\n1998\n4636.18982\n\n\nSt. Lucia\n1999\n4691.47672\n\n\nSt. Lucia\n2000\n4900.49568\n\n\nSt. Lucia\n2001\n4609.27963\n\n\nSt. Lucia\n2002\n4578.56082\n\n\nSt. Lucia\n2003\n4737.98857\n\n\nSt. Lucia\n2004\n5078.46414\n\n\nSt. Lucia\n2005\n4924.82690\n\n\nSt. Lucia\n2006\n5315.87433\n\n\nSt. Lucia\n2007\n5332.84188\n\n\nSt. Lucia\n2008\n5551.03919\n\n\nSt. Lucia\n2009\n5492.63496\n\n\nSt. Lucia\n2010\n5463.08385\n\n\nSt. Lucia\n2011\n5469.97135\n\n\nSt. Vincent and the Grenadines\n1960\n1324.50009\n\n\nSt. Vincent and the Grenadines\n1961\n1364.30661\n\n\nSt. Vincent and the Grenadines\n1962\n1396.63439\n\n\nSt. Vincent and the Grenadines\n1963\n1294.19844\n\n\nSt. Vincent and the Grenadines\n1964\n1327.35660\n\n\nSt. Vincent and the Grenadines\n1965\n1325.13156\n\n\nSt. Vincent and the Grenadines\n1966\n1311.55423\n\n\nSt. Vincent and the Grenadines\n1967\n1174.76980\n\n\nSt. Vincent and the Grenadines\n1968\n1238.79105\n\n\nSt. Vincent and the Grenadines\n1969\n1261.36452\n\n\nSt. Vincent and the Grenadines\n1970\n1382.42534\n\n\nSt. Vincent and the Grenadines\n1971\n1408.20128\n\n\nSt. Vincent and the Grenadines\n1972\n1752.45163\n\n\nSt. Vincent and the Grenadines\n1973\n1540.51241\n\n\nSt. Vincent and the Grenadines\n1974\n1389.04692\n\n\nSt. Vincent and the Grenadines\n1975\n1269.46313\n\n\nSt. Vincent and the Grenadines\n1976\n1386.42814\n\n\nSt. Vincent and the Grenadines\n1977\n1411.11342\n\n\nSt. Vincent and the Grenadines\n1978\n1563.40800\n\n\nSt. Vincent and the Grenadines\n1979\n1600.41029\n\n\nSt. Vincent and the Grenadines\n1980\n1618.03020\n\n\nSt. Vincent and the Grenadines\n1981\n1702.52861\n\n\nSt. Vincent and the Grenadines\n1982\n1769.89230\n\n\nSt. Vincent and the Grenadines\n1983\n1833.74898\n\n\nSt. Vincent and the Grenadines\n1984\n1927.67775\n\n\nSt. Vincent and the Grenadines\n1985\n2031.22419\n\n\nSt. Vincent and the Grenadines\n1986\n2151.70266\n\n\nSt. Vincent and the Grenadines\n1987\n2234.58502\n\n\nSt. Vincent and the Grenadines\n1988\n2545.50519\n\n\nSt. Vincent and the Grenadines\n1989\n2595.53152\n\n\nSt. Vincent and the Grenadines\n1990\n2715.50489\n\n\nSt. Vincent and the Grenadines\n1991\n2724.46952\n\n\nSt. Vincent and the Grenadines\n1992\n2924.15546\n\n\nSt. Vincent and the Grenadines\n1993\n2926.02207\n\n\nSt. Vincent and the Grenadines\n1994\n2837.14839\n\n\nSt. Vincent and the Grenadines\n1995\n2865.62286\n\n\nSt. Vincent and the Grenadines\n1996\n2905.04787\n\n\nSt. Vincent and the Grenadines\n1997\n3292.81885\n\n\nSt. Vincent and the Grenadines\n1998\n3465.53961\n\n\nSt. Vincent and the Grenadines\n1999\n3619.47030\n\n\nSt. Vincent and the Grenadines\n2000\n3683.78277\n\n\nSt. Vincent and the Grenadines\n2001\n3741.20941\n\n\nSt. Vincent and the Grenadines\n2002\n3969.42884\n\n\nSt. Vincent and the Grenadines\n2003\n4262.46750\n\n\nSt. Vincent and the Grenadines\n2004\n4431.15991\n\n\nSt. Vincent and the Grenadines\n2005\n4532.37817\n\n\nSt. Vincent and the Grenadines\n2006\n4872.78451\n\n\nSt. Vincent and the Grenadines\n2007\n5031.53354\n\n\nSt. Vincent and the Grenadines\n2008\n5095.98721\n\n\nSt. Vincent and the Grenadines\n2009\n4980.80325\n\n\nSt. Vincent and the Grenadines\n2010\n4839.22230\n\n\nSt. Vincent and the Grenadines\n2011\n4844.76687\n\n\nSamoa\n1982\n1126.81762\n\n\nSamoa\n1983\n1129.56523\n\n\nSamoa\n1984\n1141.64467\n\n\nSamoa\n1985\n1182.91352\n\n\nSamoa\n1986\n1243.17946\n\n\nSamoa\n1987\n1243.19534\n\n\nSamoa\n1988\n1218.36043\n\n\nSamoa\n1989\n1255.55483\n\n\nSamoa\n1990\n1191.78335\n\n\nSamoa\n1991\n1155.80280\n\n\nSamoa\n1992\n1144.43451\n\n\nSamoa\n1993\n1181.38820\n\n\nSamoa\n1994\n1141.06268\n\n\nSamoa\n1995\n1204.35277\n\n\nSamoa\n1996\n1278.94814\n\n\nSamoa\n1997\n1275.73638\n\n\nSamoa\n1998\n1292.90944\n\n\nSamoa\n1999\n1310.13276\n\n\nSamoa\n2000\n1391.21435\n\n\nSamoa\n2001\n1480.68111\n\n\nSamoa\n2002\n1538.65148\n\n\nSamoa\n2003\n1606.07484\n\n\nSamoa\n2004\n1677.81276\n\n\nSamoa\n2005\n1742.15449\n\n\nSamoa\n2006\n1771.58110\n\n\nSamoa\n2007\n1798.38578\n\n\nSamoa\n2008\n1870.22774\n\n\nSamoa\n2009\n1769.08569\n\n\nSamoa\n2010\n1769.56501\n\n\nSamoa\n2011\n1797.17201\n\n\nSan Marino\n1970\n13112.42249\n\n\nSan Marino\n1971\n13238.04809\n\n\nSan Marino\n1972\n13658.66844\n\n\nSan Marino\n1973\n14579.34626\n\n\nSan Marino\n1974\n15302.60562\n\n\nSan Marino\n1975\n14854.44577\n\n\nSan Marino\n1976\n15710.68293\n\n\nSan Marino\n1977\n15855.13469\n\n\nSan Marino\n1978\n16076.03814\n\n\nSan Marino\n1979\n16733.88979\n\n\nSan Marino\n1980\n17029.60534\n\n\nSan Marino\n1981\n16928.91485\n\n\nSan Marino\n1982\n16780.16322\n\n\nSan Marino\n1983\n16774.20846\n\n\nSan Marino\n1984\n17115.36308\n\n\nSan Marino\n1985\n17392.66012\n\n\nSan Marino\n1986\n17684.32293\n\n\nSan Marino\n1987\n18042.85699\n\n\nSan Marino\n1988\n18586.67199\n\n\nSan Marino\n1989\n18994.06207\n\n\nSan Marino\n1990\n19153.48780\n\n\nSan Marino\n1991\n19202.03629\n\n\nSan Marino\n1992\n19095.05522\n\n\nSan Marino\n1993\n20493.96387\n\n\nSan Marino\n1994\n21659.10511\n\n\nSan Marino\n1995\n23420.92926\n\n\nSan Marino\n1996\n24351.10489\n\n\nSan Marino\n1997\n24764.50822\n\n\nSan Marino\n1998\n26430.17181\n\n\nSan Marino\n1999\n28525.31242\n\n\nSan Marino\n2000\n28698.32174\n\n\nSan Marino\n2001\n29673.75858\n\n\nSan Marino\n2002\n29003.25092\n\n\nSan Marino\n2003\n29345.52553\n\n\nSan Marino\n2004\n29966.53671\n\n\nSan Marino\n2005\n30075.92142\n\n\nSan Marino\n2006\n30808.27931\n\n\nSan Marino\n2007\n31590.45679\n\n\nSan Marino\n2008\n31993.20069\n\n\nSao Tome and Principe\n2000\n543.99904\n\n\nSaudi Arabia\n1968\n6961.58388\n\n\nSaudi Arabia\n1969\n7101.89787\n\n\nSaudi Arabia\n1970\n7636.04849\n\n\nSaudi Arabia\n1971\n8768.68702\n\n\nSaudi Arabia\n1972\n10344.03380\n\n\nSaudi Arabia\n1973\n12383.01899\n\n\nSaudi Arabia\n1974\n15008.80958\n\n\nSaudi Arabia\n1975\n14979.49479\n\n\nSaudi Arabia\n1976\n15989.03212\n\n\nSaudi Arabia\n1977\n16181.58410\n\n\nSaudi Arabia\n1978\n15130.62097\n\n\nSaudi Arabia\n1979\n15657.48821\n\n\nSaudi Arabia\n1980\n15683.72114\n\n\nSaudi Arabia\n1981\n15413.93962\n\n\nSaudi Arabia\n1982\n12858.75783\n\n\nSaudi Arabia\n1983\n11094.09123\n\n\nSaudi Arabia\n1984\n10146.83402\n\n\nSaudi Arabia\n1985\n9209.91883\n\n\nSaudi Arabia\n1986\n9230.66640\n\n\nSaudi Arabia\n1987\n8491.07608\n\n\nSaudi Arabia\n1988\n8837.33156\n\n\nSaudi Arabia\n1989\n8528.48082\n\n\nSaudi Arabia\n1990\n8930.37552\n\n\nSaudi Arabia\n1991\n9433.18040\n\n\nSaudi Arabia\n1992\n9571.61672\n\n\nSaudi Arabia\n1993\n9308.41233\n\n\nSaudi Arabia\n1994\n9143.70877\n\n\nSaudi Arabia\n1995\n8976.83687\n\n\nSaudi Arabia\n1996\n9135.05229\n\n\nSaudi Arabia\n1997\n9256.51155\n\n\nSaudi Arabia\n1998\n9402.22960\n\n\nSaudi Arabia\n1999\n9178.24827\n\n\nSaudi Arabia\n2000\n9400.81169\n\n\nSaudi Arabia\n2001\n9161.46181\n\n\nSaudi Arabia\n2002\n8839.18632\n\n\nSaudi Arabia\n2003\n9144.94519\n\n\nSaudi Arabia\n2004\n9261.92193\n\n\nSaudi Arabia\n2005\n9439.85854\n\n\nSaudi Arabia\n2006\n9440.18003\n\n\nSaudi Arabia\n2007\n9364.48867\n\n\nSaudi Arabia\n2008\n9513.37717\n\n\nSaudi Arabia\n2009\n9294.35600\n\n\nSaudi Arabia\n2010\n9499.37889\n\n\nSaudi Arabia\n2011\n9913.75628\n\n\nSenegal\n1960\n613.62798\n\n\nSenegal\n1961\n615.25389\n\n\nSenegal\n1962\n597.93346\n\n\nSenegal\n1963\n592.42524\n\n\nSenegal\n1964\n598.13381\n\n\nSenegal\n1965\n588.52818\n\n\nSenegal\n1966\n587.44639\n\n\nSenegal\n1967\n562.69312\n\n\nSenegal\n1968\n579.67190\n\n\nSenegal\n1969\n524.77642\n\n\nSenegal\n1970\n551.77650\n\n\nSenegal\n1971\n533.44866\n\n\nSenegal\n1972\n549.32822\n\n\nSenegal\n1973\n502.36263\n\n\nSenegal\n1974\n507.80788\n\n\nSenegal\n1975\n530.82796\n\n\nSenegal\n1976\n563.27176\n\n\nSenegal\n1977\n534.93446\n\n\nSenegal\n1978\n501.78050\n\n\nSenegal\n1979\n524.16763\n\n\nSenegal\n1980\n494.20616\n\n\nSenegal\n1981\n505.68588\n\n\nSenegal\n1982\n530.54488\n\n\nSenegal\n1983\n488.22857\n\n\nSenegal\n1984\n492.04416\n\n\nSenegal\n1985\n493.48747\n\n\nSenegal\n1986\n493.95692\n\n\nSenegal\n1987\n508.56871\n\n\nSenegal\n1988\n490.53413\n\n\nSenegal\n1989\n494.89024\n\n\nSenegal\n1990\n477.00342\n\n\nSenegal\n1991\n474.77156\n\n\nSenegal\n1992\n466.58301\n\n\nSenegal\n1993\n459.02434\n\n\nSenegal\n1994\n446.09140\n\n\nSenegal\n1995\n457.32588\n\n\nSenegal\n1996\n454.43355\n\n\nSenegal\n1997\n456.88698\n\n\nSenegal\n1998\n471.91332\n\n\nSenegal\n1999\n489.42032\n\n\nSenegal\n2000\n492.28623\n\n\nSenegal\n2001\n501.49128\n\n\nSenegal\n2002\n491.46207\n\n\nSenegal\n2003\n510.21336\n\n\nSenegal\n2004\n525.84931\n\n\nSenegal\n2005\n540.59314\n\n\nSenegal\n2006\n539.48964\n\n\nSenegal\n2007\n550.64764\n\n\nSenegal\n2008\n555.90699\n\n\nSenegal\n2009\n552.54290\n\n\nSenegal\n2010\n560.25744\n\n\nSenegal\n2011\n559.96830\n\n\nSerbia\n1990\n1444.18397\n\n\nSerbia\n1991\n1301.25221\n\n\nSerbia\n1992\n941.53012\n\n\nSerbia\n1993\n649.78972\n\n\nSerbia\n1994\n662.99196\n\n\nSerbia\n1995\n703.03932\n\n\nSerbia\n1996\n760.83641\n\n\nSerbia\n1997\n844.16884\n\n\nSerbia\n1998\n859.27618\n\n\nSerbia\n1999\n765.80427\n\n\nSerbia\n2000\n809.27508\n\n\nSerbia\n2001\n853.63319\n\n\nSerbia\n2002\n889.22915\n\n\nSerbia\n2003\n915.38452\n\n\nSerbia\n2004\n1002.85250\n\n\nSerbia\n2005\n1060.18688\n\n\nSerbia\n2006\n1102.68089\n\n\nSerbia\n2007\n1166.94757\n\n\nSerbia\n2008\n1216.45927\n\n\nSerbia\n2009\n1178.59969\n\n\nSerbia\n2010\n1194.63999\n\n\nSerbia\n2011\n1223.64053\n\n\nSeychelles\n1960\n1174.61391\n\n\nSeychelles\n1961\n1086.29337\n\n\nSeychelles\n1962\n1146.79791\n\n\nSeychelles\n1963\n1231.34821\n\n\nSeychelles\n1964\n1271.96557\n\n\nSeychelles\n1965\n2485.94137\n\n\nSeychelles\n1966\n2475.73410\n\n\nSeychelles\n1967\n2427.80764\n\n\nSeychelles\n1968\n2548.72217\n\n\nSeychelles\n1969\n2488.79703\n\n\nSeychelles\n1970\n2647.17396\n\n\nSeychelles\n1971\n2997.72508\n\n\nSeychelles\n1972\n3116.77767\n\n\nSeychelles\n1973\n3326.79603\n\n\nSeychelles\n1974\n3302.00092\n\n\nSeychelles\n1975\n3342.10052\n\n\nSeychelles\n1976\n3815.44063\n\n\nSeychelles\n1977\n3519.05936\n\n\nSeychelles\n1978\n4197.80415\n\n\nSeychelles\n1979\n4793.06706\n\n\nSeychelles\n1980\n4531.96485\n\n\nSeychelles\n1981\n4113.18914\n\n\nSeychelles\n1982\n4026.87231\n\n\nSeychelles\n1983\n3923.04087\n\n\nSeychelles\n1984\n4067.23529\n\n\nSeychelles\n1985\n4486.33733\n\n\nSeychelles\n1986\n4446.92000\n\n\nSeychelles\n1987\n4610.49405\n\n\nSeychelles\n1988\n4824.36130\n\n\nSeychelles\n1989\n5322.88101\n\n\nSeychelles\n1990\n5645.41581\n\n\nSeychelles\n1991\n5739.35147\n\n\nSeychelles\n1992\n6072.95358\n\n\nSeychelles\n1993\n6355.74961\n\n\nSeychelles\n1994\n6201.51297\n\n\nSeychelles\n1995\n6037.65184\n\n\nSeychelles\n1996\n6242.29317\n\n\nSeychelles\n1997\n6907.43565\n\n\nSeychelles\n1998\n7342.87792\n\n\nSeychelles\n1999\n7334.84205\n\n\nSeychelles\n2000\n7578.85105\n\n\nSeychelles\n2001\n7400.24682\n\n\nSeychelles\n2002\n7266.46276\n\n\nSeychelles\n2003\n6913.01025\n\n\nSeychelles\n2004\n6740.37974\n\n\nSeychelles\n2005\n7208.96827\n\n\nSeychelles\n2006\n7721.54165\n\n\nSeychelles\n2007\n8419.71583\n\n\nSeychelles\n2008\n8151.71295\n\n\nSeychelles\n2009\n8162.19658\n\n\nSeychelles\n2010\n8787.76643\n\n\nSeychelles\n2011\n9279.11267\n\n\nSierra Leone\n1960\n223.35279\n\n\nSierra Leone\n1961\n223.83317\n\n\nSierra Leone\n1962\n230.27518\n\n\nSierra Leone\n1963\n230.40107\n\n\nSierra Leone\n1964\n241.75583\n\n\nSierra Leone\n1965\n254.76809\n\n\nSierra Leone\n1966\n254.66620\n\n\nSierra Leone\n1967\n250.31870\n\n\nSierra Leone\n1968\n250.86570\n\n\nSierra Leone\n1969\n267.41414\n\n\nSierra Leone\n1970\n285.28758\n\n\nSierra Leone\n1971\n289.90515\n\n\nSierra Leone\n1972\n287.26391\n\n\nSierra Leone\n1973\n288.39672\n\n\nSierra Leone\n1974\n292.91432\n\n\nSierra Leone\n1975\n292.06122\n\n\nSierra Leone\n1976\n284.96010\n\n\nSierra Leone\n1977\n279.25625\n\n\nSierra Leone\n1978\n279.98211\n\n\nSierra Leone\n1979\n286.36867\n\n\nSierra Leone\n1980\n293.74285\n\n\nSierra Leone\n1981\n295.73065\n\n\nSierra Leone\n1982\n303.31917\n\n\nSierra Leone\n1983\n290.52696\n\n\nSierra Leone\n1984\n295.45988\n\n\nSierra Leone\n1985\n272.84434\n\n\nSierra Leone\n1986\n268.70348\n\n\nSierra Leone\n1987\n279.88972\n\n\nSierra Leone\n1988\n253.11752\n\n\nSierra Leone\n1989\n249.65420\n\n\nSierra Leone\n1990\n254.79367\n\n\nSierra Leone\n1991\n259.88559\n\n\nSierra Leone\n1992\n211.31368\n\n\nSierra Leone\n1993\n216.00570\n\n\nSierra Leone\n1994\n213.51220\n\n\nSierra Leone\n1995\n197.27715\n\n\nSierra Leone\n1996\n207.15089\n\n\nSierra Leone\n1997\n171.79061\n\n\nSierra Leone\n1998\n168.62748\n\n\nSierra Leone\n1999\n152.06445\n\n\nSierra Leone\n2000\n153.47797\n\n\nSierra Leone\n2001\n174.59142\n\n\nSierra Leone\n2002\n212.57655\n\n\nSierra Leone\n2003\n221.29393\n\n\nSierra Leone\n2004\n227.25052\n\n\nSierra Leone\n2005\n234.04926\n\n\nSierra Leone\n2006\n242.89252\n\n\nSierra Leone\n2007\n251.41702\n\n\nSierra Leone\n2008\n259.00291\n\n\nSierra Leone\n2009\n261.36870\n\n\nSierra Leone\n2010\n268.30728\n\n\nSierra Leone\n2011\n278.24338\n\n\nSingapore\n1960\n2251.39451\n\n\nSingapore\n1961\n2478.23182\n\n\nSingapore\n1962\n2409.27769\n\n\nSingapore\n1963\n2558.07049\n\n\nSingapore\n1964\n2506.76203\n\n\nSingapore\n1965\n2782.51467\n\n\nSingapore\n1966\n3009.79697\n\n\nSingapore\n1967\n3303.97738\n\n\nSingapore\n1968\n3689.69754\n\n\nSingapore\n1969\n4131.20068\n\n\nSingapore\n1970\n4628.31653\n\n\nSingapore\n1971\n5092.77407\n\n\nSingapore\n1972\n5675.69383\n\n\nSingapore\n1973\n6187.81301\n\n\nSingapore\n1974\n6479.60485\n\n\nSingapore\n1975\n6681.03048\n\n\nSingapore\n1976\n7081.62277\n\n\nSingapore\n1977\n7505.31100\n\n\nSingapore\n1978\n8056.02242\n\n\nSingapore\n1979\n8702.14177\n\n\nSingapore\n1980\n9457.47095\n\n\nSingapore\n1981\n9979.84318\n\n\nSingapore\n1982\n10236.32233\n\n\nSingapore\n1983\n10972.39757\n\n\nSingapore\n1984\n11717.81261\n\n\nSingapore\n1985\n11624.62962\n\n\nSingapore\n1986\n11787.19813\n\n\nSingapore\n1987\n12859.31989\n\n\nSingapore\n1988\n13926.95420\n\n\nSingapore\n1989\n14906.23339\n\n\nSingapore\n1990\n15787.90256\n\n\nSingapore\n1991\n16339.42791\n\n\nSingapore\n1992\n16970.76377\n\n\nSingapore\n1993\n18446.17393\n\n\nSingapore\n1994\n19767.48282\n\n\nSingapore\n1995\n20571.45946\n\n\nSingapore\n1996\n21258.52785\n\n\nSingapore\n1997\n22305.68363\n\n\nSingapore\n1998\n21092.56352\n\n\nSingapore\n1999\n22221.38452\n\n\nSingapore\n2000\n23814.55661\n\n\nSingapore\n2001\n22913.32124\n\n\nSingapore\n2002\n23658.86570\n\n\nSingapore\n2003\n25110.50033\n\n\nSingapore\n2004\n27068.97410\n\n\nSingapore\n2005\n28388.86966\n\n\nSingapore\n2006\n29925.50494\n\n\nSingapore\n2007\n31246.99685\n\n\nSingapore\n2008\n30131.61718\n\n\nSingapore\n2009\n28949.85732\n\n\nSingapore\n2010\n32640.68442\n\n\nSingapore\n2011\n33529.83052\n\n\nSlovak Republic\n1984\n4953.52536\n\n\nSlovak Republic\n1985\n5092.38210\n\n\nSlovak Republic\n1986\n5271.81110\n\n\nSlovak Republic\n1987\n5371.49792\n\n\nSlovak Republic\n1988\n5446.84136\n\n\nSlovak Republic\n1989\n5486.17104\n\n\nSlovak Republic\n1990\n5316.21390\n\n\nSlovak Republic\n1991\n4537.92235\n\n\nSlovak Republic\n1992\n4231.53247\n\n\nSlovak Republic\n1993\n4059.44046\n\n\nSlovak Republic\n1994\n4294.39463\n\n\nSlovak Republic\n1995\n4532.05571\n\n\nSlovak Republic\n1996\n4836.39427\n\n\nSlovak Republic\n1997\n5041.88827\n\n\nSlovak Republic\n1998\n5254.71020\n\n\nSlovak Republic\n1999\n5251.33160\n\n\nSlovak Republic\n2000\n5330.40162\n\n\nSlovak Republic\n2001\n5526.10988\n\n\nSlovak Republic\n2002\n5779.16249\n\n\nSlovak Republic\n2003\n6054.49887\n\n\nSlovak Republic\n2004\n6357.37802\n\n\nSlovak Republic\n2005\n6774.73201\n\n\nSlovak Republic\n2006\n7334.10976\n\n\nSlovak Republic\n2007\n8094.87451\n\n\nSlovak Republic\n2008\n8545.63100\n\n\nSlovak Republic\n2009\n8106.25816\n\n\nSlovak Republic\n2010\n8427.43510\n\n\nSlovak Republic\n2011\n8693.83528\n\n\nSlovenia\n1990\n8362.38874\n\n\nSlovenia\n1991\n7613.29590\n\n\nSlovenia\n1992\n7207.89453\n\n\nSlovenia\n1993\n7430.53101\n\n\nSlovenia\n1994\n7835.45153\n\n\nSlovenia\n1995\n8119.11139\n\n\nSlovenia\n1996\n8420.53841\n\n\nSlovenia\n1997\n8849.86365\n\n\nSlovenia\n1998\n9180.93265\n\n\nSlovenia\n1999\n9662.96902\n\n\nSlovenia\n2000\n10045.36008\n\n\nSlovenia\n2001\n10324.38327\n\n\nSlovenia\n2002\n10706.20714\n\n\nSlovenia\n2003\n11013.26166\n\n\nSlovenia\n2004\n11490.68017\n\n\nSlovenia\n2005\n11930.45861\n\n\nSlovenia\n2006\n12588.10838\n\n\nSlovenia\n2007\n13377.91533\n\n\nSlovenia\n2008\n13836.18922\n\n\nSlovenia\n2009\n12613.67797\n\n\nSlovenia\n2010\n12732.04555\n\n\nSlovenia\n2011\n12688.65168\n\n\nSolomon Islands\n1990\n1101.24799\n\n\nSolomon Islands\n1991\n1134.94067\n\n\nSolomon Islands\n1992\n1243.20858\n\n\nSolomon Islands\n1993\n1256.46511\n\n\nSolomon Islands\n1994\n1333.82710\n\n\nSolomon Islands\n1995\n1403.80317\n\n\nSolomon Islands\n1996\n1387.56399\n\n\nSolomon Islands\n1997\n1330.72737\n\n\nSolomon Islands\n1998\n1318.07537\n\n\nSolomon Islands\n1999\n1276.34729\n\n\nSolomon Islands\n2000\n1064.51469\n\n\nSolomon Islands\n2001\n952.77462\n\n\nSolomon Islands\n2002\n900.64629\n\n\nSolomon Islands\n2003\n932.77275\n\n\nSolomon Islands\n2004\n951.53485\n\n\nSolomon Islands\n2005\n975.60543\n\n\nSolomon Islands\n2006\n1014.87347\n\n\nSolomon Islands\n2007\n1092.93956\n\n\nSolomon Islands\n2008\n1141.16395\n\n\nSolomon Islands\n2009\n1097.56043\n\n\nSolomon Islands\n2010\n1143.78755\n\n\nSolomon Islands\n2011\n1214.85515\n\n\nSouth Africa\n1960\n2203.72908\n\n\nSouth Africa\n1961\n2217.84584\n\n\nSouth Africa\n1962\n2289.85445\n\n\nSouth Africa\n1963\n2396.80336\n\n\nSouth Africa\n1964\n2526.47714\n\n\nSouth Africa\n1965\n2689.99279\n\n\nSouth Africa\n1966\n2748.87133\n\n\nSouth Africa\n1967\n2884.27081\n\n\nSouth Africa\n1968\n2940.66221\n\n\nSouth Africa\n1969\n3013.97347\n\n\nSouth Africa\n1970\n3104.01798\n\n\nSouth Africa\n1971\n3163.03351\n\n\nSouth Africa\n1972\n3142.53383\n\n\nSouth Africa\n1973\n3212.63632\n\n\nSouth Africa\n1974\n3333.71864\n\n\nSouth Africa\n1975\n3316.45476\n\n\nSouth Africa\n1976\n3318.59184\n\n\nSouth Africa\n1977\n3246.41428\n\n\nSouth Africa\n1978\n3274.51961\n\n\nSouth Africa\n1979\n3324.78299\n\n\nSouth Africa\n1980\n3463.24711\n\n\nSouth Africa\n1981\n3561.25903\n\n\nSouth Africa\n1982\n3459.78749\n\n\nSouth Africa\n1983\n3309.96764\n\n\nSouth Africa\n1984\n3389.64163\n\n\nSouth Africa\n1985\n3262.74358\n\n\nSouth Africa\n1986\n3180.68646\n\n\nSouth Africa\n1987\n3167.45563\n\n\nSouth Africa\n1988\n3222.65484\n\n\nSouth Africa\n1989\n3226.92477\n\n\nSouth Africa\n1990\n3151.83861\n\n\nSouth Africa\n1991\n3056.09414\n\n\nSouth Africa\n1992\n2929.02712\n\n\nSouth Africa\n1993\n2903.19959\n\n\nSouth Africa\n1994\n2933.72411\n\n\nSouth Africa\n1995\n2960.42246\n\n\nSouth Africa\n1996\n3019.96600\n\n\nSouth Africa\n1997\n3029.77251\n\n\nSouth Africa\n1998\n2974.68119\n\n\nSouth Africa\n1999\n2972.20341\n\n\nSouth Africa\n2000\n3019.94637\n\n\nSouth Africa\n2001\n3039.70613\n\n\nSouth Africa\n2002\n3108.04365\n\n\nSouth Africa\n2003\n3159.23785\n\n\nSouth Africa\n2004\n3264.31738\n\n\nSouth Africa\n2005\n3397.72002\n\n\nSouth Africa\n2006\n3548.09031\n\n\nSouth Africa\n2007\n3704.08427\n\n\nSouth Africa\n2008\n3795.97691\n\n\nSouth Africa\n2009\n3697.67368\n\n\nSouth Africa\n2010\n3753.44537\n\n\nSouth Africa\n2011\n3825.09378\n\n\nSpain\n1960\n3711.09930\n\n\nSpain\n1961\n4112.06453\n\n\nSpain\n1962\n4479.94917\n\n\nSpain\n1963\n4866.99406\n\n\nSpain\n1964\n5074.68064\n\n\nSpain\n1965\n5333.77517\n\n\nSpain\n1966\n5661.98554\n\n\nSpain\n1967\n5835.47595\n\n\nSpain\n1968\n6139.63101\n\n\nSpain\n1969\n6620.92178\n\n\nSpain\n1970\n6830.71898\n\n\nSpain\n1971\n7069.46290\n\n\nSpain\n1972\n7576.68432\n\n\nSpain\n1973\n8093.05316\n\n\nSpain\n1974\n8465.77794\n\n\nSpain\n1975\n8421.51304\n\n\nSpain\n1976\n8600.80669\n\n\nSpain\n1977\n8740.22485\n\n\nSpain\n1978\n8747.25047\n\n\nSpain\n1979\n8673.58350\n\n\nSpain\n1980\n8808.82438\n\n\nSpain\n1981\n8726.87225\n\n\nSpain\n1982\n8788.55214\n\n\nSpain\n1983\n8901.97708\n\n\nSpain\n1984\n9023.88853\n\n\nSpain\n1985\n9199.66730\n\n\nSpain\n1986\n9470.17108\n\n\nSpain\n1987\n9970.85988\n\n\nSpain\n1988\n10455.79391\n\n\nSpain\n1989\n10939.13075\n\n\nSpain\n1990\n11335.55259\n\n\nSpain\n1991\n11597.70261\n\n\nSpain\n1992\n11666.91038\n\n\nSpain\n1993\n11510.72335\n\n\nSpain\n1994\n11753.38552\n\n\nSpain\n1995\n12049.25856\n\n\nSpain\n1996\n12311.99210\n\n\nSpain\n1997\n12754.63169\n\n\nSpain\n1998\n13278.00360\n\n\nSpain\n1999\n13836.70260\n\n\nSpain\n2000\n14413.78887\n\n\nSpain\n2001\n14774.89486\n\n\nSpain\n2002\n14957.32291\n\n\nSpain\n2003\n15165.92735\n\n\nSpain\n2004\n15408.16294\n\n\nSpain\n2005\n15700.52761\n\n\nSpain\n2006\n16074.46178\n\n\nSpain\n2007\n16351.11108\n\n\nSpain\n2008\n16251.83693\n\n\nSpain\n2009\n15523.00304\n\n\nSpain\n2010\n15418.82018\n\n\nSpain\n2011\n15428.32098\n\n\nSri Lanka\n1960\n273.70669\n\n\nSri Lanka\n1961\n277.64273\n\n\nSri Lanka\n1962\n280.65275\n\n\nSri Lanka\n1963\n283.93678\n\n\nSri Lanka\n1964\n286.34267\n\n\nSri Lanka\n1965\n286.74292\n\n\nSri Lanka\n1966\n293.90853\n\n\nSri Lanka\n1967\n305.77635\n\n\nSri Lanka\n1968\n315.71825\n\n\nSri Lanka\n1969\n332.86475\n\n\nSri Lanka\n1970\n338.43172\n\n\nSri Lanka\n1971\n338.09958\n\n\nSri Lanka\n1972\n332.23482\n\n\nSri Lanka\n1973\n349.43283\n\n\nSri Lanka\n1974\n357.59940\n\n\nSri Lanka\n1975\n373.54530\n\n\nSri Lanka\n1976\n379.78438\n\n\nSri Lanka\n1977\n392.71399\n\n\nSri Lanka\n1978\n407.66585\n\n\nSri Lanka\n1979\n425.31848\n\n\nSri Lanka\n1980\n441.78780\n\n\nSri Lanka\n1981\n463.82239\n\n\nSri Lanka\n1982\n471.93805\n\n\nSri Lanka\n1983\n487.56622\n\n\nSri Lanka\n1984\n506.31944\n\n\nSri Lanka\n1985\n523.61189\n\n\nSri Lanka\n1986\n536.76165\n\n\nSri Lanka\n1987\n537.82019\n\n\nSri Lanka\n1988\n543.61520\n\n\nSri Lanka\n1989\n548.64457\n\n\nSri Lanka\n1990\n577.23923\n\n\nSri Lanka\n1991\n594.98030\n\n\nSri Lanka\n1992\n615.49179\n\n\nSri Lanka\n1993\n649.75765\n\n\nSri Lanka\n1994\n676.74800\n\n\nSri Lanka\n1995\n704.32410\n\n\nSri Lanka\n1996\n723.11407\n\n\nSri Lanka\n1997\n759.81877\n\n\nSri Lanka\n1998\n786.37029\n\n\nSri Lanka\n1999\n808.48157\n\n\nSri Lanka\n2000\n854.92673\n\n\nSri Lanka\n2001\n855.37258\n\n\nSri Lanka\n2002\n883.45718\n\n\nSri Lanka\n2003\n923.63544\n\n\nSri Lanka\n2004\n960.79859\n\n\nSri Lanka\n2005\n1009.90887\n\n\nSri Lanka\n2006\n1075.62554\n\n\nSri Lanka\n2007\n1138.36684\n\n\nSri Lanka\n2008\n1195.48108\n\n\nSri Lanka\n2009\n1223.68571\n\n\nSri Lanka\n2010\n1308.78402\n\n\nSri Lanka\n2011\n1402.12167\n\n\nSudan\n1960\n284.75715\n\n\nSudan\n1961\n278.16388\n\n\nSudan\n1962\n290.43734\n\n\nSudan\n1963\n275.54635\n\n\nSudan\n1964\n266.04579\n\n\nSudan\n1965\n277.35522\n\n\nSudan\n1966\n261.08553\n\n\nSudan\n1967\n258.45661\n\n\nSudan\n1968\n257.07501\n\n\nSudan\n1969\n254.02522\n\n\nSudan\n1970\n261.93591\n\n\nSudan\n1971\n260.40328\n\n\nSudan\n1972\n240.10002\n\n\nSudan\n1973\n234.48317\n\n\nSudan\n1974\n253.45870\n\n\nSudan\n1975\n284.35642\n\n\nSudan\n1976\n321.59720\n\n\nSudan\n1977\n331.12611\n\n\nSudan\n1978\n301.83735\n\n\nSudan\n1979\n277.65898\n\n\nSudan\n1980\n272.85401\n\n\nSudan\n1981\n283.54555\n\n\nSudan\n1982\n290.50226\n\n\nSudan\n1983\n286.87924\n\n\nSudan\n1984\n264.16766\n\n\nSudan\n1985\n240.60681\n\n\nSudan\n1986\n247.17101\n\n\nSudan\n1987\n275.73097\n\n\nSudan\n1988\n268.71665\n\n\nSudan\n1989\n286.17458\n\n\nSudan\n1990\n264.20469\n\n\nSudan\n1991\n277.08647\n\n\nSudan\n1992\n287.83001\n\n\nSudan\n1993\n293.19749\n\n\nSudan\n1994\n288.46939\n\n\nSudan\n1995\n297.91654\n\n\nSudan\n1996\n307.51152\n\n\nSudan\n1997\n331.38426\n\n\nSudan\n1998\n337.00084\n\n\nSudan\n1999\n338.92989\n\n\nSudan\n2000\n358.52920\n\n\nSudan\n2001\n371.77672\n\n\nSudan\n2002\n382.80494\n\n\nSudan\n2003\n400.89533\n\n\nSudan\n2004\n411.73054\n\n\nSudan\n2005\n427.45344\n\n\nSudan\n2006\n464.12887\n\n\nSudan\n2007\n498.57016\n\n\nSudan\n2008\n519.28266\n\n\nSudan\n2009\n536.56902\n\n\nSudan\n2010\n549.85700\n\n\nSudan\n2011\n561.84272\n\n\nSuriname\n1975\n2489.74780\n\n\nSuriname\n1976\n2416.74414\n\n\nSuriname\n1977\n2665.99854\n\n\nSuriname\n1978\n2859.73206\n\n\nSuriname\n1979\n2684.42452\n\n\nSuriname\n1980\n2536.23370\n\n\nSuriname\n1981\n2532.36337\n\n\nSuriname\n1982\n2477.32599\n\n\nSuriname\n1983\n2391.11579\n\n\nSuriname\n1984\n2283.22445\n\n\nSuriname\n1985\n2223.25966\n\n\nSuriname\n1986\n2121.69056\n\n\nSuriname\n1987\n1808.21326\n\n\nSuriname\n1988\n1927.81618\n\n\nSuriname\n1989\n2093.26764\n\n\nSuriname\n1990\n2049.59823\n\n\nSuriname\n1991\n2075.38403\n\n\nSuriname\n1992\n2042.45718\n\n\nSuriname\n1993\n1869.14761\n\n\nSuriname\n1994\n1904.52900\n\n\nSuriname\n1995\n1899.80310\n\n\nSuriname\n1996\n1897.92624\n\n\nSuriname\n1997\n1979.64318\n\n\nSuriname\n1998\n1983.02765\n\n\nSuriname\n1999\n1938.93548\n\n\nSuriname\n2000\n1911.04632\n\n\nSuriname\n2001\n1970.20538\n\n\nSuriname\n2002\n2036.51092\n\n\nSuriname\n2003\n2129.19340\n\n\nSuriname\n2004\n2284.29338\n\n\nSuriname\n2005\n2359.38409\n\n\nSuriname\n2006\n2422.81852\n\n\nSuriname\n2007\n2520.58674\n\n\nSuriname\n2008\n2599.89924\n\n\nSuriname\n2009\n2653.54919\n\n\nSuriname\n2010\n2737.33444\n\n\nSwaziland\n1970\n576.75207\n\n\nSwaziland\n1971\n637.60035\n\n\nSwaziland\n1972\n652.79171\n\n\nSwaziland\n1973\n690.71392\n\n\nSwaziland\n1974\n708.61362\n\n\nSwaziland\n1975\n782.94895\n\n\nSwaziland\n1976\n743.10270\n\n\nSwaziland\n1977\n727.56242\n\n\nSwaziland\n1978\n714.55732\n\n\nSwaziland\n1979\n714.36195\n\n\nSwaziland\n1980\n779.25244\n\n\nSwaziland\n1981\n867.52262\n\n\nSwaziland\n1982\n852.93515\n\n\nSwaziland\n1983\n838.04958\n\n\nSwaziland\n1984\n861.21019\n\n\nSwaziland\n1985\n861.86971\n\n\nSwaziland\n1986\n928.96801\n\n\nSwaziland\n1987\n1019.36633\n\n\nSwaziland\n1988\n1040.30912\n\n\nSwaziland\n1989\n1128.91525\n\n\nSwaziland\n1990\n1320.35317\n\n\nSwaziland\n1991\n1306.47386\n\n\nSwaziland\n1992\n1317.89708\n\n\nSwaziland\n1993\n1332.04656\n\n\nSwaziland\n1994\n1338.05017\n\n\nSwaziland\n1995\n1374.69088\n\n\nSwaziland\n1996\n1397.00226\n\n\nSwaziland\n1997\n1408.60095\n\n\nSwaziland\n1998\n1443.39055\n\n\nSwaziland\n1999\n1484.03862\n\n\nSwaziland\n2000\n1508.18366\n\n\nSwaziland\n2001\n1523.65080\n\n\nSwaziland\n2002\n1548.70019\n\n\nSwaziland\n2003\n1581.32038\n\n\nSwaziland\n2004\n1625.15597\n\n\nSwaziland\n2005\n1663.01050\n\n\nSwaziland\n2006\n1715.68461\n\n\nSwaziland\n2007\n1773.45659\n\n\nSwaziland\n2008\n1794.77906\n\n\nSwaziland\n2009\n1795.97974\n\n\nSwaziland\n2010\n1811.07776\n\n\nSwaziland\n2011\n1813.54491\n\n\nSweden\n1960\n11360.40555\n\n\nSweden\n1961\n11949.42691\n\n\nSweden\n1962\n12389.80300\n\n\nSweden\n1963\n12976.57219\n\n\nSweden\n1964\n13758.58574\n\n\nSweden\n1965\n14150.45858\n\n\nSweden\n1966\n14309.50716\n\n\nSweden\n1967\n14678.04613\n\n\nSweden\n1968\n15126.81892\n\n\nSweden\n1969\n15773.38235\n\n\nSweden\n1970\n16570.99947\n\n\nSweden\n1971\n16612.83045\n\n\nSweden\n1972\n16942.91432\n\n\nSweden\n1973\n17584.86983\n\n\nSweden\n1974\n18094.68770\n\n\nSweden\n1975\n18483.04552\n\n\nSweden\n1976\n18610.80738\n\n\nSweden\n1977\n18248.80351\n\n\nSweden\n1978\n18514.45750\n\n\nSweden\n1979\n19183.50474\n\n\nSweden\n1980\n19470.05511\n\n\nSweden\n1981\n19407.38509\n\n\nSweden\n1982\n19627.70865\n\n\nSweden\n1983\n19973.87646\n\n\nSweden\n1984\n20808.10527\n\n\nSweden\n1985\n21228.64280\n\n\nSweden\n1986\n21785.28900\n\n\nSweden\n1987\n22463.34910\n\n\nSweden\n1988\n22956.56184\n\n\nSweden\n1989\n23437.66378\n\n\nSweden\n1990\n23492.24960\n\n\nSweden\n1991\n23071.03438\n\n\nSweden\n1992\n22660.07708\n\n\nSweden\n1993\n22065.24441\n\n\nSweden\n1994\n22788.10617\n\n\nSweden\n1995\n23561.66995\n\n\nSweden\n1996\n23903.46322\n\n\nSweden\n1997\n24536.81457\n\n\nSweden\n1998\n25554.38629\n\n\nSweden\n1999\n26724.34561\n\n\nSweden\n2000\n27869.37760\n\n\nSweden\n2001\n28145.51174\n\n\nSweden\n2002\n28750.76384\n\n\nSweden\n2003\n29313.02109\n\n\nSweden\n2004\n30434.45290\n\n\nSweden\n2005\n31271.10358\n\n\nSweden\n2006\n32431.94040\n\n\nSweden\n2007\n33259.26285\n\n\nSweden\n2008\n32798.73425\n\n\nSweden\n2009\n30885.45914\n\n\nSweden\n2010\n32631.19271\n\n\nSweden\n2011\n33630.24604\n\n\nSwitzerland\n1980\n29182.93218\n\n\nSwitzerland\n1981\n29488.48571\n\n\nSwitzerland\n1982\n28932.81148\n\n\nSwitzerland\n1983\n28993.12919\n\n\nSwitzerland\n1984\n29758.31714\n\n\nSwitzerland\n1985\n30715.62587\n\n\nSwitzerland\n1986\n31124.12705\n\n\nSwitzerland\n1987\n31419.62061\n\n\nSwitzerland\n1988\n32211.81831\n\n\nSwitzerland\n1989\n33336.21789\n\n\nSwitzerland\n1990\n34208.11542\n\n\nSwitzerland\n1991\n33473.84170\n\n\nSwitzerland\n1992\n33092.33395\n\n\nSwitzerland\n1993\n32751.01216\n\n\nSwitzerland\n1994\n32903.52918\n\n\nSwitzerland\n1995\n32841.55514\n\n\nSwitzerland\n1996\n32855.30719\n\n\nSwitzerland\n1997\n33445.61911\n\n\nSwitzerland\n1998\n34258.14203\n\n\nSwitzerland\n1999\n34571.14850\n\n\nSwitzerland\n2000\n35639.47886\n\n\nSwitzerland\n2001\n35854.93258\n\n\nSwitzerland\n2002\n35650.68774\n\n\nSwitzerland\n2003\n35394.62871\n\n\nSwitzerland\n2004\n36003.23264\n\n\nSwitzerland\n2005\n36737.40672\n\n\nSwitzerland\n2006\n37877.18249\n\n\nSwitzerland\n2007\n38983.87532\n\n\nSwitzerland\n2008\n39324.73112\n\n\nSwitzerland\n2009\n38084.23568\n\n\nSwitzerland\n2010\n38826.84298\n\n\nSwitzerland\n2011\n39170.41371\n\n\nSyria\n1960\n482.49688\n\n\nSyria\n1961\n517.75412\n\n\nSyria\n1962\n624.12156\n\n\nSyria\n1963\n551.80754\n\n\nSyria\n1964\n583.44845\n\n\nSyria\n1965\n577.36763\n\n\nSyria\n1966\n515.59512\n\n\nSyria\n1967\n539.69089\n\n\nSyria\n1968\n541.19725\n\n\nSyria\n1969\n621.31993\n\n\nSyria\n1970\n577.67638\n\n\nSyria\n1971\n613.66940\n\n\nSyria\n1972\n741.48522\n\n\nSyria\n1973\n655.39724\n\n\nSyria\n1974\n786.44778\n\n\nSyria\n1975\n908.99581\n\n\nSyria\n1976\n975.79096\n\n\nSyria\n1977\n932.30450\n\n\nSyria\n1978\n980.97264\n\n\nSyria\n1979\n983.38762\n\n\nSyria\n1980\n1064.55368\n\n\nSyria\n1981\n1126.17302\n\n\nSyria\n1982\n1110.56235\n\n\nSyria\n1983\n1087.81751\n\n\nSyria\n1984\n1008.40395\n\n\nSyria\n1985\n1035.09963\n\n\nSyria\n1986\n952.81159\n\n\nSyria\n1987\n941.21418\n\n\nSyria\n1988\n1034.20013\n\n\nSyria\n1989\n913.87859\n\n\nSyria\n1990\n955.14317\n\n\nSyria\n1991\n1000.88211\n\n\nSyria\n1992\n1103.25563\n\n\nSyria\n1993\n1127.98070\n\n\nSyria\n1994\n1181.72060\n\n\nSyria\n1995\n1217.76635\n\n\nSyria\n1996\n1240.90044\n\n\nSyria\n1997\n1234.52893\n\n\nSyria\n1998\n1283.06708\n\n\nSyria\n1999\n1207.87042\n\n\nSyria\n2000\n1208.73464\n\n\nSyria\n2001\n1235.55850\n\n\nSyria\n2002\n1269.27183\n\n\nSyria\n2003\n1238.39958\n\n\nSyria\n2004\n1286.00502\n\n\nSyria\n2005\n1330.32141\n\n\nSyria\n2006\n1368.93049\n\n\nSyria\n2007\n1418.05115\n\n\nSyria\n2008\n1452.25769\n\n\nSyria\n2009\n1508.63803\n\n\nSyria\n2010\n1525.80929\n\n\nTajikistan\n1985\n457.07332\n\n\nTajikistan\n1986\n458.35039\n\n\nTajikistan\n1987\n438.49556\n\n\nTajikistan\n1988\n484.00792\n\n\nTajikistan\n1989\n439.65769\n\n\nTajikistan\n1990\n426.07051\n\n\nTajikistan\n1991\n387.37299\n\n\nTajikistan\n1992\n270.03967\n\n\nTajikistan\n1993\n222.17435\n\n\nTajikistan\n1994\n172.27313\n\n\nTajikistan\n1995\n148.72787\n\n\nTajikistan\n1996\n122.09485\n\n\nTajikistan\n1997\n122.39836\n\n\nTajikistan\n1998\n127.12154\n\n\nTajikistan\n1999\n130.17099\n\n\nTajikistan\n2000\n139.40988\n\n\nTajikistan\n2001\n152.15615\n\n\nTajikistan\n2002\n164.59682\n\n\nTajikistan\n2003\n179.92827\n\n\nTajikistan\n2004\n197.30694\n\n\nTajikistan\n2005\n215.89707\n\n\nTajikistan\n2006\n180.08927\n\n\nTajikistan\n2007\n216.54458\n\n\nTajikistan\n2008\n259.13765\n\n\nTajikistan\n2009\n265.59342\n\n\nTajikistan\n2010\n278.94033\n\n\nTajikistan\n2011\n295.36013\n\n\nTanzania\n1988\n291.99732\n\n\nTanzania\n1989\n293.77993\n\n\nTanzania\n1990\n304.64055\n\n\nTanzania\n1991\n300.90491\n\n\nTanzania\n1992\n292.69043\n\n\nTanzania\n1993\n286.53949\n\n\nTanzania\n1994\n281.91887\n\n\nTanzania\n1995\n283.42592\n\n\nTanzania\n1996\n288.24521\n\n\nTanzania\n1997\n290.78198\n\n\nTanzania\n1998\n294.17197\n\n\nTanzania\n1999\n300.91892\n\n\nTanzania\n2000\n307.98615\n\n\nTanzania\n2001\n318.26279\n\n\nTanzania\n2002\n332.37112\n\n\nTanzania\n2003\n346.07243\n\n\nTanzania\n2004\n363.34747\n\n\nTanzania\n2005\n379.68413\n\n\nTanzania\n2006\n394.22416\n\n\nTanzania\n2007\n410.68362\n\n\nTanzania\n2008\n428.75916\n\n\nTanzania\n2009\n441.50661\n\n\nTanzania\n2010\n458.78646\n\n\nTanzania\n2011\n473.88124\n\n\nThailand\n1960\n320.90651\n\n\nThailand\n1961\n328.05744\n\n\nThailand\n1962\n342.29366\n\n\nThailand\n1963\n358.59400\n\n\nThailand\n1964\n371.59169\n\n\nThailand\n1965\n389.93892\n\n\nThailand\n1966\n420.36684\n\n\nThailand\n1967\n443.03455\n\n\nThailand\n1968\n464.90661\n\n\nThailand\n1969\n480.88334\n\n\nThailand\n1970\n520.23595\n\n\nThailand\n1971\n530.06563\n\n\nThailand\n1972\n537.12576\n\n\nThailand\n1973\n575.76973\n\n\nThailand\n1974\n585.47241\n\n\nThailand\n1975\n598.92447\n\n\nThailand\n1976\n638.89863\n\n\nThailand\n1977\n685.53051\n\n\nThailand\n1978\n739.31344\n\n\nThailand\n1979\n762.30741\n\n\nThailand\n1980\n785.02342\n\n\nThailand\n1981\n814.62106\n\n\nThailand\n1982\n841.51329\n\n\nThailand\n1983\n871.62256\n\n\nThailand\n1984\n904.41301\n\n\nThailand\n1985\n928.67397\n\n\nThailand\n1986\n961.48725\n\n\nThailand\n1987\n1033.08454\n\n\nThailand\n1988\n1149.18400\n\n\nThailand\n1989\n1268.32882\n\n\nThailand\n1990\n1390.52021\n\n\nThailand\n1991\n1492.79858\n\n\nThailand\n1992\n1599.21165\n\n\nThailand\n1993\n1718.02693\n\n\nThailand\n1994\n1858.00396\n\n\nThailand\n1995\n2011.82540\n\n\nThailand\n1996\n2109.05461\n\n\nThailand\n1997\n2057.06691\n\n\nThailand\n1998\n1819.17618\n\n\nThailand\n1999\n1877.30520\n\n\nThailand\n2000\n1943.23793\n\n\nThailand\n2001\n1962.24144\n\n\nThailand\n2002\n2042.79830\n\n\nThailand\n2003\n2164.30142\n\n\nThailand\n2004\n2277.56234\n\n\nThailand\n2005\n2359.64461\n\n\nThailand\n2006\n2458.51743\n\n\nThailand\n2007\n2562.72216\n\n\nThailand\n2008\n2608.24726\n\n\nThailand\n2009\n2531.23373\n\n\nThailand\n2010\n2712.50802\n\n\nThailand\n2011\n2699.12324\n\n\nTimor-Leste\n1999\n337.87312\n\n\nTimor-Leste\n2000\n380.92301\n\n\nTimor-Leste\n2001\n324.80100\n\n\nTimor-Leste\n2002\n319.33377\n\n\nTimor-Leste\n2003\n304.83484\n\n\nTimor-Leste\n2004\n303.58595\n\n\nTimor-Leste\n2005\n319.49142\n\n\nTimor-Leste\n2006\n299.88568\n\n\nTimor-Leste\n2007\n324.63643\n\n\nTimor-Leste\n2008\n361.13866\n\n\nTimor-Leste\n2009\n395.44428\n\n\nTimor-Leste\n2010\n420.60325\n\n\nTimor-Leste\n2011\n451.98260\n\n\nTogo\n1960\n176.56990\n\n\nTogo\n1961\n196.07513\n\n\nTogo\n1962\n201.69262\n\n\nTogo\n1963\n209.46304\n\n\nTogo\n1964\n235.19695\n\n\nTogo\n1965\n264.35310\n\n\nTogo\n1966\n278.76221\n\n\nTogo\n1967\n281.38161\n\n\nTogo\n1968\n281.98048\n\n\nTogo\n1969\n299.02320\n\n\nTogo\n1970\n295.08141\n\n\nTogo\n1971\n285.80625\n\n\nTogo\n1972\n299.34393\n\n\nTogo\n1973\n303.55080\n\n\nTogo\n1974\n311.31360\n\n\nTogo\n1975\n312.11966\n\n\nTogo\n1976\n299.36705\n\n\nTogo\n1977\n313.72329\n\n\nTogo\n1978\n341.02901\n\n\nTogo\n1979\n315.77899\n\n\nTogo\n1980\n352.04107\n\n\nTogo\n1981\n329.94938\n\n\nTogo\n1982\n307.49398\n\n\nTogo\n1983\n280.69134\n\n\nTogo\n1984\n285.98725\n\n\nTogo\n1985\n291.76798\n\n\nTogo\n1986\n286.82232\n\n\nTogo\n1987\n279.24995\n\n\nTogo\n1988\n288.93993\n\n\nTogo\n1989\n292.41240\n\n\nTogo\n1990\n284.42841\n\n\nTogo\n1991\n276.23967\n\n\nTogo\n1992\n260.05033\n\n\nTogo\n1993\n216.54943\n\n\nTogo\n1994\n243.66142\n\n\nTogo\n1995\n256.17380\n\n\nTogo\n1996\n270.64537\n\n\nTogo\n1997\n299.54934\n\n\nTogo\n1998\n282.85153\n\n\nTogo\n1999\n280.48582\n\n\nTogo\n2000\n270.00088\n\n\nTogo\n2001\n258.45689\n\n\nTogo\n2002\n249.74753\n\n\nTogo\n2003\n256.07108\n\n\nTogo\n2004\n255.66143\n\n\nTogo\n2005\n252.95035\n\n\nTogo\n2006\n257.40072\n\n\nTogo\n2007\n257.57179\n\n\nTogo\n2008\n258.03860\n\n\nTogo\n2009\n261.05404\n\n\nTogo\n2010\n265.92205\n\n\nTogo\n2011\n273.10751\n\n\nTonga\n1981\n1294.40562\n\n\nTonga\n1982\n1352.44782\n\n\nTonga\n1983\n1377.89093\n\n\nTonga\n1984\n1400.90288\n\n\nTonga\n1985\n1490.95308\n\n\nTonga\n1986\n1519.38742\n\n\nTonga\n1987\n1560.55703\n\n\nTonga\n1988\n1526.62852\n\n\nTonga\n1989\n1528.31915\n\n\nTonga\n1990\n1493.74332\n\n\nTonga\n1991\n1586.98089\n\n\nTonga\n1992\n1588.96247\n\n\nTonga\n1993\n1646.37439\n\n\nTonga\n1994\n1725.20291\n\n\nTonga\n1995\n1785.21065\n\n\nTonga\n1996\n1780.02921\n\n\nTonga\n1997\n1771.15074\n\n\nTonga\n1998\n1811.51858\n\n\nTonga\n1999\n1872.85520\n\n\nTonga\n2000\n1926.00458\n\n\nTonga\n2001\n1984.41292\n\n\nTonga\n2002\n2040.24819\n\n\nTonga\n2003\n2071.57331\n\n\nTonga\n2004\n2078.98027\n\n\nTonga\n2005\n2115.02707\n\n\nTonga\n2006\n2067.53571\n\n\nTonga\n2007\n1969.00405\n\n\nTonga\n2008\n1980.44925\n\n\nTonga\n2009\n2025.50905\n\n\nTonga\n2010\n2069.22616\n\n\nTonga\n2011\n2162.15189\n\n\nTrinidad and Tobago\n1960\n3342.31241\n\n\nTrinidad and Tobago\n1961\n3744.35620\n\n\nTrinidad and Tobago\n1962\n3799.69674\n\n\nTrinidad and Tobago\n1963\n3975.40219\n\n\nTrinidad and Tobago\n1964\n4238.36114\n\n\nTrinidad and Tobago\n1965\n4217.63507\n\n\nTrinidad and Tobago\n1966\n4323.83511\n\n\nTrinidad and Tobago\n1967\n4337.56426\n\n\nTrinidad and Tobago\n1968\n4483.75670\n\n\nTrinidad and Tobago\n1969\n4532.10072\n\n\nTrinidad and Tobago\n1970\n4629.75863\n\n\nTrinidad and Tobago\n1971\n4629.97580\n\n\nTrinidad and Tobago\n1972\n4858.50009\n\n\nTrinidad and Tobago\n1973\n4905.13354\n\n\nTrinidad and Tobago\n1974\n5054.70744\n\n\nTrinidad and Tobago\n1975\n5083.81166\n\n\nTrinidad and Tobago\n1976\n5352.20171\n\n\nTrinidad and Tobago\n1977\n5770.83906\n\n\nTrinidad and Tobago\n1978\n6264.43666\n\n\nTrinidad and Tobago\n1979\n6394.87453\n\n\nTrinidad and Tobago\n1980\n6947.65572\n\n\nTrinidad and Tobago\n1981\n7140.71218\n\n\nTrinidad and Tobago\n1982\n7293.32448\n\n\nTrinidad and Tobago\n1983\n6502.53881\n\n\nTrinidad and Tobago\n1984\n6028.60687\n\n\nTrinidad and Tobago\n1985\n5702.01109\n\n\nTrinidad and Tobago\n1986\n5457.89117\n\n\nTrinidad and Tobago\n1987\n5168.99244\n\n\nTrinidad and Tobago\n1988\n4937.16123\n\n\nTrinidad and Tobago\n1989\n4869.14458\n\n\nTrinidad and Tobago\n1990\n4911.86387\n\n\nTrinidad and Tobago\n1991\n5007.58834\n\n\nTrinidad and Tobago\n1992\n4887.09890\n\n\nTrinidad and Tobago\n1993\n4778.18869\n\n\nTrinidad and Tobago\n1994\n4911.22671\n\n\nTrinidad and Tobago\n1995\n5071.28556\n\n\nTrinidad and Tobago\n1996\n5240.65586\n\n\nTrinidad and Tobago\n1997\n5354.49782\n\n\nTrinidad and Tobago\n1998\n5743.76619\n\n\nTrinidad and Tobago\n1999\n5970.32724\n\n\nTrinidad and Tobago\n2000\n6311.10655\n\n\nTrinidad and Tobago\n2001\n6544.68383\n\n\nTrinidad and Tobago\n2002\n7044.08974\n\n\nTrinidad and Tobago\n2003\n8033.09612\n\n\nTrinidad and Tobago\n2004\n8637.57330\n\n\nTrinidad and Tobago\n2005\n9102.42202\n\n\nTrinidad and Tobago\n2006\n10264.67428\n\n\nTrinidad and Tobago\n2007\n10714.74422\n\n\nTrinidad and Tobago\n2008\n10959.66371\n\n\nTrinidad and Tobago\n2009\n10555.89147\n\n\nTrinidad and Tobago\n2010\n10515.63403\n\n\nTrinidad and Tobago\n2011\n10047.90319\n\n\nTunisia\n1961\n691.45176\n\n\nTunisia\n1962\n712.48394\n\n\nTunisia\n1963\n782.71691\n\n\nTunisia\n1964\n804.04150\n\n\nTunisia\n1965\n807.29933\n\n\nTunisia\n1966\n817.29208\n\n\nTunisia\n1967\n801.41857\n\n\nTunisia\n1968\n866.86999\n\n\nTunisia\n1969\n890.32602\n\n\nTunisia\n1970\n914.49007\n\n\nTunisia\n1971\n995.30755\n\n\nTunisia\n1972\n1152.82819\n\n\nTunisia\n1973\n1125.22150\n\n\nTunisia\n1974\n1192.83517\n\n\nTunisia\n1975\n1251.47952\n\n\nTunisia\n1976\n1319.17826\n\n\nTunisia\n1977\n1330.04621\n\n\nTunisia\n1978\n1378.30055\n\n\nTunisia\n1979\n1429.55789\n\n\nTunisia\n1980\n1495.12759\n\n\nTunisia\n1981\n1536.37276\n\n\nTunisia\n1982\n1489.25785\n\n\nTunisia\n1983\n1519.25742\n\n\nTunisia\n1984\n1575.24925\n\n\nTunisia\n1985\n1614.30151\n\n\nTunisia\n1986\n1541.62353\n\n\nTunisia\n1987\n1603.81011\n\n\nTunisia\n1988\n1569.65811\n\n\nTunisia\n1989\n1576.79246\n\n\nTunisia\n1990\n1661.29315\n\n\nTunisia\n1991\n1692.16798\n\n\nTunisia\n1992\n1787.36026\n\n\nTunisia\n1993\n1791.16198\n\n\nTunisia\n1994\n1814.96877\n\n\nTunisia\n1995\n1828.18145\n\n\nTunisia\n1996\n1930.42070\n\n\nTunisia\n1997\n2007.68857\n\n\nTunisia\n1998\n2080.66449\n\n\nTunisia\n1999\n2177.26883\n\n\nTunisia\n2000\n2245.33506\n\n\nTunisia\n2001\n2327.43762\n\n\nTunisia\n2002\n2340.80591\n\n\nTunisia\n2003\n2454.33508\n\n\nTunisia\n2004\n2576.34391\n\n\nTunisia\n2005\n2653.59347\n\n\nTunisia\n2006\n2776.25706\n\n\nTunisia\n2007\n2921.99358\n\n\nTunisia\n2008\n3023.39805\n\n\nTunisia\n2009\n3083.98651\n\n\nTunisia\n2010\n3143.53387\n\n\nTunisia\n2011\n3050.88600\n\n\nTurkey\n1960\n1582.56869\n\n\nTurkey\n1961\n1560.20947\n\n\nTurkey\n1962\n1606.04685\n\n\nTurkey\n1963\n1708.96032\n\n\nTurkey\n1964\n1759.62240\n\n\nTurkey\n1965\n1767.92453\n\n\nTurkey\n1966\n1922.77894\n\n\nTurkey\n1967\n1970.69387\n\n\nTurkey\n1968\n2060.04573\n\n\nTurkey\n1969\n2099.08704\n\n\nTurkey\n1970\n2120.94904\n\n\nTurkey\n1971\n2190.73634\n\n\nTurkey\n1972\n2302.07124\n\n\nTurkey\n1973\n2325.04821\n\n\nTurkey\n1974\n2401.52629\n\n\nTurkey\n1975\n2518.19407\n\n\nTurkey\n1976\n2722.41998\n\n\nTurkey\n1977\n2755.91419\n\n\nTurkey\n1978\n2738.35266\n\n\nTurkey\n1979\n2662.81461\n\n\nTurkey\n1980\n2540.36316\n\n\nTurkey\n1981\n2603.25266\n\n\nTurkey\n1982\n2633.68531\n\n\nTurkey\n1983\n2701.01417\n\n\nTurkey\n1984\n2818.23960\n\n\nTurkey\n1985\n2875.98471\n\n\nTurkey\n1986\n3016.94940\n\n\nTurkey\n1987\n3241.65165\n\n\nTurkey\n1988\n3257.91828\n\n\nTurkey\n1989\n3210.73014\n\n\nTurkey\n1990\n3448.00141\n\n\nTurkey\n1991\n3413.64447\n\n\nTurkey\n1992\n3525.16356\n\n\nTurkey\n1993\n3731.73200\n\n\nTurkey\n1994\n3499.09116\n\n\nTurkey\n1995\n3713.62264\n\n\nTurkey\n1996\n3923.86090\n\n\nTurkey\n1997\n4154.44294\n\n\nTurkey\n1998\n4184.28783\n\n\nTurkey\n1999\n3982.20391\n\n\nTurkey\n2000\n4189.47806\n\n\nTurkey\n2001\n3894.65092\n\n\nTurkey\n2002\n4077.77237\n\n\nTurkey\n2003\n4234.67918\n\n\nTurkey\n2004\n4569.41421\n\n\nTurkey\n2005\n4887.37038\n\n\nTurkey\n2006\n5154.66110\n\n\nTurkey\n2007\n5323.68299\n\n\nTurkey\n2008\n5288.41609\n\n\nTurkey\n2009\n4968.57902\n\n\nTurkey\n2010\n5356.00044\n\n\nTurkey\n2011\n5741.41040\n\n\nTurkmenistan\n1987\n756.76242\n\n\nTurkmenistan\n1988\n819.35241\n\n\nTurkmenistan\n1989\n764.38950\n\n\nTurkmenistan\n1990\n1007.37370\n\n\nTurkmenistan\n1991\n934.39901\n\n\nTurkmenistan\n1992\n772.11949\n\n\nTurkmenistan\n1993\n762.11686\n\n\nTurkmenistan\n1994\n614.32913\n\n\nTurkmenistan\n1995\n557.50580\n\n\nTurkmenistan\n1996\n583.75232\n\n\nTurkmenistan\n1997\n509.05749\n\n\nTurkmenistan\n1998\n537.84464\n\n\nTurkmenistan\n1999\n618.96560\n\n\nTurkmenistan\n2000\n645.27710\n\n\nTurkmenistan\n2001\n665.86375\n\n\nTurkmenistan\n2002\n660.55868\n\n\nTurkmenistan\n2003\n675.13306\n\n\nTurkmenistan\n2004\n701.51808\n\n\nTurkmenistan\n2005\n784.46905\n\n\nTurkmenistan\n2006\n860.71168\n\n\nTurkmenistan\n2007\n944.66924\n\n\nTurkmenistan\n2008\n1070.41593\n\n\nTurkmenistan\n2009\n1121.73612\n\n\nTurkmenistan\n2010\n1209.79468\n\n\nTurkmenistan\n2011\n1370.42776\n\n\nTuvalu\n1990\n1128.07758\n\n\nTuvalu\n1991\n1162.08202\n\n\nTuvalu\n1992\n1188.32207\n\n\nTuvalu\n1993\n1231.08483\n\n\nTuvalu\n1994\n1351.77163\n\n\nTuvalu\n1995\n1278.69626\n\n\nTuvalu\n1996\n1197.66638\n\n\nTuvalu\n1997\n1312.65270\n\n\nTuvalu\n1998\n1510.28124\n\n\nTuvalu\n1999\n1480.32236\n\n\nTuvalu\n2000\n1458.94963\n\n\nTuvalu\n2001\n1474.64829\n\n\nTuvalu\n2002\n1581.09093\n\n\nTuvalu\n2003\n1518.82500\n\n\nTuvalu\n2004\n1489.58840\n\n\nTuvalu\n2005\n1426.19134\n\n\nTuvalu\n2006\n1457.39472\n\n\nTuvalu\n2007\n1540.39023\n\n\nTuvalu\n2008\n1643.08891\n\n\nTuvalu\n2009\n1611.69497\n\n\nTuvalu\n2010\n1559.98370\n\n\nTuvalu\n2011\n1576.21187\n\n\nUganda\n1982\n187.80275\n\n\nUganda\n1983\n192.59717\n\n\nUganda\n1984\n185.91594\n\n\nUganda\n1985\n173.86579\n\n\nUganda\n1986\n168.54732\n\n\nUganda\n1987\n169.01235\n\n\nUganda\n1988\n176.42107\n\n\nUganda\n1989\n180.98983\n\n\nUganda\n1990\n186.05187\n\n\nUganda\n1991\n189.79100\n\n\nUganda\n1992\n189.84149\n\n\nUganda\n1993\n199.06479\n\n\nUganda\n1994\n205.18864\n\n\nUganda\n1995\n221.82840\n\n\nUganda\n1996\n234.71339\n\n\nUganda\n1997\n239.44051\n\n\nUganda\n1998\n243.84862\n\n\nUganda\n1999\n255.70444\n\n\nUganda\n2000\n255.78061\n\n\nUganda\n2001\n260.73633\n\n\nUganda\n2002\n274.60054\n\n\nUganda\n2003\n283.07830\n\n\nUganda\n2004\n292.68051\n\n\nUganda\n2005\n301.25830\n\n\nUganda\n2006\n323.07740\n\n\nUganda\n2007\n339.06208\n\n\nUganda\n2008\n356.83518\n\n\nUganda\n2009\n370.53613\n\n\nUganda\n2010\n379.99149\n\n\nUganda\n2011\n392.70880\n\n\nUkraine\n1987\n1405.89926\n\n\nUkraine\n1988\n1435.59984\n\n\nUkraine\n1989\n1483.94382\n\n\nUkraine\n1990\n1386.59701\n\n\nUkraine\n1991\n1267.32618\n\n\nUkraine\n1992\n1141.12104\n\n\nUkraine\n1993\n978.24101\n\n\nUkraine\n1994\n757.63936\n\n\nUkraine\n1995\n670.48569\n\n\nUkraine\n1996\n608.81599\n\n\nUkraine\n1997\n595.95678\n\n\nUkraine\n1998\n589.88214\n\n\nUkraine\n1999\n594.27955\n\n\nUkraine\n2000\n635.70897\n\n\nUkraine\n2001\n701.20949\n\n\nUkraine\n2002\n745.03900\n\n\nUkraine\n2003\n821.71337\n\n\nUkraine\n2004\n928.15529\n\n\nUkraine\n2005\n960.22621\n\n\nUkraine\n2006\n1037.31226\n\n\nUkraine\n2007\n1125.95971\n\n\nUkraine\n2008\n1158.11056\n\n\nUkraine\n2009\n991.10026\n\n\nUkraine\n2010\n1036.83751\n\n\nUkraine\n2011\n1094.68115\n\n\nUnited Arab Emirates\n1975\n56037.96028\n\n\nUnited Arab Emirates\n1976\n55799.56212\n\n\nUnited Arab Emirates\n1977\n58384.48049\n\n\nUnited Arab Emirates\n1978\n50264.17041\n\n\nUnited Arab Emirates\n1979\n54290.68681\n\n\nUnited Arab Emirates\n1980\n61374.75455\n\n\nUnited Arab Emirates\n1981\n59768.83021\n\n\nUnited Arab Emirates\n1982\n52612.68886\n\n\nUnited Arab Emirates\n1983\n47658.01257\n\n\nUnited Arab Emirates\n1984\n47169.81578\n\n\nUnited Arab Emirates\n1985\n43114.96994\n\n\nUnited Arab Emirates\n1986\n34618.24214\n\n\nUnited Arab Emirates\n1987\n33712.77422\n\n\nUnited Arab Emirates\n1988\n30904.90995\n\n\nUnited Arab Emirates\n1989\n32727.85574\n\n\nUnited Arab Emirates\n1990\n36597.66911\n\n\nUnited Arab Emirates\n1991\n34957.04687\n\n\nUnited Arab Emirates\n1992\n34255.84156\n\n\nUnited Arab Emirates\n1993\n32928.56677\n\n\nUnited Arab Emirates\n1994\n33445.28092\n\n\nUnited Arab Emirates\n1995\n33926.34050\n\n\nUnited Arab Emirates\n1996\n34073.53549\n\n\nUnited Arab Emirates\n1997\n34921.61401\n\n\nUnited Arab Emirates\n1998\n33194.71587\n\n\nUnited Arab Emirates\n1999\n32489.23039\n\n\nUnited Arab Emirates\n2000\n34395.14913\n\n\nUnited Arab Emirates\n2001\n33592.36688\n\n\nUnited Arab Emirates\n2002\n33297.06929\n\n\nUnited Arab Emirates\n2003\n34669.32855\n\n\nUnited Arab Emirates\n2004\n35316.33901\n\n\nUnited Arab Emirates\n2005\n33288.11139\n\n\nUnited Arab Emirates\n2006\n31929.79817\n\n\nUnited Arab Emirates\n2007\n28427.09848\n\n\nUnited Arab Emirates\n2008\n25573.73175\n\n\nUnited Arab Emirates\n2009\n22507.00157\n\n\nUnited Arab Emirates\n2010\n21088.26438\n\n\nUnited Arab Emirates\n2011\n21058.43643\n\n\nUnited Kingdom\n1960\n10025.34940\n\n\nUnited Kingdom\n1961\n10205.45454\n\n\nUnited Kingdom\n1962\n10253.59370\n\n\nUnited Kingdom\n1963\n10579.77809\n\n\nUnited Kingdom\n1964\n11040.78967\n\n\nUnited Kingdom\n1965\n11276.03650\n\n\nUnited Kingdom\n1966\n11443.85302\n\n\nUnited Kingdom\n1967\n11645.43154\n\n\nUnited Kingdom\n1968\n12050.66964\n\n\nUnited Kingdom\n1969\n12246.97375\n\n\nUnited Kingdom\n1970\n13042.15454\n\n\nUnited Kingdom\n1971\n13248.14066\n\n\nUnited Kingdom\n1972\n13682.09848\n\n\nUnited Kingdom\n1973\n14654.40265\n\n\nUnited Kingdom\n1974\n14399.17009\n\n\nUnited Kingdom\n1975\n14302.76811\n\n\nUnited Kingdom\n1976\n14707.52972\n\n\nUnited Kingdom\n1977\n15060.07028\n\n\nUnited Kingdom\n1978\n15571.78611\n\n\nUnited Kingdom\n1979\n15985.15790\n\n\nUnited Kingdom\n1980\n15618.14742\n\n\nUnited Kingdom\n1981\n15406.08218\n\n\nUnited Kingdom\n1982\n15734.18065\n\n\nUnited Kingdom\n1983\n16298.88277\n\n\nUnited Kingdom\n1984\n16707.75076\n\n\nUnited Kingdom\n1985\n17269.88771\n\n\nUnited Kingdom\n1986\n17921.25699\n\n\nUnited Kingdom\n1987\n18699.03581\n\n\nUnited Kingdom\n1988\n19596.42538\n\n\nUnited Kingdom\n1989\n19991.39969\n\n\nUnited Kingdom\n1990\n20087.04974\n\n\nUnited Kingdom\n1991\n19746.19063\n\n\nUnited Kingdom\n1992\n19721.73864\n\n\nUnited Kingdom\n1993\n20111.73115\n\n\nUnited Kingdom\n1994\n20919.22294\n\n\nUnited Kingdom\n1995\n21498.79017\n\n\nUnited Kingdom\n1996\n22061.54938\n\n\nUnited Kingdom\n1997\n22732.53847\n\n\nUnited Kingdom\n1998\n23463.03804\n\n\nUnited Kingdom\n1999\n24125.47891\n\n\nUnited Kingdom\n2000\n25057.61353\n\n\nUnited Kingdom\n2001\n25686.65028\n\n\nUnited Kingdom\n2002\n26214.96735\n\n\nUnited Kingdom\n2003\n27105.18271\n\n\nUnited Kingdom\n2004\n27752.91158\n\n\nUnited Kingdom\n2005\n28354.03958\n\n\nUnited Kingdom\n2006\n28913.09629\n\n\nUnited Kingdom\n2007\n29771.30335\n\n\nUnited Kingdom\n2008\n29287.76042\n\n\nUnited Kingdom\n2009\n27933.77767\n\n\nUnited Kingdom\n2010\n28244.33694\n\n\nUnited Kingdom\n2011\n28272.40661\n\n\nUnited States\n1960\n13723.23778\n\n\nUnited States\n1961\n13808.06402\n\n\nUnited States\n1962\n14426.75771\n\n\nUnited States\n1963\n14846.32706\n\n\nUnited States\n1964\n15490.73916\n\n\nUnited States\n1965\n16277.37401\n\n\nUnited States\n1966\n17136.34957\n\n\nUnited States\n1967\n17374.53648\n\n\nUnited States\n1968\n18027.61393\n\n\nUnited States\n1969\n18405.71964\n\n\nUnited States\n1970\n18228.92179\n\n\nUnited States\n1971\n18622.33742\n\n\nUnited States\n1972\n19441.37991\n\n\nUnited States\n1973\n20394.98709\n\n\nUnited States\n1974\n20104.54175\n\n\nUnited States\n1975\n19868.26519\n\n\nUnited States\n1976\n20746.79894\n\n\nUnited States\n1977\n21491.82018\n\n\nUnited States\n1978\n22461.78537\n\n\nUnited States\n1979\n22914.55504\n\n\nUnited States\n1980\n22630.52015\n\n\nUnited States\n1981\n22978.98471\n\n\nUnited States\n1982\n22310.23937\n\n\nUnited States\n1983\n23105.52073\n\n\nUnited States\n1984\n24554.40288\n\n\nUnited States\n1985\n25338.55564\n\n\nUnited States\n1986\n25965.88342\n\n\nUnited States\n1987\n26549.87602\n\n\nUnited States\n1988\n27388.61802\n\n\nUnited States\n1989\n28098.40072\n\n\nUnited States\n1990\n28298.44695\n\n\nUnited States\n1991\n27849.88084\n\n\nUnited States\n1992\n28401.46518\n\n\nUnited States\n1993\n28834.55935\n\n\nUnited States\n1994\n29655.06941\n\n\nUnited States\n1995\n30050.98673\n\n\nUnited States\n1996\n30827.98820\n\n\nUnited States\n1997\n31831.46159\n\n\nUnited States\n1998\n32847.35197\n\n\nUnited States\n1999\n34053.35541\n\n\nUnited States\n2000\n35081.92308\n\n\nUnited States\n2001\n35116.21508\n\n\nUnited States\n2002\n35427.90996\n\n\nUnited States\n2003\n36021.31408\n\n\nUnited States\n2004\n36931.39383\n\n\nUnited States\n2005\n37718.00537\n\n\nUnited States\n2006\n38349.39879\n\n\nUnited States\n2007\n38710.88544\n\n\nUnited States\n2008\n38208.76118\n\n\nUnited States\n2009\n36539.22823\n\n\nUnited States\n2010\n37329.61591\n\n\nUnited States\n2011\n37691.02733\n\n\nUruguay\n1960\n4182.11844\n\n\nUruguay\n1961\n4231.30037\n\n\nUruguay\n1962\n4113.19148\n\n\nUruguay\n1963\n4071.37568\n\n\nUruguay\n1964\n4123.41339\n\n\nUruguay\n1965\n4121.47253\n\n\nUruguay\n1966\n4203.50806\n\n\nUruguay\n1967\n4009.71521\n\n\nUruguay\n1968\n4049.12641\n\n\nUruguay\n1969\n4255.51046\n\n\nUruguay\n1970\n4331.94544\n\n\nUruguay\n1971\n4308.06716\n\n\nUruguay\n1972\n4246.46119\n\n\nUruguay\n1973\n4257.19208\n\n\nUruguay\n1974\n4377.41303\n\n\nUruguay\n1975\n4634.34476\n\n\nUruguay\n1976\n4797.71954\n\n\nUruguay\n1977\n4840.95443\n\n\nUruguay\n1978\n5067.76398\n\n\nUruguay\n1979\n5344.76745\n\n\nUruguay\n1980\n5618.84808\n\n\nUruguay\n1981\n5669.09231\n\n\nUruguay\n1982\n5082.62370\n\n\nUruguay\n1983\n4531.00801\n\n\nUruguay\n1984\n4450.49613\n\n\nUruguay\n1985\n4486.83472\n\n\nUruguay\n1986\n4851.20855\n\n\nUruguay\n1987\n5206.31287\n\n\nUruguay\n1988\n5250.33356\n\n\nUruguay\n1989\n5274.00940\n\n\nUruguay\n1990\n5253.94290\n\n\nUruguay\n1991\n5401.61702\n\n\nUruguay\n1992\n5788.05762\n\n\nUruguay\n1993\n5898.52906\n\n\nUruguay\n1994\n6281.93635\n\n\nUruguay\n1995\n6146.71103\n\n\nUruguay\n1996\n6465.20661\n\n\nUruguay\n1997\n6973.36359\n\n\nUruguay\n1998\n7249.30977\n\n\nUruguay\n1999\n7076.21688\n\n\nUruguay\n2000\n6914.36258\n\n\nUruguay\n2001\n6633.47517\n\n\nUruguay\n2002\n6120.25944\n\n\nUruguay\n2003\n6178.85860\n\n\nUruguay\n2004\n6491.61055\n\n\nUruguay\n2005\n6967.47128\n\n\nUruguay\n2006\n7233.90619\n\n\nUruguay\n2007\n7685.22450\n\n\nUruguay\n2008\n8211.66178\n\n\nUruguay\n2009\n8382.82902\n\n\nUruguay\n2010\n9096.79446\n\n\nUruguay\n2011\n9581.05659\n\n\nUzbekistan\n1987\n643.35572\n\n\nUzbekistan\n1988\n685.43977\n\n\nUzbekistan\n1989\n689.95474\n\n\nUzbekistan\n1990\n684.72220\n\n\nUzbekistan\n1991\n666.97965\n\n\nUzbekistan\n1992\n578.55411\n\n\nUzbekistan\n1993\n552.54721\n\n\nUzbekistan\n1994\n513.63200\n\n\nUzbekistan\n1995\n499.89473\n\n\nUzbekistan\n1996\n498.76138\n\n\nUzbekistan\n1997\n514.89784\n\n\nUzbekistan\n1998\n528.46406\n\n\nUzbekistan\n1999\n545.27749\n\n\nUzbekistan\n2000\n558.22114\n\n\nUzbekistan\n2001\n574.35028\n\n\nUzbekistan\n2002\n590.05859\n\n\nUzbekistan\n2003\n607.72537\n\n\nUzbekistan\n2004\n647.01199\n\n\nUzbekistan\n2005\n684.29691\n\n\nUzbekistan\n2006\n725.34695\n\n\nUzbekistan\n2007\n783.02750\n\n\nUzbekistan\n2008\n839.91097\n\n\nUzbekistan\n2009\n892.74891\n\n\nUzbekistan\n2010\n941.67185\n\n\nUzbekistan\n2011\n992.76137\n\n\nVanuatu\n1979\n1242.08925\n\n\nVanuatu\n1980\n1071.43019\n\n\nVanuatu\n1981\n1088.71924\n\n\nVanuatu\n1982\n1176.88890\n\n\nVanuatu\n1983\n1309.34842\n\n\nVanuatu\n1984\n1402.74438\n\n\nVanuatu\n1985\n1384.59512\n\n\nVanuatu\n1986\n1351.47084\n\n\nVanuatu\n1987\n1282.58928\n\n\nVanuatu\n1988\n1231.33959\n\n\nVanuatu\n1989\n1219.72943\n\n\nVanuatu\n1990\n1327.35658\n\n\nVanuatu\n1991\n1331.30346\n\n\nVanuatu\n1992\n1326.41217\n\n\nVanuatu\n1993\n1298.02374\n\n\nVanuatu\n1994\n1377.68347\n\n\nVanuatu\n1995\n1358.46581\n\n\nVanuatu\n1996\n1361.61264\n\n\nVanuatu\n1997\n1402.88511\n\n\nVanuatu\n1998\n1438.35551\n\n\nVanuatu\n1999\n1416.94943\n\n\nVanuatu\n2000\n1469.76179\n\n\nVanuatu\n2001\n1385.03693\n\n\nVanuatu\n2002\n1290.01903\n\n\nVanuatu\n2003\n1301.98158\n\n\nVanuatu\n2004\n1323.37231\n\n\nVanuatu\n2005\n1355.82172\n\n\nVanuatu\n2006\n1418.07528\n\n\nVanuatu\n2007\n1472.19553\n\n\nVanuatu\n2008\n1524.25360\n\n\nVanuatu\n2009\n1538.08444\n\n\nVanuatu\n2010\n1522.38404\n\n\nVanuatu\n2011\n1522.52830\n\n\nVenezuela\n1960\n5437.46923\n\n\nVenezuela\n1961\n5403.43589\n\n\nVenezuela\n1962\n5650.18873\n\n\nVenezuela\n1963\n5660.02014\n\n\nVenezuela\n1964\n6070.14508\n\n\nVenezuela\n1965\n6108.34843\n\n\nVenezuela\n1966\n5996.79696\n\n\nVenezuela\n1967\n5969.10302\n\n\nVenezuela\n1968\n6203.92466\n\n\nVenezuela\n1969\n6048.18308\n\n\nVenezuela\n1970\n6302.71318\n\n\nVenezuela\n1971\n6184.43977\n\n\nVenezuela\n1972\n6054.36283\n\n\nVenezuela\n1973\n6265.70231\n\n\nVenezuela\n1974\n6177.16063\n\n\nVenezuela\n1975\n6137.76327\n\n\nVenezuela\n1976\n6383.12896\n\n\nVenezuela\n1977\n6548.06058\n\n\nVenezuela\n1978\n6472.93669\n\n\nVenezuela\n1979\n6308.07522\n\n\nVenezuela\n1980\n5841.28064\n\n\nVenezuela\n1981\n5620.49966\n\n\nVenezuela\n1982\n5340.34692\n\n\nVenezuela\n1983\n4991.68875\n\n\nVenezuela\n1984\n4923.35732\n\n\nVenezuela\n1985\n4800.95749\n\n\nVenezuela\n1986\n4981.42296\n\n\nVenezuela\n1987\n5030.86486\n\n\nVenezuela\n1988\n5194.64442\n\n\nVenezuela\n1989\n4637.39197\n\n\nVenezuela\n1990\n4823.48713\n\n\nVenezuela\n1991\n5175.66661\n\n\nVenezuela\n1992\n5366.57773\n\n\nVenezuela\n1993\n5263.64505\n\n\nVenezuela\n1994\n5029.95034\n\n\nVenezuela\n1995\n5119.60256\n\n\nVenezuela\n1996\n5005.25007\n\n\nVenezuela\n1997\n5218.15403\n\n\nVenezuela\n1998\n5132.01585\n\n\nVenezuela\n1999\n4733.81783\n\n\nVenezuela\n2000\n4818.70818\n\n\nVenezuela\n2001\n4890.92999\n\n\nVenezuela\n2002\n4377.38213\n\n\nVenezuela\n2003\n3966.49973\n\n\nVenezuela\n2004\n4610.48904\n\n\nVenezuela\n2005\n5000.07620\n\n\nVenezuela\n2006\n5401.42172\n\n\nVenezuela\n2007\n5777.62857\n\n\nVenezuela\n2008\n5984.14495\n\n\nVenezuela\n2009\n5700.88406\n\n\nVenezuela\n2010\n5528.36311\n\n\nVenezuela\n2011\n5671.91220\n\n\nWest Bank and Gaza\n1994\n1228.83437\n\n\nWest Bank and Gaza\n1995\n1245.62616\n\n\nWest Bank and Gaza\n1996\n1225.61808\n\n\nWest Bank and Gaza\n1997\n1320.21038\n\n\nWest Bank and Gaza\n1998\n1428.82284\n\n\nWest Bank and Gaza\n1999\n1501.02077\n\n\nWest Bank and Gaza\n2000\n1369.19303\n\n\nWest Bank and Gaza\n2001\n1126.81876\n\n\nWest Bank and Gaza\n2002\n978.56145\n\n\nWest Bank and Gaza\n2003\n1002.89506\n\n\nWest Bank and Gaza\n2004\n1029.05197\n\n\nWest Bank and Gaza\n2005\n1056.29649\n\n\nVietnam\n1984\n198.52911\n\n\nVietnam\n1985\n201.96672\n\n\nVietnam\n1986\n202.84164\n\n\nVietnam\n1987\n205.00311\n\n\nVietnam\n1988\n210.37542\n\n\nVietnam\n1989\n220.59965\n\n\nVietnam\n1990\n227.48787\n\n\nVietnam\n1991\n236.65422\n\n\nVietnam\n1992\n252.57904\n\n\nVietnam\n1993\n268.28765\n\n\nVietnam\n1994\n287.13654\n\n\nVietnam\n1995\n309.41493\n\n\nVietnam\n1996\n332.94435\n\n\nVietnam\n1997\n354.51246\n\n\nVietnam\n1998\n369.23672\n\n\nVietnam\n1999\n381.10280\n\n\nVietnam\n2000\n401.54780\n\n\nVietnam\n2001\n423.82862\n\n\nVietnam\n2002\n448.60020\n\n\nVietnam\n2003\n475.96927\n\n\nVietnam\n2004\n506.93895\n\n\nVietnam\n2005\n543.35652\n\n\nVietnam\n2006\n581.57828\n\n\nVietnam\n2007\n623.95748\n\n\nVietnam\n2008\n656.31073\n\n\nVietnam\n2009\n683.99645\n\n\nVietnam\n2010\n722.81005\n\n\nVietnam\n2011\n757.40093\n\n\nYemen\n1990\n464.83704\n\n\nYemen\n1991\n470.76545\n\n\nYemen\n1992\n484.30267\n\n\nYemen\n1993\n479.07827\n\n\nYemen\n1994\n487.96587\n\n\nYemen\n1995\n494.59779\n\n\nYemen\n1996\n499.00768\n\n\nYemen\n1997\n508.38980\n\n\nYemen\n1998\n523.13316\n\n\nYemen\n1999\n527.37410\n\n\nYemen\n2000\n543.71388\n\n\nYemen\n2001\n547.62237\n\n\nYemen\n2002\n552.07152\n\n\nYemen\n2003\n555.42073\n\n\nYemen\n2004\n559.99917\n\n\nYemen\n2005\n573.48571\n\n\nYemen\n2006\n573.89571\n\n\nYemen\n2007\n575.24937\n\n\nYemen\n2008\n578.32327\n\n\nYemen\n2009\n582.61750\n\n\nYemen\n2010\n608.59606\n\n\nYemen\n2011\n528.39867\n\n\nZambia\n1960\n547.44288\n\n\nZambia\n1961\n538.94744\n\n\nZambia\n1962\n510.14505\n\n\nZambia\n1963\n511.20921\n\n\nZambia\n1964\n556.47895\n\n\nZambia\n1965\n629.57157\n\n\nZambia\n1966\n576.54013\n\n\nZambia\n1967\n603.30513\n\n\nZambia\n1968\n592.07379\n\n\nZambia\n1969\n571.03193\n\n\nZambia\n1970\n579.26754\n\n\nZambia\n1971\n559.82889\n\n\nZambia\n1972\n591.04755\n\n\nZambia\n1973\n565.74338\n\n\nZambia\n1974\n581.98265\n\n\nZambia\n1975\n549.93578\n\n\nZambia\n1976\n565.03419\n\n\nZambia\n1977\n521.78592\n\n\nZambia\n1978\n507.79808\n\n\nZambia\n1979\n476.61481\n\n\nZambia\n1980\n475.26738\n\n\nZambia\n1981\n488.31789\n\n\nZambia\n1982\n459.33812\n\n\nZambia\n1983\n435.95199\n\n\nZambia\n1984\n420.81478\n\n\nZambia\n1985\n414.38989\n\n\nZambia\n1986\n404.68026\n\n\nZambia\n1987\n403.05689\n\n\nZambia\n1988\n415.84925\n\n\nZambia\n1989\n399.98395\n\n\nZambia\n1990\n387.29281\n\n\nZambia\n1991\n377.17558\n\n\nZambia\n1992\n361.48323\n\n\nZambia\n1993\n376.67557\n\n\nZambia\n1994\n335.70719\n\n\nZambia\n1995\n317.93842\n\n\nZambia\n1996\n331.02251\n\n\nZambia\n1997\n332.64093\n\n\nZambia\n1998\n317.55869\n\n\nZambia\n1999\n316.03589\n\n\nZambia\n2000\n318.92682\n\n\nZambia\n2001\n326.58879\n\n\nZambia\n2002\n329.73518\n\n\nZambia\n2003\n338.88476\n\n\nZambia\n2004\n349.08547\n\n\nZambia\n2005\n359.07124\n\n\nZambia\n2006\n372.08368\n\n\nZambia\n2007\n385.12282\n\n\nZambia\n2008\n396.34438\n\n\nZambia\n2009\n410.31627\n\n\nZambia\n2010\n434.65980\n\n\nZambia\n2011\n443.92063\n\n\nZimbabwe\n1960\n389.01577\n\n\nZimbabwe\n1961\n400.33145\n\n\nZimbabwe\n1962\n392.93573\n\n\nZimbabwe\n1963\n403.90800\n\n\nZimbabwe\n1964\n386.48941\n\n\nZimbabwe\n1965\n392.39642\n\n\nZimbabwe\n1966\n385.62566\n\n\nZimbabwe\n1967\n404.58133\n\n\nZimbabwe\n1968\n399.39078\n\n\nZimbabwe\n1969\n434.56628\n\n\nZimbabwe\n1970\n515.23639\n\n\nZimbabwe\n1971\n542.52943\n\n\nZimbabwe\n1972\n567.90357\n\n\nZimbabwe\n1973\n562.99353\n\n\nZimbabwe\n1974\n580.22346\n\n\nZimbabwe\n1975\n550.33854\n\n\nZimbabwe\n1976\n535.20726\n\n\nZimbabwe\n1977\n482.79952\n\n\nZimbabwe\n1978\n454.77182\n\n\nZimbabwe\n1979\n454.12071\n\n\nZimbabwe\n1980\n501.25560\n\n\nZimbabwe\n1981\n543.03341\n\n\nZimbabwe\n1982\n535.87948\n\n\nZimbabwe\n1983\n523.14505\n\n\nZimbabwe\n1984\n493.36483\n\n\nZimbabwe\n1985\n507.83311\n\n\nZimbabwe\n1986\n499.65315\n\n\nZimbabwe\n1987\n487.66658\n\n\nZimbabwe\n1988\n506.98927\n\n\nZimbabwe\n1989\n516.72851\n\n\nZimbabwe\n1990\n536.99771\n\n\nZimbabwe\n1991\n551.99220\n\n\nZimbabwe\n1992\n490.47750\n\n\nZimbabwe\n1993\n485.10617\n\n\nZimbabwe\n1994\n519.49693\n\n\nZimbabwe\n1995\n510.75192\n\n\nZimbabwe\n1996\n553.87629\n\n\nZimbabwe\n1997\n559.53709\n\n\nZimbabwe\n1998\n567.45431\n\n\nZimbabwe\n1999\n556.30337\n\n\nZimbabwe\n2000\n534.79115\n\n\nZimbabwe\n2001\n539.66276\n\n\nZimbabwe\n2002\n490.38686\n\n\nZimbabwe\n2003\n406.87856\n\n\nZimbabwe\n2004\n383.70767\n\n\nZimbabwe\n2005\n362.57638\n\n\nZimbabwe\n2006\n351.17205\n\n\nZimbabwe\n2007\n339.65488\n\n\nZimbabwe\n2008\n280.30850\n\n\nZimbabwe\n2009\n296.54861\n\n\nZimbabwe\n2010\n322.55693\n\n\nZimbabwe\n2011\n347.74566"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#pivot_wider",
    "href": "slides/2025-09-15-pivotjoin.html#pivot_wider",
    "title": "Pivoting and Joining",
    "section": "pivot_wider()",
    "text": "pivot_wider()\npivot_wider() will be demonstrated using the paralympic_1500 dataset in the openintro R package.\n\nlibrary(openintro)\n\nparalympic_1500 |&gt; \n  gt::gt()\n\n\n\n\n\n\n\nyear\ncity\ncountry_of_games\ndivision\ntype\nname\ncountry_of_athlete\ntime\ntime_min\n\n\n\n\n1896\nAthens\nGreece\nMen\nOlympic\nEdwin Flack\nAustralia\n4:33.2\n4.553333\n\n\n1900\nParis\nFrance\nMen\nOlympic\nCharles Bennett\nGreat Britain\n4:6.2\n4.103333\n\n\n1904\nSt Louis\nUSA\nMen\nOlympic\nJim Lightbody\nUSA\n4:5.4\n4.090000\n\n\n1908\nLondon\nUnited Kingdom\nMen\nOlympic\nMel Sheppard\nUSA\n4:3.4\n4.056667\n\n\n1912\nStockholm\nSweden\nMen\nOlympic\nArnold Jackson\nGreat Britain\n3:56.8\n3.946667\n\n\n1920\nAntwerp\nBelgium\nMen\nOlympic\nAlbert Hill\nGreat Britain\n4:1.8\n4.030000\n\n\n1924\nParis\nFrance\nMen\nOlympic\nPaavo Nurmi\nFinland\n3:53.6\n3.893333\n\n\n1928\nAmsterdam\nNetherlands\nMen\nOlympic\nHarri Larva\nFinland\n3:53.2\n3.886667\n\n\n1932\nLos Angeles\nUSA\nMen\nOlympic\nLuigi Beccali\nItaly\n3:51.2\n3.853333\n\n\n1936\nBerlin\nGermany\nMen\nOlympic\nJack Lovelock\nNew Zealand\n3:47.8\n3.796667\n\n\n1948\nLondon\nUnited Kingdom\nMen\nOlympic\nHenry Eriksson\nSweden\n3:49.8\n3.830000\n\n\n1952\nHelsinki\nFinland\nMen\nOlympic\nJosy Barthel\nLuxembourg\n3:45.2\n3.753333\n\n\n1956\nMelbourne\nAustralia\nMen\nOlympic\nRon Delany\nIreland\n3:41.2\n3.686667\n\n\n1960\nRome\nItaly\nMen\nOlympic\nHerb Elliott\nAustralia\n3:35.6\n3.593333\n\n\n1964\nTokyo\nJapan\nMen\nOlympic\nPeter Snell\nNew Zealand\n3:38.1\n3.635000\n\n\n1968\nMexico City\nMexico\nMen\nOlympic\nKipchoge Keino\nKenya\n3:34.91\n3.581833\n\n\n1972\nMunich\nGermany\nMen\nOlympic\nPekka Vasala\nFinland\n3:36.3\n3.605000\n\n\n1972\nMunich\nGermany\nWomen\nOlympic\nLyudmila Bragina\nSoviet Union\n4:1.38\n4.023000\n\n\n1976\nMontreal\nCanada\nMen\nOlympic\nJohn Walker\nNew Zealand\n3:39.17\n3.652833\n\n\n1976\nMontreal\nCanada\nWomen\nOlympic\nTatyana Kazankina\nSoviet Union\n4:5.48\n4.091333\n\n\n1980\nMoscow\nSoviet Union\nMen\nOlympic\nSebastian Coe\nGreat Britain\n3:38.4\n3.640000\n\n\n1980\nMoscow\nSoviet Union\nWomen\nOlympic\nTatyana Kazankina\nSoviet Union\n3:56.6\n3.943333\n\n\n1984\nLos Angeles\nUSA\nMen\nOlympic\nSebastian Coe\nGreat Britain\n3:32.53\n3.542167\n\n\n1984\nNew York\nUSA\nMen\nT11\nRobert Matthews\nGreat Britain\n4:18.73\n4.312167\n\n\n1984\nNew York\nUSA\nMen\nT12\nSixten Berner\nSweden\n4:15.28\n4.254667\n\n\n1984\nNew York\nUSA\nMen\nT13\nJames Brown\nGreat Britain\n4:14.51\n4.241833\n\n\n1984\nLos Angeles\nUSA\nWomen\nOlympic\nGabriella Dorio\nItaly\n4:3.25\n4.054167\n\n\n1984\nNew York\nUSA\nWomen\nT11\nMargaret Heger\nAustria\n5:37.6\n5.626667\n\n\n1984\nNew York\nUSA\nWomen\nT12\nChristine Nicholas\nCanada\n5:34.12\n5.568667\n\n\n1984\nNew York\nUSA\nWomen\nT13\nHalina Wozniak\nPoland\n5:14.35\n5.239167\n\n\n1988\nSeoul\nS.Korea\nMen\nOlympic\nPeter Rono\nKenya\n3:35.96\n3.599333\n\n\n1988\nSeoul\nS.Korea\nMen\nT11\nRobert Matthews\nGreat Britain\n4:9.75\n4.162500\n\n\n1988\nSeoul\nS.Korea\nMen\nT12\nMariano Ruiz\nSpain\n4:5.53\n4.092167\n\n\n1988\nSeoul\nS.Korea\nMen\nT13\nAnthony Hamilton\nGreat Britain\n4:11.13\n4.185500\n\n\n1988\nSeoul\nS.Korea\nWomen\nOlympic\nPaula Ivan\nRomania\n3:53.96\n3.899333\n\n\n1988\nSeoul\nS.Korea\nWomen\nT11\nTamara Pankova\nUnified Team\n5:14.49\n5.241500\n\n\n1992\nBarcelona\nSpain\nMen\nOlympic\nFermín Cacho\nSpain\n3:40.12\n3.668667\n\n\n1992\nBarcelona\nSpain\nMen\nT11\nPaulo de Almeida Coelho\nPortugal\n4:17.82\n4.297000\n\n\n1992\nBarcelona\nSpain\nMen\nT12\nNeol Thatcher\nGreat Britain\n3:56.33\n3.938833\n\n\n1992\nBarcelona\nSpain\nMen\nT13\nChristophe Carayon\nFrance\n4:2.24\n4.037333\n\n\n1992\nBarcelona\nSpain\nWomen\nOlympic\nHassiba Boulmerka\nAlgeria\n3:55.3\n3.921667\n\n\n1992\nBarcelona\nSpain\nWomen\nT11\nPavla Valnickova\nCzechoslovakia\n5:8.03\n5.133833\n\n\n1992\nBarcelona\nSpain\nWomen\nT12\nRimma Batalova\nUnified Team\n4:47.86\n4.797667\n\n\n1996\nAtlanta\nUSA\nMen\nOlympic\nNoureddine Morceli\nAlgeria\n3:35.78\n3.596333\n\n\n1996\nAtlanta\nUSA\nMen\nT11\nPaulo de Almeida Coelho\nPortugal\n4:8.52\n4.142000\n\n\n1996\nAtlanta\nUSA\nMen\nT12\nJose Antonio Sanchez\nSpain\n4:1.19\n4.019833\n\n\n1996\nAtlanta\nUSA\nMen\nT13\nSaid Gomez\nPanama\n3:57.53\n3.958833\n\n\n1996\nAtlanta\nUSA\nWomen\nOlympic\nSvetlana Masterkova\nRussian Federation\n4:0.83\n4.013833\n\n\n1996\nAtlanta\nUSA\nWomen\nT12\nRima Batalova\nRussian Federation\n4:51.17\n4.852833\n\n\n2000\nSydney\nAustralia\nMen\nOlympic\nNoah Ngeny\nKenya\n3:32.07\n3.534500\n\n\n2000\nSydney\nAustralia\nMen\nT11\nPaulo de Almeida Coelho\nPortugal\n4:10.13\n4.168833\n\n\n2000\nSydney\nAustralia\nMen\nT12\nCesar Carlavilla\nSpain\n4:13.6\n4.226667\n\n\n2000\nSydney\nAustralia\nMen\nT13\nMaher Bouallegue\nTunisia\n3:56.97\n3.949500\n\n\n2000\nSydney\nAustralia\nWomen\nOlympic\nNouria Mérah-Benida\nAlgeria\n4:5.1\n4.085000\n\n\n2000\nSydney\nAustralia\nWomen\nT12\nRima Batalova\nRussian Federation\n4:49.64\n4.827333\n\n\n2004\nAthens\nGreece\nMen\nOlympic\nHicham El Guerrouj\nMorocco\n3:34.19\n3.569833\n\n\n2004\nAthens\nGreece\nMen\nT11\nMustapha El Aouzari\nMorocco\n4:8.58\n4.143000\n\n\n2004\nAthens\nGreece\nMen\nT13\nMaher Bouallegue\nTunisia\n3:51.09\n3.851500\n\n\n2004\nAthens\nGreece\nWomen\nOlympic\nKelly Holmes\nGreat Britain\n3:57.9\n3.965000\n\n\n2004\nAthens\nGreece\nWomen\nT12\nElena Pautova\nRussian Federation\n4:36.29\n4.604833\n\n\n2008\nBeijing\nChina\nMen\nOlympic\nAsbel Kiprop\nKenya\n3:33.11\n3.551833\n\n\n2008\nBeijing\nChina\nMen\nT11\nZhen Zhang\nChina\n4:10.05\n4.167500\n\n\n2008\nBeijing\nChina\nMen\nT13\nHenry Kirwa\nKenya\n4:6.11\n4.101833\n\n\n2008\nBeijing\nChina\nWomen\nOlympic\nNancy Langat\nKenya\n4:0.03\n4.000500\n\n\n2008\nBeijing\nChina\nWomen\nT13\nSomaya Bousaid\nTunisia\n4:14\n4.233333\n\n\n2012\nLondon\nUnited Kingdom\nMen\nOlympic\nTaoufik Makhloufi\nAlgeria\n3:34.08\n3.568000\n\n\n2012\nLondon\nUnited Kingdom\nMen\nT11\nSamwel Mushai Kimani\nKenya\n3:58.37\n3.972833\n\n\n2012\nLondon\nUnited Kingdom\nMen\nT13\nAbderrahim Zhiou\nTunisia\n3:48.31\n3.805167\n\n\n2012\nLondon\nUnited Kingdom\nWomen\nOlympic\nMaryam Yusuf Jamal\nBahrain\n4:10.74\n4.179000\n\n\n2012\nLondon\nUnited Kingdom\nWomen\nT12\nElena Pautova\nRussian Federation\n4:37.65\n4.627500\n\n\n2016\nRio de Janeiro\nBrazil\nMen\nOlympic\nMatthew Centrowitz, Jr.\nUSA\n3:50\n3.833333\n\n\n2016\nRio de Janeiro\nBrazil\nMen\nT11\nSamwel Mushai Kimani\nKenya\n4:3.25\n4.054167\n\n\n2016\nRio de Janeiro\nBrazil\nMen\nT13\nAbdellatif Baka\nAlgeria\n3:48.29\n3.804833\n\n\n2016\nRio de Janeiro\nBrazil\nWomen\nOlympic\nFaith Chepngetich Kipyegon\nKenya\n4:8.92\n4.148667\n\n\n2016\nRio de Janeiro\nBrazil\nWomen\nT11\nJin Zheng\nChina\n4:38.92\n4.648667\n\n\n2016\nRio de Janeiro\nBrazil\nWomen\nT13\nSomaya Bousaid\nTunisia\n4:21.45\n4.357500\n\n\n2020\nTokyo\nJapan\nMen\nOlympic\nJakob Ingebrigtsen\nNorway\n3:28.32\n3.472000\n\n\n2020\nTokyo\nJapan\nMen\nT11\nYeltsin Jacques\nBrazil\n3:57.6\n3.960000\n\n\n2020\nTokyo\nJapan\nMen\nT13\nAnton Kuliatin\nRussian Paralympic Committee\n3:54.04\n3.900667\n\n\n2020\nTokyo\nJapan\nWomen\nOlympic\nFaith Chepngetich Kipyegon\nKenya\n3:53.11\n3.885167\n\n\n2020\nTokyo\nJapan\nWomen\nT11\nMonica Olivia Rodriguez Saavedra\nMexico\n4:37.4\n4.623333\n\n\n2020\nTokyo\nJapan\nWomen\nT13\nTigist Gezahagn Menigstu\nEthiopia\n4:23.24\n4.387333"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#pivot_wider-paralympic_1500",
    "href": "slides/2025-09-15-pivotjoin.html#pivot_wider-paralympic_1500",
    "title": "Pivoting and Joining",
    "section": "pivot_wider() paralympic_1500",
    "text": "pivot_wider() paralympic_1500\n\nparalympic_1500 |&gt;  \n  filter(division == \"Men\" & type %in% c(\"Olympic\", \"T13\")) |&gt; \n  select(year, type, time_min) |&gt; \n  gt::gt()\n\n\n\n\n\n\n\nyear\ntype\ntime_min\n\n\n\n\n1896\nOlympic\n4.553333\n\n\n1900\nOlympic\n4.103333\n\n\n1904\nOlympic\n4.090000\n\n\n1908\nOlympic\n4.056667\n\n\n1912\nOlympic\n3.946667\n\n\n1920\nOlympic\n4.030000\n\n\n1924\nOlympic\n3.893333\n\n\n1928\nOlympic\n3.886667\n\n\n1932\nOlympic\n3.853333\n\n\n1936\nOlympic\n3.796667\n\n\n1948\nOlympic\n3.830000\n\n\n1952\nOlympic\n3.753333\n\n\n1956\nOlympic\n3.686667\n\n\n1960\nOlympic\n3.593333\n\n\n1964\nOlympic\n3.635000\n\n\n1968\nOlympic\n3.581833\n\n\n1972\nOlympic\n3.605000\n\n\n1976\nOlympic\n3.652833\n\n\n1980\nOlympic\n3.640000\n\n\n1984\nOlympic\n3.542167\n\n\n1984\nT13\n4.241833\n\n\n1988\nOlympic\n3.599333\n\n\n1988\nT13\n4.185500\n\n\n1992\nOlympic\n3.668667\n\n\n1992\nT13\n4.037333\n\n\n1996\nOlympic\n3.596333\n\n\n1996\nT13\n3.958833\n\n\n2000\nOlympic\n3.534500\n\n\n2000\nT13\n3.949500\n\n\n2004\nOlympic\n3.569833\n\n\n2004\nT13\n3.851500\n\n\n2008\nOlympic\n3.551833\n\n\n2008\nT13\n4.101833\n\n\n2012\nOlympic\n3.568000\n\n\n2012\nT13\n3.805167\n\n\n2016\nOlympic\n3.833333\n\n\n2016\nT13\n3.804833\n\n\n2020\nOlympic\n3.472000\n\n\n2020\nT13\n3.900667"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#pivot_wider-paralympic_1500-1",
    "href": "slides/2025-09-15-pivotjoin.html#pivot_wider-paralympic_1500-1",
    "title": "Pivoting and Joining",
    "section": "pivot_wider() paralympic_1500",
    "text": "pivot_wider() paralympic_1500\n\nparalympic_1500 |&gt;  \n  filter(division == \"Men\" & type %in% c(\"Olympic\", \"T13\")) |&gt; \n  select(year, type, time_min) |&gt;\n  pivot_wider(names_from = type, values_from = time_min) |&gt; \n  gt::gt()\n\n\n\n\n\n\n\nyear\nOlympic\nT13\n\n\n\n\n1896\n4.553333\nNA\n\n\n1900\n4.103333\nNA\n\n\n1904\n4.090000\nNA\n\n\n1908\n4.056667\nNA\n\n\n1912\n3.946667\nNA\n\n\n1920\n4.030000\nNA\n\n\n1924\n3.893333\nNA\n\n\n1928\n3.886667\nNA\n\n\n1932\n3.853333\nNA\n\n\n1936\n3.796667\nNA\n\n\n1948\n3.830000\nNA\n\n\n1952\n3.753333\nNA\n\n\n1956\n3.686667\nNA\n\n\n1960\n3.593333\nNA\n\n\n1964\n3.635000\nNA\n\n\n1968\n3.581833\nNA\n\n\n1972\n3.605000\nNA\n\n\n1976\n3.652833\nNA\n\n\n1980\n3.640000\nNA\n\n\n1984\n3.542167\n4.241833\n\n\n1988\n3.599333\n4.185500\n\n\n1992\n3.668667\n4.037333\n\n\n1996\n3.596333\n3.958833\n\n\n2000\n3.534500\n3.949500\n\n\n2004\n3.569833\n3.851500\n\n\n2008\n3.551833\n4.101833\n\n\n2012\n3.568000\n3.805167\n\n\n2016\n3.833333\n3.804833\n\n\n2020\n3.472000\n3.900667\n\n\n\n\n\n\n\n\nhttps://www.paralympic.org/news/remarkable-finish-1500m-rio-2016"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#pivot_wider-paralympic_1500-2",
    "href": "slides/2025-09-15-pivotjoin.html#pivot_wider-paralympic_1500-2",
    "title": "Pivoting and Joining",
    "section": "pivot_wider() paralympic_1500",
    "text": "pivot_wider() paralympic_1500\n\nparalympic_1500 |&gt;  \n  filter(division == \"Men\" & type %in% c(\"Olympic\", \"T13\")) |&gt; \n  select(year, type, time_min) |&gt;\n  pivot_wider(names_from = type, values_from = time_min) |&gt;\n  filter(!is.na(T13)) |&gt; \n  arrange(Olympic) |&gt; \n  gt::gt()\n\n\n\n\n\n\n\nyear\nOlympic\nT13\n\n\n\n\n2020\n3.472000\n3.900667\n\n\n2000\n3.534500\n3.949500\n\n\n1984\n3.542167\n4.241833\n\n\n2008\n3.551833\n4.101833\n\n\n2012\n3.568000\n3.805167\n\n\n2004\n3.569833\n3.851500\n\n\n1996\n3.596333\n3.958833\n\n\n1988\n3.599333\n4.185500\n\n\n1992\n3.668667\n4.037333\n\n\n2016\n3.833333\n3.804833"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#relational-data-multiple-data-frames",
    "href": "slides/2025-09-15-pivotjoin.html#relational-data-multiple-data-frames",
    "title": "Pivoting and Joining",
    "section": "Relational data (multiple data frames)",
    "text": "Relational data (multiple data frames)\n\nSee the Posit cheatsheets on wrangling & joining and pivoting."
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#joining-two-or-more-data-frames",
    "href": "slides/2025-09-15-pivotjoin.html#joining-two-or-more-data-frames",
    "title": "Pivoting and Joining",
    "section": "Joining two (or more) data frames:",
    "text": "Joining two (or more) data frames:\n\nleft_join returns all rows from the left table, and any rows with matching keys from the right table.\ninner_join returns only the rows in which the left table have matching keys in the right table (i.e., matching rows in both sets).\nfull_join returns all rows from both tables, join records from the left which have matching keys in the right table.\n\nGood practice: always specify the by argument when joining data frames."
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#women-in-science",
    "href": "slides/2025-09-15-pivotjoin.html#women-in-science",
    "title": "Pivoting and Joining",
    "section": "Women in Science",
    "text": "Women in Science\n10 women in science who changed the world (source: Discover Magazine)1\n\n\n\n\n\nname\nprofession\n\n\n\n\nAda Lovelace\nMathematician\n\n\nMarie Curie\nPhysicist and Chemist\n\n\nJanaki Ammal\nBotanist\n\n\nChien-Shiung Wu\nPhysicist\n\n\nKatherine Johnson\nMathematician\n\n\nRosalind Franklin\nChemist\n\n\nVera Rubin\nAstronomer\n\n\nGladys West\nMathematician\n\n\nFlossie Wong-Staal\nVirologist and Molecular Biologist\n\n\nJennifer Doudna\nBiochemist\n\n\n\n\n\nExample from DataScience in a Box"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#inputs",
    "href": "slides/2025-09-15-pivotjoin.html#inputs",
    "title": "Pivoting and Joining",
    "section": "Inputs",
    "text": "Inputs\n\nProfessionsDatesWorks\n\n\n\nprofessions\n\n# A tibble: 10 × 2\n   name               profession                        \n   &lt;chr&gt;              &lt;chr&gt;                             \n 1 Ada Lovelace       Mathematician                     \n 2 Marie Curie        Physicist and Chemist             \n 3 Janaki Ammal       Botanist                          \n 4 Chien-Shiung Wu    Physicist                         \n 5 Katherine Johnson  Mathematician                     \n 6 Rosalind Franklin  Chemist                           \n 7 Vera Rubin         Astronomer                        \n 8 Gladys West        Mathematician                     \n 9 Flossie Wong-Staal Virologist and Molecular Biologist\n10 Jennifer Doudna    Biochemist                        \n\n\n\n\n\ndates\n\n# A tibble: 8 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Rosalind Franklin        1920       1958\n5 Vera Rubin               1928       2016\n6 Gladys West              1930         NA\n7 Flossie Wong-Staal       1947       2020\n8 Jennifer Doudna          1964         NA\n\n\n\n\n\nworks\n\n# A tibble: 9 × 2\n  name               known_for                                        \n  &lt;chr&gt;              &lt;chr&gt;                                            \n1 Ada Lovelace       first computer algorithm                         \n2 Marie Curie        theory of radioactivity,  discovery of elements …\n3 Janaki Ammal       hybrid species, biodiversity protection          \n4 Chien-Shiung Wu    confim and refine theory of radioactive beta dec…\n5 Katherine Johnson  calculations of orbital mechanics critical to se…\n6 Vera Rubin         existence of dark matter                         \n7 Gladys West        mathematical modeling of the shape of the Earth …\n8 Flossie Wong-Staal first scientist to clone HIV and create a map of…\n9 Jennifer Doudna    one of the primary developers of CRISPR, a groun…"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#desired-output",
    "href": "slides/2025-09-15-pivotjoin.html#desired-output",
    "title": "Pivoting and Joining",
    "section": "Desired output",
    "text": "Desired output\nWe’d like to put together the data to look like:\n\n\n# A tibble: 10 × 5\n   name               profession       birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                 &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician            NA         NA first co…\n 2 Marie Curie        Physicist and C…         NA         NA theory o…\n 3 Janaki Ammal       Botanist               1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist              1912       1997 confim a…\n 5 Katherine Johnson  Mathematician          1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer             1928       2016 existenc…\n 8 Gladys West        Mathematician          1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist             1964         NA one of t…"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#inputs-reminder",
    "href": "slides/2025-09-15-pivotjoin.html#inputs-reminder",
    "title": "Pivoting and Joining",
    "section": "Inputs, reminder",
    "text": "Inputs, reminder\n\n\n\nnrow(professions)\n\n[1] 10\n\nnrow(dates)\n\n[1] 8\n\nnrow(works)\n\n[1] 9\n\n\n\n\nnames(professions)\n\n[1] \"name\"       \"profession\"\n\nnames(dates)\n\n[1] \"name\"       \"birth_year\" \"death_year\"\n\nnames(works)\n\n[1] \"name\"      \"known_for\""
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#setup",
    "href": "slides/2025-09-15-pivotjoin.html#setup",
    "title": "Pivoting and Joining",
    "section": "Setup",
    "text": "Setup\nFor the next few slides…\n\n\n\nx\n\n# A tibble: 3 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n\n\n\n\ny\n\n# A tibble: 3 × 2\n     id value_y\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 y1     \n2     2 y2     \n3     4 y4"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#left_join",
    "href": "slides/2025-09-15-pivotjoin.html#left_join",
    "title": "Pivoting and Joining",
    "section": "left_join()",
    "text": "left_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nleft_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#left_join-1",
    "href": "slides/2025-09-15-pivotjoin.html#left_join-1",
    "title": "Pivoting and Joining",
    "section": "left_join()",
    "text": "left_join()\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") \n\n# A tibble: 10 × 4\n   name               profession                 birth_year death_year\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt;\n 1 Ada Lovelace       Mathematician                      NA         NA\n 2 Marie Curie        Physicist and Chemist              NA         NA\n 3 Janaki Ammal       Botanist                         1897       1984\n 4 Chien-Shiung Wu    Physicist                        1912       1997\n 5 Katherine Johnson  Mathematician                    1918       2020\n 6 Rosalind Franklin  Chemist                          1920       1958\n 7 Vera Rubin         Astronomer                       1928       2016\n 8 Gladys West        Mathematician                    1930         NA\n 9 Flossie Wong-Staal Virologist and Molecular …       1947       2020\n10 Jennifer Doudna    Biochemist                       1964         NA"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#right_join",
    "href": "slides/2025-09-15-pivotjoin.html#right_join",
    "title": "Pivoting and Joining",
    "section": "right_join()",
    "text": "right_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nright_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#right_join-1",
    "href": "slides/2025-09-15-pivotjoin.html#right_join-1",
    "title": "Pivoting and Joining",
    "section": "right_join()",
    "text": "right_join()\n\nprofessions |&gt; \n  right_join(dates, by = \"name\") \n\n# A tibble: 8 × 4\n  name               profession                  birth_year death_year\n  &lt;chr&gt;              &lt;chr&gt;                            &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal       Botanist                          1897       1984\n2 Chien-Shiung Wu    Physicist                         1912       1997\n3 Katherine Johnson  Mathematician                     1918       2020\n4 Rosalind Franklin  Chemist                           1920       1958\n5 Vera Rubin         Astronomer                        1928       2016\n6 Gladys West        Mathematician                     1930         NA\n7 Flossie Wong-Staal Virologist and Molecular B…       1947       2020\n8 Jennifer Doudna    Biochemist                        1964         NA"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#full_join",
    "href": "slides/2025-09-15-pivotjoin.html#full_join",
    "title": "Pivoting and Joining",
    "section": "full_join()",
    "text": "full_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nfull_join(x, y, by = \"id\")\n\n# A tibble: 4 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;   \n4     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#full_join-1",
    "href": "slides/2025-09-15-pivotjoin.html#full_join-1",
    "title": "Pivoting and Joining",
    "section": "full_join()",
    "text": "full_join()\n\ndates |&gt; \n  full_join(works, by = \"name\") \n\n# A tibble: 10 × 4\n   name               birth_year death_year known_for                 \n   &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                     \n 1 Janaki Ammal             1897       1984 hybrid species, biodivers…\n 2 Chien-Shiung Wu          1912       1997 confim and refine theory …\n 3 Katherine Johnson        1918       2020 calculations of orbital m…\n 4 Rosalind Franklin        1920       1958 &lt;NA&gt;                      \n 5 Vera Rubin               1928       2016 existence of dark matter  \n 6 Gladys West              1930         NA mathematical modeling of …\n 7 Flossie Wong-Staal       1947       2020 first scientist to clone …\n 8 Jennifer Doudna          1964         NA one of the primary develo…\n 9 Ada Lovelace               NA         NA first computer algorithm  \n10 Marie Curie                NA         NA theory of radioactivity, …"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#inner_join",
    "href": "slides/2025-09-15-pivotjoin.html#inner_join",
    "title": "Pivoting and Joining",
    "section": "inner_join()",
    "text": "inner_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\ninner_join(x, y, by = \"id\")\n\n# A tibble: 2 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#inner_join-1",
    "href": "slides/2025-09-15-pivotjoin.html#inner_join-1",
    "title": "Pivoting and Joining",
    "section": "inner_join()",
    "text": "inner_join()\n\ndates |&gt; \n  inner_join(works, by = \"name\") \n\n# A tibble: 7 × 4\n  name               birth_year death_year known_for                  \n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                      \n1 Janaki Ammal             1897       1984 hybrid species, biodiversi…\n2 Chien-Shiung Wu          1912       1997 confim and refine theory o…\n3 Katherine Johnson        1918       2020 calculations of orbital me…\n4 Vera Rubin               1928       2016 existence of dark matter   \n5 Gladys West              1930         NA mathematical modeling of t…\n6 Flossie Wong-Staal       1947       2020 first scientist to clone H…\n7 Jennifer Doudna          1964         NA one of the primary develop…"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#semi_join",
    "href": "slides/2025-09-15-pivotjoin.html#semi_join",
    "title": "Pivoting and Joining",
    "section": "semi_join()",
    "text": "semi_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nsemi_join(x, y, by = \"id\")\n\n# A tibble: 2 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#semi_join-1",
    "href": "slides/2025-09-15-pivotjoin.html#semi_join-1",
    "title": "Pivoting and Joining",
    "section": "semi_join()",
    "text": "semi_join()\n\ndates |&gt; \n  semi_join(works, by = \"name\") \n\n# A tibble: 7 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Vera Rubin               1928       2016\n5 Gladys West              1930         NA\n6 Flossie Wong-Staal       1947       2020\n7 Jennifer Doudna          1964         NA"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#anti_join",
    "href": "slides/2025-09-15-pivotjoin.html#anti_join",
    "title": "Pivoting and Joining",
    "section": "anti_join()",
    "text": "anti_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nanti_join(x, y, by = \"id\")\n\n# A tibble: 1 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     3 x3"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#anti_join-1",
    "href": "slides/2025-09-15-pivotjoin.html#anti_join-1",
    "title": "Pivoting and Joining",
    "section": "anti_join()",
    "text": "anti_join()\n\ndates |&gt; \n  anti_join(works, by = \"name\") \n\n# A tibble: 1 × 3\n  name              birth_year death_year\n  &lt;chr&gt;                  &lt;dbl&gt;      &lt;dbl&gt;\n1 Rosalind Franklin       1920       1958"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#putting-it-all-together",
    "href": "slides/2025-09-15-pivotjoin.html#putting-it-all-together",
    "title": "Pivoting and Joining",
    "section": "Putting it all together",
    "text": "Putting it all together\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") |&gt; \n  left_join(works, by = \"name\")\n\n# A tibble: 10 × 5\n   name               profession       birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                 &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician            NA         NA first co…\n 2 Marie Curie        Physicist and C…         NA         NA theory o…\n 3 Janaki Ammal       Botanist               1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist              1912       1997 confim a…\n 5 Katherine Johnson  Mathematician          1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer             1928       2016 existenc…\n 8 Gladys West        Mathematician          1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist             1964         NA one of t…"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#practice-litf-and-gdp-from-gapminder.",
    "href": "slides/2025-09-15-pivotjoin.html#practice-litf-and-gdp-from-gapminder.",
    "title": "Pivoting and Joining",
    "section": "Practice litF and GDP from Gapminder.",
    "text": "Practice litF and GDP from Gapminder.\n\nOG dataleftrightinnerfull\n\n\n\n\n\nlitF\n\n# A tibble: 571 × 3\n   country     year  litRateF\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt;\n 1 Afghanistan 1979      4.99\n 2 Afghanistan 2011     13   \n 3 Albania     2001     98.3 \n 4 Albania     2008     94.7 \n 5 Albania     2011     95.7 \n 6 Algeria     1987     35.8 \n 7 Algeria     2002     60.1 \n 8 Algeria     2006     63.9 \n 9 Angola      2001     54.2 \n10 Angola      2011     58.6 \n# ℹ 561 more rows\n\n\n\n\nGDP\n\n# A tibble: 7,988 × 3\n   country year    gdp\n   &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;\n 1 Albania 1980  1061.\n 2 Albania 1981  1100.\n 3 Albania 1982  1111.\n 4 Albania 1983  1101.\n 5 Albania 1984  1065.\n 6 Albania 1985  1060.\n 7 Albania 1986  1092.\n 8 Albania 1987  1054.\n 9 Albania 1988  1014.\n10 Albania 1989  1092.\n# ℹ 7,978 more rows\n\n\n\n\n\n\nleft_join(litF, GDP, by=c(\"country\" = \"country\", \"year\" = \"year\"))\n\n# A tibble: 571 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 561 more rows\n\n\n\n\n\nright_join(litF, GDP, by=c(\"country\", \"year\"))\n\n# A tibble: 7,988 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 7,978 more rows\n\n\n\n\n\ninner_join(litF, GDP, by=c(\"country\", \"year\"))\n\n# A tibble: 505 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 495 more rows\n\n\n\n\n\nfull_join(litF, GDP, by=c(\"country\", \"year\"))\n\n# A tibble: 8,054 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 8,044 more rows"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#left",
    "href": "slides/2025-09-15-pivotjoin.html#left",
    "title": "Pivoting and Joining",
    "section": "left",
    "text": "left\n\nlitGDPleft &lt;- left_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPleft)\n\n[1] 571   4\n\nlitGDPleft\n\n# A tibble: 571 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 561 more rows"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#right",
    "href": "slides/2025-09-15-pivotjoin.html#right",
    "title": "Pivoting and Joining",
    "section": "right",
    "text": "right\n\nlitGDPright &lt;- right_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPright)\n\n[1] 7988    4\n\nlitGDPright\n\n# A tibble: 7,988 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 7,978 more rows"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#inner",
    "href": "slides/2025-09-15-pivotjoin.html#inner",
    "title": "Pivoting and Joining",
    "section": "inner",
    "text": "inner\n\nlitGDPinner &lt;- inner_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPinner)\n\n[1] 505   4\n\nlitGDPinner\n\n# A tibble: 505 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 495 more rows"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#full",
    "href": "slides/2025-09-15-pivotjoin.html#full",
    "title": "Pivoting and Joining",
    "section": "full",
    "text": "full\n\nlitGDPfull &lt;- full_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPfull)\n\n[1] 8054    4\n\nlitGDPfull\n\n# A tibble: 8,054 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 8,044 more rows"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#join-to-merge-two-datasets",
    "href": "slides/2025-09-15-pivotjoin.html#join-to-merge-two-datasets",
    "title": "Pivoting and Joining",
    "section": "join to merge two datasets",
    "text": "join to merge two datasets\n\nIf you ever need to understand which join is the right join for you, try to find an image that will lay out what the function is doing. I found this one that is quite good and is taken from the Statistics Globe blog."
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html",
    "href": "slides/2025-09-15-pivotjoin.html",
    "title": "Pivoting and Joining",
    "section": "",
    "text": "Pivoting\nJoining\n\n\n\n\n\n\n\n\nBased on https://www.effectivedatastorytelling.com/post/a-deeper-dive-into-lego-bricks-and-data-stories, original source: https://www.linkedin.com/learning/instructors/bill-shander"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#pivot_wider-paralympic_1500-3",
    "href": "slides/2025-09-15-pivotjoin.html#pivot_wider-paralympic_1500-3",
    "title": "Pivoting and Joining",
    "section": "pivot_wider() paralympic_1500",
    "text": "pivot_wider() paralympic_1500\n\nparalympic_1500 |&gt;  \n  filter(division == \"Men\" & type %in% c(\"Olympic\", \"T13\")) |&gt; \n  select(year, type, time_min) |&gt;\n  pivot_wider(names_from = type, values_from = time_min) |&gt; \n  mutate(mintime = pmin(Olympic, T13, na.rm = TRUE)) |&gt; \n  arrange(mintime) |&gt; \n  gt::gt()\n\n\n\n\n\n\n\nyear\nOlympic\nT13\nmintime\n\n\n\n\n2020\n3.472000\n3.900667\n3.472000\n\n\n2000\n3.534500\n3.949500\n3.534500\n\n\n1984\n3.542167\n4.241833\n3.542167\n\n\n2008\n3.551833\n4.101833\n3.551833\n\n\n2012\n3.568000\n3.805167\n3.568000\n\n\n2004\n3.569833\n3.851500\n3.569833\n\n\n1968\n3.581833\nNA\n3.581833\n\n\n1960\n3.593333\nNA\n3.593333\n\n\n1996\n3.596333\n3.958833\n3.596333\n\n\n1988\n3.599333\n4.185500\n3.599333\n\n\n1972\n3.605000\nNA\n3.605000\n\n\n1964\n3.635000\nNA\n3.635000\n\n\n1980\n3.640000\nNA\n3.640000\n\n\n1976\n3.652833\nNA\n3.652833\n\n\n1992\n3.668667\n4.037333\n3.668667\n\n\n1956\n3.686667\nNA\n3.686667\n\n\n1952\n3.753333\nNA\n3.753333\n\n\n1936\n3.796667\nNA\n3.796667\n\n\n2016\n3.833333\n3.804833\n3.804833\n\n\n1948\n3.830000\nNA\n3.830000\n\n\n1932\n3.853333\nNA\n3.853333\n\n\n1928\n3.886667\nNA\n3.886667\n\n\n1924\n3.893333\nNA\n3.893333\n\n\n1912\n3.946667\nNA\n3.946667\n\n\n1920\n4.030000\nNA\n4.030000\n\n\n1908\n4.056667\nNA\n4.056667\n\n\n1904\n4.090000\nNA\n4.090000\n\n\n1900\n4.103333\nNA\n4.103333\n\n\n1896\n4.553333\nNA\n4.553333"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#footnotes",
    "href": "slides/2025-09-15-pivotjoin.html#footnotes",
    "title": "Pivoting and Joining",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nExample from DataScience in a Box↩︎"
  },
  {
    "objectID": "slides/2025-09-15-pivotjoin.html#the-by-argument",
    "href": "slides/2025-09-15-pivotjoin.html#the-by-argument",
    "title": "Pivoting and Joining",
    "section": "The by argument",
    "text": "The by argument\n\ndata framestravel mapjoin\n\n\n\n\n\nflights |&gt; \n   select(origin, dest) |&gt; \n   distinct() |&gt; \n   arrange(dest)\n\n# A tibble: 224 × 2\n   origin dest \n   &lt;chr&gt;  &lt;chr&gt;\n 1 JFK    ABQ  \n 2 JFK    ACK  \n 3 EWR    ALB  \n 4 EWR    ANC  \n 5 LGA    ATL  \n 6 JFK    ATL  \n 7 EWR    ATL  \n 8 JFK    AUS  \n 9 EWR    AUS  \n10 EWR    AVL  \n# ℹ 214 more rows\n\n\n\n\nairports\n\n# A tibble: 1,458 × 8\n   faa   name       lat    lon\n   &lt;chr&gt; &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 04G   Lansdow…  41.1  -80.6\n 2 06A   Moton F…  32.5  -85.7\n 3 06C   Schaumb…  42.0  -88.1\n 4 06N   Randall…  41.4  -74.4\n 5 09J   Jekyll …  31.1  -81.4\n 6 0A9   Elizabe…  36.4  -82.2\n 7 0G6   William…  41.5  -84.5\n 8 0G7   Finger …  42.9  -76.8\n 9 0P2   Shoestr…  39.8  -76.6\n10 0S9   Jeffers…  48.1 -123. \n# ℹ 1,448 more rows\n# ℹ 4 more variables:\n#   alt &lt;dbl&gt;, tz &lt;dbl&gt;,\n#   dst &lt;chr&gt;, tzone &lt;chr&gt;\n\n\n\n\n\n\n\n\n\n\nimage credit: https://commons.wikimedia.org/wiki/File:PIA_Route_Map.PNG, Sox23 at the English-language Wikipedia\n\n\n\n\n\n\n\nflights |&gt; \n   select(origin, dest) |&gt; \n   distinct() |&gt; \n   arrange(dest) |&gt; \n   left_join(airports, by = c(\"dest\" = \"faa\"))\n\n# A tibble: 224 × 9\n   origin dest  name                lat    lon   alt    tz dst   tzone\n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;             &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n 1 JFK    ABQ   Albuquerque Inte…  35.0 -107.   5355    -7 A     Amer…\n 2 JFK    ACK   Nantucket Mem      41.3  -70.1    48    -5 A     Amer…\n 3 EWR    ALB   Albany Intl        42.7  -73.8   285    -5 A     Amer…\n 4 EWR    ANC   Ted Stevens Anch…  61.2 -150.    152    -9 A     Amer…\n 5 LGA    ATL   Hartsfield Jacks…  33.6  -84.4  1026    -5 A     Amer…\n 6 JFK    ATL   Hartsfield Jacks…  33.6  -84.4  1026    -5 A     Amer…\n 7 EWR    ATL   Hartsfield Jacks…  33.6  -84.4  1026    -5 A     Amer…\n 8 JFK    AUS   Austin Bergstrom…  30.2  -97.7   542    -6 A     Amer…\n 9 EWR    AUS   Austin Bergstrom…  30.2  -97.7   542    -6 A     Amer…\n10 EWR    AVL   Asheville Region…  35.4  -82.5  2165    -5 A     Amer…\n# ℹ 214 more rows"
  },
  {
    "objectID": "slides/2025-09-22-types.html#creating-strings",
    "href": "slides/2025-09-22-types.html#creating-strings",
    "title": "Variable Types",
    "section": "Creating strings",
    "text": "Creating strings\nCreating strings by hand is useful for testing out regular expressions.\nTo create a string, type any text in either double quotes \" or single quotes '. Using double or single quotes doesn’t matter unless your string itself has single or double quotes.\n\nstring1 &lt;- \"This is a string\"\nstring2 &lt;- 'If I want to include a \"quote\" inside a string, I use single quotes'\n\nstring1\n\n[1] \"This is a string\"\n\nstring2\n\n[1] \"If I want to include a \\\"quote\\\" inside a string, I use single quotes\""
  },
  {
    "objectID": "slides/2025-09-22-types.html#str_view",
    "href": "slides/2025-09-22-types.html#str_view",
    "title": "Variable Types",
    "section": "str_view()",
    "text": "str_view()\nWe can view these strings “naturally” (without the opening and closing quotes) with str_view():\n\nstr_view(string1)\n\n[1] │ This is a string\n\nstr_view(string2)\n\n[1] │ If I want to include a \"quote\" inside a string, I use single quotes"
  },
  {
    "objectID": "slides/2025-09-22-types.html#working-with-strings",
    "href": "slides/2025-09-22-types.html#working-with-strings",
    "title": "Variable Types",
    "section": "Working with strings",
    "text": "Working with strings\n\nyes, lots of code to learn\nno, the code doesn’t really matter\nlearning goal for today:\n\n\nwhat can you even do with string variables???"
  },
  {
    "objectID": "slides/2025-09-22-types.html#str_c",
    "href": "slides/2025-09-22-types.html#str_c",
    "title": "Variable Types",
    "section": "str_c",
    "text": "str_c\nSimilar to paste() (gluing strings together), but works well in a tidy pipeline.\n\ndf &lt;- tibble(name = c(\"Flora\", \"David\", \"Terra\", NA))\ndf |&gt; mutate(greeting = str_c(\"Hi \", name, \"!\"))\n\n# A tibble: 4 × 2\n  name  greeting \n  &lt;chr&gt; &lt;chr&gt;    \n1 Flora Hi Flora!\n2 David Hi David!\n3 Terra Hi Terra!\n4 &lt;NA&gt;  &lt;NA&gt;"
  },
  {
    "objectID": "slides/2025-09-22-types.html#str_sub",
    "href": "slides/2025-09-22-types.html#str_sub",
    "title": "Variable Types",
    "section": "str_sub()",
    "text": "str_sub()\nstr_sub(string, start, end) will extract parts of a string where start and end are the positions where the substring starts and ends.\n\nfruits &lt;- c(\"Apple\", \"Banana\", \"Pear\")\nstr_sub(fruits, 1, 3)\n\n[1] \"App\" \"Ban\" \"Pea\"\n\nstr_sub(fruits, -3, -1)\n\n[1] \"ple\" \"ana\" \"ear\"\n\n\nWon’t fail if the string is too short.\n\nstr_sub(fruits, 1, 5)\n\n[1] \"Apple\" \"Banan\" \"Pear\""
  },
  {
    "objectID": "slides/2025-09-22-types.html#str_sub-in-a-pipeline",
    "href": "slides/2025-09-22-types.html#str_sub-in-a-pipeline",
    "title": "Variable Types",
    "section": "str_sub() in a pipeline",
    "text": "str_sub() in a pipeline\nWe can use the str_*() functions inside the mutate() function.\n\ntitanic |&gt; \n  mutate(class1 = str_sub(Class, 1, 1))\n\n   Class    Sex   Age Survived Freq class1\n1    1st   Male Child       No    0      1\n2    2nd   Male Child       No    0      2\n3    3rd   Male Child       No   35      3\n4   Crew   Male Child       No    0      C\n5    1st Female Child       No    0      1\n6    2nd Female Child       No    0      2\n7    3rd Female Child       No   17      3\n8   Crew Female Child       No    0      C\n9    1st   Male Adult       No  118      1\n10   2nd   Male Adult       No  154      2\n11   3rd   Male Adult       No  387      3\n12  Crew   Male Adult       No  670      C\n13   1st Female Adult       No    4      1\n14   2nd Female Adult       No   13      2\n15   3rd Female Adult       No   89      3\n16  Crew Female Adult       No    3      C\n17   1st   Male Child      Yes    5      1\n18   2nd   Male Child      Yes   11      2\n19   3rd   Male Child      Yes   13      3\n20  Crew   Male Child      Yes    0      C\n21   1st Female Child      Yes    1      1\n22   2nd Female Child      Yes   13      2\n23   3rd Female Child      Yes   14      3\n24  Crew Female Child      Yes    0      C\n25   1st   Male Adult      Yes   57      1\n26   2nd   Male Adult      Yes   14      2\n27   3rd   Male Adult      Yes   75      3\n28  Crew   Male Adult      Yes  192      C\n29   1st Female Adult      Yes  140      1\n30   2nd Female Adult      Yes   80      2\n31   3rd Female Adult      Yes   76      3\n32  Crew Female Adult      Yes   20      C"
  },
  {
    "objectID": "slides/2025-09-22-types.html#str_replace",
    "href": "slides/2025-09-22-types.html#str_replace",
    "title": "Variable Types",
    "section": "str_replace*()",
    "text": "str_replace*()\nstr_replace() replaces the first match of a pattern. str_replace_all() replaces all the matches of a pattern.\n\nfruits\n\n[1] \"Apple\"  \"Banana\" \"Pear\"  \n\nstr_replace(fruits, \"a\", \"x\")\n\n[1] \"Apple\"  \"Bxnana\" \"Pexr\"  \n\nstr_replace_all(fruits, \"a\", \"x\")\n\n[1] \"Apple\"  \"Bxnxnx\" \"Pexr\""
  },
  {
    "objectID": "slides/2025-09-22-types.html#str_detect",
    "href": "slides/2025-09-22-types.html#str_detect",
    "title": "Variable Types",
    "section": "str_detect()",
    "text": "str_detect()\n\nfruits\n\n[1] \"Apple\"  \"Banana\" \"Pear\"  \n\nstr_detect(fruits, \"a\")\n\n[1] FALSE  TRUE  TRUE\n\nstr_detect(fruits, \"A\")\n\n[1]  TRUE FALSE FALSE"
  },
  {
    "objectID": "slides/2025-09-22-types.html#str_detect-in-pipeline",
    "href": "slides/2025-09-22-types.html#str_detect-in-pipeline",
    "title": "Variable Types",
    "section": "str_detect() in pipeline",
    "text": "str_detect() in pipeline\nstr_detect() used in a filter() pipeline.\n\noriginal dataunnested datafiltered unnested data\n\n\n\nstarwars |&gt; \n  select(name, films) \n\n# A tibble: 87 × 2\n   name               films    \n   &lt;chr&gt;              &lt;list&gt;   \n 1 Luke Skywalker     &lt;chr [5]&gt;\n 2 C-3PO              &lt;chr [6]&gt;\n 3 R2-D2              &lt;chr [7]&gt;\n 4 Darth Vader        &lt;chr [4]&gt;\n 5 Leia Organa        &lt;chr [5]&gt;\n 6 Owen Lars          &lt;chr [3]&gt;\n 7 Beru Whitesun Lars &lt;chr [3]&gt;\n 8 R5-D4              &lt;chr [1]&gt;\n 9 Biggs Darklighter  &lt;chr [1]&gt;\n10 Obi-Wan Kenobi     &lt;chr [6]&gt;\n# ℹ 77 more rows\n\n\n\n\n\nstarwars |&gt; \n  select(name, films) |&gt; \n  unnest_wider(films, names_sep = \"\")\n\n# A tibble: 87 × 8\n   name               films1 films2 films3 films4 films5 films6 films7\n   &lt;chr&gt;              &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; \n 1 Luke Skywalker     A New… The E… Retur… Reven… The F… &lt;NA&gt;   &lt;NA&gt;  \n 2 C-3PO              A New… The E… Retur… The P… Attac… Reven… &lt;NA&gt;  \n 3 R2-D2              A New… The E… Retur… The P… Attac… Reven… The F…\n 4 Darth Vader        A New… The E… Retur… Reven… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n 5 Leia Organa        A New… The E… Retur… Reven… The F… &lt;NA&gt;   &lt;NA&gt;  \n 6 Owen Lars          A New… Attac… Reven… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n 7 Beru Whitesun Lars A New… Attac… Reven… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n 8 R5-D4              A New… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n 9 Biggs Darklighter  A New… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n10 Obi-Wan Kenobi     A New… The E… Retur… The P… Attac… Reven… &lt;NA&gt;  \n# ℹ 77 more rows\n\n\n\n\n\nstarwars |&gt; \n  filter(str_detect(films, \"Empire\")) |&gt; \n  select(name, films) |&gt; \n  unnest_wider(films, names_sep = \"\")\n\n# A tibble: 16 × 8\n   name             films1   films2 films3 films4 films5 films6 films7\n   &lt;chr&gt;            &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; \n 1 Luke Skywalker   A New H… The E… Retur… Reven… The F… &lt;NA&gt;   &lt;NA&gt;  \n 2 C-3PO            A New H… The E… Retur… The P… Attac… Reven… &lt;NA&gt;  \n 3 R2-D2            A New H… The E… Retur… The P… Attac… Reven… The F…\n 4 Darth Vader      A New H… The E… Retur… Reven… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n 5 Leia Organa      A New H… The E… Retur… Reven… The F… &lt;NA&gt;   &lt;NA&gt;  \n 6 Obi-Wan Kenobi   A New H… The E… Retur… The P… Attac… Reven… &lt;NA&gt;  \n 7 Chewbacca        A New H… The E… Retur… Reven… The F… &lt;NA&gt;   &lt;NA&gt;  \n 8 Han Solo         A New H… The E… Retur… The F… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n 9 Wedge Antilles   A New H… The E… Retur… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n10 Yoda             The Emp… Retur… The P… Attac… Reven… &lt;NA&gt;   &lt;NA&gt;  \n11 Palpatine        The Emp… Retur… The P… Attac… Reven… &lt;NA&gt;   &lt;NA&gt;  \n12 Boba Fett        The Emp… Retur… Attac… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n13 IG-88            The Emp… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n14 Bossk            The Emp… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n15 Lando Calrissian The Emp… Retur… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  \n16 Lobot            The Emp… &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;"
  },
  {
    "objectID": "slides/2025-09-22-types.html#stringr-functions",
    "href": "slides/2025-09-22-types.html#stringr-functions",
    "title": "Variable Types",
    "section": "stringr functions",
    "text": "stringr functions\nThe stringr package within tidyverse contains lots of functions to help process strings. Letting x be a string variable…\n\n\n\n\n\n\n\n\n\n\nstr function\narguments\nreturns\n\n\n\n\nstr_view()\nx\nthe string\n\n\nstr_c()\n…, sep, collapse\na new concatenated string\n\n\nstr_sub()\nx, start, end\na modified string\n\n\nstr_replace()\nx, pattern, replacement\na modified string\n\n\nstr_replace_all()\nx, pattern, replacement\na modified string\n\n\nstr_detect()\nx, pattern\nTRUE/FALSE\n\n\nstr_to_lower()\nx\na modified string\n\n\nstr_to_upper()\nx\na modified string\n\n\nstr_length()\nx\na number\n\n\nstr_count()\nx, pattern\nan integer vector\n\n\nstr_extract()\nx, pattern\na character vector\n\n\nstr_extract_all()\nx, pattern\na list of character vectors\n\n\n\n\n\nUse the stringr cheat sheet."
  },
  {
    "objectID": "slides/2025-09-22-types.html#starbucks-data",
    "href": "slides/2025-09-22-types.html#starbucks-data",
    "title": "Variable Types",
    "section": "Starbucks data",
    "text": "Starbucks data\nThe str_*() functions work:\n\ndataon factoron numericon integers\n\n\n\nset.seed(47)\nstarbucks |&gt; \n  sample_n(10) |&gt; \n  select(item, calories, fat, type)\n\n# A tibble: 10 × 4\n   item                          calories   fat type    \n   &lt;chr&gt;                            &lt;int&gt; &lt;dbl&gt; &lt;fct&gt;   \n 1 \"Morning Bun\"                      350    16 bakery  \n 2 \"Red Velvet Whoopie Pie\"           190    11 petite  \n 3 \"Chonga Bagel\"                     310     5 bakery  \n 4 \"8-Grain Roll\"                     350     8 bakery  \n 5 \"Marshmallow Dream Bar\"            210     4 bakery  \n 6 \"Chocolate Croissant\"              300    17 bakery  \n 7 \"Mallorca Sweet Bread\"             420    25 bakery  \n 8 \"Ham & Swiss Panini\"               360     9 sandwich\n 9 \"Butter Croissant \"                310    18 bakery  \n10 \"Chocolate Creme Whoopie Pie\"      190    11 petite  \n\n\n\n\n\nset.seed(47)\nstarbucks |&gt; \n  sample_n(10) |&gt; \n  select(item, calories, fat, type) |&gt; \n  mutate(TYPE = str_to_upper(type))\n\n# A tibble: 10 × 5\n   item                          calories   fat type     TYPE    \n   &lt;chr&gt;                            &lt;int&gt; &lt;dbl&gt; &lt;fct&gt;    &lt;chr&gt;   \n 1 \"Morning Bun\"                      350    16 bakery   BAKERY  \n 2 \"Red Velvet Whoopie Pie\"           190    11 petite   PETITE  \n 3 \"Chonga Bagel\"                     310     5 bakery   BAKERY  \n 4 \"8-Grain Roll\"                     350     8 bakery   BAKERY  \n 5 \"Marshmallow Dream Bar\"            210     4 bakery   BAKERY  \n 6 \"Chocolate Croissant\"              300    17 bakery   BAKERY  \n 7 \"Mallorca Sweet Bread\"             420    25 bakery   BAKERY  \n 8 \"Ham & Swiss Panini\"               360     9 sandwich SANDWICH\n 9 \"Butter Croissant \"                310    18 bakery   BAKERY  \n10 \"Chocolate Creme Whoopie Pie\"      190    11 petite   PETITE  \n\n\n\n\n\nset.seed(47)\nstarbucks |&gt; \n  sample_n(10) |&gt; \n  select(item, calories, fat, type) |&gt; \n  filter(str_detect(fat, \"1\"))\n\n# A tibble: 5 × 4\n  item                          calories   fat type  \n  &lt;chr&gt;                            &lt;int&gt; &lt;dbl&gt; &lt;fct&gt; \n1 \"Morning Bun\"                      350    16 bakery\n2 \"Red Velvet Whoopie Pie\"           190    11 petite\n3 \"Chocolate Croissant\"              300    17 bakery\n4 \"Butter Croissant \"                310    18 bakery\n5 \"Chocolate Creme Whoopie Pie\"      190    11 petite\n\n\n\n\n\nset.seed(47)\nstarbucks |&gt; \n  sample_n(10) |&gt; \n  select(item, calories, fat, type) |&gt; \n  mutate(newcal = str_replace(calories, \"0\", \"&\"))\n\n# A tibble: 10 × 5\n   item                          calories   fat type     newcal\n   &lt;chr&gt;                            &lt;int&gt; &lt;dbl&gt; &lt;fct&gt;    &lt;chr&gt; \n 1 \"Morning Bun\"                      350    16 bakery   35&   \n 2 \"Red Velvet Whoopie Pie\"           190    11 petite   19&   \n 3 \"Chonga Bagel\"                     310     5 bakery   31&   \n 4 \"8-Grain Roll\"                     350     8 bakery   35&   \n 5 \"Marshmallow Dream Bar\"            210     4 bakery   21&   \n 6 \"Chocolate Croissant\"              300    17 bakery   3&0   \n 7 \"Mallorca Sweet Bread\"             420    25 bakery   42&   \n 8 \"Ham & Swiss Panini\"               360     9 sandwich 36&   \n 9 \"Butter Croissant \"                310    18 bakery   31&   \n10 \"Chocolate Creme Whoopie Pie\"      190    11 petite   19&"
  },
  {
    "objectID": "slides/2025-09-22-types.html#where-do-we-order",
    "href": "slides/2025-09-22-types.html#where-do-we-order",
    "title": "Variable Types",
    "section": "Where do we order?",
    "text": "Where do we order?\nThe ordering of the factor variable is important in:\n\nplots (e.g., barplots)\ntables (e.g., group_by())\nmodeling (e.g., the baseline level in a linear regression)"
  },
  {
    "objectID": "slides/2025-09-22-types.html#order-matters",
    "href": "slides/2025-09-22-types.html#order-matters",
    "title": "Variable Types",
    "section": "Order matters",
    "text": "Order matters\nSurveyUSA poll from 2012 on views of the DREAM Act.\nWhat is off about the data viz part of the report?\n\nDataPlotLevels\n\n\n\nopenintro::dream\n\n# A tibble: 910 × 2\n   ideology     stance\n   &lt;fct&gt;        &lt;fct&gt; \n 1 Conservative Yes   \n 2 Conservative Yes   \n 3 Conservative Yes   \n 4 Conservative Yes   \n 5 Conservative Yes   \n 6 Conservative Yes   \n 7 Conservative Yes   \n 8 Conservative Yes   \n 9 Conservative Yes   \n10 Conservative Yes   \n# ℹ 900 more rows\n\n\n\n\n\ndream |&gt; \n  ggplot(aes(x = ideology, fill = stance)) + \n  geom_bar()\n\n\n\n\n\n\n\n\n\n\nThe levels() function reports the levels and their order.\n\ndream |&gt; \n  select(ideology) |&gt; \n  pull() |&gt;  # because levels() works only on vectors, not data frames\n  levels()\n\n[1] \"Conservative\" \"Liberal\"      \"Moderate\""
  },
  {
    "objectID": "slides/2025-09-22-types.html#change-the-order",
    "href": "slides/2025-09-22-types.html#change-the-order",
    "title": "Variable Types",
    "section": "Change the order",
    "text": "Change the order\nWe can fix the order of the ideology variable.\n\nCodePlot\n\n\n\ndream |&gt; \n  mutate(ideology = fct_relevel(ideology, \n                                c(\"Liberal\", \"Moderate\", \"Conservative\"))) |&gt; \n  ggplot(aes(x = ideology, fill = stance)) + \n  geom_bar()"
  },
  {
    "objectID": "slides/2025-09-22-types.html#factor-and-character-variables",
    "href": "slides/2025-09-22-types.html#factor-and-character-variables",
    "title": "Variable Types",
    "section": "Factor and character variables",
    "text": "Factor and character variables\n\nDataPlot\n\n\n\nstarbucks |&gt; \n  select(item, type, calories)\n\n# A tibble: 77 × 3\n   item                          type   calories\n   &lt;chr&gt;                         &lt;fct&gt;     &lt;int&gt;\n 1 \"8-Grain Roll\"                bakery      350\n 2 \"Apple Bran Muffin\"           bakery      350\n 3 \"Apple Fritter\"               bakery      420\n 4 \"Banana Nut Loaf\"             bakery      490\n 5 \"Birthday Cake Mini Doughnut\" bakery      130\n 6 \"Blueberry Oat Bar\"           bakery      370\n 7 \"Blueberry Scone\"             bakery      460\n 8 \"Bountiful Blueberry Muffin\"  bakery      370\n 9 \"Butter Croissant \"           bakery      310\n10 \"Cheese Danish\"               bakery      420\n# ℹ 67 more rows"
  },
  {
    "objectID": "slides/2025-09-22-types.html#reorder-according-to-another-variable",
    "href": "slides/2025-09-22-types.html#reorder-according-to-another-variable",
    "title": "Variable Types",
    "section": "Reorder according to another variable",
    "text": "Reorder according to another variable\nLets say that we wanted to order the type of food item based on the average number of calories in that food.\n\nCodePlotFor funzies\n\n\n\nstarbucks |&gt; \n  mutate(type = fct_reorder(type, calories, .fun = \"mean\", .desc = TRUE)) |&gt; \n  ggplot(aes(x = type, y = calories)) + \n  geom_point() + \n  labs(x = \"type of food\",\n       y = \"\",\n       title = \"Calories for food items at Starbucks\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstarbucks |&gt; \n  mutate(type = fct_reorder(fiber, calories, .fun = \"mean\", .desc = TRUE)) \n\nError in `mutate()`:\nℹ In argument: `type = fct_reorder(fiber, calories, .fun = \"mean\", .desc\n  = TRUE)`.\nCaused by error in `fct_reorder()`:\n! `.f` must be a factor or character vector, not an integer vector."
  },
  {
    "objectID": "slides/2025-09-22-types.html#what-really-are-levels",
    "href": "slides/2025-09-22-types.html#what-really-are-levels",
    "title": "Variable Types",
    "section": "What really are levels?",
    "text": "What really are levels?\n\nrecoderewritemistakeNULLspecial variables\n\n\n\nx &lt;- factor(c(\"apple\", \"bear\", \"dear\", \"banana\", \"apple\", \"apple\", \"dear\"))\nx\n\n[1] apple  bear   dear   banana apple  apple  dear  \nLevels: apple banana bear dear\n\nfct_recode(x, fruit = \"apple\", fruit = \"banana\")\n\n[1] fruit bear  dear  fruit fruit fruit dear \nLevels: fruit bear dear\n\n\n\n\n\nnew_fruit &lt;- data.frame(words = x) |&gt; \n  mutate(x_recode = fct_recode(words, fruit = \"apple\", fruit = \"banana\"),\n         x_rewrite = ifelse(words == \"apple\", \"fruit\",\n                            ifelse(words == \"banana\", \"fruit\", words))) \n\nnew_fruit\n\n   words x_recode x_rewrite\n1  apple    fruit     fruit\n2   bear     bear         3\n3   dear     dear         4\n4 banana    fruit     fruit\n5  apple    fruit     fruit\n6  apple    fruit     fruit\n7   dear     dear         4\n\nnew_fruit |&gt; \n  str()\n\n'data.frame':   7 obs. of  3 variables:\n $ words    : Factor w/ 4 levels \"apple\",\"banana\",..: 1 3 4 2 1 1 4\n $ x_recode : Factor w/ 3 levels \"fruit\",\"bear\",..: 1 2 3 1 1 1 3\n $ x_rewrite: chr  \"fruit\" \"3\" \"4\" \"fruit\" ...\n\n\n\n\n\n# If you make a mistake you'll get a warning\nfct_recode(x, fruit = \"apple\", fruit = \"bananana\")\n\nWarning: Unknown levels in `f`: bananana\n\n\n[1] fruit  bear   dear   banana fruit  fruit  dear  \nLevels: fruit banana bear dear\n\n\n\n\n\n# If you name the level NULL it will be removed\nfct_recode(x, NULL = \"apple\", fruit = \"banana\")\n\n[1] &lt;NA&gt;  bear  dear  fruit &lt;NA&gt;  &lt;NA&gt;  dear \nLevels: fruit bear dear\n\n\n\n\n\n# Wrap the left hand side in quotes if it contains special variables\nfct_recode(x, \"an apple\" = \"apple\", \"a bear\" = \"bear\")\n\n[1] an apple a bear   dear     banana   an apple an apple dear    \nLevels: an apple banana a bear dear"
  },
  {
    "objectID": "slides/2025-09-22-types.html#change-character-to-factor",
    "href": "slides/2025-09-22-types.html#change-character-to-factor",
    "title": "Variable Types",
    "section": "Change character to factor",
    "text": "Change character to factor\n\nOG dataNew factor\n\n\n\nstarbucks |&gt; \n  select(item, calories, type)\n\n# A tibble: 77 × 3\n   item                          calories type  \n   &lt;chr&gt;                            &lt;int&gt; &lt;fct&gt; \n 1 \"8-Grain Roll\"                     350 bakery\n 2 \"Apple Bran Muffin\"                350 bakery\n 3 \"Apple Fritter\"                    420 bakery\n 4 \"Banana Nut Loaf\"                  490 bakery\n 5 \"Birthday Cake Mini Doughnut\"      130 bakery\n 6 \"Blueberry Oat Bar\"                370 bakery\n 7 \"Blueberry Scone\"                  460 bakery\n 8 \"Bountiful Blueberry Muffin\"       370 bakery\n 9 \"Butter Croissant \"                310 bakery\n10 \"Cheese Danish\"                    420 bakery\n# ℹ 67 more rows\n\n\n\n\n\nstarbucks |&gt; \n  mutate(item_fac = as.factor(item)) |&gt; \n  select(item, calories, type, item_fac)\n\n# A tibble: 77 × 4\n   item                          calories type   item_fac             \n   &lt;chr&gt;                            &lt;int&gt; &lt;fct&gt;  &lt;fct&gt;                \n 1 \"8-Grain Roll\"                     350 bakery \"8-Grain Roll\"       \n 2 \"Apple Bran Muffin\"                350 bakery \"Apple Bran Muffin\"  \n 3 \"Apple Fritter\"                    420 bakery \"Apple Fritter\"      \n 4 \"Banana Nut Loaf\"                  490 bakery \"Banana Nut Loaf\"    \n 5 \"Birthday Cake Mini Doughnut\"      130 bakery \"Birthday Cake Mini …\n 6 \"Blueberry Oat Bar\"                370 bakery \"Blueberry Oat Bar\"  \n 7 \"Blueberry Scone\"                  460 bakery \"Blueberry Scone\"    \n 8 \"Bountiful Blueberry Muffin\"       370 bakery \"Bountiful Blueberry…\n 9 \"Butter Croissant \"                310 bakery \"Butter Croissant \"  \n10 \"Cheese Danish\"                    420 bakery \"Cheese Danish\"      \n# ℹ 67 more rows"
  },
  {
    "objectID": "slides/2025-09-22-types.html#forcats-functions",
    "href": "slides/2025-09-22-types.html#forcats-functions",
    "title": "Variable Types",
    "section": "forcats functions",
    "text": "forcats functions\nThe forcats package within tidyverse contains lots of functions to help process factor variables Use the forcats cheat sheet. We’ll focus on the most common functions.\n\nfunctions for changing the order of factor levels\n\nfct_relevel() = manually reorder levels\nfct_reorder() = reorder levels according to values of another variable\nfct_infreq() = order levels from highest to lowest frequency\nfct_rev() = reverse the current order\n\nfunctions for changing the labels or values of factor levels\n\nfct_recode() = manually change levels\nfct_lump() = group together least common levels\nfct_other() = manually replace some levels with “other”"
  },
  {
    "objectID": "slides/2025-09-22-types.html#formatting-time-variablse",
    "href": "slides/2025-09-22-types.html#formatting-time-variablse",
    "title": "Variable Types",
    "section": "Formatting time variablse",
    "text": "Formatting time variablse\n\nimage credit: https://xkcd.com/1179/"
  },
  {
    "objectID": "slides/2025-09-22-types.html#what-time-is-it",
    "href": "slides/2025-09-22-types.html#what-time-is-it",
    "title": "Variable Types",
    "section": "What time is it?",
    "text": "What time is it?\n\ntoday()\n\n[1] \"2025-09-24\"\n\nnow()\n\n[1] \"2025-09-24 10:12:08 PDT\""
  },
  {
    "objectID": "slides/2025-09-22-types.html#creating-dates",
    "href": "slides/2025-09-22-types.html#creating-dates",
    "title": "Variable Types",
    "section": "Creating dates",
    "text": "Creating dates\nymd() and friends create dates\n\nymd(\"2025-02-19\")\n\n[1] \"2025-02-19\"\n\nmdy(\"February 19th, 2025\")\n\n[1] \"2025-02-19\"\n\ndmy(\"19-Feb-2025\")\n\n[1] \"2025-02-19\""
  },
  {
    "objectID": "slides/2025-09-22-types.html#with-times",
    "href": "slides/2025-09-22-types.html#with-times",
    "title": "Variable Types",
    "section": "… with times",
    "text": "… with times\nTo create a date-time, add an underscore and one or more of “h”, “m”, and “s” to the name of the parsing function:\n\nymd_hms(\"2025-02-19 11:45:59\", tz = \"America/Los_Angeles\")\n\n[1] \"2025-02-19 11:45:59 PST\"\n\nmdy_hm(\"02/19/2025 15:01\")  # default is UTC = GMT\n\n[1] \"2025-02-19 15:01:00 UTC\"\n\n\nMore information about time zones in R."
  },
  {
    "objectID": "slides/2025-09-22-types.html#lubridate",
    "href": "slides/2025-09-22-types.html#lubridate",
    "title": "Variable Types",
    "section": "lubridate",
    "text": "lubridate\nlubridate is a another R package meant for data wrangling!\nIn particular, lubridate makes it very easy to work with days, times, and dates. The base idea is to start with dates in a ymd (year month day) format and transform the information into whatever you want.\nExamples from the lubridate vignette."
  },
  {
    "objectID": "slides/2025-09-22-types.html#if-anyone-drove-a-time-machine-they-would-crash",
    "href": "slides/2025-09-22-types.html#if-anyone-drove-a-time-machine-they-would-crash",
    "title": "Variable Types",
    "section": "If anyone drove a time machine, they would crash",
    "text": "If anyone drove a time machine, they would crash\nThe length of months and years change so often that doing arithmetic with them can be unintuitive.\nConsider a simple operation: January 31st + one month."
  },
  {
    "objectID": "slides/2025-09-22-types.html#if-anyone-drove-a-time-machine-they-would-crash-1",
    "href": "slides/2025-09-22-types.html#if-anyone-drove-a-time-machine-they-would-crash-1",
    "title": "Variable Types",
    "section": "If anyone drove a time machine, they would crash",
    "text": "If anyone drove a time machine, they would crash\nThe length of months and years change so often that doing arithmetic with them can be unintuitive.\nConsider a simple operation: January 31st + one month.\nShould the answer be:\n\nFebruary 31st (which doesn’t exist)?\nMarch 3rd (31 days after January 31)?\nFebruary 28th (assuming its not a leap year)?"
  },
  {
    "objectID": "slides/2025-09-22-types.html#if-anyone-drove-a-time-machine-they-would-crash-2",
    "href": "slides/2025-09-22-types.html#if-anyone-drove-a-time-machine-they-would-crash-2",
    "title": "Variable Types",
    "section": "If anyone drove a time machine, they would crash",
    "text": "If anyone drove a time machine, they would crash\nA basic property of arithmetic is that a + b - b = a. Only solution 1 obeys the mathematical property, but it is an invalid date. Wickham wants to make lubridate as consistent as possible by invoking the following rule: if adding or subtracting a month or a year creates an invalid date, lubridate will return an NA. \nIf you thought solution 2 or 3 was more useful, no problem. You can still get those results with clever arithmetic, or by using the special %m+% and %m-% operators. %m+% and %m-% automatically roll dates back to the last day of the month, should that be necessary."
  },
  {
    "objectID": "slides/2025-09-22-types.html#basics-in-lubridate",
    "href": "slides/2025-09-22-types.html#basics-in-lubridate",
    "title": "Variable Types",
    "section": "basics in lubridate",
    "text": "basics in lubridate\n\nlibrary(lubridate)\nrightnow &lt;- now()\nrightnow\n\n[1] \"2025-09-24 10:12:08 PDT\"\n\nday(rightnow)\n\n[1] 24\n\nweek(rightnow)\n\n[1] 39\n\nmonth(rightnow, label=FALSE)\n\n[1] 9\n\nmonth(rightnow, label=TRUE)\n\n[1] Sep\n12 Levels: Jan &lt; Feb &lt; Mar &lt; Apr &lt; May &lt; Jun &lt; Jul &lt; Aug &lt; Sep &lt; ... &lt; Dec\n\nyear(rightnow)\n\n[1] 2025"
  },
  {
    "objectID": "slides/2025-09-22-types.html#basics-in-lubridate-1",
    "href": "slides/2025-09-22-types.html#basics-in-lubridate-1",
    "title": "Variable Types",
    "section": "basics in lubridate",
    "text": "basics in lubridate\n\nminute(rightnow)\n\n[1] 12\n\nhour(rightnow)\n\n[1] 10\n\nyday(rightnow)\n\n[1] 267\n\nmday(rightnow)\n\n[1] 24\n\nwday(rightnow, label=FALSE)\n\n[1] 4\n\nwday(rightnow, label=TRUE)\n\n[1] Wed\nLevels: Sun &lt; Mon &lt; Tue &lt; Wed &lt; Thu &lt; Fri &lt; Sat"
  },
  {
    "objectID": "slides/2025-09-22-types.html#working-with-a-date-object",
    "href": "slides/2025-09-22-types.html#working-with-a-date-object",
    "title": "Variable Types",
    "section": "Working with a date object",
    "text": "Working with a date object\n\njan31 &lt;- ymd(\"2025-01-31\")\njan31 + months(0:11)\n\n [1] \"2025-01-31\" NA           \"2025-03-31\" NA           \"2025-05-31\"\n [6] NA           \"2025-07-31\" \"2025-08-31\" NA           \"2025-10-31\"\n[11] NA           \"2025-12-31\"\n\n\n\n\nfloor_date(jan31, \"month\")\n\n[1] \"2025-01-01\"\n\nfloor_date(jan31, \"month\") + months(0:11) + days(31)\n\n [1] \"2025-02-01\" \"2025-03-04\" \"2025-04-01\" \"2025-05-02\" \"2025-06-01\"\n [6] \"2025-07-02\" \"2025-08-01\" \"2025-09-01\" \"2025-10-02\" \"2025-11-01\"\n[11] \"2025-12-02\" \"2026-01-01\"\n\n\n\n\n\njan31 + months(0:11) + days(31)\n\n [1] \"2025-03-03\" NA           \"2025-05-01\" NA           \"2025-07-01\"\n [6] NA           \"2025-08-31\" \"2025-10-01\" NA           \"2025-12-01\"\n[11] NA           \"2026-01-31\"\n\n\n\n\n\njan31 %m+% months(0:11)\n\n [1] \"2025-01-31\" \"2025-02-28\" \"2025-03-31\" \"2025-04-30\" \"2025-05-31\"\n [6] \"2025-06-30\" \"2025-07-31\" \"2025-08-31\" \"2025-09-30\" \"2025-10-31\"\n[11] \"2025-11-30\" \"2025-12-31\""
  },
  {
    "objectID": "slides/2025-09-22-types.html#nyc-flights",
    "href": "slides/2025-09-22-types.html#nyc-flights",
    "title": "Variable Types",
    "section": "NYC flights",
    "text": "NYC flights\n\nlibrary(nycflights13)\nnames(flights)\n\n [1] \"year\"           \"month\"          \"day\"            \"dep_time\"      \n [5] \"sched_dep_time\" \"dep_delay\"      \"arr_time\"       \"sched_arr_time\"\n [9] \"arr_delay\"      \"carrier\"        \"flight\"         \"tailnum\"       \n[13] \"origin\"         \"dest\"           \"air_time\"       \"distance\"      \n[17] \"hour\"           \"minute\"         \"time_hour\""
  },
  {
    "objectID": "slides/2025-09-22-types.html#nyc-flights-1",
    "href": "slides/2025-09-22-types.html#nyc-flights-1",
    "title": "Variable Types",
    "section": "NYC flights",
    "text": "NYC flights\nCreating a date object from variables.\n\nflightsWK &lt;- flights |&gt;  \n   mutate(ymdday = ymd(str_c(year, month, day, sep=\"-\"))) |&gt; \n   mutate(weekdy = wday(ymdday, label=TRUE), \n          whichweek = week(ymdday)) \n\nflightsWK |&gt;  select(year, month, day, ymdday, weekdy, whichweek, \n                     dep_time, arr_time) \n\n# A tibble: 336,776 × 8\n    year month   day ymdday     weekdy whichweek dep_time arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;date&gt;     &lt;ord&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;\n 1  2013     1     1 2013-01-01 Tue            1      517      830\n 2  2013     1     1 2013-01-01 Tue            1      533      850\n 3  2013     1     1 2013-01-01 Tue            1      542      923\n 4  2013     1     1 2013-01-01 Tue            1      544     1004\n 5  2013     1     1 2013-01-01 Tue            1      554      812\n 6  2013     1     1 2013-01-01 Tue            1      554      740\n 7  2013     1     1 2013-01-01 Tue            1      555      913\n 8  2013     1     1 2013-01-01 Tue            1      557      709\n 9  2013     1     1 2013-01-01 Tue            1      557      838\n10  2013     1     1 2013-01-01 Tue            1      558      753\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "slides/2025-09-22-types.html#str-length",
    "href": "slides/2025-09-22-types.html#str-length",
    "title": "Variable Types",
    "section": "str-length()",
    "text": "str-length()\nReturns the number of pieces in a string (usually a single letter, number, or space).\n\nx &lt;- c(\"apple\", \"banana\", \"cherry pie\", \"\")\n\nstr_length(x)\n\n[1]  5  6 10  0"
  },
  {
    "objectID": "slides/2025-09-22-types.html#str_count",
    "href": "slides/2025-09-22-types.html#str_count",
    "title": "Variable Types",
    "section": "str_count()",
    "text": "str_count()\nCounts the number of times pattern is found within each element of string.\n\nx &lt;- c(\"apple pie apple tart\", \"banana apple\", \"cherry\")\n\nstr_count(x, \"apple\")\n\n[1] 2 1 0"
  },
  {
    "objectID": "slides/2025-09-22-types.html#str_extract",
    "href": "slides/2025-09-22-types.html#str_extract",
    "title": "Variable Types",
    "section": "str_extract*()",
    "text": "str_extract*()\nstr_extract() extracts the first complete match from each string,\nstr_extract_all() extracts all matches from each string.\n\nx &lt;- c(\"apple pie apple tart\", \"banana apple\", \"cherry\")\n\n\nstr_extract(x, \"a\")\n\n[1] \"a\" \"a\" NA \n\nstr_extract_all(x, \"a\")\n\n[[1]]\n[1] \"a\" \"a\" \"a\"\n\n[[2]]\n[1] \"a\" \"a\" \"a\" \"a\"\n\n[[3]]\ncharacter(0)\n\nstr_extract(x, \"apple\")\n\n[1] \"apple\" \"apple\" NA     \n\nstr_extract_all(x, \"apple\")\n\n[[1]]\n[1] \"apple\" \"apple\"\n\n[[2]]\n[1] \"apple\"\n\n[[3]]\ncharacter(0)"
  },
  {
    "objectID": "slides/2025-09-22-types.html#str_length",
    "href": "slides/2025-09-22-types.html#str_length",
    "title": "Variable Types",
    "section": "str_length()",
    "text": "str_length()\nReturns the number of pieces in a string (usually a single letter, number, or space).\n\nx &lt;- c(\"apple\", \"banana\", \"cherry pie\", \"\")\n\nstr_length(x)\n\n[1]  5  6 10  0"
  },
  {
    "objectID": "slides/2025-09-22-types.html#change-factor-to-character",
    "href": "slides/2025-09-22-types.html#change-factor-to-character",
    "title": "Variable Types",
    "section": "Change factor to character",
    "text": "Change factor to character\n\ndataas.character()as.numeric()ifelse()\n\n\n\nf &lt;- factor(c(\"cat\", \"dog\", \"cat\"))\nf\n\n[1] cat dog cat\nLevels: cat dog\n\nunclass(f)\n\n[1] 1 2 1\nattr(,\"levels\")\n[1] \"cat\" \"dog\"\n\n\n\n\n… produces the labels because that is how the function is defined.\n\nas.character(f)\n\n[1] \"cat\" \"dog\" \"cat\"\n\n\n\n\n… produces the integer codes because that is how the function is defined.\n\nas.numeric(f)\n\n[1] 1 2 1\n\n\n\n\n… coerces everything to the lowest common denominator. That is, it strips the labels off the factor variable, uses the integers, and converts them to character strings.\n\nifelse(f == \"cat\", \"meow\", f)\n\n[1] \"meow\" \"2\"    \"meow\""
  },
  {
    "objectID": "slides/2025-09-22-types.html#change-factor-to-character-1",
    "href": "slides/2025-09-22-types.html#change-factor-to-character-1",
    "title": "Variable Types",
    "section": "Change factor to character",
    "text": "Change factor to character\nWhat does as.character() do? It produces the labels because that is how the function is defined.\n\nas.character(f)\n\n[1] \"cat\" \"dog\" \"cat\""
  },
  {
    "objectID": "slides/2025-09-22-types.html#change-factor-to-character-2",
    "href": "slides/2025-09-22-types.html#change-factor-to-character-2",
    "title": "Variable Types",
    "section": "Change factor to character",
    "text": "Change factor to character\nWhat does as.numeric() do? It produces the integer codes because that is how the function is defined.\n\nas.numeric(f)\n\n[1] 1 2 1"
  },
  {
    "objectID": "slides/2025-09-22-types.html#change-factor-to-character-3",
    "href": "slides/2025-09-22-types.html#change-factor-to-character-3",
    "title": "Variable Types",
    "section": "Change factor to character",
    "text": "Change factor to character\nWhat does ifelse() do? It coerces everything to the lowest common denominator. That is, it strips the labels off the factor variable, uses the integers, and converts them to character strings.\n\nifelse(f == \"cat\", \"meow\", f)\n\n[1] \"meow\" \"2\"    \"meow\""
  },
  {
    "objectID": "slides/2025-09-22-types.html#types-of-time-and-date-objects",
    "href": "slides/2025-09-22-types.html#types-of-time-and-date-objects",
    "title": "Variable Types",
    "section": "Types of time and date objects",
    "text": "Types of time and date objects\nThere are 3 types of date/time data that refer to an instant in time:\nA date. Tibbles print this as &lt;date&gt;.\nA time within a day. Tibbles print this as &lt;time&gt;.\nA date-time is a date plus a time: it uniquely identifies an instant in time (typically to the nearest second). Tibbles print this as &lt;dttm&gt;. Base R calls these POSIXct, but that doesn’t exactly flow off the tongue."
  },
  {
    "objectID": "slides/2025-09-22-types.html#formatting-time-variables",
    "href": "slides/2025-09-22-types.html#formatting-time-variables",
    "title": "Variable Types",
    "section": "Formatting time variables",
    "text": "Formatting time variables\n\nimage credit: https://xkcd.com/1179/"
  }
]