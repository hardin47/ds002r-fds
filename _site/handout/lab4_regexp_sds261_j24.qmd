---
title: "Lab 4 - regular expressions"
author: "your name goes here"
---


do something with chatgpt.  ask chat gpt how to answer the question. then ask using SQL then ask using stringr.

0. Go through the lessons in <a href = "https://regexone.com/" target = "_blank">https://regexone.com/</a>.


1. Catch all of the instances of the words color or colour, case insensitive.

Solution: (?i)\\bcolou?r\\b

```{r}
string <- c("color", "colour", "Color", "Colour", "Colr", "cols")

str_extract(string, "(?i)\\bcolou?r\\b")
```


2. Determine whether a user entered a North American phone number in a common format, including the local area code.  Common formats include 1234567890, 123-456-7890, 123.456.7890, 123 456 7890, (123) 456 7890, and all related combinations.

Solution:  ^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$

Test your solution on the following potential phone numbers:

3. Validate dates which are in the format mm/dd/yy or mm/dd/yyyy.  Allow months to go to 19 and days to go to 39.

Solution: ^[0-1]?[0-9]/[0-3]?[0-9]/([0-9]{2})?[0-9]{2}


Test your solution on the following potential dates:



4. Check a command line response so that true, t, yes, y, okay, ok, and 1 are all accepted in any combination of uppercase and lowercase.

Solution: ^(1|t(rue)?|y(es)?|ok(ay)?)$

-->>  need to figure out about lower and upper case in R / grep()

Test your solution on the following potential responses: 


5. Match numbers that use the comma as the thousands separator and the dot as the decimal separator.

Solution:  ^[0-9]{1,3}(,[0-9]{3})*\.[0-9]+$

Test your solution on the following potential values:



6. Find all words that occur inside an html emphasis tag (`<em>` and `</em>`).

Solution: (?<=<b>)[\\w\\s.]+(?=</b>)

Test your solution on the following potential values:^[Lorem Ipsum from https://www.webfx.com/web-design/html-ipsum/.]

```{r}
string <- c("<p><strong>Pellentesque habitant morbi tristique</strong> senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. <em>Aenean ultricies mi vitae est.</em> Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, <code>commodo vitae</code>, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. <a href='#'>Donec non enim</a> in turpis pulvinar facilisis. Ut felis.</p>")

str_extract(string, "(?<=<em>)[\\w\\s.]+(?=</em>)")
```

